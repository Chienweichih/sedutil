/* Generated code for Python module 'runop'
 * created by Nuitka version 0.6.6
 *
 * This code is in part copyright 2019 Kay Hayen.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "nuitka/prelude.h"

#include "__helpers.h"

/* The "_module_runop" is a Python object pointer of module type.
 *
 * Note: For full compatibility with CPython, every module variable access
 * needs to go through it except for cases where the module cannot possibly
 * have changed in the mean time.
 */

PyObject *module_runop;
PyDictObject *moduledict_runop;

/* The declarations of module constants used, if any. */
extern PyObject *const_str_plain_op_inprogress;
static PyObject *const_tuple_str_digest_d0bbbc8ecf5795d416fb4bb1a98af89c_tuple;
static PyObject *const_str_plain_rt_unlockPBA;
static PyObject *const_tuple_str_digest_b3aaeddaf4696821b84a51cc9a3bb621_tuple;
static PyObject *const_str_plain_communicate;
extern PyObject *const_str_plain_run_changePW;
extern PyObject *const_str_plain_run_removeUser;
static PyObject *const_str_plain_cleanop;
extern PyObject *const_str_plain_confirm_pass_entry;
static PyObject *const_str_digest_5ab5b3125e01181891d34e3d2dcc2424;
extern PyObject *const_str_plain_diskpart;
static PyObject *const_str_plain_drive;
static PyObject *const_tuple_str_digest_b62eced012cb463810e5ce7621fab465_tuple;
static PyObject *const_str_plain_get_active_text;
static PyObject *const_str_plain_list_sn;
static PyObject *const_tuple_str_digest_28ac2a2d748125d0d09a88c9c23c1ea8_tuple;
static PyObject *const_str_plain_stdin;
extern PyObject *const_str_plain_gobject;
extern PyObject *const_str_plain_orig;
extern PyObject *const_str_plain_usb_menu;
extern PyObject *const_str_plain_args;
static PyObject *const_tuple_str_digest_5d19484996ce99edb28174f508d4c89b_tuple;
extern PyObject *const_str_plain_prefix;
static PyObject *const_str_digest_deff663361aa8c2f12d71e786d757b70;
extern PyObject *const_str_plain_write;
extern PyObject *const_str_plain_popen;
extern PyObject *const_int_neg_1;
extern PyObject *const_str_plain_warned;
static PyObject *const_str_digest_dcd804658f8e9977f257a841a58a2840;
extern PyObject *const_str_plain_devs_list;
static PyObject *const_tuple_str_digest_fb4170e6daf9640f1d3cf05bd96f5c69_tuple;
extern PyObject *const_str_plain_threading;
extern PyObject *const_str_plain_os;
static PyObject *const_str_plain_f_list;
static PyObject *const_tuple_str_digest_8e206e1d9437df3bfbdb341f8ac1cad7_tuple;
static PyObject *const_tuple_e055380a4005427167c60a836c173afa_tuple;
static PyObject *const_str_digest_adb771d2fcc1a581081cb4a03495a2e3;
extern PyObject *const_str_plain_new_pass_entry;
static PyObject *const_tuple_str_digest_12972f1cc00f1e6a86845e930725106f_tuple;
extern PyObject *const_str_plain_VERSION;
extern PyObject *const_str_plain_run_setupFull;
extern PyObject *const_str_plain_revert_agree_entry;
static PyObject *const_str_plain_Event;
extern PyObject *const_str_plain_run_revertErase;
static PyObject *const_tuple_str_digest_7b157eb583e5f192282fcaa00a676577_tuple;
extern PyObject *const_str_plain_blkid;
static PyObject *const_str_plain_dev_idx;
static PyObject *const_tuple_486897ad0c895a4bf383b7255ba9d16c_tuple;
extern PyObject *const_str_plain_ctypes;
static PyObject *const_tuple_str_digest_ec250c46d7b35bdd88731f5a342fe610_tuple;
extern PyObject *const_float_0_0;
extern PyObject *const_int_pos_32;
extern PyObject *const_str_plain_locked_list;
static PyObject *const_str_plain_rt_removeUser;
static PyObject *const_str_plain_delete_text;
static PyObject *const_str_digest_b62eced012cb463810e5ce7621fab465;
extern PyObject *const_str_plain_sn_list;
static PyObject *const_list_9135c3c0d42c1e9aaba6c36b4164cc20_list;
extern PyObject *const_str_plain_res;
extern PyObject *const_tuple_str_digest_84ba3144e8a4c8824551fdd8d0fe5bde_tuple;
static PyObject *const_str_digest_1c944aaa92f306386270edce9e2f666d;
static PyObject *const_tuple_str_digest_f5c2308578fc76966634f23eb2c3fab8_tuple;
extern PyObject *const_str_plain_dev_select;
extern PyObject *const_str_digest_1573e6b4805ac8da2565b5c6f8345d3c;
static PyObject *const_str_digest_9a0312388657bf34e3beb19acd7cbdce;
static PyObject *const_tuple_str_digest_c26386993bfef303945d53604eada43a_tuple;
extern PyObject *const_str_plain_bad_pw;
static PyObject *const_str_digest_f0e3325ab65f304147b959c8ff1750b4;
extern PyObject *const_str_digest_be268c849f1c37b6177304e3023d15bb;
extern PyObject *const_str_plain_iter_next;
extern PyObject *const_str_plain_USBDialog;
static PyObject *const_str_plain_password;
static PyObject *const_str_digest_b9fd857691f375c6ace933a89e09e6f0;
static PyObject *const_str_plain_text_a;
static PyObject *const_str_digest_1115ebe932d1b941d1eed30a47fde5a6;
extern PyObject *const_tuple_str_digest_8482c425481a7392528c91276c4d7ae3_tuple;
extern PyObject *const_str_plain_set_text;
extern PyObject *const_str_plain_False;
static PyObject *const_str_plain_msid;
extern PyObject *const_str_plain_devname;
extern PyObject *const_str_plain_sys;
static PyObject *const_str_digest_d0bbbc8ecf5795d416fb4bb1a98af89c;
extern PyObject *const_str_plain_revert_psid_entry;
extern PyObject *const_str_plain_dev_sn;
static PyObject *const_str_plain_pw_u_trim_confirm;
static PyObject *const_tuple_6899522036c8f8abd5800c52be1813b5_tuple;
static PyObject *const_str_digest_6d3ebca9adf50b5bbcf862f7d0db7bdc;
extern PyObject *const_str_plain_RW;
extern PyObject *const_str_plain_RESPONSE_OK;
extern PyObject *const_str_digest_29fe972ddfd3c3ace7d88aee7a9cd77e;
extern PyObject *const_str_plain_pass_dir;
static PyObject *const_str_digest_faec9bdfd28e293a6c6ca23affd7d404;
static PyObject *const_str_digest_e56275e2a5c0026638e77956d372e275;
static PyObject *const_str_digest_f5c2308578fc76966634f23eb2c3fab8;
extern PyObject *const_str_plain_set_markup;
static PyObject *const_str_plain_pw_u;
extern PyObject *const_str_plain_drive_menu;
extern PyObject *const_str_plain_Admin;
static PyObject *const_str_digest_8576a4442af83c196fa53ef5aec4bcd7;
extern PyObject *const_str_digest_8482c425481a7392528c91276c4d7ae3;
extern PyObject *const_str_plain_progress_bar;
static PyObject *const_str_digest_d2a9407cb7f5e25c64de1d66a6ecf057;
static PyObject *const_str_digest_77a6ab16243afd40b8bc4cc740d60dd4;
extern PyObject *const_str_plain_get_text;
extern PyObject *const_str_plain_gtk;
static PyObject *const_str_digest_57b3a385d4fb10c0e6d10f4192f7bb01;
extern PyObject *const_str_plain_ui;
extern PyObject *const_str_digest_931335e1ae383d3cde48789cdd73233d;
static PyObject *const_str_digest_67ec4a322e8ee2a266d3fe7940db84de;
static PyObject *const_str_digest_7b157eb583e5f192282fcaa00a676577;
static PyObject *const_str_digest_78b118bae7a3e181cf380422b9b067b3;
extern PyObject *const_str_plain_run_pbaWrite;
static PyObject *const_tuple_str_digest_5857891e3f97659e063da200742b49dc_tuple;
extern PyObject *const_tuple_empty;
static PyObject *const_tuple_str_digest_7dce1312d265510c9f5fb49e99196289_tuple;
static PyObject *const_tuple_str_plain_i_tuple;
extern PyObject *const_str_plain_close;
static PyObject *const_str_digest_2717a74e8094c62311bf53472f4de0ca;
extern PyObject *const_str_plain_liststore;
static PyObject *const_tuple_str_digest_08b89d533a4fcdac93ba398e6f72b3d8_tuple;
static PyObject *const_tuple_f1c042aa80a8e7beb3359ec08150a2fc_tuple;
extern PyObject *const_str_digest_362b9c39b7be7164b4f637e29c9f8900;
extern PyObject *const_str_plain_re;
static PyObject *const_tuple_str_digest_6d3ebca9adf50b5bbcf862f7d0db7bdc_tuple;
extern PyObject *const_str_plain_setup_wait_instr;
extern PyObject *const_str_plain_mount;
extern PyObject *const_str_plain___debug__;
static PyObject *const_tuple_str_digest_d04f7c420b9d2a0d52b039f0bf7ceb57_tuple;
static PyObject *const_str_plain_BUTTONS_OK_CANCEL;
extern PyObject *const_str_plain_destroy;
extern PyObject *const_str_plain_txt;
static PyObject *const_tuple_str_plain_dev_idx_tuple;
static PyObject *const_tuple_str_digest_78b118bae7a3e181cf380422b9b067b3_tuple;
extern PyObject *const_str_plain_datetime;
static PyObject *const_str_plain_RESPONSE_YES;
extern PyObject *const_str_digest_a84c2f9bb883ab000c4f334da93978e8;
extern PyObject *const_str_plain___file__;
extern PyObject *const_str_plain_verify;
static PyObject *const_str_digest_4fe5584a56124cd39e348d33297e43d5;
static PyObject *const_tuple_str_digest_3975ae734220aa490879f90d9055ecdf_tuple;
static PyObject *const_str_digest_1002dc717d1fdd81c2ea7f5f9f7ab4a3;
static PyObject *const_str_plain_listdir;
extern PyObject *const_str_plain_Windows;
extern PyObject *const_str_plain_dev_vendor;
extern PyObject *const_str_plain_group;
static PyObject *const_str_digest_28ac2a2d748125d0d09a88c9c23c1ea8;
extern PyObject *const_str_plain_dialogs;
extern PyObject *const_int_pos_256;
extern PyObject *const_str_plain_lockhash;
extern PyObject *const_str_plain_drive_na;
static PyObject *const_str_plain_findUSB;
static PyObject *const_str_plain_lock_t;
extern PyObject *const_str_digest_65f1ca3cc21751516d4508974112f1bb;
extern PyObject *const_str_plain_time;
extern PyObject *const_str_plain_path;
static PyObject *const_str_plain_psid;
extern PyObject *const_str_plain_run_revertKeep;
extern PyObject *const_str_plain_licCheck;
static PyObject *const_str_digest_14342d9ae2ee8caefc0a4cde66b5a769;
extern PyObject *const_str_plain_run_revertPSID;
static PyObject *const_str_digest_590ea466b8bab3d6fb94bf804def0403;
static PyObject *const_str_digest_7275860c79ad48e1a6145b3d274f9582;
static PyObject *const_str_digest_5857891e3f97659e063da200742b49dc;
static PyObject *const_str_plain_Lock;
static PyObject *const_str_plain_rt_revertErase;
extern PyObject *const_str_plain_get_active;
static PyObject *const_tuple_str_digest_f80a028cba6b0e71511c21bea4026d12_tuple;
static PyObject *const_tuple_str_digest_7433d933e5328ace60520ecd13e3a283_tuple;
static PyObject *const_str_plain_pw_u_trim;
static PyObject *const_str_plain_status;
static PyObject *const_str_digest_91494e46bf8c9b5ab9f0e29a33f308b8;
static PyObject *const_tuple_str_digest_e044e1d24e8dd884c25925fd63f6b6d8_tuple;
static PyObject *const_str_plain_runsetup;
static PyObject *const_tuple_str_digest_1a4b86fee576c2932467ec44f9732332_tuple;
static PyObject *const_tuple_str_digest_a6f62406cc1944d3794fca7a3f1b23ec_tuple;
static PyObject *const_str_digest_7433d933e5328ace60520ecd13e3a283;
static PyObject *const_str_digest_36979e110b22a61921d06dc3852bf838;
static PyObject *const_str_digest_e9d24bdc0652609f4256f35e99daf760;
static PyObject *const_str_plain_rt_setupUser;
extern PyObject *const_str_plain_toggleSingle_radio;
static PyObject *const_str_plain_devs;
extern PyObject *const_tuple_int_pos_1_tuple;
static PyObject *const_tuple_str_digest_27f0647d657a108c4dc843014a115167_tuple;
static PyObject *const_tuple_str_digest_5af8014053f531f53e7788b48885948b_tuple;
static PyObject *const_str_digest_08b89d533a4fcdac93ba398e6f72b3d8;
extern PyObject *const_str_digest_01a45f558eee63987d9de4cec604421c;
static PyObject *const_tuple_str_digest_adb771d2fcc1a581081cb4a03495a2e3_tuple;
static PyObject *const_str_plain_list_mn;
extern PyObject *const_str_plain_pop;
extern PyObject *const_str_plain_run_setupUSB;
extern PyObject *const_str_digest_84ba3144e8a4c8824551fdd8d0fe5bde;
extern PyObject *const_str_digest_0c8d3c6eed5d4373e00b3d74bc2f9bc8;
extern PyObject *const_str_plain_get_value;
extern PyObject *const_str_plain_type;
extern PyObject *const_str_plain_pass_sav;
static PyObject *const_str_digest_4927d8947aa11be5037039c09aabf3b0;
static PyObject *const_tuple_str_digest_1115ebe932d1b941d1eed30a47fde5a6_tuple;
extern PyObject *const_str_plain_selected_list;
extern PyObject *const_str_plain_run_unlockPBA;
static PyObject *const_str_digest_50947fcde5a276009797ee1a9769a94a;
extern PyObject *const_str_plain_read;
static PyObject *const_str_plain_pw_trim;
static PyObject *const_str_plain_timeout_track;
static PyObject *const_str_plain_rt_changePW;
static PyObject *const_str_plain_Process;
static PyObject *const_str_plain_rt_revertPSID;
extern PyObject *const_str_plain_t1;
static PyObject *const_str_plain_t2;
static PyObject *const_str_digest_d858c557a170fb41ae34105ea1eeedaa;
static PyObject *const_str_digest_9c9050705c516c0ecbe3d2260b2ac30e;
static PyObject *const_str_plain_Value;
extern PyObject *const_str_digest_860d00cf321643e9e9ab82de992e8e2f;
static PyObject *const_str_digest_12972f1cc00f1e6a86845e930725106f;
extern PyObject *const_tuple_float_0_0_tuple;
static PyObject *const_str_digest_1a4b86fee576c2932467ec44f9732332;
static PyObject *const_tuple_str_digest_66b9c32dc65a44769f7de8c6bb74f616_tuple;
static PyObject *const_str_digest_f80a028cba6b0e71511c21bea4026d12;
extern PyObject *const_str_plain_sub;
static PyObject *const_str_plain_set_fraction;
extern PyObject *const_str_plain_timeout_cleanup;
extern PyObject *const_str_plain_buttons;
static PyObject *const_str_digest_27f0647d657a108c4dc843014a115167;
extern PyObject *const_str_digest_2a99f2106e37159d649e36cd642454d7;
extern PyObject *const_str_plain_message;
extern PyObject *const_str_plain_strip;
extern PyObject *const_str_digest_8c96842b8b2bfd9741967a12c4a512ae;
extern PyObject *const_str_plain_system;
extern PyObject *const_str_plain_PBA_VERSION;
extern PyObject *const_str_plain_op_instr;
extern PyObject *const_str_plain_Linux;
extern PyObject *const_int_pos_2;
extern PyObject *const_int_pos_3;
extern PyObject *const_int_pos_1;
static PyObject *const_str_plain_rt_setupFull;
extern PyObject *const_int_pos_8;
static PyObject *const_str_plain_new_pass;
static PyObject *const_str_digest_abfdea41505156cc3bc828330a5d4fe3;
extern PyObject *const_str_plain_iter;
extern PyObject *const_str_plain_get_buffer;
static PyObject *const_str_plain_password_a;
static PyObject *const_str_digest_72bac1bf76269b2bc2d042815fc9682b;
extern PyObject *const_str_plain_subprocess;
extern PyObject *const_str_plain_runprocess;
extern PyObject *const_str_plain_start_time;
static PyObject *const_str_plain_selected;
static PyObject *const_float_60_0;
static PyObject *const_str_plain_t_m;
extern PyObject *const_str_plain_user_list;
extern PyObject *const_str_plain_run;
static PyObject *const_str_plain_rt_revertKeep;
static PyObject *const_str_plain_txt_q;
extern PyObject *const_str_plain_pbawrite_ip;
static PyObject *const_tuple_int_0_int_neg_1_tuple;
static PyObject *const_tuple_3485e60fb8e2b2fec05535a855d848ca_tuple;
extern PyObject *const_str_plain_prelock;
static PyObject *const_str_digest_1718bd04689643446339ebf62f809ce5;
extern PyObject *const_str_plain_show;
extern PyObject *const_str_plain_MessageDialog;
extern PyObject *const_str_plain_1;
static PyObject *const_str_digest_f4b7409799ba9a8f206c49ee6bc18bb9;
static PyObject *const_str_chr_58;
extern PyObject *const_str_plain_check_pass_rd;
extern PyObject *const_str_plain_runthread;
static PyObject *const_str_digest_b3aaeddaf4696821b84a51cc9a3bb621;
static PyObject *const_str_digest_5b16678c3d18e424d61d91f7cb6d380c;
extern PyObject *const_str_plain_stdout;
extern PyObject *const_str_plain_i;
extern PyObject *const_str_plain_e;
static PyObject *const_str_plain_Popen;
extern PyObject *const_str_plain_a;
static PyObject *const_tuple_935293943d70513220d667ac4b431936_tuple;
extern PyObject *const_str_plain_DEV_OS;
static PyObject *const_tuple_str_digest_d858c557a170fb41ae34105ea1eeedaa_tuple;
static PyObject *const_str_plain_pw_trim_confirm;
static PyObject *const_str_digest_205b60d69f326be8faaf6444c666377f;
extern PyObject *const_str_plain_r;
static PyObject *const_tuple_335eb93f25e087312e63a0991b8a6d9f_tuple;
static PyObject *const_tuple_str_digest_010eee5132cba85d8388107801ade416_tuple;
extern PyObject *const_str_plain_LKATTR;
static PyObject *const_str_digest_010eee5132cba85d8388107801ade416;
static PyObject *const_str_plain_new_pass_confirm;
extern PyObject *const_str_plain_platform;
static PyObject *const_tuple_str_digest_f0e3325ab65f304147b959c8ff1750b4_tuple;
extern PyObject *const_str_plain_multi_wait_instr;
static PyObject *const_str_digest_5d19484996ce99edb28174f508d4c89b;
extern PyObject *const_str_plain_findall;
extern PyObject *const_int_0;
extern PyObject *const_str_plain_run_setupUser;
static PyObject *const_str_plain_rt_setupUSB;
extern PyObject *const_str_plain_get_iter_first;
static PyObject *const_tuple_str_digest_2e55302ed6c9023409284cb1ad8d5c94_tuple;
static PyObject *const_str_plain_has_key;
static PyObject *const_str_plain_pw;
extern PyObject *const_str_plain_append;
static PyObject *const_str_plain_MESSAGE_WARNING;
static PyObject *const_str_digest_a268614b1c426f0356ccda8551576100;
static PyObject *const_str_digest_fb4170e6daf9640f1d3cf05bd96f5c69;
extern PyObject *const_str_plain_target;
static PyObject *const_str_plain_pw_u_confirm;
extern PyObject *const_str_plain_button;
static PyObject *const_str_plain_old_hash;
static PyObject *const_str_plain_BUTTONS_YES_NO;
extern PyObject *const_str_plain_postlock;
extern PyObject *const_str_plain_start_spin;
extern PyObject *const_str_plain_define_lock_t;
extern PyObject *const_str_plain_level;
static PyObject *const_str_plain_locked;
extern PyObject *const_str_plain_wait_instr;
extern PyObject *const_str_plain_start;
static PyObject *const_tuple_str_digest_1c944aaa92f306386270edce9e2f666d_tuple;
extern PyObject *const_str_plain_Thread;
static PyObject *const_str_chr_92;
static PyObject *const_str_plain_rt_pbaWrite;
extern PyObject *const_str_plain_pba_wait_instr;
extern PyObject *const_tuple_str_digest_01a45f558eee63987d9de4cec604421c_tuple;
extern PyObject *const_str_plain_setupUSB_prompt;
extern PyObject *const_str_plain_pass_entry;
static PyObject *const_tuple_str_plain_dev_idx_str_plain_e_tuple;
extern PyObject *const_tuple_str_digest_0c8d3c6eed5d4373e00b3d74bc2f9bc8_tuple;
extern PyObject *const_str_plain_auth_menu;
static PyObject *const_str_digest_7dce1312d265510c9f5fb49e99196289;
static PyObject *const_str_plain_sync_thread;
static PyObject *const_tuple_str_digest_e56275e2a5c0026638e77956d372e275_tuple;
extern PyObject *const_tuple_int_0_tuple;
static PyObject *const_str_plain_PIPE;
extern PyObject *const_str_plain_search;
static PyObject *const_str_digest_a6f62406cc1944d3794fca7a3f1b23ec;
static PyObject *const_tuple_0cc848a09edec54a909e63d3b3cf406f_tuple;
static PyObject *const_float_120_0;
extern PyObject *const_str_plain_drive_list;
static PyObject *const_str_plain_release;
static PyObject *const_tuple_str_digest_205b60d69f326be8faaf6444c666377f_tuple;
static PyObject *const_str_plain_Array;
extern PyObject *const_str_plain_usb_list;
static PyObject *const_str_plain_lower;
extern PyObject *const_str_plain_multiprocessing;
static PyObject *const_str_digest_3975ae734220aa490879f90d9055ecdf;
extern PyObject *const_str_plain_d_list;
static PyObject *const_str_digest_47e7b4a4005120dc05c79622c84885e4;
static PyObject *const_list_str_plain_diskpart_list;
extern PyObject *const_str_digest_4b8d3f96b43e55a1f0ce0c23563c4be0;
static PyObject *const_tuple_570cb32dde83d021d6cce9291929ff35_tuple;
extern PyObject *const_str_plain_string;
static PyObject *const_tuple_str_digest_5ab5b3125e01181891d34e3d2dcc2424_tuple;
extern PyObject *const_str_dot;
static PyObject *const_tuple_str_digest_7275860c79ad48e1a6145b3d274f9582_tuple;
static PyObject *const_tuple_5fe0558f680f6f38cdc35a599d892ba7_tuple;
static PyObject *const_str_digest_17549804b509a5d0faeadc1a5d0256fa;
static PyObject *const_str_digest_c26386993bfef303945d53604eada43a;
extern PyObject *const_str_plain_m_na;
static PyObject *const_str_digest_5af8014053f531f53e7788b48885948b;
static PyObject *const_str_digest_d04f7c420b9d2a0d52b039f0bf7ceb57;
extern PyObject *const_str_plain_isfile;
extern PyObject *const_str_newline;
static PyObject *const_tuple_357884790c9f7258eb39bd654991c7a8_tuple;
extern PyObject *const_str_plain_msid_list;
extern PyObject *const_str_plain_parent;
static PyObject *const_tuple_str_digest_91494e46bf8c9b5ab9f0e29a33f308b8_tuple;
static PyObject *const_str_digest_8e206e1d9437df3bfbdb341f8ac1cad7;
static PyObject *const_tuple_str_digest_50947fcde5a276009797ee1a9769a94a_tuple;
extern PyObject *const_str_plain_setup_prompt1;
extern PyObject *const_str_space;
extern PyObject *const_tuple_str_digest_65f1ca3cc21751516d4508974112f1bb_tuple;
static PyObject *const_str_plain_isdir;
static PyObject *const_tuple_str_digest_9c9050705c516c0ecbe3d2260b2ac30e_tuple;
extern PyObject *const_str_plain_runscan;
extern PyObject *const_str_plain_pw_strip;
extern PyObject *const_str_plain_index;
extern PyObject *const_str_plain_vendor_list;
extern PyObject *const_str_plain___doc__;
static PyObject *const_tuple_str_digest_dcd804658f8e9977f257a841a58a2840_tuple;
static PyObject *const_str_digest_66b9c32dc65a44769f7de8c6bb74f616;
static PyObject *const_str_digest_dcce744a7f20ab5ff6ee33d33fd10c9e;
extern PyObject *const_str_digest_f3d167b0dffa906401fa6c94639c194d;
extern PyObject *const_str_empty;
static PyObject *const_str_digest_ec250c46d7b35bdd88731f5a342fe610;
static PyObject *const_tuple_str_digest_a268614b1c426f0356ccda8551576100_tuple;
static PyObject *const_tuple_str_digest_36979e110b22a61921d06dc3852bf838_tuple;
extern PyObject *const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
static PyObject *const_str_digest_e044e1d24e8dd884c25925fd63f6b6d8;
extern PyObject *const_str_plain_msg_err;
static PyObject *const_str_digest_2e55302ed6c9023409284cb1ad8d5c94;
static PyObject *const_tuple_list_str_plain_diskpart_list_tuple;
static PyObject *const_str_plain_acquire;
static PyObject *module_filename_obj;

/* Indicator if this modules private constants were created yet. */
static bool constants_created = false;

/* Function to create module private constants. */
static void createModuleConstants(void) {
    const_tuple_str_digest_d0bbbc8ecf5795d416fb4bb1a98af89c_tuple = PyTuple_New(1);
    const_str_digest_d0bbbc8ecf5795d416fb4bb1a98af89c = UNSTREAM_STRING(&constant_bin[ 39913 ], 23, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_d0bbbc8ecf5795d416fb4bb1a98af89c_tuple, 0, const_str_digest_d0bbbc8ecf5795d416fb4bb1a98af89c); Py_INCREF(const_str_digest_d0bbbc8ecf5795d416fb4bb1a98af89c);
    const_str_plain_rt_unlockPBA = UNSTREAM_STRING(&constant_bin[ 39936 ], 12, 1);
    const_tuple_str_digest_b3aaeddaf4696821b84a51cc9a3bb621_tuple = PyTuple_New(1);
    const_str_digest_b3aaeddaf4696821b84a51cc9a3bb621 = UNSTREAM_STRING(&constant_bin[ 39948 ], 30, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_b3aaeddaf4696821b84a51cc9a3bb621_tuple, 0, const_str_digest_b3aaeddaf4696821b84a51cc9a3bb621); Py_INCREF(const_str_digest_b3aaeddaf4696821b84a51cc9a3bb621);
    const_str_plain_communicate = UNSTREAM_STRING(&constant_bin[ 39978 ], 11, 1);
    const_str_plain_cleanop = UNSTREAM_STRING(&constant_bin[ 5184 ], 7, 1);
    const_str_digest_5ab5b3125e01181891d34e3d2dcc2424 = UNSTREAM_STRING(&constant_bin[ 39989 ], 126, 0);
    const_str_plain_drive = UNSTREAM_STRING(&constant_bin[ 5589 ], 5, 1);
    const_tuple_str_digest_b62eced012cb463810e5ce7621fab465_tuple = PyTuple_New(1);
    const_str_digest_b62eced012cb463810e5ce7621fab465 = UNSTREAM_STRING(&constant_bin[ 40115 ], 32, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_b62eced012cb463810e5ce7621fab465_tuple, 0, const_str_digest_b62eced012cb463810e5ce7621fab465); Py_INCREF(const_str_digest_b62eced012cb463810e5ce7621fab465);
    const_str_plain_get_active_text = UNSTREAM_STRING(&constant_bin[ 40147 ], 15, 1);
    const_str_plain_list_sn = UNSTREAM_STRING(&constant_bin[ 40162 ], 7, 1);
    const_tuple_str_digest_28ac2a2d748125d0d09a88c9c23c1ea8_tuple = PyTuple_New(1);
    const_str_digest_28ac2a2d748125d0d09a88c9c23c1ea8 = UNSTREAM_STRING(&constant_bin[ 40169 ], 12, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_28ac2a2d748125d0d09a88c9c23c1ea8_tuple, 0, const_str_digest_28ac2a2d748125d0d09a88c9c23c1ea8); Py_INCREF(const_str_digest_28ac2a2d748125d0d09a88c9c23c1ea8);
    const_str_plain_stdin = UNSTREAM_STRING(&constant_bin[ 40181 ], 5, 1);
    const_tuple_str_digest_5d19484996ce99edb28174f508d4c89b_tuple = PyTuple_New(1);
    const_str_digest_5d19484996ce99edb28174f508d4c89b = UNSTREAM_STRING(&constant_bin[ 40186 ], 71, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_5d19484996ce99edb28174f508d4c89b_tuple, 0, const_str_digest_5d19484996ce99edb28174f508d4c89b); Py_INCREF(const_str_digest_5d19484996ce99edb28174f508d4c89b);
    const_str_digest_deff663361aa8c2f12d71e786d757b70 = UNSTREAM_STRING(&constant_bin[ 40257 ], 26, 0);
    const_str_digest_dcd804658f8e9977f257a841a58a2840 = UNSTREAM_STRING(&constant_bin[ 40283 ], 31, 0);
    const_tuple_str_digest_fb4170e6daf9640f1d3cf05bd96f5c69_tuple = PyTuple_New(1);
    const_str_digest_fb4170e6daf9640f1d3cf05bd96f5c69 = UNSTREAM_STRING(&constant_bin[ 40314 ], 46, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_fb4170e6daf9640f1d3cf05bd96f5c69_tuple, 0, const_str_digest_fb4170e6daf9640f1d3cf05bd96f5c69); Py_INCREF(const_str_digest_fb4170e6daf9640f1d3cf05bd96f5c69);
    const_str_plain_f_list = UNSTREAM_STRING(&constant_bin[ 40360 ], 6, 1);
    const_tuple_str_digest_8e206e1d9437df3bfbdb341f8ac1cad7_tuple = PyTuple_New(1);
    const_str_digest_8e206e1d9437df3bfbdb341f8ac1cad7 = UNSTREAM_STRING(&constant_bin[ 40366 ], 92, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_8e206e1d9437df3bfbdb341f8ac1cad7_tuple, 0, const_str_digest_8e206e1d9437df3bfbdb341f8ac1cad7); Py_INCREF(const_str_digest_8e206e1d9437df3bfbdb341f8ac1cad7);
    const_tuple_e055380a4005427167c60a836c173afa_tuple = PyTuple_New(4);
    const_str_plain_Process = UNSTREAM_STRING(&constant_bin[ 39877 ], 7, 1);
    PyTuple_SET_ITEM(const_tuple_e055380a4005427167c60a836c173afa_tuple, 0, const_str_plain_Process); Py_INCREF(const_str_plain_Process);
    const_str_plain_Value = UNSTREAM_STRING(&constant_bin[ 2132 ], 5, 1);
    PyTuple_SET_ITEM(const_tuple_e055380a4005427167c60a836c173afa_tuple, 1, const_str_plain_Value); Py_INCREF(const_str_plain_Value);
    const_str_plain_Array = UNSTREAM_STRING(&constant_bin[ 40458 ], 5, 1);
    PyTuple_SET_ITEM(const_tuple_e055380a4005427167c60a836c173afa_tuple, 2, const_str_plain_Array); Py_INCREF(const_str_plain_Array);
    const_str_plain_Event = UNSTREAM_STRING(&constant_bin[ 19283 ], 5, 1);
    PyTuple_SET_ITEM(const_tuple_e055380a4005427167c60a836c173afa_tuple, 3, const_str_plain_Event); Py_INCREF(const_str_plain_Event);
    const_str_digest_adb771d2fcc1a581081cb4a03495a2e3 = UNSTREAM_STRING(&constant_bin[ 40463 ], 16, 0);
    const_tuple_str_digest_12972f1cc00f1e6a86845e930725106f_tuple = PyTuple_New(1);
    const_str_digest_12972f1cc00f1e6a86845e930725106f = UNSTREAM_STRING(&constant_bin[ 40479 ], 85, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_12972f1cc00f1e6a86845e930725106f_tuple, 0, const_str_digest_12972f1cc00f1e6a86845e930725106f); Py_INCREF(const_str_digest_12972f1cc00f1e6a86845e930725106f);
    const_tuple_str_digest_7b157eb583e5f192282fcaa00a676577_tuple = PyTuple_New(1);
    const_str_digest_7b157eb583e5f192282fcaa00a676577 = UNSTREAM_STRING(&constant_bin[ 40564 ], 63, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_7b157eb583e5f192282fcaa00a676577_tuple, 0, const_str_digest_7b157eb583e5f192282fcaa00a676577); Py_INCREF(const_str_digest_7b157eb583e5f192282fcaa00a676577);
    const_str_plain_dev_idx = UNSTREAM_STRING(&constant_bin[ 40627 ], 7, 1);
    const_tuple_486897ad0c895a4bf383b7255ba9d16c_tuple = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 40634 ], 454);
    const_tuple_str_digest_ec250c46d7b35bdd88731f5a342fe610_tuple = PyTuple_New(1);
    const_str_digest_ec250c46d7b35bdd88731f5a342fe610 = UNSTREAM_STRING(&constant_bin[ 41088 ], 39, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_ec250c46d7b35bdd88731f5a342fe610_tuple, 0, const_str_digest_ec250c46d7b35bdd88731f5a342fe610); Py_INCREF(const_str_digest_ec250c46d7b35bdd88731f5a342fe610);
    const_str_plain_rt_removeUser = UNSTREAM_STRING(&constant_bin[ 41127 ], 13, 1);
    const_str_plain_delete_text = UNSTREAM_STRING(&constant_bin[ 41140 ], 11, 1);
    const_list_9135c3c0d42c1e9aaba6c36b4164cc20_list = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 41151 ], 261);
    const_str_digest_1c944aaa92f306386270edce9e2f666d = UNSTREAM_STRING(&constant_bin[ 41412 ], 15, 0);
    const_tuple_str_digest_f5c2308578fc76966634f23eb2c3fab8_tuple = PyTuple_New(1);
    const_str_digest_f5c2308578fc76966634f23eb2c3fab8 = UNSTREAM_STRING(&constant_bin[ 41427 ], 5, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_f5c2308578fc76966634f23eb2c3fab8_tuple, 0, const_str_digest_f5c2308578fc76966634f23eb2c3fab8); Py_INCREF(const_str_digest_f5c2308578fc76966634f23eb2c3fab8);
    const_str_digest_9a0312388657bf34e3beb19acd7cbdce = UNSTREAM_STRING(&constant_bin[ 41432 ], 8, 0);
    const_tuple_str_digest_c26386993bfef303945d53604eada43a_tuple = PyTuple_New(1);
    const_str_digest_c26386993bfef303945d53604eada43a = UNSTREAM_STRING(&constant_bin[ 41440 ], 101, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_c26386993bfef303945d53604eada43a_tuple, 0, const_str_digest_c26386993bfef303945d53604eada43a); Py_INCREF(const_str_digest_c26386993bfef303945d53604eada43a);
    const_str_digest_f0e3325ab65f304147b959c8ff1750b4 = UNSTREAM_STRING(&constant_bin[ 41541 ], 77, 0);
    const_str_plain_password = UNSTREAM_STRING(&constant_bin[ 5939 ], 8, 1);
    const_str_digest_b9fd857691f375c6ace933a89e09e6f0 = UNSTREAM_STRING(&constant_bin[ 41618 ], 107, 0);
    const_str_plain_text_a = UNSTREAM_STRING(&constant_bin[ 41725 ], 6, 1);
    const_str_digest_1115ebe932d1b941d1eed30a47fde5a6 = UNSTREAM_STRING(&constant_bin[ 41731 ], 19, 0);
    const_str_plain_msid = UNSTREAM_STRING(&constant_bin[ 8608 ], 4, 1);
    const_str_plain_pw_u_trim_confirm = UNSTREAM_STRING(&constant_bin[ 41750 ], 17, 1);
    const_tuple_6899522036c8f8abd5800c52be1813b5_tuple = PyTuple_New(15);
    PyTuple_SET_ITEM(const_tuple_6899522036c8f8abd5800c52be1813b5_tuple, 0, const_str_plain_button); Py_INCREF(const_str_plain_button);
    PyTuple_SET_ITEM(const_tuple_6899522036c8f8abd5800c52be1813b5_tuple, 1, const_str_plain_ui); Py_INCREF(const_str_plain_ui);
    const_str_plain_psid = UNSTREAM_STRING(&constant_bin[ 6849 ], 4, 1);
    PyTuple_SET_ITEM(const_tuple_6899522036c8f8abd5800c52be1813b5_tuple, 2, const_str_plain_psid); Py_INCREF(const_str_plain_psid);
    PyTuple_SET_ITEM(const_tuple_6899522036c8f8abd5800c52be1813b5_tuple, 3, const_str_plain_index); Py_INCREF(const_str_plain_index);
    PyTuple_SET_ITEM(const_tuple_6899522036c8f8abd5800c52be1813b5_tuple, 4, const_str_plain_e); Py_INCREF(const_str_plain_e);
    PyTuple_SET_ITEM(const_tuple_6899522036c8f8abd5800c52be1813b5_tuple, 5, const_str_plain_res); Py_INCREF(const_str_plain_res);
    PyTuple_SET_ITEM(const_tuple_6899522036c8f8abd5800c52be1813b5_tuple, 6, const_str_plain_t1); Py_INCREF(const_str_plain_t1);
    const_str_plain_t2 = UNSTREAM_STRING(&constant_bin[ 11652 ], 2, 1);
    PyTuple_SET_ITEM(const_tuple_6899522036c8f8abd5800c52be1813b5_tuple, 7, const_str_plain_t2); Py_INCREF(const_str_plain_t2);
    PyTuple_SET_ITEM(const_tuple_6899522036c8f8abd5800c52be1813b5_tuple, 8, const_str_plain_text_a); Py_INCREF(const_str_plain_text_a);
    const_str_plain_txt_q = UNSTREAM_STRING(&constant_bin[ 41767 ], 5, 1);
    PyTuple_SET_ITEM(const_tuple_6899522036c8f8abd5800c52be1813b5_tuple, 9, const_str_plain_txt_q); Py_INCREF(const_str_plain_txt_q);
    PyTuple_SET_ITEM(const_tuple_6899522036c8f8abd5800c52be1813b5_tuple, 10, const_str_plain_m_na); Py_INCREF(const_str_plain_m_na);
    PyTuple_SET_ITEM(const_tuple_6899522036c8f8abd5800c52be1813b5_tuple, 11, const_str_plain_drive_na); Py_INCREF(const_str_plain_drive_na);
    PyTuple_SET_ITEM(const_tuple_6899522036c8f8abd5800c52be1813b5_tuple, 12, const_str_plain_message); Py_INCREF(const_str_plain_message);
    PyTuple_SET_ITEM(const_tuple_6899522036c8f8abd5800c52be1813b5_tuple, 13, const_str_plain_txt); Py_INCREF(const_str_plain_txt);
    PyTuple_SET_ITEM(const_tuple_6899522036c8f8abd5800c52be1813b5_tuple, 14, const_str_plain_start_time); Py_INCREF(const_str_plain_start_time);
    const_str_digest_6d3ebca9adf50b5bbcf862f7d0db7bdc = UNSTREAM_STRING(&constant_bin[ 41772 ], 89, 0);
    const_str_digest_faec9bdfd28e293a6c6ca23affd7d404 = UNSTREAM_STRING(&constant_bin[ 41861 ], 18, 0);
    const_str_digest_e56275e2a5c0026638e77956d372e275 = UNSTREAM_STRING(&constant_bin[ 41879 ], 35, 0);
    const_str_plain_pw_u = UNSTREAM_STRING(&constant_bin[ 41750 ], 4, 1);
    const_str_digest_8576a4442af83c196fa53ef5aec4bcd7 = UNSTREAM_STRING(&constant_bin[ 41914 ], 18, 0);
    const_str_digest_d2a9407cb7f5e25c64de1d66a6ecf057 = UNSTREAM_STRING(&constant_bin[ 41541 ], 9, 0);
    const_str_digest_77a6ab16243afd40b8bc4cc740d60dd4 = UNSTREAM_STRING(&constant_bin[ 41932 ], 11, 0);
    const_str_digest_57b3a385d4fb10c0e6d10f4192f7bb01 = UNSTREAM_STRING(&constant_bin[ 20056 ], 2, 0);
    const_str_digest_67ec4a322e8ee2a266d3fe7940db84de = UNSTREAM_STRING(&constant_bin[ 41943 ], 7, 0);
    const_str_digest_78b118bae7a3e181cf380422b9b067b3 = UNSTREAM_STRING(&constant_bin[ 41950 ], 47, 0);
    const_tuple_str_digest_5857891e3f97659e063da200742b49dc_tuple = PyTuple_New(1);
    const_str_digest_5857891e3f97659e063da200742b49dc = UNSTREAM_STRING(&constant_bin[ 41997 ], 5, 1);
    PyTuple_SET_ITEM(const_tuple_str_digest_5857891e3f97659e063da200742b49dc_tuple, 0, const_str_digest_5857891e3f97659e063da200742b49dc); Py_INCREF(const_str_digest_5857891e3f97659e063da200742b49dc);
    const_tuple_str_digest_7dce1312d265510c9f5fb49e99196289_tuple = PyTuple_New(1);
    const_str_digest_7dce1312d265510c9f5fb49e99196289 = UNSTREAM_STRING(&constant_bin[ 41879 ], 34, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_7dce1312d265510c9f5fb49e99196289_tuple, 0, const_str_digest_7dce1312d265510c9f5fb49e99196289); Py_INCREF(const_str_digest_7dce1312d265510c9f5fb49e99196289);
    const_tuple_str_plain_i_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_i_tuple, 0, const_str_plain_i); Py_INCREF(const_str_plain_i);
    const_str_digest_2717a74e8094c62311bf53472f4de0ca = UNSTREAM_STRING(&constant_bin[ 13376 ], 3, 0);
    const_tuple_str_digest_08b89d533a4fcdac93ba398e6f72b3d8_tuple = PyTuple_New(1);
    const_str_digest_08b89d533a4fcdac93ba398e6f72b3d8 = UNSTREAM_STRING(&constant_bin[ 42002 ], 25, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_08b89d533a4fcdac93ba398e6f72b3d8_tuple, 0, const_str_digest_08b89d533a4fcdac93ba398e6f72b3d8); Py_INCREF(const_str_digest_08b89d533a4fcdac93ba398e6f72b3d8);
    const_tuple_f1c042aa80a8e7beb3359ec08150a2fc_tuple = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 42027 ], 298);
    const_tuple_str_digest_6d3ebca9adf50b5bbcf862f7d0db7bdc_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_digest_6d3ebca9adf50b5bbcf862f7d0db7bdc_tuple, 0, const_str_digest_6d3ebca9adf50b5bbcf862f7d0db7bdc); Py_INCREF(const_str_digest_6d3ebca9adf50b5bbcf862f7d0db7bdc);
    const_tuple_str_digest_d04f7c420b9d2a0d52b039f0bf7ceb57_tuple = PyTuple_New(1);
    const_str_digest_d04f7c420b9d2a0d52b039f0bf7ceb57 = UNSTREAM_STRING(&constant_bin[ 42325 ], 33, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_d04f7c420b9d2a0d52b039f0bf7ceb57_tuple, 0, const_str_digest_d04f7c420b9d2a0d52b039f0bf7ceb57); Py_INCREF(const_str_digest_d04f7c420b9d2a0d52b039f0bf7ceb57);
    const_str_plain_BUTTONS_OK_CANCEL = UNSTREAM_STRING(&constant_bin[ 42358 ], 17, 1);
    const_tuple_str_plain_dev_idx_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_plain_dev_idx_tuple, 0, const_str_plain_dev_idx); Py_INCREF(const_str_plain_dev_idx);
    const_tuple_str_digest_78b118bae7a3e181cf380422b9b067b3_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_digest_78b118bae7a3e181cf380422b9b067b3_tuple, 0, const_str_digest_78b118bae7a3e181cf380422b9b067b3); Py_INCREF(const_str_digest_78b118bae7a3e181cf380422b9b067b3);
    const_str_plain_RESPONSE_YES = UNSTREAM_STRING(&constant_bin[ 42375 ], 12, 1);
    const_str_digest_4fe5584a56124cd39e348d33297e43d5 = UNSTREAM_STRING(&constant_bin[ 42387 ], 38, 0);
    const_tuple_str_digest_3975ae734220aa490879f90d9055ecdf_tuple = PyTuple_New(1);
    const_str_digest_3975ae734220aa490879f90d9055ecdf = UNSTREAM_STRING(&constant_bin[ 42425 ], 43, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_3975ae734220aa490879f90d9055ecdf_tuple, 0, const_str_digest_3975ae734220aa490879f90d9055ecdf); Py_INCREF(const_str_digest_3975ae734220aa490879f90d9055ecdf);
    const_str_digest_1002dc717d1fdd81c2ea7f5f9f7ab4a3 = UNSTREAM_STRING(&constant_bin[ 42468 ], 29, 0);
    const_str_plain_listdir = UNSTREAM_STRING(&constant_bin[ 42497 ], 7, 1);
    const_str_plain_findUSB = UNSTREAM_STRING(&constant_bin[ 42504 ], 7, 1);
    const_str_plain_lock_t = UNSTREAM_STRING(&constant_bin[ 4960 ], 6, 1);
    const_str_digest_14342d9ae2ee8caefc0a4cde66b5a769 = UNSTREAM_STRING(&constant_bin[ 42511 ], 14, 0);
    const_str_digest_590ea466b8bab3d6fb94bf804def0403 = UNSTREAM_STRING(&constant_bin[ 42525 ], 14, 0);
    const_str_digest_7275860c79ad48e1a6145b3d274f9582 = UNSTREAM_STRING(&constant_bin[ 42539 ], 98, 0);
    const_str_plain_Lock = UNSTREAM_STRING(&constant_bin[ 812 ], 4, 1);
    const_str_plain_rt_revertErase = UNSTREAM_STRING(&constant_bin[ 42637 ], 14, 1);
    const_tuple_str_digest_f80a028cba6b0e71511c21bea4026d12_tuple = PyTuple_New(1);
    const_str_digest_f80a028cba6b0e71511c21bea4026d12 = UNSTREAM_STRING(&constant_bin[ 42651 ], 137, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_f80a028cba6b0e71511c21bea4026d12_tuple, 0, const_str_digest_f80a028cba6b0e71511c21bea4026d12); Py_INCREF(const_str_digest_f80a028cba6b0e71511c21bea4026d12);
    const_tuple_str_digest_7433d933e5328ace60520ecd13e3a283_tuple = PyTuple_New(1);
    const_str_digest_7433d933e5328ace60520ecd13e3a283 = UNSTREAM_STRING(&constant_bin[ 42788 ], 144, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_7433d933e5328ace60520ecd13e3a283_tuple, 0, const_str_digest_7433d933e5328ace60520ecd13e3a283); Py_INCREF(const_str_digest_7433d933e5328ace60520ecd13e3a283);
    const_str_plain_pw_u_trim = UNSTREAM_STRING(&constant_bin[ 41750 ], 9, 1);
    const_str_plain_status = UNSTREAM_STRING(&constant_bin[ 8490 ], 6, 1);
    const_str_digest_91494e46bf8c9b5ab9f0e29a33f308b8 = UNSTREAM_STRING(&constant_bin[ 42932 ], 41, 0);
    const_tuple_str_digest_e044e1d24e8dd884c25925fd63f6b6d8_tuple = PyTuple_New(1);
    const_str_digest_e044e1d24e8dd884c25925fd63f6b6d8 = UNSTREAM_STRING(&constant_bin[ 42973 ], 126, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_e044e1d24e8dd884c25925fd63f6b6d8_tuple, 0, const_str_digest_e044e1d24e8dd884c25925fd63f6b6d8); Py_INCREF(const_str_digest_e044e1d24e8dd884c25925fd63f6b6d8);
    const_str_plain_runsetup = UNSTREAM_STRING(&constant_bin[ 5108 ], 8, 1);
    const_tuple_str_digest_1a4b86fee576c2932467ec44f9732332_tuple = PyTuple_New(1);
    const_str_digest_1a4b86fee576c2932467ec44f9732332 = UNSTREAM_STRING(&constant_bin[ 43099 ], 32, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_1a4b86fee576c2932467ec44f9732332_tuple, 0, const_str_digest_1a4b86fee576c2932467ec44f9732332); Py_INCREF(const_str_digest_1a4b86fee576c2932467ec44f9732332);
    const_tuple_str_digest_a6f62406cc1944d3794fca7a3f1b23ec_tuple = PyTuple_New(1);
    const_str_digest_a6f62406cc1944d3794fca7a3f1b23ec = UNSTREAM_STRING(&constant_bin[ 43131 ], 61, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_a6f62406cc1944d3794fca7a3f1b23ec_tuple, 0, const_str_digest_a6f62406cc1944d3794fca7a3f1b23ec); Py_INCREF(const_str_digest_a6f62406cc1944d3794fca7a3f1b23ec);
    const_str_digest_36979e110b22a61921d06dc3852bf838 = UNSTREAM_STRING(&constant_bin[ 43192 ], 25, 0);
    const_str_digest_e9d24bdc0652609f4256f35e99daf760 = UNSTREAM_STRING(&constant_bin[ 43217 ], 17, 0);
    const_str_plain_rt_setupUser = UNSTREAM_STRING(&constant_bin[ 43234 ], 12, 1);
    const_str_plain_devs = UNSTREAM_STRING(&constant_bin[ 13013 ], 4, 1);
    const_tuple_str_digest_27f0647d657a108c4dc843014a115167_tuple = PyTuple_New(1);
    const_str_digest_27f0647d657a108c4dc843014a115167 = UNSTREAM_STRING(&constant_bin[ 43246 ], 104, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_27f0647d657a108c4dc843014a115167_tuple, 0, const_str_digest_27f0647d657a108c4dc843014a115167); Py_INCREF(const_str_digest_27f0647d657a108c4dc843014a115167);
    const_tuple_str_digest_5af8014053f531f53e7788b48885948b_tuple = PyTuple_New(1);
    const_str_digest_5af8014053f531f53e7788b48885948b = UNSTREAM_STRING(&constant_bin[ 43350 ], 122, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_5af8014053f531f53e7788b48885948b_tuple, 0, const_str_digest_5af8014053f531f53e7788b48885948b); Py_INCREF(const_str_digest_5af8014053f531f53e7788b48885948b);
    const_tuple_str_digest_adb771d2fcc1a581081cb4a03495a2e3_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_digest_adb771d2fcc1a581081cb4a03495a2e3_tuple, 0, const_str_digest_adb771d2fcc1a581081cb4a03495a2e3); Py_INCREF(const_str_digest_adb771d2fcc1a581081cb4a03495a2e3);
    const_str_plain_list_mn = UNSTREAM_STRING(&constant_bin[ 42125 ], 7, 1);
    const_str_digest_4927d8947aa11be5037039c09aabf3b0 = UNSTREAM_STRING(&constant_bin[ 14640 ], 9, 0);
    const_tuple_str_digest_1115ebe932d1b941d1eed30a47fde5a6_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_digest_1115ebe932d1b941d1eed30a47fde5a6_tuple, 0, const_str_digest_1115ebe932d1b941d1eed30a47fde5a6); Py_INCREF(const_str_digest_1115ebe932d1b941d1eed30a47fde5a6);
    const_str_digest_50947fcde5a276009797ee1a9769a94a = UNSTREAM_STRING(&constant_bin[ 43472 ], 29, 0);
    const_str_plain_pw_trim = UNSTREAM_STRING(&constant_bin[ 43501 ], 7, 1);
    const_str_plain_timeout_track = UNSTREAM_STRING(&constant_bin[ 43508 ], 13, 1);
    const_str_plain_rt_changePW = UNSTREAM_STRING(&constant_bin[ 43521 ], 11, 1);
    const_str_plain_rt_revertPSID = UNSTREAM_STRING(&constant_bin[ 43532 ], 13, 1);
    const_str_digest_d858c557a170fb41ae34105ea1eeedaa = UNSTREAM_STRING(&constant_bin[ 40314 ], 34, 0);
    const_str_digest_9c9050705c516c0ecbe3d2260b2ac30e = UNSTREAM_STRING(&constant_bin[ 43545 ], 90, 0);
    const_tuple_str_digest_66b9c32dc65a44769f7de8c6bb74f616_tuple = PyTuple_New(1);
    const_str_digest_66b9c32dc65a44769f7de8c6bb74f616 = UNSTREAM_STRING(&constant_bin[ 43635 ], 128, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_66b9c32dc65a44769f7de8c6bb74f616_tuple, 0, const_str_digest_66b9c32dc65a44769f7de8c6bb74f616); Py_INCREF(const_str_digest_66b9c32dc65a44769f7de8c6bb74f616);
    const_str_plain_set_fraction = UNSTREAM_STRING(&constant_bin[ 43763 ], 12, 1);
    const_str_plain_rt_setupFull = UNSTREAM_STRING(&constant_bin[ 43775 ], 12, 1);
    const_str_plain_new_pass = UNSTREAM_STRING(&constant_bin[ 7474 ], 8, 1);
    const_str_digest_abfdea41505156cc3bc828330a5d4fe3 = UNSTREAM_STRING(&constant_bin[ 43787 ], 22, 0);
    const_str_plain_password_a = UNSTREAM_STRING(&constant_bin[ 43809 ], 10, 1);
    const_str_digest_72bac1bf76269b2bc2d042815fc9682b = UNSTREAM_STRING(&constant_bin[ 43819 ], 16, 0);
    const_str_plain_selected = UNSTREAM_STRING(&constant_bin[ 6486 ], 8, 1);
    const_float_60_0 = UNSTREAM_FLOAT(&constant_bin[ 43835 ]);
    const_str_plain_t_m = UNSTREAM_STRING(&constant_bin[ 9096 ], 3, 1);
    const_str_plain_rt_revertKeep = UNSTREAM_STRING(&constant_bin[ 43843 ], 13, 1);
    const_tuple_int_0_int_neg_1_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_int_0_int_neg_1_tuple, 0, const_int_0); Py_INCREF(const_int_0);
    PyTuple_SET_ITEM(const_tuple_int_0_int_neg_1_tuple, 1, const_int_neg_1); Py_INCREF(const_int_neg_1);
    const_tuple_3485e60fb8e2b2fec05535a855d848ca_tuple = PyTuple_New(19);
    PyTuple_SET_ITEM(const_tuple_3485e60fb8e2b2fec05535a855d848ca_tuple, 0, const_str_plain_button); Py_INCREF(const_str_plain_button);
    PyTuple_SET_ITEM(const_tuple_3485e60fb8e2b2fec05535a855d848ca_tuple, 1, const_str_plain_ui); Py_INCREF(const_str_plain_ui);
    PyTuple_SET_ITEM(const_tuple_3485e60fb8e2b2fec05535a855d848ca_tuple, 2, const_str_plain_status); Py_INCREF(const_str_plain_status);
    PyTuple_SET_ITEM(const_tuple_3485e60fb8e2b2fec05535a855d848ca_tuple, 3, const_str_plain_pw_strip); Py_INCREF(const_str_plain_pw_strip);
    PyTuple_SET_ITEM(const_tuple_3485e60fb8e2b2fec05535a855d848ca_tuple, 4, const_str_plain_list_sn); Py_INCREF(const_str_plain_list_sn);
    PyTuple_SET_ITEM(const_tuple_3485e60fb8e2b2fec05535a855d848ca_tuple, 5, const_str_plain_d_list); Py_INCREF(const_str_plain_d_list);
    PyTuple_SET_ITEM(const_tuple_3485e60fb8e2b2fec05535a855d848ca_tuple, 6, const_str_plain_drive_list); Py_INCREF(const_str_plain_drive_list);
    PyTuple_SET_ITEM(const_tuple_3485e60fb8e2b2fec05535a855d848ca_tuple, 7, const_str_plain_index); Py_INCREF(const_str_plain_index);
    PyTuple_SET_ITEM(const_tuple_3485e60fb8e2b2fec05535a855d848ca_tuple, 8, const_str_plain_selected); Py_INCREF(const_str_plain_selected);
    PyTuple_SET_ITEM(const_tuple_3485e60fb8e2b2fec05535a855d848ca_tuple, 9, const_str_plain_drive); Py_INCREF(const_str_plain_drive);
    PyTuple_SET_ITEM(const_tuple_3485e60fb8e2b2fec05535a855d848ca_tuple, 10, const_str_plain_iter); Py_INCREF(const_str_plain_iter);
    PyTuple_SET_ITEM(const_tuple_3485e60fb8e2b2fec05535a855d848ca_tuple, 11, const_str_plain_devs); Py_INCREF(const_str_plain_devs);
    PyTuple_SET_ITEM(const_tuple_3485e60fb8e2b2fec05535a855d848ca_tuple, 12, const_str_plain_f_list); Py_INCREF(const_str_plain_f_list);
    PyTuple_SET_ITEM(const_tuple_3485e60fb8e2b2fec05535a855d848ca_tuple, 13, const_str_plain_a); Py_INCREF(const_str_plain_a);
    PyTuple_SET_ITEM(const_tuple_3485e60fb8e2b2fec05535a855d848ca_tuple, 14, const_str_plain_selected_list); Py_INCREF(const_str_plain_selected_list);
    PyTuple_SET_ITEM(const_tuple_3485e60fb8e2b2fec05535a855d848ca_tuple, 15, const_str_plain_list_mn); Py_INCREF(const_str_plain_list_mn);
    PyTuple_SET_ITEM(const_tuple_3485e60fb8e2b2fec05535a855d848ca_tuple, 16, const_str_plain_password); Py_INCREF(const_str_plain_password);
    PyTuple_SET_ITEM(const_tuple_3485e60fb8e2b2fec05535a855d848ca_tuple, 17, const_str_plain_dev_idx); Py_INCREF(const_str_plain_dev_idx);
    PyTuple_SET_ITEM(const_tuple_3485e60fb8e2b2fec05535a855d848ca_tuple, 18, const_str_plain_t_m); Py_INCREF(const_str_plain_t_m);
    const_str_digest_1718bd04689643446339ebf62f809ce5 = UNSTREAM_STRING(&constant_bin[ 43856 ], 90, 0);
    const_str_digest_f4b7409799ba9a8f206c49ee6bc18bb9 = UNSTREAM_STRING(&constant_bin[ 43946 ], 50, 0);
    const_str_chr_58 = UNSTREAM_CHAR(58, 0);
    const_str_digest_5b16678c3d18e424d61d91f7cb6d380c = UNSTREAM_STRING(&constant_bin[ 43996 ], 78, 0);
    const_str_plain_Popen = UNSTREAM_STRING(&constant_bin[ 44074 ], 5, 1);
    const_tuple_935293943d70513220d667ac4b431936_tuple = PyTuple_New(13);
    PyTuple_SET_ITEM(const_tuple_935293943d70513220d667ac4b431936_tuple, 0, const_str_plain_button); Py_INCREF(const_str_plain_button);
    PyTuple_SET_ITEM(const_tuple_935293943d70513220d667ac4b431936_tuple, 1, const_str_plain_ui); Py_INCREF(const_str_plain_ui);
    PyTuple_SET_ITEM(const_tuple_935293943d70513220d667ac4b431936_tuple, 2, const_str_plain_pw_strip); Py_INCREF(const_str_plain_pw_strip);
    PyTuple_SET_ITEM(const_tuple_935293943d70513220d667ac4b431936_tuple, 3, const_str_plain_index); Py_INCREF(const_str_plain_index);
    PyTuple_SET_ITEM(const_tuple_935293943d70513220d667ac4b431936_tuple, 4, const_str_plain_e); Py_INCREF(const_str_plain_e);
    PyTuple_SET_ITEM(const_tuple_935293943d70513220d667ac4b431936_tuple, 5, const_str_plain_pw_u_trim); Py_INCREF(const_str_plain_pw_u_trim);
    PyTuple_SET_ITEM(const_tuple_935293943d70513220d667ac4b431936_tuple, 6, const_str_plain_t2); Py_INCREF(const_str_plain_t2);
    PyTuple_SET_ITEM(const_tuple_935293943d70513220d667ac4b431936_tuple, 7, const_str_plain_pw_u); Py_INCREF(const_str_plain_pw_u);
    PyTuple_SET_ITEM(const_tuple_935293943d70513220d667ac4b431936_tuple, 8, const_str_plain_pw_u_trim_confirm); Py_INCREF(const_str_plain_pw_u_trim_confirm);
    const_str_plain_pw_u_confirm = UNSTREAM_STRING(&constant_bin[ 44079 ], 12, 1);
    PyTuple_SET_ITEM(const_tuple_935293943d70513220d667ac4b431936_tuple, 9, const_str_plain_pw_u_confirm); Py_INCREF(const_str_plain_pw_u_confirm);
    PyTuple_SET_ITEM(const_tuple_935293943d70513220d667ac4b431936_tuple, 10, const_str_plain_t1); Py_INCREF(const_str_plain_t1);
    PyTuple_SET_ITEM(const_tuple_935293943d70513220d667ac4b431936_tuple, 11, const_str_plain_start_time); Py_INCREF(const_str_plain_start_time);
    PyTuple_SET_ITEM(const_tuple_935293943d70513220d667ac4b431936_tuple, 12, const_str_plain_msid); Py_INCREF(const_str_plain_msid);
    const_tuple_str_digest_d858c557a170fb41ae34105ea1eeedaa_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_digest_d858c557a170fb41ae34105ea1eeedaa_tuple, 0, const_str_digest_d858c557a170fb41ae34105ea1eeedaa); Py_INCREF(const_str_digest_d858c557a170fb41ae34105ea1eeedaa);
    const_str_plain_pw_trim_confirm = UNSTREAM_STRING(&constant_bin[ 44091 ], 15, 1);
    const_str_digest_205b60d69f326be8faaf6444c666377f = UNSTREAM_STRING(&constant_bin[ 40463 ], 15, 0);
    const_tuple_335eb93f25e087312e63a0991b8a6d9f_tuple = PyTuple_New(19);
    PyTuple_SET_ITEM(const_tuple_335eb93f25e087312e63a0991b8a6d9f_tuple, 0, const_str_plain_button); Py_INCREF(const_str_plain_button);
    PyTuple_SET_ITEM(const_tuple_335eb93f25e087312e63a0991b8a6d9f_tuple, 1, const_str_plain_ui); Py_INCREF(const_str_plain_ui);
    PyTuple_SET_ITEM(const_tuple_335eb93f25e087312e63a0991b8a6d9f_tuple, 2, const_str_plain_pw_strip); Py_INCREF(const_str_plain_pw_strip);
    PyTuple_SET_ITEM(const_tuple_335eb93f25e087312e63a0991b8a6d9f_tuple, 3, const_str_plain_list_mn); Py_INCREF(const_str_plain_list_mn);
    PyTuple_SET_ITEM(const_tuple_335eb93f25e087312e63a0991b8a6d9f_tuple, 4, const_str_plain_level); Py_INCREF(const_str_plain_level);
    PyTuple_SET_ITEM(const_tuple_335eb93f25e087312e63a0991b8a6d9f_tuple, 5, const_str_plain_index); Py_INCREF(const_str_plain_index);
    PyTuple_SET_ITEM(const_tuple_335eb93f25e087312e63a0991b8a6d9f_tuple, 6, const_str_plain_selected); Py_INCREF(const_str_plain_selected);
    PyTuple_SET_ITEM(const_tuple_335eb93f25e087312e63a0991b8a6d9f_tuple, 7, const_str_plain_pw_trim); Py_INCREF(const_str_plain_pw_trim);
    PyTuple_SET_ITEM(const_tuple_335eb93f25e087312e63a0991b8a6d9f_tuple, 8, const_str_plain_iter); Py_INCREF(const_str_plain_iter);
    PyTuple_SET_ITEM(const_tuple_335eb93f25e087312e63a0991b8a6d9f_tuple, 9, const_str_plain_drive); Py_INCREF(const_str_plain_drive);
    PyTuple_SET_ITEM(const_tuple_335eb93f25e087312e63a0991b8a6d9f_tuple, 10, const_str_plain_devs); Py_INCREF(const_str_plain_devs);
    PyTuple_SET_ITEM(const_tuple_335eb93f25e087312e63a0991b8a6d9f_tuple, 11, const_str_plain_f_list); Py_INCREF(const_str_plain_f_list);
    const_str_plain_old_hash = UNSTREAM_STRING(&constant_bin[ 44106 ], 8, 1);
    PyTuple_SET_ITEM(const_tuple_335eb93f25e087312e63a0991b8a6d9f_tuple, 12, const_str_plain_old_hash); Py_INCREF(const_str_plain_old_hash);
    PyTuple_SET_ITEM(const_tuple_335eb93f25e087312e63a0991b8a6d9f_tuple, 13, const_str_plain_selected_list); Py_INCREF(const_str_plain_selected_list);
    PyTuple_SET_ITEM(const_tuple_335eb93f25e087312e63a0991b8a6d9f_tuple, 14, const_str_plain_pw_trim_confirm); Py_INCREF(const_str_plain_pw_trim_confirm);
    PyTuple_SET_ITEM(const_tuple_335eb93f25e087312e63a0991b8a6d9f_tuple, 15, const_str_plain_t_m); Py_INCREF(const_str_plain_t_m);
    PyTuple_SET_ITEM(const_tuple_335eb93f25e087312e63a0991b8a6d9f_tuple, 16, const_str_plain_new_pass); Py_INCREF(const_str_plain_new_pass);
    PyTuple_SET_ITEM(const_tuple_335eb93f25e087312e63a0991b8a6d9f_tuple, 17, const_str_plain_list_sn); Py_INCREF(const_str_plain_list_sn);
    const_str_plain_new_pass_confirm = UNSTREAM_STRING(&constant_bin[ 44114 ], 16, 1);
    PyTuple_SET_ITEM(const_tuple_335eb93f25e087312e63a0991b8a6d9f_tuple, 18, const_str_plain_new_pass_confirm); Py_INCREF(const_str_plain_new_pass_confirm);
    const_tuple_str_digest_010eee5132cba85d8388107801ade416_tuple = PyTuple_New(1);
    const_str_digest_010eee5132cba85d8388107801ade416 = UNSTREAM_STRING(&constant_bin[ 44130 ], 35, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_010eee5132cba85d8388107801ade416_tuple, 0, const_str_digest_010eee5132cba85d8388107801ade416); Py_INCREF(const_str_digest_010eee5132cba85d8388107801ade416);
    const_tuple_str_digest_f0e3325ab65f304147b959c8ff1750b4_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_digest_f0e3325ab65f304147b959c8ff1750b4_tuple, 0, const_str_digest_f0e3325ab65f304147b959c8ff1750b4); Py_INCREF(const_str_digest_f0e3325ab65f304147b959c8ff1750b4);
    const_str_plain_rt_setupUSB = UNSTREAM_STRING(&constant_bin[ 44165 ], 11, 1);
    const_tuple_str_digest_2e55302ed6c9023409284cb1ad8d5c94_tuple = PyTuple_New(1);
    const_str_digest_2e55302ed6c9023409284cb1ad8d5c94 = UNSTREAM_STRING(&constant_bin[ 44176 ], 47, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_2e55302ed6c9023409284cb1ad8d5c94_tuple, 0, const_str_digest_2e55302ed6c9023409284cb1ad8d5c94); Py_INCREF(const_str_digest_2e55302ed6c9023409284cb1ad8d5c94);
    const_str_plain_has_key = UNSTREAM_STRING(&constant_bin[ 44223 ], 7, 1);
    const_str_plain_pw = UNSTREAM_STRING(&constant_bin[ 19581 ], 2, 1);
    const_str_plain_MESSAGE_WARNING = UNSTREAM_STRING(&constant_bin[ 44230 ], 15, 1);
    const_str_digest_a268614b1c426f0356ccda8551576100 = UNSTREAM_STRING(&constant_bin[ 44245 ], 40, 0);
    const_str_plain_BUTTONS_YES_NO = UNSTREAM_STRING(&constant_bin[ 44285 ], 14, 1);
    const_str_plain_locked = UNSTREAM_STRING(&constant_bin[ 11140 ], 6, 1);
    const_tuple_str_digest_1c944aaa92f306386270edce9e2f666d_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_digest_1c944aaa92f306386270edce9e2f666d_tuple, 0, const_str_digest_1c944aaa92f306386270edce9e2f666d); Py_INCREF(const_str_digest_1c944aaa92f306386270edce9e2f666d);
    const_str_chr_92 = UNSTREAM_CHAR(92, 0);
    const_str_plain_rt_pbaWrite = UNSTREAM_STRING(&constant_bin[ 44299 ], 11, 1);
    const_tuple_str_plain_dev_idx_str_plain_e_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_str_plain_dev_idx_str_plain_e_tuple, 0, const_str_plain_dev_idx); Py_INCREF(const_str_plain_dev_idx);
    PyTuple_SET_ITEM(const_tuple_str_plain_dev_idx_str_plain_e_tuple, 1, const_str_plain_e); Py_INCREF(const_str_plain_e);
    const_str_plain_sync_thread = UNSTREAM_STRING(&constant_bin[ 4995 ], 11, 1);
    const_tuple_str_digest_e56275e2a5c0026638e77956d372e275_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_digest_e56275e2a5c0026638e77956d372e275_tuple, 0, const_str_digest_e56275e2a5c0026638e77956d372e275); Py_INCREF(const_str_digest_e56275e2a5c0026638e77956d372e275);
    const_str_plain_PIPE = UNSTREAM_STRING(&constant_bin[ 44310 ], 4, 1);
    const_tuple_0cc848a09edec54a909e63d3b3cf406f_tuple = PyTuple_New(13);
    PyTuple_SET_ITEM(const_tuple_0cc848a09edec54a909e63d3b3cf406f_tuple, 0, const_str_plain_button); Py_INCREF(const_str_plain_button);
    PyTuple_SET_ITEM(const_tuple_0cc848a09edec54a909e63d3b3cf406f_tuple, 1, const_str_plain_ui); Py_INCREF(const_str_plain_ui);
    PyTuple_SET_ITEM(const_tuple_0cc848a09edec54a909e63d3b3cf406f_tuple, 2, const_str_plain_pw_strip); Py_INCREF(const_str_plain_pw_strip);
    PyTuple_SET_ITEM(const_tuple_0cc848a09edec54a909e63d3b3cf406f_tuple, 3, const_str_plain_list_mn); Py_INCREF(const_str_plain_list_mn);
    PyTuple_SET_ITEM(const_tuple_0cc848a09edec54a909e63d3b3cf406f_tuple, 4, const_str_plain_password); Py_INCREF(const_str_plain_password);
    PyTuple_SET_ITEM(const_tuple_0cc848a09edec54a909e63d3b3cf406f_tuple, 5, const_str_plain_index); Py_INCREF(const_str_plain_index);
    PyTuple_SET_ITEM(const_tuple_0cc848a09edec54a909e63d3b3cf406f_tuple, 6, const_str_plain_selected); Py_INCREF(const_str_plain_selected);
    PyTuple_SET_ITEM(const_tuple_0cc848a09edec54a909e63d3b3cf406f_tuple, 7, const_str_plain_t_m); Py_INCREF(const_str_plain_t_m);
    PyTuple_SET_ITEM(const_tuple_0cc848a09edec54a909e63d3b3cf406f_tuple, 8, const_str_plain_iter); Py_INCREF(const_str_plain_iter);
    PyTuple_SET_ITEM(const_tuple_0cc848a09edec54a909e63d3b3cf406f_tuple, 9, const_str_plain_devs); Py_INCREF(const_str_plain_devs);
    PyTuple_SET_ITEM(const_tuple_0cc848a09edec54a909e63d3b3cf406f_tuple, 10, const_str_plain_f_list); Py_INCREF(const_str_plain_f_list);
    PyTuple_SET_ITEM(const_tuple_0cc848a09edec54a909e63d3b3cf406f_tuple, 11, const_str_plain_selected_list); Py_INCREF(const_str_plain_selected_list);
    PyTuple_SET_ITEM(const_tuple_0cc848a09edec54a909e63d3b3cf406f_tuple, 12, const_str_plain_list_sn); Py_INCREF(const_str_plain_list_sn);
    const_float_120_0 = UNSTREAM_FLOAT(&constant_bin[ 44314 ]);
    const_str_plain_release = UNSTREAM_STRING(&constant_bin[ 44322 ], 7, 1);
    const_tuple_str_digest_205b60d69f326be8faaf6444c666377f_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_digest_205b60d69f326be8faaf6444c666377f_tuple, 0, const_str_digest_205b60d69f326be8faaf6444c666377f); Py_INCREF(const_str_digest_205b60d69f326be8faaf6444c666377f);
    const_str_plain_lower = UNSTREAM_STRING(&constant_bin[ 33320 ], 5, 1);
    const_str_digest_47e7b4a4005120dc05c79622c84885e4 = UNSTREAM_STRING(&constant_bin[ 44329 ], 28, 0);
    const_list_str_plain_diskpart_list = PyList_New(1);
    PyList_SET_ITEM(const_list_str_plain_diskpart_list, 0, const_str_plain_diskpart); Py_INCREF(const_str_plain_diskpart);
    const_tuple_570cb32dde83d021d6cce9291929ff35_tuple = PyTuple_New(13);
    PyTuple_SET_ITEM(const_tuple_570cb32dde83d021d6cce9291929ff35_tuple, 0, const_str_plain_button); Py_INCREF(const_str_plain_button);
    PyTuple_SET_ITEM(const_tuple_570cb32dde83d021d6cce9291929ff35_tuple, 1, const_str_plain_ui); Py_INCREF(const_str_plain_ui);
    PyTuple_SET_ITEM(const_tuple_570cb32dde83d021d6cce9291929ff35_tuple, 2, const_str_plain_pw_strip); Py_INCREF(const_str_plain_pw_strip);
    PyTuple_SET_ITEM(const_tuple_570cb32dde83d021d6cce9291929ff35_tuple, 3, const_str_plain_index); Py_INCREF(const_str_plain_index);
    PyTuple_SET_ITEM(const_tuple_570cb32dde83d021d6cce9291929ff35_tuple, 4, const_str_plain_e); Py_INCREF(const_str_plain_e);
    PyTuple_SET_ITEM(const_tuple_570cb32dde83d021d6cce9291929ff35_tuple, 5, const_str_plain_pw); Py_INCREF(const_str_plain_pw);
    PyTuple_SET_ITEM(const_tuple_570cb32dde83d021d6cce9291929ff35_tuple, 6, const_str_plain_t2); Py_INCREF(const_str_plain_t2);
    PyTuple_SET_ITEM(const_tuple_570cb32dde83d021d6cce9291929ff35_tuple, 7, const_str_plain_pw_trim); Py_INCREF(const_str_plain_pw_trim);
    PyTuple_SET_ITEM(const_tuple_570cb32dde83d021d6cce9291929ff35_tuple, 8, const_str_plain_drive); Py_INCREF(const_str_plain_drive);
    PyTuple_SET_ITEM(const_tuple_570cb32dde83d021d6cce9291929ff35_tuple, 9, const_str_plain_password_a); Py_INCREF(const_str_plain_password_a);
    PyTuple_SET_ITEM(const_tuple_570cb32dde83d021d6cce9291929ff35_tuple, 10, const_str_plain_t1); Py_INCREF(const_str_plain_t1);
    PyTuple_SET_ITEM(const_tuple_570cb32dde83d021d6cce9291929ff35_tuple, 11, const_str_plain_start_time); Py_INCREF(const_str_plain_start_time);
    PyTuple_SET_ITEM(const_tuple_570cb32dde83d021d6cce9291929ff35_tuple, 12, const_str_plain_msid); Py_INCREF(const_str_plain_msid);
    const_tuple_str_digest_5ab5b3125e01181891d34e3d2dcc2424_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_digest_5ab5b3125e01181891d34e3d2dcc2424_tuple, 0, const_str_digest_5ab5b3125e01181891d34e3d2dcc2424); Py_INCREF(const_str_digest_5ab5b3125e01181891d34e3d2dcc2424);
    const_tuple_str_digest_7275860c79ad48e1a6145b3d274f9582_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_digest_7275860c79ad48e1a6145b3d274f9582_tuple, 0, const_str_digest_7275860c79ad48e1a6145b3d274f9582); Py_INCREF(const_str_digest_7275860c79ad48e1a6145b3d274f9582);
    const_tuple_5fe0558f680f6f38cdc35a599d892ba7_tuple = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 44357 ], 353);
    const_str_digest_17549804b509a5d0faeadc1a5d0256fa = UNSTREAM_STRING(&constant_bin[ 44710 ], 12, 0);
    const_tuple_357884790c9f7258eb39bd654991c7a8_tuple = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 44722 ], 592);
    const_tuple_str_digest_91494e46bf8c9b5ab9f0e29a33f308b8_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_digest_91494e46bf8c9b5ab9f0e29a33f308b8_tuple, 0, const_str_digest_91494e46bf8c9b5ab9f0e29a33f308b8); Py_INCREF(const_str_digest_91494e46bf8c9b5ab9f0e29a33f308b8);
    const_tuple_str_digest_50947fcde5a276009797ee1a9769a94a_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_digest_50947fcde5a276009797ee1a9769a94a_tuple, 0, const_str_digest_50947fcde5a276009797ee1a9769a94a); Py_INCREF(const_str_digest_50947fcde5a276009797ee1a9769a94a);
    const_str_plain_isdir = UNSTREAM_STRING(&constant_bin[ 45314 ], 5, 1);
    const_tuple_str_digest_9c9050705c516c0ecbe3d2260b2ac30e_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_digest_9c9050705c516c0ecbe3d2260b2ac30e_tuple, 0, const_str_digest_9c9050705c516c0ecbe3d2260b2ac30e); Py_INCREF(const_str_digest_9c9050705c516c0ecbe3d2260b2ac30e);
    const_tuple_str_digest_dcd804658f8e9977f257a841a58a2840_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_digest_dcd804658f8e9977f257a841a58a2840_tuple, 0, const_str_digest_dcd804658f8e9977f257a841a58a2840); Py_INCREF(const_str_digest_dcd804658f8e9977f257a841a58a2840);
    const_str_digest_dcce744a7f20ab5ff6ee33d33fd10c9e = UNSTREAM_STRING(&constant_bin[ 45319 ], 11, 0);
    const_tuple_str_digest_a268614b1c426f0356ccda8551576100_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_digest_a268614b1c426f0356ccda8551576100_tuple, 0, const_str_digest_a268614b1c426f0356ccda8551576100); Py_INCREF(const_str_digest_a268614b1c426f0356ccda8551576100);
    const_tuple_str_digest_36979e110b22a61921d06dc3852bf838_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_digest_36979e110b22a61921d06dc3852bf838_tuple, 0, const_str_digest_36979e110b22a61921d06dc3852bf838); Py_INCREF(const_str_digest_36979e110b22a61921d06dc3852bf838);
    const_tuple_list_str_plain_diskpart_list_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_list_str_plain_diskpart_list_tuple, 0, const_list_str_plain_diskpart_list); Py_INCREF(const_list_str_plain_diskpart_list);
    const_str_plain_acquire = UNSTREAM_STRING(&constant_bin[ 45330 ], 7, 1);

    constants_created = true;
}

/* Function to verify module private constants for non-corruption. */
#ifndef __NUITKA_NO_ASSERT__
void checkModuleConstants_runop(void) {
    // The module may not have been used at all, then ignore this.
    if (constants_created == false) return;


}
#endif

// The module code objects.
static PyCodeObject *codeobj_0fb064299bb8fa1fd3c1c2d5b1d2573e;
static PyCodeObject *codeobj_202dde20e662fcfb2393dae265ecfc13;
static PyCodeObject *codeobj_1c5dbddc2d72f1eff832ed4eca1b5899;
static PyCodeObject *codeobj_705013ccf0aff03db3579727c9abd5af;
static PyCodeObject *codeobj_1d9f736b66df80facf100f38971740c7;
static PyCodeObject *codeobj_94b94040b10849e982615a25a2e7e439;
static PyCodeObject *codeobj_632cb48e10126135028b190adf4cdebf;
static PyCodeObject *codeobj_3743f1e053a48b225c6d8ce44010ee9f;
static PyCodeObject *codeobj_653a72570e29d9caae1a16892ba5534f;
static PyCodeObject *codeobj_db6589d790491bc2804e02d20d69c89f;
static PyCodeObject *codeobj_6b526a20a2c31b45221ec586b02b4694;
static PyCodeObject *codeobj_120e6cbb634311d08ade47582d57e262;
static PyCodeObject *codeobj_9552b6460145c0ce514f3e6d66039fe2;
static PyCodeObject *codeobj_513ef25aeb41ef62c916ffbbda8f298b;

static void createModuleCodeObjects(void) {
    module_filename_obj = MAKE_RELATIVE_PATH(const_str_digest_9a0312388657bf34e3beb19acd7cbdce);
    codeobj_0fb064299bb8fa1fd3c1c2d5b1d2573e = MAKE_CODEOBJECT(module_filename_obj, 1, CO_NOFREE, const_str_digest_14342d9ae2ee8caefc0a4cde66b5a769, const_tuple_empty, 0, 0, 0);
    codeobj_202dde20e662fcfb2393dae265ecfc13 = MAKE_CODEOBJECT(module_filename_obj, 25, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_define_lock_t, const_tuple_str_plain_i_tuple, 0, 0, 0);
    codeobj_1c5dbddc2d72f1eff832ed4eca1b5899 = MAKE_CODEOBJECT(module_filename_obj, 37, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_postlock, const_tuple_str_plain_dev_idx_str_plain_e_tuple, 1, 0, 0);
    codeobj_705013ccf0aff03db3579727c9abd5af = MAKE_CODEOBJECT(module_filename_obj, 33, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_prelock, const_tuple_str_plain_dev_idx_tuple, 1, 0, 0);
    codeobj_1d9f736b66df80facf100f38971740c7 = MAKE_CODEOBJECT(module_filename_obj, 356, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_run_changePW, const_tuple_335eb93f25e087312e63a0991b8a6d9f_tuple, 2, 0, 0);
    codeobj_94b94040b10849e982615a25a2e7e439 = MAKE_CODEOBJECT(module_filename_obj, 277, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_run_pbaWrite, const_tuple_3485e60fb8e2b2fec05535a855d848ca_tuple, 2, 0, 0);
    codeobj_632cb48e10126135028b190adf4cdebf = MAKE_CODEOBJECT(module_filename_obj, 675, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_run_removeUser, const_tuple_570cb32dde83d021d6cce9291929ff35_tuple, 2, 0, 0);
    codeobj_3743f1e053a48b225c6d8ce44010ee9f = MAKE_CODEOBJECT(module_filename_obj, 942, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_run_revertErase, const_tuple_f1c042aa80a8e7beb3359ec08150a2fc_tuple, 2, 0, 0);
    codeobj_653a72570e29d9caae1a16892ba5534f = MAKE_CODEOBJECT(module_filename_obj, 874, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_run_revertKeep, const_tuple_0cc848a09edec54a909e63d3b3cf406f_tuple, 2, 0, 0);
    codeobj_db6589d790491bc2804e02d20d69c89f = MAKE_CODEOBJECT(module_filename_obj, 1074, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_run_revertPSID, const_tuple_6899522036c8f8abd5800c52be1813b5_tuple, 2, 0, 0);
    codeobj_6b526a20a2c31b45221ec586b02b4694 = MAKE_CODEOBJECT(module_filename_obj, 45, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_run_setupFull, const_tuple_357884790c9f7258eb39bd654991c7a8_tuple, 2, 0, 0);
    codeobj_120e6cbb634311d08ade47582d57e262 = MAKE_CODEOBJECT(module_filename_obj, 449, CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE, const_str_plain_run_setupUSB, const_tuple_486897ad0c895a4bf383b7255ba9d16c_tuple, 2, 0, 0);
    codeobj_9552b6460145c0ce514f3e6d66039fe2 = MAKE_CODEOBJECT(module_filename_obj, 611, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_run_setupUser, const_tuple_935293943d70513220d667ac4b431936_tuple, 2, 0, 0);
    codeobj_513ef25aeb41ef62c916ffbbda8f298b = MAKE_CODEOBJECT(module_filename_obj, 740, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_run_unlockPBA, const_tuple_5fe0558f680f6f38cdc35a599d892ba7_tuple, 5, 0, 0);
}

// The module function declarations.
static PyObject *MAKE_FUNCTION_runop$$$function_10_run_unlockPBA();


static PyObject *MAKE_FUNCTION_runop$$$function_11_run_revertKeep();


static PyObject *MAKE_FUNCTION_runop$$$function_12_run_revertErase();


static PyObject *MAKE_FUNCTION_runop$$$function_13_run_revertPSID();


static PyObject *MAKE_FUNCTION_runop$$$function_1_define_lock_t();


static PyObject *MAKE_FUNCTION_runop$$$function_2_prelock();


static PyObject *MAKE_FUNCTION_runop$$$function_3_postlock();


static PyObject *MAKE_FUNCTION_runop$$$function_4_run_setupFull();


static PyObject *MAKE_FUNCTION_runop$$$function_5_run_pbaWrite();


static PyObject *MAKE_FUNCTION_runop$$$function_6_run_changePW();


static PyObject *MAKE_FUNCTION_runop$$$function_7_run_setupUSB();


static PyObject *MAKE_FUNCTION_runop$$$function_8_run_setupUser();


static PyObject *MAKE_FUNCTION_runop$$$function_9_run_removeUser();


// The module function definitions.
static PyObject *impl_runop$$$function_1_define_lock_t(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *var_i = NULL;
    PyObject *tmp_for_loop_1__for_iterator = NULL;
    PyObject *tmp_for_loop_1__iter_value = NULL;
    struct Nuitka_FrameObject *frame_202dde20e662fcfb2393dae265ecfc13;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    bool tmp_result;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    static struct Nuitka_FrameObject *cache_frame_202dde20e662fcfb2393dae265ecfc13 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;

    // Actual function body.
    {
        PyObject *tmp_assign_source_1;
        tmp_assign_source_1 = Py_True;
        UPDATE_STRING_DICT0(moduledict_runop, (Nuitka_StringObject *)const_str_plain_sync_thread, tmp_assign_source_1);
    }
    {
        PyObject *tmp_assign_source_2;
        tmp_assign_source_2 = LIST_COPY(const_list_9135c3c0d42c1e9aaba6c36b4164cc20_list);
        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_lock_t, tmp_assign_source_2);
    }
    {
        PyObject *tmp_assign_source_3;
        PyObject *tmp_iter_arg_1;
        PyObject *tmp_range_arg_1;
        tmp_range_arg_1 = const_int_pos_256;
        tmp_iter_arg_1 = BUILTIN_RANGE(tmp_range_arg_1);
        assert(!(tmp_iter_arg_1 == NULL));
        tmp_assign_source_3 = MAKE_ITERATOR(tmp_iter_arg_1);
        Py_DECREF(tmp_iter_arg_1);
        assert(!(tmp_assign_source_3 == NULL));
        assert(tmp_for_loop_1__for_iterator == NULL);
        tmp_for_loop_1__for_iterator = tmp_assign_source_3;
    }
    // Tried code:
    MAKE_OR_REUSE_FRAME(cache_frame_202dde20e662fcfb2393dae265ecfc13, codeobj_202dde20e662fcfb2393dae265ecfc13, module_runop, sizeof(void *));
    frame_202dde20e662fcfb2393dae265ecfc13 = cache_frame_202dde20e662fcfb2393dae265ecfc13;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_202dde20e662fcfb2393dae265ecfc13);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_202dde20e662fcfb2393dae265ecfc13) == 2); // Frame stack

    // Framed code:
    // Tried code:
    loop_start_1:;
    {
        PyObject *tmp_next_source_1;
        PyObject *tmp_assign_source_4;
        CHECK_OBJECT(tmp_for_loop_1__for_iterator);
        tmp_next_source_1 = tmp_for_loop_1__for_iterator;
        tmp_assign_source_4 = ITERATOR_NEXT(tmp_next_source_1);
        if (tmp_assign_source_4 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_1;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "o";
                exception_lineno = 30;
                goto try_except_handler_2;
            }
        }

        {
            PyObject *old = tmp_for_loop_1__iter_value;
            tmp_for_loop_1__iter_value = tmp_assign_source_4;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_5;
        CHECK_OBJECT(tmp_for_loop_1__iter_value);
        tmp_assign_source_5 = tmp_for_loop_1__iter_value;
        {
            PyObject *old = var_i;
            var_i = tmp_assign_source_5;
            Py_INCREF(var_i);
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_ass_subvalue_1;
        PyObject *tmp_called_instance_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_ass_subscribed_1;
        PyObject *tmp_mvar_value_2;
        PyObject *tmp_ass_subscript_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_threading);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_threading);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 661 ], 38, 0);
            exception_tb = NULL;

            exception_lineno = 31;
            type_description_1 = "o";
            goto try_except_handler_2;
        }

        tmp_called_instance_1 = tmp_mvar_value_1;
        frame_202dde20e662fcfb2393dae265ecfc13->m_frame.f_lineno = 31;
        tmp_ass_subvalue_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_1, const_str_plain_Lock);
        if (tmp_ass_subvalue_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 31;
            type_description_1 = "o";
            goto try_except_handler_2;
        }
        tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_lock_t);

        if (unlikely(tmp_mvar_value_2 == NULL)) {
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_lock_t);
        }

        if (tmp_mvar_value_2 == NULL) {
            Py_DECREF(tmp_ass_subvalue_1);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 4947 ], 35, 0);
            exception_tb = NULL;

            exception_lineno = 31;
            type_description_1 = "o";
            goto try_except_handler_2;
        }

        tmp_ass_subscribed_1 = tmp_mvar_value_2;
        CHECK_OBJECT(var_i);
        tmp_ass_subscript_1 = var_i;
        tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_1, tmp_ass_subscript_1, tmp_ass_subvalue_1);
        Py_DECREF(tmp_ass_subvalue_1);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 31;
            type_description_1 = "o";
            goto try_except_handler_2;
        }
    }
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 30;
        type_description_1 = "o";
        goto try_except_handler_2;
    }
    goto loop_start_1;
    loop_end_1:;
    goto try_end_1;
    // Exception handler code:
    try_except_handler_2:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_1__iter_value);
    tmp_for_loop_1__iter_value = NULL;

    CHECK_OBJECT((PyObject *)tmp_for_loop_1__for_iterator);
    Py_DECREF(tmp_for_loop_1__for_iterator);
    tmp_for_loop_1__for_iterator = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto frame_exception_exit_1;
    // End of try:
    try_end_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_202dde20e662fcfb2393dae265ecfc13);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_202dde20e662fcfb2393dae265ecfc13);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_202dde20e662fcfb2393dae265ecfc13, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_202dde20e662fcfb2393dae265ecfc13->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_202dde20e662fcfb2393dae265ecfc13, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_202dde20e662fcfb2393dae265ecfc13,
        type_description_1,
        var_i
    );


    // Release cached frame.
    if (frame_202dde20e662fcfb2393dae265ecfc13 == cache_frame_202dde20e662fcfb2393dae265ecfc13) {
        Py_DECREF(frame_202dde20e662fcfb2393dae265ecfc13);
    }
    cache_frame_202dde20e662fcfb2393dae265ecfc13 = NULL;

    assertFrameObject(frame_202dde20e662fcfb2393dae265ecfc13);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    Py_XDECREF(tmp_for_loop_1__iter_value);
    tmp_for_loop_1__iter_value = NULL;

    CHECK_OBJECT((PyObject *)tmp_for_loop_1__for_iterator);
    Py_DECREF(tmp_for_loop_1__for_iterator);
    tmp_for_loop_1__for_iterator = NULL;

    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(runop$$$function_1_define_lock_t);
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    Py_XDECREF(var_i);
    var_i = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_2 = exception_type;
    exception_keeper_value_2 = exception_value;
    exception_keeper_tb_2 = exception_tb;
    exception_keeper_lineno_2 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_i);
    var_i = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_2;
    exception_value = exception_keeper_value_2;
    exception_tb = exception_keeper_tb_2;
    exception_lineno = exception_keeper_lineno_2;

    goto function_exception_exit;
    // End of try:

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(runop$$$function_1_define_lock_t);
    return NULL;

function_exception_exit:
    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.


   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_runop$$$function_2_prelock(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_dev_idx = python_pars[0];
    struct Nuitka_FrameObject *frame_705013ccf0aff03db3579727c9abd5af;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    static struct Nuitka_FrameObject *cache_frame_705013ccf0aff03db3579727c9abd5af = NULL;
    PyObject *tmp_return_value = NULL;

    // Actual function body.
    MAKE_OR_REUSE_FRAME(cache_frame_705013ccf0aff03db3579727c9abd5af, codeobj_705013ccf0aff03db3579727c9abd5af, module_runop, sizeof(void *));
    frame_705013ccf0aff03db3579727c9abd5af = cache_frame_705013ccf0aff03db3579727c9abd5af;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_705013ccf0aff03db3579727c9abd5af);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_705013ccf0aff03db3579727c9abd5af) == 2); // Frame stack

    // Framed code:
    {
        nuitka_bool tmp_condition_result_1;
        PyObject *tmp_compexpr_left_1;
        PyObject *tmp_compexpr_right_1;
        PyObject *tmp_mvar_value_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_sync_thread);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_sync_thread);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 4982 ], 40, 0);
            exception_tb = NULL;

            exception_lineno = 34;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }

        tmp_compexpr_left_1 = tmp_mvar_value_1;
        tmp_compexpr_right_1 = Py_True;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_1, tmp_compexpr_right_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 34;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        {
            PyObject *tmp_called_instance_1;
            PyObject *tmp_subscribed_name_1;
            PyObject *tmp_mvar_value_2;
            PyObject *tmp_subscript_name_1;
            PyObject *tmp_call_result_1;
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_lock_t);

            if (unlikely(tmp_mvar_value_2 == NULL)) {
                tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_lock_t);
            }

            if (tmp_mvar_value_2 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 4947 ], 35, 0);
                exception_tb = NULL;

                exception_lineno = 35;
                type_description_1 = "o";
                goto frame_exception_exit_1;
            }

            tmp_subscribed_name_1 = tmp_mvar_value_2;
            CHECK_OBJECT(par_dev_idx);
            tmp_subscript_name_1 = par_dev_idx;
            tmp_called_instance_1 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_1, tmp_subscript_name_1);
            if (tmp_called_instance_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 35;
                type_description_1 = "o";
                goto frame_exception_exit_1;
            }
            frame_705013ccf0aff03db3579727c9abd5af->m_frame.f_lineno = 35;
            tmp_call_result_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_1, const_str_plain_acquire);
            Py_DECREF(tmp_called_instance_1);
            if (tmp_call_result_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 35;
                type_description_1 = "o";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_1);
        }
        branch_no_1:;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_705013ccf0aff03db3579727c9abd5af);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_705013ccf0aff03db3579727c9abd5af);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_705013ccf0aff03db3579727c9abd5af, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_705013ccf0aff03db3579727c9abd5af->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_705013ccf0aff03db3579727c9abd5af, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_705013ccf0aff03db3579727c9abd5af,
        type_description_1,
        par_dev_idx
    );


    // Release cached frame.
    if (frame_705013ccf0aff03db3579727c9abd5af == cache_frame_705013ccf0aff03db3579727c9abd5af) {
        Py_DECREF(frame_705013ccf0aff03db3579727c9abd5af);
    }
    cache_frame_705013ccf0aff03db3579727c9abd5af = NULL;

    assertFrameObject(frame_705013ccf0aff03db3579727c9abd5af);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto function_return_exit;

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(runop$$$function_2_prelock);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_dev_idx);
    Py_DECREF(par_dev_idx);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_dev_idx);
    Py_DECREF(par_dev_idx);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_runop$$$function_3_postlock(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_dev_idx = python_pars[0];
    PyObject *var_e = NULL;
    struct Nuitka_FrameObject *frame_1c5dbddc2d72f1eff832ed4eca1b5899;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    PyObject *tmp_print_value;
    bool tmp_result;
    static struct Nuitka_FrameObject *cache_frame_1c5dbddc2d72f1eff832ed4eca1b5899 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;

    // Actual function body.
    // Tried code:
    MAKE_OR_REUSE_FRAME(cache_frame_1c5dbddc2d72f1eff832ed4eca1b5899, codeobj_1c5dbddc2d72f1eff832ed4eca1b5899, module_runop, sizeof(void *)+sizeof(void *));
    frame_1c5dbddc2d72f1eff832ed4eca1b5899 = cache_frame_1c5dbddc2d72f1eff832ed4eca1b5899;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_1c5dbddc2d72f1eff832ed4eca1b5899);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_1c5dbddc2d72f1eff832ed4eca1b5899) == 2); // Frame stack

    // Framed code:
    {
        nuitka_bool tmp_condition_result_1;
        PyObject *tmp_compexpr_left_1;
        PyObject *tmp_compexpr_right_1;
        PyObject *tmp_mvar_value_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_sync_thread);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_sync_thread);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 4982 ], 40, 0);
            exception_tb = NULL;

            exception_lineno = 38;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }

        tmp_compexpr_left_1 = tmp_mvar_value_1;
        tmp_compexpr_right_1 = Py_True;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_1, tmp_compexpr_right_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 38;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        // Tried code:
        {
            nuitka_bool tmp_condition_result_2;
            PyObject *tmp_source_name_1;
            PyObject *tmp_subscribed_name_1;
            PyObject *tmp_mvar_value_2;
            PyObject *tmp_subscript_name_1;
            PyObject *tmp_attribute_value_1;
            int tmp_truth_name_1;
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_lock_t);

            if (unlikely(tmp_mvar_value_2 == NULL)) {
                tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_lock_t);
            }

            if (tmp_mvar_value_2 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 4947 ], 35, 0);
                exception_tb = NULL;

                exception_lineno = 40;
                type_description_1 = "oo";
                goto try_except_handler_2;
            }

            tmp_subscribed_name_1 = tmp_mvar_value_2;
            CHECK_OBJECT(par_dev_idx);
            tmp_subscript_name_1 = par_dev_idx;
            tmp_source_name_1 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_1, tmp_subscript_name_1);
            if (tmp_source_name_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 40;
                type_description_1 = "oo";
                goto try_except_handler_2;
            }
            tmp_attribute_value_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_locked);
            Py_DECREF(tmp_source_name_1);
            if (tmp_attribute_value_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 40;
                type_description_1 = "oo";
                goto try_except_handler_2;
            }
            tmp_truth_name_1 = CHECK_IF_TRUE(tmp_attribute_value_1);
            if (tmp_truth_name_1 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_attribute_value_1);

                exception_lineno = 40;
                type_description_1 = "oo";
                goto try_except_handler_2;
            }
            tmp_condition_result_2 = tmp_truth_name_1 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            Py_DECREF(tmp_attribute_value_1);
            if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
                goto branch_yes_2;
            } else {
                goto branch_no_2;
            }
            branch_yes_2:;
            {
                PyObject *tmp_called_instance_1;
                PyObject *tmp_subscribed_name_2;
                PyObject *tmp_mvar_value_3;
                PyObject *tmp_subscript_name_2;
                PyObject *tmp_call_result_1;
                tmp_mvar_value_3 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_lock_t);

                if (unlikely(tmp_mvar_value_3 == NULL)) {
                    tmp_mvar_value_3 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_lock_t);
                }

                if (tmp_mvar_value_3 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 4947 ], 35, 0);
                    exception_tb = NULL;

                    exception_lineno = 41;
                    type_description_1 = "oo";
                    goto try_except_handler_2;
                }

                tmp_subscribed_name_2 = tmp_mvar_value_3;
                CHECK_OBJECT(par_dev_idx);
                tmp_subscript_name_2 = par_dev_idx;
                tmp_called_instance_1 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_2, tmp_subscript_name_2);
                if (tmp_called_instance_1 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 41;
                    type_description_1 = "oo";
                    goto try_except_handler_2;
                }
                frame_1c5dbddc2d72f1eff832ed4eca1b5899->m_frame.f_lineno = 41;
                tmp_call_result_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_1, const_str_plain_release);
                Py_DECREF(tmp_called_instance_1);
                if (tmp_call_result_1 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 41;
                    type_description_1 = "oo";
                    goto try_except_handler_2;
                }
                Py_DECREF(tmp_call_result_1);
            }
            branch_no_2:;
        }
        goto try_end_1;
        // Exception handler code:
        try_except_handler_2:;
        exception_keeper_type_1 = exception_type;
        exception_keeper_value_1 = exception_value;
        exception_keeper_tb_1 = exception_tb;
        exception_keeper_lineno_1 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Preserve existing published exception.
        PRESERVE_FRAME_EXCEPTION(frame_1c5dbddc2d72f1eff832ed4eca1b5899);
        if (exception_keeper_tb_1 == NULL) {
            exception_keeper_tb_1 = MAKE_TRACEBACK(frame_1c5dbddc2d72f1eff832ed4eca1b5899, exception_keeper_lineno_1);
        } else if (exception_keeper_lineno_1 != 0) {
            exception_keeper_tb_1 = ADD_TRACEBACK(exception_keeper_tb_1, frame_1c5dbddc2d72f1eff832ed4eca1b5899, exception_keeper_lineno_1);
        }

        NORMALIZE_EXCEPTION(&exception_keeper_type_1, &exception_keeper_value_1, &exception_keeper_tb_1);
        PUBLISH_EXCEPTION(&exception_keeper_type_1, &exception_keeper_value_1, &exception_keeper_tb_1);
        {
            nuitka_bool tmp_condition_result_3;
            PyObject *tmp_compexpr_left_2;
            PyObject *tmp_compexpr_right_2;
            tmp_compexpr_left_2 = EXC_TYPE(PyThreadState_GET());
            tmp_compexpr_right_2 = PyExc_Exception;
            tmp_res = EXCEPTION_MATCH_BOOL(tmp_compexpr_left_2, tmp_compexpr_right_2);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 42;
                type_description_1 = "oo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_3 == NUITKA_BOOL_TRUE) {
                goto branch_yes_3;
            } else {
                goto branch_no_3;
            }
            branch_yes_3:;
            {
                PyObject *tmp_assign_source_1;
                tmp_assign_source_1 = EXC_VALUE(PyThreadState_GET());
                assert(var_e == NULL);
                Py_INCREF(tmp_assign_source_1);
                var_e = tmp_assign_source_1;
            }
            {
                PyObject *tmp_type_arg_1;
                CHECK_OBJECT(var_e);
                tmp_type_arg_1 = var_e;
                tmp_print_value = BUILTIN_TYPE1(tmp_type_arg_1);
                assert(!(tmp_print_value == NULL));
                tmp_result = PRINT_ITEM(tmp_print_value);
                Py_DECREF(tmp_print_value);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 43;
                    type_description_1 = "oo";
                    goto frame_exception_exit_1;
                }
            }
            if (PRINT_NEW_LINE() == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 43;
                type_description_1 = "oo";
                goto frame_exception_exit_1;
            }
            goto branch_end_3;
            branch_no_3:;
            tmp_result = RERAISE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            if (unlikely(tmp_result == false)) {
                exception_lineno = 39;
            }

            if (exception_tb && exception_tb->tb_frame == &frame_1c5dbddc2d72f1eff832ed4eca1b5899->m_frame) frame_1c5dbddc2d72f1eff832ed4eca1b5899->m_frame.f_lineno = exception_tb->tb_lineno;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
            branch_end_3:;
        }
        goto try_end_1;
        // exception handler codes exits in all cases
        NUITKA_CANNOT_GET_HERE(runop$$$function_3_postlock);
        return NULL;
        // End of try:
        try_end_1:;
        branch_no_1:;
    }

#if 1
    RESTORE_FRAME_EXCEPTION(frame_1c5dbddc2d72f1eff832ed4eca1b5899);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_exception_exit_1:;

#if 1
    RESTORE_FRAME_EXCEPTION(frame_1c5dbddc2d72f1eff832ed4eca1b5899);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_1c5dbddc2d72f1eff832ed4eca1b5899, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_1c5dbddc2d72f1eff832ed4eca1b5899->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_1c5dbddc2d72f1eff832ed4eca1b5899, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_1c5dbddc2d72f1eff832ed4eca1b5899,
        type_description_1,
        par_dev_idx,
        var_e
    );


    // Release cached frame.
    if (frame_1c5dbddc2d72f1eff832ed4eca1b5899 == cache_frame_1c5dbddc2d72f1eff832ed4eca1b5899) {
        Py_DECREF(frame_1c5dbddc2d72f1eff832ed4eca1b5899);
    }
    cache_frame_1c5dbddc2d72f1eff832ed4eca1b5899 = NULL;

    assertFrameObject(frame_1c5dbddc2d72f1eff832ed4eca1b5899);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(runop$$$function_3_postlock);
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    Py_XDECREF(var_e);
    var_e = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_2 = exception_type;
    exception_keeper_value_2 = exception_value;
    exception_keeper_tb_2 = exception_tb;
    exception_keeper_lineno_2 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_e);
    var_e = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_2;
    exception_value = exception_keeper_value_2;
    exception_tb = exception_keeper_tb_2;
    exception_lineno = exception_keeper_lineno_2;

    goto function_exception_exit;
    // End of try:

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(runop$$$function_3_postlock);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_dev_idx);
    Py_DECREF(par_dev_idx);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_dev_idx);
    Py_DECREF(par_dev_idx);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_runop$$$function_4_run_setupFull(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_button = python_pars[0];
    PyObject *par_ui = python_pars[1];
    PyObject *var_selected = NULL;
    PyObject *var_list_v = NULL;
    PyObject *var_list_u = NULL;
    PyObject *var_dir_fl = NULL;
    PyObject *var_existingfiles = NULL;
    PyObject *var_drive = NULL;
    PyObject *var_usb_dev = NULL;
    PyObject *var_selected_list = NULL;
    PyObject *var_pw_trim_confirm = NULL;
    PyObject *var_message = NULL;
    PyObject *var_txt = NULL;
    PyObject *var_index = NULL;
    PyObject *var_pw = NULL;
    PyObject *var_t_m = NULL;
    PyObject *var_rgx = NULL;
    PyObject *var_res = NULL;
    PyObject *var_usb_check = NULL;
    PyObject *var_usb_dialog = NULL;
    PyObject *var_message2 = NULL;
    PyObject *var_tp = NULL;
    PyObject *var_m1 = NULL;
    PyObject *var_m2 = NULL;
    PyObject *var_u = NULL;
    PyObject *var_count = NULL;
    PyObject *var_type_a = NULL;
    PyObject *var_res2 = NULL;
    PyObject *var_s = NULL;
    PyObject *var_res1 = NULL;
    PyObject *var_found = NULL;
    PyObject *var_index2 = NULL;
    PyObject *var_preserved_files = NULL;
    PyObject *var_mod = NULL;
    nuitka_bool var_proceed = NUITKA_BOOL_UNASSIGNED;
    PyObject *var_pw_confirm = NULL;
    PyObject *var_entry = NULL;
    PyObject *var_d = NULL;
    PyObject *var_r2 = NULL;
    PyObject *var_f = NULL;
    PyObject *var_j = NULL;
    PyObject *var_m = NULL;
    PyObject *var_pw_trim = NULL;
    PyObject *var_iter = NULL;
    PyObject *var_msg_usb = NULL;
    PyObject *var_p = NULL;
    PyObject *var_length = NULL;
    PyObject *var_usb_final = NULL;
    PyObject *var_output = NULL;
    PyObject *var_txt1 = NULL;
    PyObject *var_txt2 = NULL;
    PyObject *var_txt3 = NULL;
    PyObject *tmp_for_loop_1__for_iterator = NULL;
    PyObject *tmp_for_loop_1__iter_value = NULL;
    PyObject *tmp_for_loop_2__for_iterator = NULL;
    PyObject *tmp_for_loop_2__iter_value = NULL;
    PyObject *tmp_for_loop_3__for_iterator = NULL;
    PyObject *tmp_for_loop_3__iter_value = NULL;
    PyObject *tmp_for_loop_4__for_iterator = NULL;
    PyObject *tmp_for_loop_4__iter_value = NULL;
    PyObject *tmp_for_loop_5__for_iterator = NULL;
    PyObject *tmp_for_loop_5__iter_value = NULL;
    PyObject *tmp_for_loop_6__for_iterator = NULL;
    PyObject *tmp_for_loop_6__iter_value = NULL;
    PyObject *tmp_list_contraction_1__$0 = NULL;
    PyObject *tmp_list_contraction_1__contraction_result = NULL;
    PyObject *tmp_list_contraction_1__iter_value_0 = NULL;
    struct Nuitka_FrameObject *frame_6b526a20a2c31b45221ec586b02b4694;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    PyObject *tmp_return_value = NULL;
    bool tmp_result;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;
    PyObject *exception_keeper_type_3;
    PyObject *exception_keeper_value_3;
    PyTracebackObject *exception_keeper_tb_3;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_3;
    PyObject *exception_keeper_type_4;
    PyObject *exception_keeper_value_4;
    PyTracebackObject *exception_keeper_tb_4;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_4;
    PyObject *exception_keeper_type_5;
    PyObject *exception_keeper_value_5;
    PyTracebackObject *exception_keeper_tb_5;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_5;
    PyObject *exception_keeper_type_6;
    PyObject *exception_keeper_value_6;
    PyTracebackObject *exception_keeper_tb_6;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_6;
    PyObject *exception_keeper_type_7;
    PyObject *exception_keeper_value_7;
    PyTracebackObject *exception_keeper_tb_7;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_7;
    PyObject *exception_keeper_type_8;
    PyObject *exception_keeper_value_8;
    PyTracebackObject *exception_keeper_tb_8;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_8;
    static struct Nuitka_FrameObject *cache_frame_6b526a20a2c31b45221ec586b02b4694 = NULL;
    PyObject *exception_keeper_type_9;
    PyObject *exception_keeper_value_9;
    PyTracebackObject *exception_keeper_tb_9;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_9;

    // Actual function body.
    // Tried code:
    MAKE_OR_REUSE_FRAME(cache_frame_6b526a20a2c31b45221ec586b02b4694, codeobj_6b526a20a2c31b45221ec586b02b4694, module_runop, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(nuitka_bool)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
    frame_6b526a20a2c31b45221ec586b02b4694 = cache_frame_6b526a20a2c31b45221ec586b02b4694;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_6b526a20a2c31b45221ec586b02b4694);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_6b526a20a2c31b45221ec586b02b4694) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_instance_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_call_result_1;
        PyObject *tmp_args_element_name_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_verify);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_verify);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 236 ], 35, 0);
            exception_tb = NULL;

            exception_lineno = 46;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_1 = tmp_mvar_value_1;
        CHECK_OBJECT(par_ui);
        tmp_args_element_name_1 = par_ui;
        frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 46;
        {
            PyObject *call_args[] = {tmp_args_element_name_1};
            tmp_call_result_1 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_1, const_str_plain_licCheck, call_args);
        }

        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 46;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_1);
    }
    {
        nuitka_bool tmp_condition_result_1;
        PyObject *tmp_called_instance_2;
        PyObject *tmp_source_name_1;
        PyObject *tmp_call_result_2;
        int tmp_truth_name_1;
        CHECK_OBJECT(par_ui);
        tmp_source_name_1 = par_ui;
        tmp_called_instance_2 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_toggleSingle_radio);
        if (tmp_called_instance_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 48;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 48;
        tmp_call_result_2 = CALL_METHOD_NO_ARGS(tmp_called_instance_2, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_2);
        if (tmp_call_result_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 48;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_1 = CHECK_IF_TRUE(tmp_call_result_2);
        if (tmp_truth_name_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_2);

            exception_lineno = 48;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_1 = tmp_truth_name_1 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_2);
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        {
            PyObject *tmp_assign_source_1;
            PyObject *tmp_called_instance_3;
            PyObject *tmp_source_name_2;
            CHECK_OBJECT(par_ui);
            tmp_source_name_2 = par_ui;
            tmp_called_instance_3 = LOOKUP_ATTRIBUTE(tmp_source_name_2, const_str_plain_dev_select);
            if (tmp_called_instance_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 49;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 49;
            tmp_assign_source_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_3, const_str_plain_get_active);
            Py_DECREF(tmp_called_instance_3);
            if (tmp_assign_source_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 49;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(var_index == NULL);
            var_index = tmp_assign_source_1;
        }
        {
            PyObject *tmp_assign_source_2;
            PyObject *tmp_list_element_1;
            CHECK_OBJECT(var_index);
            tmp_list_element_1 = var_index;
            tmp_assign_source_2 = PyList_New(1);
            Py_INCREF(tmp_list_element_1);
            PyList_SET_ITEM(tmp_assign_source_2, 0, tmp_list_element_1);
            assert(var_selected_list == NULL);
            var_selected_list = tmp_assign_source_2;
        }
        goto branch_end_1;
        branch_no_1:;
        {
            PyObject *tmp_assign_source_3;
            tmp_assign_source_3 = const_int_0;
            assert(var_index == NULL);
            Py_INCREF(tmp_assign_source_3);
            var_index = tmp_assign_source_3;
        }
        {
            PyObject *tmp_assign_source_4;
            tmp_assign_source_4 = PyList_New(0);
            assert(var_selected_list == NULL);
            var_selected_list = tmp_assign_source_4;
        }
        {
            PyObject *tmp_assign_source_5;
            PyObject *tmp_called_instance_4;
            PyObject *tmp_source_name_3;
            CHECK_OBJECT(par_ui);
            tmp_source_name_3 = par_ui;
            tmp_called_instance_4 = LOOKUP_ATTRIBUTE(tmp_source_name_3, const_str_plain_liststore);
            if (tmp_called_instance_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 54;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 54;
            tmp_assign_source_5 = CALL_METHOD_NO_ARGS(tmp_called_instance_4, const_str_plain_get_iter_first);
            Py_DECREF(tmp_called_instance_4);
            if (tmp_assign_source_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 54;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(var_iter == NULL);
            var_iter = tmp_assign_source_5;
        }
        loop_start_1:;
        {
            nuitka_bool tmp_condition_result_2;
            PyObject *tmp_operand_name_1;
            PyObject *tmp_compexpr_left_1;
            PyObject *tmp_compexpr_right_1;
            CHECK_OBJECT(var_iter);
            tmp_compexpr_left_1 = var_iter;
            tmp_compexpr_right_1 = Py_None;
            tmp_operand_name_1 = RICH_COMPARE_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_1, tmp_compexpr_right_1);
            if (tmp_operand_name_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 56;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_1);
            Py_DECREF(tmp_operand_name_1);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 56;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_2 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
                goto branch_yes_2;
            } else {
                goto branch_no_2;
            }
            branch_yes_2:;
            goto loop_end_1;
            branch_no_2:;
        }
        {
            PyObject *tmp_assign_source_6;
            PyObject *tmp_called_instance_5;
            PyObject *tmp_source_name_4;
            PyObject *tmp_args_element_name_2;
            PyObject *tmp_args_element_name_3;
            CHECK_OBJECT(par_ui);
            tmp_source_name_4 = par_ui;
            tmp_called_instance_5 = LOOKUP_ATTRIBUTE(tmp_source_name_4, const_str_plain_liststore);
            if (tmp_called_instance_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 57;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            CHECK_OBJECT(var_iter);
            tmp_args_element_name_2 = var_iter;
            tmp_args_element_name_3 = const_int_0;
            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 57;
            {
                PyObject *call_args[] = {tmp_args_element_name_2, tmp_args_element_name_3};
                tmp_assign_source_6 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_5, const_str_plain_get_value, call_args);
            }

            Py_DECREF(tmp_called_instance_5);
            if (tmp_assign_source_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 57;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            {
                PyObject *old = var_selected;
                var_selected = tmp_assign_source_6;
                Py_XDECREF(old);
            }

        }
        {
            nuitka_bool tmp_condition_result_3;
            int tmp_truth_name_2;
            CHECK_OBJECT(var_selected);
            tmp_truth_name_2 = CHECK_IF_TRUE(var_selected);
            if (tmp_truth_name_2 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 58;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_3 = tmp_truth_name_2 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_3 == NUITKA_BOOL_TRUE) {
                goto branch_yes_3;
            } else {
                goto branch_no_3;
            }
            branch_yes_3:;
            {
                PyObject *tmp_called_instance_6;
                PyObject *tmp_call_result_3;
                PyObject *tmp_args_element_name_4;
                CHECK_OBJECT(var_selected_list);
                tmp_called_instance_6 = var_selected_list;
                CHECK_OBJECT(var_index);
                tmp_args_element_name_4 = var_index;
                frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 59;
                {
                    PyObject *call_args[] = {tmp_args_element_name_4};
                    tmp_call_result_3 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_6, const_str_plain_append, call_args);
                }

                if (tmp_call_result_3 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 59;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_3);
            }
            branch_no_3:;
        }
        {
            PyObject *tmp_assign_source_7;
            PyObject *tmp_called_instance_7;
            PyObject *tmp_source_name_5;
            PyObject *tmp_args_element_name_5;
            CHECK_OBJECT(par_ui);
            tmp_source_name_5 = par_ui;
            tmp_called_instance_7 = LOOKUP_ATTRIBUTE(tmp_source_name_5, const_str_plain_liststore);
            if (tmp_called_instance_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 60;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            CHECK_OBJECT(var_iter);
            tmp_args_element_name_5 = var_iter;
            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 60;
            {
                PyObject *call_args[] = {tmp_args_element_name_5};
                tmp_assign_source_7 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_7, const_str_plain_iter_next, call_args);
            }

            Py_DECREF(tmp_called_instance_7);
            if (tmp_assign_source_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 60;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            {
                PyObject *old = var_iter;
                assert(old != NULL);
                var_iter = tmp_assign_source_7;
                Py_DECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_8;
            PyObject *tmp_left_name_1;
            PyObject *tmp_right_name_1;
            CHECK_OBJECT(var_index);
            tmp_left_name_1 = var_index;
            tmp_right_name_1 = const_int_pos_1;
            tmp_assign_source_8 = BINARY_OPERATION_ADD_OBJECT_INT(tmp_left_name_1, tmp_right_name_1);
            assert(!(tmp_assign_source_8 == NULL));
            {
                PyObject *old = var_index;
                assert(old != NULL);
                var_index = tmp_assign_source_8;
                Py_DECREF(old);
            }

        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 56;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        goto loop_start_1;
        loop_end_1:;
        {
            nuitka_bool tmp_condition_result_4;
            PyObject *tmp_compexpr_left_2;
            PyObject *tmp_compexpr_right_2;
            PyObject *tmp_len_arg_1;
            CHECK_OBJECT(var_selected_list);
            tmp_len_arg_1 = var_selected_list;
            tmp_compexpr_left_2 = BUILTIN_LEN(tmp_len_arg_1);
            assert(!(tmp_compexpr_left_2 == NULL));
            tmp_compexpr_right_2 = const_int_0;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_2, tmp_compexpr_right_2);
            Py_DECREF(tmp_compexpr_left_2);
            assert(!(tmp_res == -1));
            tmp_condition_result_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_4 == NUITKA_BOOL_TRUE) {
                goto branch_yes_4;
            } else {
                goto branch_no_4;
            }
            branch_yes_4:;
            {
                PyObject *tmp_called_instance_8;
                PyObject *tmp_call_result_4;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_8 = par_ui;
                frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 63;
                tmp_call_result_4 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_8, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_1115ebe932d1b941d1eed30a47fde5a6_tuple, 0));

                if (tmp_call_result_4 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 63;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_4);
            }
            tmp_return_value = Py_None;
            Py_INCREF(tmp_return_value);
            goto frame_return_exit_1;
            branch_no_4:;
        }
        branch_end_1:;
    }
    {
        nuitka_bool tmp_condition_result_5;
        int tmp_and_left_truth_1;
        nuitka_bool tmp_and_left_value_1;
        nuitka_bool tmp_and_right_value_1;
        PyObject *tmp_source_name_6;
        PyObject *tmp_attribute_value_1;
        int tmp_truth_name_3;
        PyObject *tmp_compexpr_left_3;
        PyObject *tmp_compexpr_right_3;
        PyObject *tmp_source_name_7;
        PyObject *tmp_called_instance_9;
        PyObject *tmp_source_name_8;
        CHECK_OBJECT(par_ui);
        tmp_source_name_6 = par_ui;
        tmp_attribute_value_1 = LOOKUP_ATTRIBUTE(tmp_source_name_6, const_str_plain_warned);
        if (tmp_attribute_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 66;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_3 = CHECK_IF_TRUE(tmp_attribute_value_1);
        if (tmp_truth_name_3 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_attribute_value_1);

            exception_lineno = 66;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_1 = tmp_truth_name_3 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_attribute_value_1);
        tmp_and_left_truth_1 = tmp_and_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_1 == 1) {
            goto and_right_1;
        } else {
            goto and_left_1;
        }
        and_right_1:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_7 = par_ui;
        tmp_compexpr_left_3 = LOOKUP_ATTRIBUTE(tmp_source_name_7, const_str_plain_orig);
        if (tmp_compexpr_left_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 66;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_ui);
        tmp_source_name_8 = par_ui;
        tmp_called_instance_9 = LOOKUP_ATTRIBUTE(tmp_source_name_8, const_str_plain_new_pass_entry);
        if (tmp_called_instance_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_compexpr_left_3);

            exception_lineno = 66;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 66;
        tmp_compexpr_right_3 = CALL_METHOD_NO_ARGS(tmp_called_instance_9, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_9);
        if (tmp_compexpr_right_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_compexpr_left_3);

            exception_lineno = 66;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_3, tmp_compexpr_right_3);
        Py_DECREF(tmp_compexpr_left_3);
        Py_DECREF(tmp_compexpr_right_3);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 66;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_condition_result_5 = tmp_and_right_value_1;
        goto and_end_1;
        and_left_1:;
        tmp_condition_result_5 = tmp_and_left_value_1;
        and_end_1:;
        if (tmp_condition_result_5 == NUITKA_BOOL_TRUE) {
            goto branch_yes_5;
        } else {
            goto branch_no_5;
        }
        branch_yes_5:;
        {
            PyObject *tmp_assattr_name_1;
            PyObject *tmp_assattr_target_1;
            tmp_assattr_name_1 = const_str_empty;
            CHECK_OBJECT(par_ui);
            tmp_assattr_target_1 = par_ui;
            tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, const_str_plain_orig, tmp_assattr_name_1);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 67;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
        }
        {
            PyObject *tmp_assattr_name_2;
            PyObject *tmp_assattr_target_2;
            tmp_assattr_name_2 = Py_False;
            CHECK_OBJECT(par_ui);
            tmp_assattr_target_2 = par_ui;
            tmp_result = SET_ATTRIBUTE(tmp_assattr_target_2, const_str_plain_warned, tmp_assattr_name_2);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 68;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
        }
        {
            PyObject *tmp_called_instance_10;
            PyObject *tmp_call_result_5;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_10 = par_ui;
            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 70;
            tmp_call_result_5 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_10, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_fb4170e6daf9640f1d3cf05bd96f5c69_tuple, 0));

            if (tmp_call_result_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 70;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_5);
        }
        {
            PyObject *tmp_called_instance_11;
            PyObject *tmp_source_name_9;
            PyObject *tmp_call_result_6;
            CHECK_OBJECT(par_ui);
            tmp_source_name_9 = par_ui;
            tmp_called_instance_11 = LOOKUP_ATTRIBUTE(tmp_source_name_9, const_str_plain_op_instr);
            if (tmp_called_instance_11 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 71;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 71;
            tmp_call_result_6 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_11, const_str_plain_set_text, &PyTuple_GET_ITEM(const_tuple_str_digest_7433d933e5328ace60520ecd13e3a283_tuple, 0));

            Py_DECREF(tmp_called_instance_11);
            if (tmp_call_result_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 71;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_6);
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        branch_no_5:;
    }
    {
        nuitka_bool tmp_condition_result_6;
        int tmp_or_left_truth_1;
        nuitka_bool tmp_or_left_value_1;
        nuitka_bool tmp_or_right_value_1;
        PyObject *tmp_compexpr_left_4;
        PyObject *tmp_compexpr_right_4;
        PyObject *tmp_called_instance_12;
        PyObject *tmp_source_name_10;
        PyObject *tmp_compexpr_left_5;
        PyObject *tmp_compexpr_right_5;
        PyObject *tmp_called_instance_13;
        PyObject *tmp_source_name_11;
        CHECK_OBJECT(par_ui);
        tmp_source_name_10 = par_ui;
        tmp_called_instance_12 = LOOKUP_ATTRIBUTE(tmp_source_name_10, const_str_plain_new_pass_entry);
        if (tmp_called_instance_12 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 74;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 74;
        tmp_compexpr_left_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_12, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_12);
        if (tmp_compexpr_left_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 74;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_4 = const_str_empty;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_4, tmp_compexpr_right_4);
        Py_DECREF(tmp_compexpr_left_4);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 74;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_left_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_or_left_truth_1 = tmp_or_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_or_left_truth_1 == 1) {
            goto or_left_1;
        } else {
            goto or_right_1;
        }
        or_right_1:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_11 = par_ui;
        tmp_called_instance_13 = LOOKUP_ATTRIBUTE(tmp_source_name_11, const_str_plain_confirm_pass_entry);
        if (tmp_called_instance_13 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 74;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 74;
        tmp_compexpr_left_5 = CALL_METHOD_NO_ARGS(tmp_called_instance_13, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_13);
        if (tmp_compexpr_left_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 74;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_5 = const_str_empty;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_5, tmp_compexpr_right_5);
        Py_DECREF(tmp_compexpr_left_5);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 74;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_right_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_condition_result_6 = tmp_or_right_value_1;
        goto or_end_1;
        or_left_1:;
        tmp_condition_result_6 = tmp_or_left_value_1;
        or_end_1:;
        if (tmp_condition_result_6 == NUITKA_BOOL_TRUE) {
            goto branch_yes_6;
        } else {
            goto branch_no_6;
        }
        branch_yes_6:;
        {
            PyObject *tmp_called_instance_14;
            PyObject *tmp_call_result_7;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_14 = par_ui;
            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 75;
            tmp_call_result_7 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_14, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_50947fcde5a276009797ee1a9769a94a_tuple, 0));

            if (tmp_call_result_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 75;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_7);
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        branch_no_6:;
    }
    {
        PyObject *tmp_assign_source_9;
        PyObject *tmp_called_instance_15;
        PyObject *tmp_source_name_12;
        CHECK_OBJECT(par_ui);
        tmp_source_name_12 = par_ui;
        tmp_called_instance_15 = LOOKUP_ATTRIBUTE(tmp_source_name_12, const_str_plain_new_pass_entry);
        if (tmp_called_instance_15 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 78;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 78;
        tmp_assign_source_9 = CALL_METHOD_NO_ARGS(tmp_called_instance_15, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_15);
        if (tmp_assign_source_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 78;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_pw == NULL);
        var_pw = tmp_assign_source_9;
    }
    {
        PyObject *tmp_assign_source_10;
        PyObject *tmp_called_instance_16;
        PyObject *tmp_source_name_13;
        CHECK_OBJECT(par_ui);
        tmp_source_name_13 = par_ui;
        tmp_called_instance_16 = LOOKUP_ATTRIBUTE(tmp_source_name_13, const_str_plain_confirm_pass_entry);
        if (tmp_called_instance_16 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 79;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 79;
        tmp_assign_source_10 = CALL_METHOD_NO_ARGS(tmp_called_instance_16, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_16);
        if (tmp_assign_source_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 79;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_pw_confirm == NULL);
        var_pw_confirm = tmp_assign_source_10;
    }
    {
        PyObject *tmp_assign_source_11;
        PyObject *tmp_called_instance_17;
        PyObject *tmp_mvar_value_2;
        PyObject *tmp_args_element_name_6;
        PyObject *tmp_args_element_name_7;
        PyObject *tmp_args_element_name_8;
        tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_2 == NULL)) {
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_2 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
            exception_tb = NULL;

            exception_lineno = 80;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_17 = tmp_mvar_value_2;
        tmp_args_element_name_6 = const_str_digest_29fe972ddfd3c3ace7d88aee7a9cd77e;
        tmp_args_element_name_7 = const_str_empty;
        CHECK_OBJECT(var_pw);
        tmp_args_element_name_8 = var_pw;
        frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 80;
        {
            PyObject *call_args[] = {tmp_args_element_name_6, tmp_args_element_name_7, tmp_args_element_name_8};
            tmp_assign_source_11 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_17, const_str_plain_sub, call_args);
        }

        if (tmp_assign_source_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 80;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_pw_trim == NULL);
        var_pw_trim = tmp_assign_source_11;
    }
    {
        PyObject *tmp_assign_source_12;
        PyObject *tmp_called_instance_18;
        PyObject *tmp_mvar_value_3;
        PyObject *tmp_args_element_name_9;
        PyObject *tmp_args_element_name_10;
        PyObject *tmp_args_element_name_11;
        tmp_mvar_value_3 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_3 == NULL)) {
            tmp_mvar_value_3 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_3 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
            exception_tb = NULL;

            exception_lineno = 81;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_18 = tmp_mvar_value_3;
        tmp_args_element_name_9 = const_str_digest_2717a74e8094c62311bf53472f4de0ca;
        tmp_args_element_name_10 = const_str_empty;
        CHECK_OBJECT(var_pw_confirm);
        tmp_args_element_name_11 = var_pw_confirm;
        frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 81;
        {
            PyObject *call_args[] = {tmp_args_element_name_9, tmp_args_element_name_10, tmp_args_element_name_11};
            tmp_assign_source_12 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_18, const_str_plain_sub, call_args);
        }

        if (tmp_assign_source_12 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 81;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_pw_trim_confirm == NULL);
        var_pw_trim_confirm = tmp_assign_source_12;
    }
    {
        nuitka_bool tmp_condition_result_7;
        PyObject *tmp_compexpr_left_6;
        PyObject *tmp_compexpr_right_6;
        PyObject *tmp_len_arg_2;
        CHECK_OBJECT(var_pw_trim);
        tmp_len_arg_2 = var_pw_trim;
        tmp_compexpr_left_6 = BUILTIN_LEN(tmp_len_arg_2);
        if (tmp_compexpr_left_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 83;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_6 = const_int_pos_8;
        tmp_res = RICH_COMPARE_BOOL_LT_OBJECT_INT(tmp_compexpr_left_6, tmp_compexpr_right_6);
        Py_DECREF(tmp_compexpr_left_6);
        assert(!(tmp_res == -1));
        tmp_condition_result_7 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_7 == NUITKA_BOOL_TRUE) {
            goto branch_yes_7;
        } else {
            goto branch_no_7;
        }
        branch_yes_7:;
        {
            PyObject *tmp_called_instance_19;
            PyObject *tmp_call_result_8;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_19 = par_ui;
            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 84;
            tmp_call_result_8 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_19, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_c26386993bfef303945d53604eada43a_tuple, 0));

            if (tmp_call_result_8 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 84;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_8);
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        goto branch_end_7;
        branch_no_7:;
        {
            nuitka_bool tmp_condition_result_8;
            PyObject *tmp_called_instance_20;
            PyObject *tmp_source_name_14;
            PyObject *tmp_call_result_9;
            PyObject *tmp_args_element_name_12;
            int tmp_truth_name_4;
            CHECK_OBJECT(par_ui);
            tmp_source_name_14 = par_ui;
            tmp_called_instance_20 = LOOKUP_ATTRIBUTE(tmp_source_name_14, const_str_plain_bad_pw);
            if (tmp_called_instance_20 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 86;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            CHECK_OBJECT(var_pw_trim);
            tmp_args_element_name_12 = var_pw_trim;
            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 86;
            {
                PyObject *call_args[] = {tmp_args_element_name_12};
                tmp_call_result_9 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_20, const_str_plain_has_key, call_args);
            }

            Py_DECREF(tmp_called_instance_20);
            if (tmp_call_result_9 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 86;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_truth_name_4 = CHECK_IF_TRUE(tmp_call_result_9);
            if (tmp_truth_name_4 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_call_result_9);

                exception_lineno = 86;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_8 = tmp_truth_name_4 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            Py_DECREF(tmp_call_result_9);
            if (tmp_condition_result_8 == NUITKA_BOOL_TRUE) {
                goto branch_yes_8;
            } else {
                goto branch_no_8;
            }
            branch_yes_8:;
            {
                PyObject *tmp_called_instance_21;
                PyObject *tmp_call_result_10;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_21 = par_ui;
                frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 87;
                tmp_call_result_10 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_21, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_12972f1cc00f1e6a86845e930725106f_tuple, 0));

                if (tmp_call_result_10 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 87;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_10);
            }
            tmp_return_value = Py_None;
            Py_INCREF(tmp_return_value);
            goto frame_return_exit_1;
            goto branch_end_8;
            branch_no_8:;
            {
                nuitka_bool tmp_condition_result_9;
                PyObject *tmp_compexpr_left_7;
                PyObject *tmp_compexpr_right_7;
                CHECK_OBJECT(var_pw);
                tmp_compexpr_left_7 = var_pw;
                CHECK_OBJECT(var_pw_confirm);
                tmp_compexpr_right_7 = var_pw_confirm;
                tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_7, tmp_compexpr_right_7);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 89;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_condition_result_9 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_9 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_9;
                } else {
                    goto branch_no_9;
                }
                branch_yes_9:;
                {
                    PyObject *tmp_called_instance_22;
                    PyObject *tmp_call_result_11;
                    CHECK_OBJECT(par_ui);
                    tmp_called_instance_22 = par_ui;
                    frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 90;
                    tmp_call_result_11 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_22, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_010eee5132cba85d8388107801ade416_tuple, 0));

                    if (tmp_call_result_11 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 90;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_11);
                }
                tmp_return_value = Py_None;
                Py_INCREF(tmp_return_value);
                goto frame_return_exit_1;
                branch_no_9:;
            }
            branch_end_8:;
        }
        branch_end_7:;
    }
    {
        nuitka_bool tmp_condition_result_10;
        PyObject *tmp_operand_name_2;
        PyObject *tmp_source_name_15;
        CHECK_OBJECT(par_ui);
        tmp_source_name_15 = par_ui;
        tmp_operand_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_15, const_str_plain_warned);
        if (tmp_operand_name_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 95;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_2);
        Py_DECREF(tmp_operand_name_2);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 95;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_10 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_10 == NUITKA_BOOL_TRUE) {
            goto branch_yes_10;
        } else {
            goto branch_no_10;
        }
        branch_yes_10:;
        {
            PyObject *tmp_assign_source_13;
            PyObject *tmp_called_name_1;
            PyObject *tmp_source_name_16;
            PyObject *tmp_mvar_value_4;
            PyObject *tmp_kw_name_1;
            PyObject *tmp_dict_key_1;
            PyObject *tmp_dict_value_1;
            PyObject *tmp_source_name_17;
            PyObject *tmp_mvar_value_5;
            PyObject *tmp_dict_key_2;
            PyObject *tmp_dict_value_2;
            PyObject *tmp_source_name_18;
            PyObject *tmp_mvar_value_6;
            PyObject *tmp_dict_key_3;
            PyObject *tmp_dict_value_3;
            tmp_mvar_value_4 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

            if (unlikely(tmp_mvar_value_4 == NULL)) {
                tmp_mvar_value_4 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
            }

            if (tmp_mvar_value_4 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                exception_tb = NULL;

                exception_lineno = 96;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_source_name_16 = tmp_mvar_value_4;
            tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_16, const_str_plain_MessageDialog);
            if (tmp_called_name_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 96;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_mvar_value_5 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

            if (unlikely(tmp_mvar_value_5 == NULL)) {
                tmp_mvar_value_5 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
            }

            if (tmp_mvar_value_5 == NULL) {
                Py_DECREF(tmp_called_name_1);
                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                exception_tb = NULL;

                exception_lineno = 96;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_source_name_17 = tmp_mvar_value_5;
            tmp_dict_value_1 = LOOKUP_ATTRIBUTE(tmp_source_name_17, const_str_plain_MESSAGE_WARNING);
            if (tmp_dict_value_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_1);

                exception_lineno = 96;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_dict_key_1 = const_str_plain_type;
            tmp_kw_name_1 = _PyDict_NewPresized( 3 );
            tmp_res = PyDict_SetItem(tmp_kw_name_1, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            assert(!(tmp_res != 0));
            tmp_mvar_value_6 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

            if (unlikely(tmp_mvar_value_6 == NULL)) {
                tmp_mvar_value_6 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
            }

            if (tmp_mvar_value_6 == NULL) {
                Py_DECREF(tmp_called_name_1);
                Py_DECREF(tmp_kw_name_1);
                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                exception_tb = NULL;

                exception_lineno = 96;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_source_name_18 = tmp_mvar_value_6;
            tmp_dict_value_2 = LOOKUP_ATTRIBUTE(tmp_source_name_18, const_str_plain_BUTTONS_YES_NO);
            if (tmp_dict_value_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_1);
                Py_DECREF(tmp_kw_name_1);

                exception_lineno = 96;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_dict_key_2 = const_str_plain_buttons;
            tmp_res = PyDict_SetItem(tmp_kw_name_1, tmp_dict_key_2, tmp_dict_value_2);
            Py_DECREF(tmp_dict_value_2);
            assert(!(tmp_res != 0));
            CHECK_OBJECT(par_ui);
            tmp_dict_value_3 = par_ui;
            tmp_dict_key_3 = const_str_plain_parent;
            tmp_res = PyDict_SetItem(tmp_kw_name_1, tmp_dict_key_3, tmp_dict_value_3);
            assert(!(tmp_res != 0));
            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 96;
            tmp_assign_source_13 = CALL_FUNCTION_WITH_KEYARGS(tmp_called_name_1, tmp_kw_name_1);
            Py_DECREF(tmp_called_name_1);
            Py_DECREF(tmp_kw_name_1);
            if (tmp_assign_source_13 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 96;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(var_message == NULL);
            var_message = tmp_assign_source_13;
        }
        {
            PyObject *tmp_called_instance_23;
            PyObject *tmp_call_result_12;
            CHECK_OBJECT(var_message);
            tmp_called_instance_23 = var_message;
            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 97;
            tmp_call_result_12 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_23, const_str_plain_set_markup, &PyTuple_GET_ITEM(const_tuple_str_digest_8e206e1d9437df3bfbdb341f8ac1cad7_tuple, 0));

            if (tmp_call_result_12 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 97;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_12);
        }
        {
            PyObject *tmp_assign_source_14;
            PyObject *tmp_called_instance_24;
            CHECK_OBJECT(var_message);
            tmp_called_instance_24 = var_message;
            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 99;
            tmp_assign_source_14 = CALL_METHOD_NO_ARGS(tmp_called_instance_24, const_str_plain_run);
            if (tmp_assign_source_14 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 99;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(var_res == NULL);
            var_res = tmp_assign_source_14;
        }
        {
            nuitka_bool tmp_condition_result_11;
            PyObject *tmp_compexpr_left_8;
            PyObject *tmp_compexpr_right_8;
            PyObject *tmp_source_name_19;
            PyObject *tmp_mvar_value_7;
            CHECK_OBJECT(var_res);
            tmp_compexpr_left_8 = var_res;
            tmp_mvar_value_7 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

            if (unlikely(tmp_mvar_value_7 == NULL)) {
                tmp_mvar_value_7 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
            }

            if (tmp_mvar_value_7 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                exception_tb = NULL;

                exception_lineno = 100;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_source_name_19 = tmp_mvar_value_7;
            tmp_compexpr_right_8 = LOOKUP_ATTRIBUTE(tmp_source_name_19, const_str_plain_RESPONSE_YES);
            if (tmp_compexpr_right_8 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 100;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_8, tmp_compexpr_right_8);
            Py_DECREF(tmp_compexpr_right_8);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 100;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_11 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_11 == NUITKA_BOOL_TRUE) {
                goto branch_yes_11;
            } else {
                goto branch_no_11;
            }
            branch_yes_11:;
            {
                PyObject *tmp_called_instance_25;
                PyObject *tmp_call_result_13;
                CHECK_OBJECT(var_message);
                tmp_called_instance_25 = var_message;
                frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 101;
                tmp_call_result_13 = CALL_METHOD_NO_ARGS(tmp_called_instance_25, const_str_plain_destroy);
                if (tmp_call_result_13 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 101;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_13);
            }
            {
                PyObject *tmp_assattr_name_3;
                PyObject *tmp_assattr_target_3;
                tmp_assattr_name_3 = Py_True;
                CHECK_OBJECT(par_ui);
                tmp_assattr_target_3 = par_ui;
                tmp_result = SET_ATTRIBUTE(tmp_assattr_target_3, const_str_plain_warned, tmp_assattr_name_3);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 102;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
            }
            {
                PyObject *tmp_assattr_name_4;
                PyObject *tmp_called_instance_26;
                PyObject *tmp_source_name_20;
                PyObject *tmp_assattr_target_4;
                CHECK_OBJECT(par_ui);
                tmp_source_name_20 = par_ui;
                tmp_called_instance_26 = LOOKUP_ATTRIBUTE(tmp_source_name_20, const_str_plain_new_pass_entry);
                if (tmp_called_instance_26 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 103;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 103;
                tmp_assattr_name_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_26, const_str_plain_get_text);
                Py_DECREF(tmp_called_instance_26);
                if (tmp_assattr_name_4 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 103;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                CHECK_OBJECT(par_ui);
                tmp_assattr_target_4 = par_ui;
                tmp_result = SET_ATTRIBUTE(tmp_assattr_target_4, const_str_plain_orig, tmp_assattr_name_4);
                Py_DECREF(tmp_assattr_name_4);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 103;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
            }
            {
                PyObject *tmp_called_instance_27;
                PyObject *tmp_called_instance_28;
                PyObject *tmp_source_name_21;
                PyObject *tmp_call_result_14;
                CHECK_OBJECT(par_ui);
                tmp_source_name_21 = par_ui;
                tmp_called_instance_28 = LOOKUP_ATTRIBUTE(tmp_source_name_21, const_str_plain_new_pass_entry);
                if (tmp_called_instance_28 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 104;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 104;
                tmp_called_instance_27 = CALL_METHOD_NO_ARGS(tmp_called_instance_28, const_str_plain_get_buffer);
                Py_DECREF(tmp_called_instance_28);
                if (tmp_called_instance_27 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 104;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 104;
                tmp_call_result_14 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_27, const_str_plain_delete_text, &PyTuple_GET_ITEM(const_tuple_int_0_int_neg_1_tuple, 0));

                Py_DECREF(tmp_called_instance_27);
                if (tmp_call_result_14 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 104;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_14);
            }
            {
                PyObject *tmp_called_instance_29;
                PyObject *tmp_called_instance_30;
                PyObject *tmp_source_name_22;
                PyObject *tmp_call_result_15;
                CHECK_OBJECT(par_ui);
                tmp_source_name_22 = par_ui;
                tmp_called_instance_30 = LOOKUP_ATTRIBUTE(tmp_source_name_22, const_str_plain_confirm_pass_entry);
                if (tmp_called_instance_30 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 105;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 105;
                tmp_called_instance_29 = CALL_METHOD_NO_ARGS(tmp_called_instance_30, const_str_plain_get_buffer);
                Py_DECREF(tmp_called_instance_30);
                if (tmp_called_instance_29 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 105;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 105;
                tmp_call_result_15 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_29, const_str_plain_delete_text, &PyTuple_GET_ITEM(const_tuple_int_0_int_neg_1_tuple, 0));

                Py_DECREF(tmp_called_instance_29);
                if (tmp_call_result_15 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 105;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_15);
            }
            {
                PyObject *tmp_called_instance_31;
                PyObject *tmp_source_name_23;
                PyObject *tmp_call_result_16;
                CHECK_OBJECT(par_ui);
                tmp_source_name_23 = par_ui;
                tmp_called_instance_31 = LOOKUP_ATTRIBUTE(tmp_source_name_23, const_str_plain_op_instr);
                if (tmp_called_instance_31 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 106;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 106;
                tmp_call_result_16 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_31, const_str_plain_set_text, &PyTuple_GET_ITEM(const_tuple_str_digest_78b118bae7a3e181cf380422b9b067b3_tuple, 0));

                Py_DECREF(tmp_called_instance_31);
                if (tmp_call_result_16 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 106;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_16);
            }
            goto branch_end_11;
            branch_no_11:;
            {
                PyObject *tmp_called_instance_32;
                PyObject *tmp_call_result_17;
                CHECK_OBJECT(var_message);
                tmp_called_instance_32 = var_message;
                frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 108;
                tmp_call_result_17 = CALL_METHOD_NO_ARGS(tmp_called_instance_32, const_str_plain_destroy);
                if (tmp_call_result_17 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 108;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_17);
            }
            branch_end_11:;
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        goto branch_end_10;
        branch_no_10:;
        {
            PyObject *tmp_assattr_name_5;
            PyObject *tmp_assattr_target_5;
            tmp_assattr_name_5 = Py_False;
            CHECK_OBJECT(par_ui);
            tmp_assattr_target_5 = par_ui;
            tmp_result = SET_ATTRIBUTE(tmp_assattr_target_5, const_str_plain_warned, tmp_assattr_name_5);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 112;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
        }
        branch_end_10:;
    }
    CHECK_OBJECT(var_pw_trim);
    Py_DECREF(var_pw_trim);
    var_pw_trim = NULL;

    CHECK_OBJECT(var_pw_trim_confirm);
    Py_DECREF(var_pw_trim_confirm);
    var_pw_trim_confirm = NULL;

    {
        PyObject *tmp_assign_source_15;
        PyObject *tmp_called_name_2;
        PyObject *tmp_source_name_24;
        PyObject *tmp_mvar_value_8;
        PyObject *tmp_kw_name_2;
        PyObject *tmp_dict_key_4;
        PyObject *tmp_dict_value_4;
        PyObject *tmp_source_name_25;
        PyObject *tmp_mvar_value_9;
        PyObject *tmp_dict_key_5;
        PyObject *tmp_dict_value_5;
        PyObject *tmp_source_name_26;
        PyObject *tmp_mvar_value_10;
        PyObject *tmp_dict_key_6;
        PyObject *tmp_dict_value_6;
        tmp_mvar_value_8 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

        if (unlikely(tmp_mvar_value_8 == NULL)) {
            tmp_mvar_value_8 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
        }

        if (tmp_mvar_value_8 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
            exception_tb = NULL;

            exception_lineno = 120;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_24 = tmp_mvar_value_8;
        tmp_called_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_24, const_str_plain_MessageDialog);
        if (tmp_called_name_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 120;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_mvar_value_9 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

        if (unlikely(tmp_mvar_value_9 == NULL)) {
            tmp_mvar_value_9 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
        }

        if (tmp_mvar_value_9 == NULL) {
            Py_DECREF(tmp_called_name_2);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
            exception_tb = NULL;

            exception_lineno = 120;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_25 = tmp_mvar_value_9;
        tmp_dict_value_4 = LOOKUP_ATTRIBUTE(tmp_source_name_25, const_str_plain_MESSAGE_WARNING);
        if (tmp_dict_value_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_2);

            exception_lineno = 120;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_dict_key_4 = const_str_plain_type;
        tmp_kw_name_2 = _PyDict_NewPresized( 3 );
        tmp_res = PyDict_SetItem(tmp_kw_name_2, tmp_dict_key_4, tmp_dict_value_4);
        Py_DECREF(tmp_dict_value_4);
        assert(!(tmp_res != 0));
        tmp_mvar_value_10 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

        if (unlikely(tmp_mvar_value_10 == NULL)) {
            tmp_mvar_value_10 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
        }

        if (tmp_mvar_value_10 == NULL) {
            Py_DECREF(tmp_called_name_2);
            Py_DECREF(tmp_kw_name_2);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
            exception_tb = NULL;

            exception_lineno = 120;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_26 = tmp_mvar_value_10;
        tmp_dict_value_5 = LOOKUP_ATTRIBUTE(tmp_source_name_26, const_str_plain_BUTTONS_OK_CANCEL);
        if (tmp_dict_value_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_2);
            Py_DECREF(tmp_kw_name_2);

            exception_lineno = 120;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_dict_key_5 = const_str_plain_buttons;
        tmp_res = PyDict_SetItem(tmp_kw_name_2, tmp_dict_key_5, tmp_dict_value_5);
        Py_DECREF(tmp_dict_value_5);
        assert(!(tmp_res != 0));
        CHECK_OBJECT(par_ui);
        tmp_dict_value_6 = par_ui;
        tmp_dict_key_6 = const_str_plain_parent;
        tmp_res = PyDict_SetItem(tmp_kw_name_2, tmp_dict_key_6, tmp_dict_value_6);
        assert(!(tmp_res != 0));
        frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 120;
        tmp_assign_source_15 = CALL_FUNCTION_WITH_KEYARGS(tmp_called_name_2, tmp_kw_name_2);
        Py_DECREF(tmp_called_name_2);
        Py_DECREF(tmp_kw_name_2);
        if (tmp_assign_source_15 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 120;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_message2 == NULL);
        var_message2 = tmp_assign_source_15;
    }
    {
        PyObject *tmp_called_instance_33;
        PyObject *tmp_call_result_18;
        CHECK_OBJECT(var_message2);
        tmp_called_instance_33 = var_message2;
        frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 121;
        tmp_call_result_18 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_33, const_str_plain_set_markup, &PyTuple_GET_ITEM(const_tuple_str_digest_7275860c79ad48e1a6145b3d274f9582_tuple, 0));

        if (tmp_call_result_18 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 121;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_18);
    }
    {
        PyObject *tmp_assign_source_16;
        PyObject *tmp_called_instance_34;
        CHECK_OBJECT(var_message2);
        tmp_called_instance_34 = var_message2;
        frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 123;
        tmp_assign_source_16 = CALL_METHOD_NO_ARGS(tmp_called_instance_34, const_str_plain_run);
        if (tmp_assign_source_16 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 123;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_res2 == NULL);
        var_res2 = tmp_assign_source_16;
    }
    {
        nuitka_bool tmp_condition_result_12;
        PyObject *tmp_compexpr_left_9;
        PyObject *tmp_compexpr_right_9;
        PyObject *tmp_source_name_27;
        PyObject *tmp_mvar_value_11;
        CHECK_OBJECT(var_res2);
        tmp_compexpr_left_9 = var_res2;
        tmp_mvar_value_11 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

        if (unlikely(tmp_mvar_value_11 == NULL)) {
            tmp_mvar_value_11 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
        }

        if (tmp_mvar_value_11 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
            exception_tb = NULL;

            exception_lineno = 124;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_27 = tmp_mvar_value_11;
        tmp_compexpr_right_9 = LOOKUP_ATTRIBUTE(tmp_source_name_27, const_str_plain_RESPONSE_OK);
        if (tmp_compexpr_right_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 124;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_9, tmp_compexpr_right_9);
        Py_DECREF(tmp_compexpr_right_9);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 124;
            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_12 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_12 == NUITKA_BOOL_TRUE) {
            goto branch_yes_12;
        } else {
            goto branch_no_12;
        }
        branch_yes_12:;
        {
            PyObject *tmp_called_instance_35;
            PyObject *tmp_call_result_19;
            CHECK_OBJECT(var_message2);
            tmp_called_instance_35 = var_message2;
            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 125;
            tmp_call_result_19 = CALL_METHOD_NO_ARGS(tmp_called_instance_35, const_str_plain_destroy);
            if (tmp_call_result_19 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 125;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_19);
        }
        {
            nuitka_bool tmp_assign_source_17;
            tmp_assign_source_17 = NUITKA_BOOL_TRUE;
            var_proceed = tmp_assign_source_17;
        }
        {
            PyObject *tmp_assign_source_18;
            PyObject *tmp_called_instance_36;
            PyObject *tmp_mvar_value_12;
            PyObject *tmp_args_element_name_13;
            tmp_mvar_value_12 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_dialogs);

            if (unlikely(tmp_mvar_value_12 == NULL)) {
                tmp_mvar_value_12 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_dialogs);
            }

            if (tmp_mvar_value_12 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 418 ], 36, 0);
                exception_tb = NULL;

                exception_lineno = 130;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_called_instance_36 = tmp_mvar_value_12;
            CHECK_OBJECT(par_ui);
            tmp_args_element_name_13 = par_ui;
            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 130;
            {
                PyObject *call_args[] = {tmp_args_element_name_13};
                tmp_assign_source_18 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_36, const_str_plain_USBDialog, call_args);
            }

            if (tmp_assign_source_18 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 130;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(var_usb_dialog == NULL);
            var_usb_dialog = tmp_assign_source_18;
        }
        {
            PyObject *tmp_assign_source_19;
            PyObject *tmp_called_instance_37;
            CHECK_OBJECT(var_usb_dialog);
            tmp_called_instance_37 = var_usb_dialog;
            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 131;
            tmp_assign_source_19 = CALL_METHOD_NO_ARGS(tmp_called_instance_37, const_str_plain_run);
            if (tmp_assign_source_19 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 131;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(var_res == NULL);
            var_res = tmp_assign_source_19;
        }
        {
            nuitka_bool tmp_condition_result_13;
            PyObject *tmp_compexpr_left_10;
            PyObject *tmp_compexpr_right_10;
            PyObject *tmp_source_name_28;
            PyObject *tmp_mvar_value_13;
            CHECK_OBJECT(var_res);
            tmp_compexpr_left_10 = var_res;
            tmp_mvar_value_13 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

            if (unlikely(tmp_mvar_value_13 == NULL)) {
                tmp_mvar_value_13 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
            }

            if (tmp_mvar_value_13 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                exception_tb = NULL;

                exception_lineno = 132;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_source_name_28 = tmp_mvar_value_13;
            tmp_compexpr_right_10 = LOOKUP_ATTRIBUTE(tmp_source_name_28, const_str_plain_RESPONSE_OK);
            if (tmp_compexpr_right_10 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 132;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_10, tmp_compexpr_right_10);
            Py_DECREF(tmp_compexpr_right_10);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 132;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_13 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_13 == NUITKA_BOOL_TRUE) {
                goto branch_yes_13;
            } else {
                goto branch_no_13;
            }
            branch_yes_13:;
            {
                nuitka_bool tmp_assign_source_20;
                tmp_assign_source_20 = NUITKA_BOOL_FALSE;
                var_proceed = tmp_assign_source_20;
            }
            goto branch_end_13;
            branch_no_13:;
            {
                nuitka_bool tmp_condition_result_14;
                PyObject *tmp_compexpr_left_11;
                PyObject *tmp_compexpr_right_11;
                PyObject *tmp_called_instance_38;
                PyObject *tmp_source_name_29;
                CHECK_OBJECT(var_usb_dialog);
                tmp_source_name_29 = var_usb_dialog;
                tmp_called_instance_38 = LOOKUP_ATTRIBUTE(tmp_source_name_29, const_str_plain_usb_menu);
                if (tmp_called_instance_38 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 135;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 135;
                tmp_compexpr_left_11 = CALL_METHOD_NO_ARGS(tmp_called_instance_38, const_str_plain_get_active);
                Py_DECREF(tmp_called_instance_38);
                if (tmp_compexpr_left_11 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 135;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_compexpr_right_11 = const_int_0;
                tmp_res = RICH_COMPARE_BOOL_GTE_OBJECT_INT(tmp_compexpr_left_11, tmp_compexpr_right_11);
                Py_DECREF(tmp_compexpr_left_11);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 135;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_condition_result_14 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_14 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_14;
                } else {
                    goto branch_no_14;
                }
                branch_yes_14:;
                {
                    PyObject *tmp_assign_source_21;
                    PyObject *tmp_called_name_3;
                    PyObject *tmp_source_name_30;
                    PyObject *tmp_mvar_value_14;
                    PyObject *tmp_kw_name_3;
                    PyObject *tmp_dict_key_7;
                    PyObject *tmp_dict_value_7;
                    PyObject *tmp_source_name_31;
                    PyObject *tmp_mvar_value_15;
                    PyObject *tmp_dict_key_8;
                    PyObject *tmp_dict_value_8;
                    PyObject *tmp_source_name_32;
                    PyObject *tmp_mvar_value_16;
                    PyObject *tmp_dict_key_9;
                    PyObject *tmp_dict_value_9;
                    tmp_mvar_value_14 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

                    if (unlikely(tmp_mvar_value_14 == NULL)) {
                        tmp_mvar_value_14 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
                    }

                    if (tmp_mvar_value_14 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                        exception_tb = NULL;

                        exception_lineno = 136;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_source_name_30 = tmp_mvar_value_14;
                    tmp_called_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_30, const_str_plain_MessageDialog);
                    if (tmp_called_name_3 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 136;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_mvar_value_15 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

                    if (unlikely(tmp_mvar_value_15 == NULL)) {
                        tmp_mvar_value_15 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
                    }

                    if (tmp_mvar_value_15 == NULL) {
                        Py_DECREF(tmp_called_name_3);
                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                        exception_tb = NULL;

                        exception_lineno = 136;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_source_name_31 = tmp_mvar_value_15;
                    tmp_dict_value_7 = LOOKUP_ATTRIBUTE(tmp_source_name_31, const_str_plain_MESSAGE_WARNING);
                    if (tmp_dict_value_7 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_3);

                        exception_lineno = 136;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_dict_key_7 = const_str_plain_type;
                    tmp_kw_name_3 = _PyDict_NewPresized( 3 );
                    tmp_res = PyDict_SetItem(tmp_kw_name_3, tmp_dict_key_7, tmp_dict_value_7);
                    Py_DECREF(tmp_dict_value_7);
                    assert(!(tmp_res != 0));
                    tmp_mvar_value_16 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

                    if (unlikely(tmp_mvar_value_16 == NULL)) {
                        tmp_mvar_value_16 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
                    }

                    if (tmp_mvar_value_16 == NULL) {
                        Py_DECREF(tmp_called_name_3);
                        Py_DECREF(tmp_kw_name_3);
                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                        exception_tb = NULL;

                        exception_lineno = 136;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_source_name_32 = tmp_mvar_value_16;
                    tmp_dict_value_8 = LOOKUP_ATTRIBUTE(tmp_source_name_32, const_str_plain_BUTTONS_OK_CANCEL);
                    if (tmp_dict_value_8 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_3);
                        Py_DECREF(tmp_kw_name_3);

                        exception_lineno = 136;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_dict_key_8 = const_str_plain_buttons;
                    tmp_res = PyDict_SetItem(tmp_kw_name_3, tmp_dict_key_8, tmp_dict_value_8);
                    Py_DECREF(tmp_dict_value_8);
                    assert(!(tmp_res != 0));
                    CHECK_OBJECT(par_ui);
                    tmp_dict_value_9 = par_ui;
                    tmp_dict_key_9 = const_str_plain_parent;
                    tmp_res = PyDict_SetItem(tmp_kw_name_3, tmp_dict_key_9, tmp_dict_value_9);
                    assert(!(tmp_res != 0));
                    frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 136;
                    tmp_assign_source_21 = CALL_FUNCTION_WITH_KEYARGS(tmp_called_name_3, tmp_kw_name_3);
                    Py_DECREF(tmp_called_name_3);
                    Py_DECREF(tmp_kw_name_3);
                    if (tmp_assign_source_21 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 136;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    assert(var_msg_usb == NULL);
                    var_msg_usb = tmp_assign_source_21;
                }
                {
                    PyObject *tmp_called_instance_39;
                    PyObject *tmp_call_result_20;
                    CHECK_OBJECT(var_msg_usb);
                    tmp_called_instance_39 = var_msg_usb;
                    frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 137;
                    tmp_call_result_20 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_39, const_str_plain_set_markup, &PyTuple_GET_ITEM(const_tuple_str_digest_66b9c32dc65a44769f7de8c6bb74f616_tuple, 0));

                    if (tmp_call_result_20 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 137;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_20);
                }
                {
                    PyObject *tmp_assign_source_22;
                    PyObject *tmp_called_instance_40;
                    CHECK_OBJECT(var_msg_usb);
                    tmp_called_instance_40 = var_msg_usb;
                    frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 139;
                    tmp_assign_source_22 = CALL_METHOD_NO_ARGS(tmp_called_instance_40, const_str_plain_run);
                    if (tmp_assign_source_22 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 139;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    {
                        PyObject *old = var_res2;
                        assert(old != NULL);
                        var_res2 = tmp_assign_source_22;
                        Py_DECREF(old);
                    }

                }
                {
                    nuitka_bool tmp_condition_result_15;
                    PyObject *tmp_compexpr_left_12;
                    PyObject *tmp_compexpr_right_12;
                    PyObject *tmp_source_name_33;
                    PyObject *tmp_mvar_value_17;
                    CHECK_OBJECT(var_res2);
                    tmp_compexpr_left_12 = var_res2;
                    tmp_mvar_value_17 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

                    if (unlikely(tmp_mvar_value_17 == NULL)) {
                        tmp_mvar_value_17 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
                    }

                    if (tmp_mvar_value_17 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                        exception_tb = NULL;

                        exception_lineno = 140;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_source_name_33 = tmp_mvar_value_17;
                    tmp_compexpr_right_12 = LOOKUP_ATTRIBUTE(tmp_source_name_33, const_str_plain_RESPONSE_OK);
                    if (tmp_compexpr_right_12 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 140;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_12, tmp_compexpr_right_12);
                    Py_DECREF(tmp_compexpr_right_12);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 140;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_condition_result_15 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_15 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_15;
                    } else {
                        goto branch_no_15;
                    }
                    branch_yes_15:;
                    {
                        nuitka_bool tmp_assign_source_23;
                        tmp_assign_source_23 = NUITKA_BOOL_FALSE;
                        var_proceed = tmp_assign_source_23;
                    }
                    branch_no_15:;
                }
                {
                    PyObject *tmp_called_instance_41;
                    PyObject *tmp_call_result_21;
                    CHECK_OBJECT(var_msg_usb);
                    tmp_called_instance_41 = var_msg_usb;
                    frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 142;
                    tmp_call_result_21 = CALL_METHOD_NO_ARGS(tmp_called_instance_41, const_str_plain_destroy);
                    if (tmp_call_result_21 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 142;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_21);
                }
                goto branch_end_14;
                branch_no_14:;
                {
                    PyObject *tmp_called_instance_42;
                    PyObject *tmp_call_result_22;
                    CHECK_OBJECT(par_ui);
                    tmp_called_instance_42 = par_ui;
                    frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 144;
                    tmp_call_result_22 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_42, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_205b60d69f326be8faaf6444c666377f_tuple, 0));

                    if (tmp_call_result_22 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 144;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_22);
                }
                {
                    PyObject *tmp_called_instance_43;
                    PyObject *tmp_source_name_34;
                    PyObject *tmp_call_result_23;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_34 = par_ui;
                    tmp_called_instance_43 = LOOKUP_ATTRIBUTE(tmp_source_name_34, const_str_plain_op_instr);
                    if (tmp_called_instance_43 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 145;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 145;
                    tmp_call_result_23 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_43, const_str_plain_set_text, &PyTuple_GET_ITEM(const_tuple_str_digest_7433d933e5328ace60520ecd13e3a283_tuple, 0));

                    Py_DECREF(tmp_called_instance_43);
                    if (tmp_call_result_23 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 145;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_23);
                }
                {
                    PyObject *tmp_called_instance_44;
                    PyObject *tmp_call_result_24;
                    CHECK_OBJECT(var_usb_dialog);
                    tmp_called_instance_44 = var_usb_dialog;
                    frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 146;
                    tmp_call_result_24 = CALL_METHOD_NO_ARGS(tmp_called_instance_44, const_str_plain_destroy);
                    if (tmp_call_result_24 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 146;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_24);
                }
                {
                    PyObject *tmp_called_instance_45;
                    PyObject *tmp_call_result_25;
                    CHECK_OBJECT(par_ui);
                    tmp_called_instance_45 = par_ui;
                    frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 147;
                    tmp_call_result_25 = CALL_METHOD_NO_ARGS(tmp_called_instance_45, const_str_plain_setup_prompt1);
                    if (tmp_call_result_25 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 147;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_25);
                }
                tmp_return_value = Py_None;
                Py_INCREF(tmp_return_value);
                goto frame_return_exit_1;
                branch_end_14:;
            }
            branch_end_13:;
        }
        {
            nuitka_bool tmp_condition_result_16;
            PyObject *tmp_operand_name_3;
            if (var_proceed == NUITKA_BOOL_UNASSIGNED) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "proceed");
                exception_tb = NULL;

                exception_lineno = 150;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_operand_name_3 = (var_proceed == NUITKA_BOOL_TRUE) ? Py_True : Py_False;
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_3);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 150;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_16 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_16 == NUITKA_BOOL_TRUE) {
                goto branch_yes_16;
            } else {
                goto branch_no_16;
            }
            branch_yes_16:;
            {
                PyObject *tmp_called_instance_46;
                PyObject *tmp_source_name_35;
                PyObject *tmp_call_result_26;
                CHECK_OBJECT(par_ui);
                tmp_source_name_35 = par_ui;
                tmp_called_instance_46 = LOOKUP_ATTRIBUTE(tmp_source_name_35, const_str_plain_op_instr);
                if (tmp_called_instance_46 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 151;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 151;
                tmp_call_result_26 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_46, const_str_plain_set_text, &PyTuple_GET_ITEM(const_tuple_str_digest_7433d933e5328ace60520ecd13e3a283_tuple, 0));

                Py_DECREF(tmp_called_instance_46);
                if (tmp_call_result_26 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 151;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_26);
            }
            {
                PyObject *tmp_called_instance_47;
                PyObject *tmp_call_result_27;
                CHECK_OBJECT(var_usb_dialog);
                tmp_called_instance_47 = var_usb_dialog;
                frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 152;
                tmp_call_result_27 = CALL_METHOD_NO_ARGS(tmp_called_instance_47, const_str_plain_destroy);
                if (tmp_call_result_27 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 152;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_27);
            }
            tmp_return_value = Py_None;
            Py_INCREF(tmp_return_value);
            goto frame_return_exit_1;
            branch_no_16:;
        }
        {
            PyObject *tmp_assign_source_24;
            PyObject *tmp_called_instance_48;
            PyObject *tmp_source_name_36;
            CHECK_OBJECT(var_usb_dialog);
            tmp_source_name_36 = var_usb_dialog;
            tmp_called_instance_48 = LOOKUP_ATTRIBUTE(tmp_source_name_36, const_str_plain_usb_menu);
            if (tmp_called_instance_48 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 155;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 155;
            tmp_assign_source_24 = CALL_METHOD_NO_ARGS(tmp_called_instance_48, const_str_plain_get_active);
            Py_DECREF(tmp_called_instance_48);
            if (tmp_assign_source_24 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 155;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(var_index2 == NULL);
            var_index2 = tmp_assign_source_24;
        }
        {
            PyObject *tmp_called_instance_49;
            PyObject *tmp_call_result_28;
            CHECK_OBJECT(var_usb_dialog);
            tmp_called_instance_49 = var_usb_dialog;
            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 156;
            tmp_call_result_28 = CALL_METHOD_NO_ARGS(tmp_called_instance_49, const_str_plain_destroy);
            if (tmp_call_result_28 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 156;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_28);
        }
        {
            PyObject *tmp_assign_source_25;
            tmp_assign_source_25 = PyList_New(0);
            assert(var_preserved_files == NULL);
            var_preserved_files = tmp_assign_source_25;
        }
        {
            nuitka_bool tmp_condition_result_17;
            int tmp_and_left_truth_2;
            nuitka_bool tmp_and_left_value_2;
            nuitka_bool tmp_and_right_value_2;
            int tmp_or_left_truth_2;
            nuitka_bool tmp_or_left_value_2;
            nuitka_bool tmp_or_right_value_2;
            PyObject *tmp_compexpr_left_13;
            PyObject *tmp_compexpr_right_13;
            PyObject *tmp_left_name_2;
            PyObject *tmp_source_name_37;
            PyObject *tmp_right_name_2;
            int tmp_and_left_truth_3;
            nuitka_bool tmp_and_left_value_3;
            nuitka_bool tmp_and_right_value_3;
            PyObject *tmp_compexpr_left_14;
            PyObject *tmp_compexpr_right_14;
            PyObject *tmp_source_name_38;
            PyObject *tmp_compexpr_left_15;
            PyObject *tmp_compexpr_right_15;
            PyObject *tmp_source_name_39;
            PyObject *tmp_called_instance_50;
            PyObject *tmp_source_name_40;
            PyObject *tmp_call_result_29;
            int tmp_truth_name_5;
            CHECK_OBJECT(par_ui);
            tmp_source_name_37 = par_ui;
            tmp_left_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_37, const_str_plain_VERSION);
            if (tmp_left_name_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 160;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_right_name_2 = const_int_pos_3;
            tmp_compexpr_left_13 = BINARY_OPERATION_MOD_OBJECT_INT(tmp_left_name_2, tmp_right_name_2);
            Py_DECREF(tmp_left_name_2);
            if (tmp_compexpr_left_13 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 160;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_13 = const_int_0;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_13, tmp_compexpr_right_13);
            Py_DECREF(tmp_compexpr_left_13);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 160;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_or_left_value_2 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_or_left_truth_2 = tmp_or_left_value_2 == NUITKA_BOOL_TRUE ? 1 : 0;
            if (tmp_or_left_truth_2 == 1) {
                goto or_left_2;
            } else {
                goto or_right_2;
            }
            or_right_2:;
            CHECK_OBJECT(par_ui);
            tmp_source_name_38 = par_ui;
            tmp_compexpr_left_14 = LOOKUP_ATTRIBUTE(tmp_source_name_38, const_str_plain_VERSION);
            if (tmp_compexpr_left_14 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 160;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_14 = const_int_pos_1;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_14, tmp_compexpr_right_14);
            Py_DECREF(tmp_compexpr_left_14);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 160;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_and_left_value_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_and_left_truth_3 = tmp_and_left_value_3 == NUITKA_BOOL_TRUE ? 1 : 0;
            if (tmp_and_left_truth_3 == 1) {
                goto and_right_3;
            } else {
                goto and_left_3;
            }
            and_right_3:;
            CHECK_OBJECT(par_ui);
            tmp_source_name_39 = par_ui;
            tmp_compexpr_left_15 = LOOKUP_ATTRIBUTE(tmp_source_name_39, const_str_plain_PBA_VERSION);
            if (tmp_compexpr_left_15 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 160;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_15 = const_int_pos_1;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_INT(tmp_compexpr_left_15, tmp_compexpr_right_15);
            Py_DECREF(tmp_compexpr_left_15);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 160;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_and_right_value_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_or_right_value_2 = tmp_and_right_value_3;
            goto and_end_3;
            and_left_3:;
            tmp_or_right_value_2 = tmp_and_left_value_3;
            and_end_3:;
            tmp_and_left_value_2 = tmp_or_right_value_2;
            goto or_end_2;
            or_left_2:;
            tmp_and_left_value_2 = tmp_or_left_value_2;
            or_end_2:;
            tmp_and_left_truth_2 = tmp_and_left_value_2 == NUITKA_BOOL_TRUE ? 1 : 0;
            if (tmp_and_left_truth_2 == 1) {
                goto and_right_2;
            } else {
                goto and_left_2;
            }
            and_right_2:;
            CHECK_OBJECT(par_ui);
            tmp_source_name_40 = par_ui;
            tmp_called_instance_50 = LOOKUP_ATTRIBUTE(tmp_source_name_40, const_str_plain_pass_sav);
            if (tmp_called_instance_50 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 160;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 160;
            tmp_call_result_29 = CALL_METHOD_NO_ARGS(tmp_called_instance_50, const_str_plain_get_active);
            Py_DECREF(tmp_called_instance_50);
            if (tmp_call_result_29 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 160;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_truth_name_5 = CHECK_IF_TRUE(tmp_call_result_29);
            if (tmp_truth_name_5 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_call_result_29);

                exception_lineno = 160;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_and_right_value_2 = tmp_truth_name_5 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            Py_DECREF(tmp_call_result_29);
            tmp_condition_result_17 = tmp_and_right_value_2;
            goto and_end_2;
            and_left_2:;
            tmp_condition_result_17 = tmp_and_left_value_2;
            and_end_2:;
            if (tmp_condition_result_17 == NUITKA_BOOL_TRUE) {
                goto branch_yes_17;
            } else {
                goto branch_no_17;
            }
            branch_yes_17:;
            {
                PyObject *tmp_assign_source_26;
                tmp_assign_source_26 = const_str_empty;
                assert(var_drive == NULL);
                Py_INCREF(tmp_assign_source_26);
                var_drive = tmp_assign_source_26;
            }
            {
                nuitka_bool tmp_condition_result_18;
                PyObject *tmp_compexpr_left_16;
                PyObject *tmp_compexpr_right_16;
                PyObject *tmp_source_name_41;
                CHECK_OBJECT(par_ui);
                tmp_source_name_41 = par_ui;
                tmp_compexpr_left_16 = LOOKUP_ATTRIBUTE(tmp_source_name_41, const_str_plain_DEV_OS);
                if (tmp_compexpr_left_16 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 163;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_compexpr_right_16 = const_str_plain_Windows;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_16, tmp_compexpr_right_16);
                Py_DECREF(tmp_compexpr_left_16);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 163;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_condition_result_18 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_18 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_18;
                } else {
                    goto branch_no_18;
                }
                branch_yes_18:;
                {
                    PyObject *tmp_assign_source_27;
                    PyObject *tmp_subscribed_name_1;
                    PyObject *tmp_subscribed_name_2;
                    PyObject *tmp_source_name_42;
                    PyObject *tmp_subscript_name_1;
                    PyObject *tmp_subscript_name_2;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_42 = par_ui;
                    tmp_subscribed_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_42, const_str_plain_usb_list);
                    if (tmp_subscribed_name_2 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 164;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(var_index2);
                    tmp_subscript_name_1 = var_index2;
                    tmp_subscribed_name_1 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_2, tmp_subscript_name_1);
                    Py_DECREF(tmp_subscribed_name_2);
                    if (tmp_subscribed_name_1 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 164;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_subscript_name_2 = const_int_pos_1;
                    tmp_assign_source_27 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_1, tmp_subscript_name_2, 1);
                    Py_DECREF(tmp_subscribed_name_1);
                    if (tmp_assign_source_27 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 164;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    assert(var_usb_dev == NULL);
                    var_usb_dev = tmp_assign_source_27;
                }
                {
                    PyObject *tmp_assign_source_28;
                    PyObject *tmp_iter_arg_1;
                    PyObject *tmp_range_arg_1;
                    PyObject *tmp_len_arg_3;
                    PyObject *tmp_source_name_43;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_43 = par_ui;
                    tmp_len_arg_3 = LOOKUP_ATTRIBUTE(tmp_source_name_43, const_str_plain_devs_list);
                    if (tmp_len_arg_3 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 165;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_range_arg_1 = BUILTIN_LEN(tmp_len_arg_3);
                    Py_DECREF(tmp_len_arg_3);
                    if (tmp_range_arg_1 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 165;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_iter_arg_1 = BUILTIN_RANGE(tmp_range_arg_1);
                    Py_DECREF(tmp_range_arg_1);
                    if (tmp_iter_arg_1 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 165;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_assign_source_28 = MAKE_ITERATOR(tmp_iter_arg_1);
                    Py_DECREF(tmp_iter_arg_1);
                    if (tmp_assign_source_28 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 165;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    assert(tmp_for_loop_1__for_iterator == NULL);
                    tmp_for_loop_1__for_iterator = tmp_assign_source_28;
                }
                // Tried code:
                loop_start_2:;
                {
                    PyObject *tmp_next_source_1;
                    PyObject *tmp_assign_source_29;
                    CHECK_OBJECT(tmp_for_loop_1__for_iterator);
                    tmp_next_source_1 = tmp_for_loop_1__for_iterator;
                    tmp_assign_source_29 = ITERATOR_NEXT(tmp_next_source_1);
                    if (tmp_assign_source_29 == NULL) {
                        if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                            goto loop_end_2;
                        } else {

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            exception_lineno = 165;
                            goto try_except_handler_2;
                        }
                    }

                    {
                        PyObject *old = tmp_for_loop_1__iter_value;
                        tmp_for_loop_1__iter_value = tmp_assign_source_29;
                        Py_XDECREF(old);
                    }

                }
                {
                    PyObject *tmp_assign_source_30;
                    CHECK_OBJECT(tmp_for_loop_1__iter_value);
                    tmp_assign_source_30 = tmp_for_loop_1__iter_value;
                    {
                        PyObject *old = var_j;
                        var_j = tmp_assign_source_30;
                        Py_INCREF(var_j);
                        Py_XDECREF(old);
                    }

                }
                {
                    PyObject *tmp_called_name_4;
                    PyObject *tmp_mvar_value_18;
                    PyObject *tmp_call_result_30;
                    PyObject *tmp_args_element_name_14;
                    tmp_mvar_value_18 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_prelock);

                    if (unlikely(tmp_mvar_value_18 == NULL)) {
                        tmp_mvar_value_18 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_prelock);
                    }

                    if (tmp_mvar_value_18 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 5022 ], 36, 0);
                        exception_tb = NULL;

                        exception_lineno = 166;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto try_except_handler_2;
                    }

                    tmp_called_name_4 = tmp_mvar_value_18;
                    CHECK_OBJECT(var_j);
                    tmp_args_element_name_14 = var_j;
                    frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 166;
                    tmp_call_result_30 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_4, tmp_args_element_name_14);
                    if (tmp_call_result_30 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 166;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto try_except_handler_2;
                    }
                    Py_DECREF(tmp_call_result_30);
                }
                if (CONSIDER_THREADING() == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 165;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto try_except_handler_2;
                }
                goto loop_start_2;
                loop_end_2:;
                goto try_end_1;
                // Exception handler code:
                try_except_handler_2:;
                exception_keeper_type_1 = exception_type;
                exception_keeper_value_1 = exception_value;
                exception_keeper_tb_1 = exception_tb;
                exception_keeper_lineno_1 = exception_lineno;
                exception_type = NULL;
                exception_value = NULL;
                exception_tb = NULL;
                exception_lineno = 0;

                Py_XDECREF(tmp_for_loop_1__iter_value);
                tmp_for_loop_1__iter_value = NULL;

                CHECK_OBJECT((PyObject *)tmp_for_loop_1__for_iterator);
                Py_DECREF(tmp_for_loop_1__for_iterator);
                tmp_for_loop_1__for_iterator = NULL;

                // Re-raise.
                exception_type = exception_keeper_type_1;
                exception_value = exception_keeper_value_1;
                exception_tb = exception_keeper_tb_1;
                exception_lineno = exception_keeper_lineno_1;

                goto frame_exception_exit_1;
                // End of try:
                try_end_1:;
                Py_XDECREF(tmp_for_loop_1__iter_value);
                tmp_for_loop_1__iter_value = NULL;

                CHECK_OBJECT((PyObject *)tmp_for_loop_1__for_iterator);
                Py_DECREF(tmp_for_loop_1__for_iterator);
                tmp_for_loop_1__for_iterator = NULL;

                {
                    PyObject *tmp_assign_source_31;
                    PyObject *tmp_called_name_5;
                    PyObject *tmp_source_name_44;
                    PyObject *tmp_mvar_value_19;
                    PyObject *tmp_args_name_1;
                    PyObject *tmp_kw_name_4;
                    PyObject *tmp_dict_key_10;
                    PyObject *tmp_dict_value_10;
                    PyObject *tmp_source_name_45;
                    PyObject *tmp_mvar_value_20;
                    PyObject *tmp_dict_key_11;
                    PyObject *tmp_dict_value_11;
                    PyObject *tmp_source_name_46;
                    PyObject *tmp_mvar_value_21;
                    tmp_mvar_value_19 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_subprocess);

                    if (unlikely(tmp_mvar_value_19 == NULL)) {
                        tmp_mvar_value_19 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_subprocess);
                    }

                    if (tmp_mvar_value_19 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 835 ], 39, 0);
                        exception_tb = NULL;

                        exception_lineno = 167;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_source_name_44 = tmp_mvar_value_19;
                    tmp_called_name_5 = LOOKUP_ATTRIBUTE(tmp_source_name_44, const_str_plain_Popen);
                    if (tmp_called_name_5 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 167;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_args_name_1 = DEEP_COPY(const_tuple_list_str_plain_diskpart_list_tuple);
                    tmp_mvar_value_20 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_subprocess);

                    if (unlikely(tmp_mvar_value_20 == NULL)) {
                        tmp_mvar_value_20 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_subprocess);
                    }

                    if (tmp_mvar_value_20 == NULL) {
                        Py_DECREF(tmp_called_name_5);
                        Py_DECREF(tmp_args_name_1);
                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 835 ], 39, 0);
                        exception_tb = NULL;

                        exception_lineno = 167;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_source_name_45 = tmp_mvar_value_20;
                    tmp_dict_value_10 = LOOKUP_ATTRIBUTE(tmp_source_name_45, const_str_plain_PIPE);
                    if (tmp_dict_value_10 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_5);
                        Py_DECREF(tmp_args_name_1);

                        exception_lineno = 167;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_dict_key_10 = const_str_plain_stdin;
                    tmp_kw_name_4 = _PyDict_NewPresized( 2 );
                    tmp_res = PyDict_SetItem(tmp_kw_name_4, tmp_dict_key_10, tmp_dict_value_10);
                    Py_DECREF(tmp_dict_value_10);
                    assert(!(tmp_res != 0));
                    tmp_mvar_value_21 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_subprocess);

                    if (unlikely(tmp_mvar_value_21 == NULL)) {
                        tmp_mvar_value_21 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_subprocess);
                    }

                    if (tmp_mvar_value_21 == NULL) {
                        Py_DECREF(tmp_called_name_5);
                        Py_DECREF(tmp_args_name_1);
                        Py_DECREF(tmp_kw_name_4);
                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 835 ], 39, 0);
                        exception_tb = NULL;

                        exception_lineno = 167;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_source_name_46 = tmp_mvar_value_21;
                    tmp_dict_value_11 = LOOKUP_ATTRIBUTE(tmp_source_name_46, const_str_plain_PIPE);
                    if (tmp_dict_value_11 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_5);
                        Py_DECREF(tmp_args_name_1);
                        Py_DECREF(tmp_kw_name_4);

                        exception_lineno = 167;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_dict_key_11 = const_str_plain_stdout;
                    tmp_res = PyDict_SetItem(tmp_kw_name_4, tmp_dict_key_11, tmp_dict_value_11);
                    Py_DECREF(tmp_dict_value_11);
                    assert(!(tmp_res != 0));
                    frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 167;
                    tmp_assign_source_31 = CALL_FUNCTION(tmp_called_name_5, tmp_args_name_1, tmp_kw_name_4);
                    Py_DECREF(tmp_called_name_5);
                    Py_DECREF(tmp_args_name_1);
                    Py_DECREF(tmp_kw_name_4);
                    if (tmp_assign_source_31 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 167;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    assert(var_p == NULL);
                    var_p = tmp_assign_source_31;
                }
                {
                    PyObject *tmp_assign_source_32;
                    PyObject *tmp_called_name_6;
                    PyObject *tmp_source_name_47;
                    PyObject *tmp_source_name_48;
                    PyObject *tmp_args_element_name_15;
                    PyObject *tmp_left_name_3;
                    PyObject *tmp_left_name_4;
                    PyObject *tmp_right_name_3;
                    PyObject *tmp_right_name_4;
                    CHECK_OBJECT(var_p);
                    tmp_source_name_48 = var_p;
                    tmp_source_name_47 = LOOKUP_ATTRIBUTE(tmp_source_name_48, const_str_plain_stdin);
                    if (tmp_source_name_47 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 168;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_called_name_6 = LOOKUP_ATTRIBUTE(tmp_source_name_47, const_str_plain_write);
                    Py_DECREF(tmp_source_name_47);
                    if (tmp_called_name_6 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 168;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_left_name_4 = const_str_digest_17549804b509a5d0faeadc1a5d0256fa;
                    CHECK_OBJECT(var_usb_dev);
                    tmp_right_name_3 = var_usb_dev;
                    tmp_left_name_3 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_4, tmp_right_name_3);
                    if (tmp_left_name_3 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_6);

                        exception_lineno = 168;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_4 = const_str_newline;
                    tmp_args_element_name_15 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_3, tmp_right_name_4);
                    Py_DECREF(tmp_left_name_3);
                    if (tmp_args_element_name_15 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_6);

                        exception_lineno = 168;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 168;
                    tmp_assign_source_32 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_6, tmp_args_element_name_15);
                    Py_DECREF(tmp_called_name_6);
                    Py_DECREF(tmp_args_element_name_15);
                    if (tmp_assign_source_32 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 168;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    assert(var_res1 == NULL);
                    var_res1 = tmp_assign_source_32;
                }
                {
                    PyObject *tmp_assign_source_33;
                    PyObject *tmp_called_instance_51;
                    PyObject *tmp_source_name_49;
                    CHECK_OBJECT(var_p);
                    tmp_source_name_49 = var_p;
                    tmp_called_instance_51 = LOOKUP_ATTRIBUTE(tmp_source_name_49, const_str_plain_stdin);
                    if (tmp_called_instance_51 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 169;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 169;
                    tmp_assign_source_33 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_51, const_str_plain_write, &PyTuple_GET_ITEM(const_tuple_str_digest_28ac2a2d748125d0d09a88c9c23c1ea8_tuple, 0));

                    Py_DECREF(tmp_called_instance_51);
                    if (tmp_assign_source_33 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 169;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    {
                        PyObject *old = var_res1;
                        assert(old != NULL);
                        var_res1 = tmp_assign_source_33;
                        Py_DECREF(old);
                    }

                }
                {
                    PyObject *tmp_assign_source_34;
                    PyObject *tmp_called_instance_52;
                    PyObject *tmp_source_name_50;
                    CHECK_OBJECT(var_p);
                    tmp_source_name_50 = var_p;
                    tmp_called_instance_52 = LOOKUP_ATTRIBUTE(tmp_source_name_50, const_str_plain_stdin);
                    if (tmp_called_instance_52 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 170;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 170;
                    tmp_assign_source_34 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_52, const_str_plain_write, &PyTuple_GET_ITEM(const_tuple_str_digest_5857891e3f97659e063da200742b49dc_tuple, 0));

                    Py_DECREF(tmp_called_instance_52);
                    if (tmp_assign_source_34 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 170;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    {
                        PyObject *old = var_res1;
                        assert(old != NULL);
                        var_res1 = tmp_assign_source_34;
                        Py_DECREF(old);
                    }

                }
                {
                    PyObject *tmp_assign_source_35;
                    PyObject *tmp_subscribed_name_3;
                    PyObject *tmp_called_instance_53;
                    PyObject *tmp_subscript_name_3;
                    CHECK_OBJECT(var_p);
                    tmp_called_instance_53 = var_p;
                    frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 172;
                    tmp_subscribed_name_3 = CALL_METHOD_NO_ARGS(tmp_called_instance_53, const_str_plain_communicate);
                    if (tmp_subscribed_name_3 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 172;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_subscript_name_3 = const_int_0;
                    tmp_assign_source_35 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_3, tmp_subscript_name_3, 0);
                    Py_DECREF(tmp_subscribed_name_3);
                    if (tmp_assign_source_35 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 172;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    assert(var_output == NULL);
                    var_output = tmp_assign_source_35;
                }
                {
                    PyObject *tmp_assign_source_36;
                    PyObject *tmp_iter_arg_2;
                    PyObject *tmp_range_arg_2;
                    PyObject *tmp_len_arg_4;
                    PyObject *tmp_source_name_51;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_51 = par_ui;
                    tmp_len_arg_4 = LOOKUP_ATTRIBUTE(tmp_source_name_51, const_str_plain_devs_list);
                    if (tmp_len_arg_4 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 173;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_range_arg_2 = BUILTIN_LEN(tmp_len_arg_4);
                    Py_DECREF(tmp_len_arg_4);
                    if (tmp_range_arg_2 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 173;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_iter_arg_2 = BUILTIN_RANGE(tmp_range_arg_2);
                    Py_DECREF(tmp_range_arg_2);
                    if (tmp_iter_arg_2 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 173;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_assign_source_36 = MAKE_ITERATOR(tmp_iter_arg_2);
                    Py_DECREF(tmp_iter_arg_2);
                    if (tmp_assign_source_36 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 173;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    assert(tmp_for_loop_2__for_iterator == NULL);
                    tmp_for_loop_2__for_iterator = tmp_assign_source_36;
                }
                // Tried code:
                loop_start_3:;
                {
                    PyObject *tmp_next_source_2;
                    PyObject *tmp_assign_source_37;
                    CHECK_OBJECT(tmp_for_loop_2__for_iterator);
                    tmp_next_source_2 = tmp_for_loop_2__for_iterator;
                    tmp_assign_source_37 = ITERATOR_NEXT(tmp_next_source_2);
                    if (tmp_assign_source_37 == NULL) {
                        if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                            goto loop_end_3;
                        } else {

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            exception_lineno = 173;
                            goto try_except_handler_3;
                        }
                    }

                    {
                        PyObject *old = tmp_for_loop_2__iter_value;
                        tmp_for_loop_2__iter_value = tmp_assign_source_37;
                        Py_XDECREF(old);
                    }

                }
                {
                    PyObject *tmp_assign_source_38;
                    CHECK_OBJECT(tmp_for_loop_2__iter_value);
                    tmp_assign_source_38 = tmp_for_loop_2__iter_value;
                    {
                        PyObject *old = var_j;
                        var_j = tmp_assign_source_38;
                        Py_INCREF(var_j);
                        Py_XDECREF(old);
                    }

                }
                {
                    PyObject *tmp_called_name_7;
                    PyObject *tmp_mvar_value_22;
                    PyObject *tmp_call_result_31;
                    PyObject *tmp_args_element_name_16;
                    tmp_mvar_value_22 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_postlock);

                    if (unlikely(tmp_mvar_value_22 == NULL)) {
                        tmp_mvar_value_22 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_postlock);
                    }

                    if (tmp_mvar_value_22 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 5058 ], 37, 0);
                        exception_tb = NULL;

                        exception_lineno = 174;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto try_except_handler_3;
                    }

                    tmp_called_name_7 = tmp_mvar_value_22;
                    CHECK_OBJECT(var_j);
                    tmp_args_element_name_16 = var_j;
                    frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 174;
                    tmp_call_result_31 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_7, tmp_args_element_name_16);
                    if (tmp_call_result_31 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 174;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto try_except_handler_3;
                    }
                    Py_DECREF(tmp_call_result_31);
                }
                if (CONSIDER_THREADING() == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 173;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto try_except_handler_3;
                }
                goto loop_start_3;
                loop_end_3:;
                goto try_end_2;
                // Exception handler code:
                try_except_handler_3:;
                exception_keeper_type_2 = exception_type;
                exception_keeper_value_2 = exception_value;
                exception_keeper_tb_2 = exception_tb;
                exception_keeper_lineno_2 = exception_lineno;
                exception_type = NULL;
                exception_value = NULL;
                exception_tb = NULL;
                exception_lineno = 0;

                Py_XDECREF(tmp_for_loop_2__iter_value);
                tmp_for_loop_2__iter_value = NULL;

                CHECK_OBJECT((PyObject *)tmp_for_loop_2__for_iterator);
                Py_DECREF(tmp_for_loop_2__for_iterator);
                tmp_for_loop_2__for_iterator = NULL;

                // Re-raise.
                exception_type = exception_keeper_type_2;
                exception_value = exception_keeper_value_2;
                exception_tb = exception_keeper_tb_2;
                exception_lineno = exception_keeper_lineno_2;

                goto frame_exception_exit_1;
                // End of try:
                try_end_2:;
                Py_XDECREF(tmp_for_loop_2__iter_value);
                tmp_for_loop_2__iter_value = NULL;

                CHECK_OBJECT((PyObject *)tmp_for_loop_2__for_iterator);
                Py_DECREF(tmp_for_loop_2__for_iterator);
                tmp_for_loop_2__for_iterator = NULL;

                {
                    PyObject *tmp_assign_source_39;
                    PyObject *tmp_called_instance_54;
                    PyObject *tmp_mvar_value_23;
                    PyObject *tmp_args_element_name_17;
                    PyObject *tmp_args_element_name_18;
                    tmp_mvar_value_23 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

                    if (unlikely(tmp_mvar_value_23 == NULL)) {
                        tmp_mvar_value_23 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
                    }

                    if (tmp_mvar_value_23 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
                        exception_tb = NULL;

                        exception_lineno = 178;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_called_instance_54 = tmp_mvar_value_23;
                    tmp_args_element_name_17 = const_str_digest_deff663361aa8c2f12d71e786d757b70;
                    CHECK_OBJECT(var_output);
                    tmp_args_element_name_18 = var_output;
                    frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 178;
                    {
                        PyObject *call_args[] = {tmp_args_element_name_17, tmp_args_element_name_18};
                        tmp_assign_source_39 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_54, const_str_plain_findall, call_args);
                    }

                    if (tmp_assign_source_39 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 178;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    assert(var_list_v == NULL);
                    var_list_v = tmp_assign_source_39;
                }
                {
                    nuitka_bool tmp_condition_result_19;
                    PyObject *tmp_compexpr_left_17;
                    PyObject *tmp_compexpr_right_17;
                    CHECK_OBJECT(var_list_v);
                    tmp_compexpr_left_17 = var_list_v;
                    tmp_compexpr_right_17 = PyList_New(0);
                    tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_17, tmp_compexpr_right_17);
                    Py_DECREF(tmp_compexpr_right_17);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 179;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_condition_result_19 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_19 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_19;
                    } else {
                        goto branch_no_19;
                    }
                    branch_yes_19:;
                    {
                        PyObject *tmp_assign_source_40;
                        PyObject *tmp_left_name_5;
                        PyObject *tmp_subscribed_name_4;
                        PyObject *tmp_subscript_name_4;
                        PyObject *tmp_right_name_5;
                        CHECK_OBJECT(var_list_v);
                        tmp_subscribed_name_4 = var_list_v;
                        tmp_subscript_name_4 = const_int_0;
                        tmp_left_name_5 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_4, tmp_subscript_name_4, 0);
                        if (tmp_left_name_5 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 180;
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_5 = const_str_digest_57b3a385d4fb10c0e6d10f4192f7bb01;
                        tmp_assign_source_40 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_5, tmp_right_name_5);
                        Py_DECREF(tmp_left_name_5);
                        if (tmp_assign_source_40 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 180;
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        {
                            PyObject *old = var_drive;
                            assert(old != NULL);
                            var_drive = tmp_assign_source_40;
                            Py_DECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assattr_name_6;
                        PyObject *tmp_left_name_6;
                        PyObject *tmp_subscribed_name_5;
                        PyObject *tmp_subscript_name_5;
                        PyObject *tmp_right_name_6;
                        PyObject *tmp_assattr_target_6;
                        CHECK_OBJECT(var_list_v);
                        tmp_subscribed_name_5 = var_list_v;
                        tmp_subscript_name_5 = const_int_0;
                        tmp_left_name_6 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_5, tmp_subscript_name_5, 0);
                        if (tmp_left_name_6 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 181;
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_6 = const_str_chr_58;
                        tmp_assattr_name_6 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_6, tmp_right_name_6);
                        Py_DECREF(tmp_left_name_6);
                        if (tmp_assattr_name_6 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 181;
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_assattr_target_6 = par_ui;
                        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_6, const_str_plain_pass_dir, tmp_assattr_name_6);
                        Py_DECREF(tmp_assattr_name_6);
                        if (tmp_result == false) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 181;
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                    }
                    branch_no_19:;
                }
                goto branch_end_18;
                branch_no_18:;
                {
                    nuitka_bool tmp_condition_result_20;
                    PyObject *tmp_compexpr_left_18;
                    PyObject *tmp_compexpr_right_18;
                    PyObject *tmp_source_name_52;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_52 = par_ui;
                    tmp_compexpr_left_18 = LOOKUP_ATTRIBUTE(tmp_source_name_52, const_str_plain_DEV_OS);
                    if (tmp_compexpr_left_18 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 186;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_compexpr_right_18 = const_str_plain_Linux;
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_18, tmp_compexpr_right_18);
                    Py_DECREF(tmp_compexpr_left_18);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 186;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_condition_result_20 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_20 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_20;
                    } else {
                        goto branch_no_20;
                    }
                    branch_yes_20:;
                    {
                        PyObject *tmp_assign_source_41;
                        PyObject *tmp_subscribed_name_6;
                        PyObject *tmp_subscribed_name_7;
                        PyObject *tmp_source_name_53;
                        PyObject *tmp_subscript_name_6;
                        PyObject *tmp_subscript_name_7;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_53 = par_ui;
                        tmp_subscribed_name_7 = LOOKUP_ATTRIBUTE(tmp_source_name_53, const_str_plain_usb_list);
                        if (tmp_subscribed_name_7 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 187;
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(var_index2);
                        tmp_subscript_name_6 = var_index2;
                        tmp_subscribed_name_6 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_7, tmp_subscript_name_6);
                        Py_DECREF(tmp_subscribed_name_7);
                        if (tmp_subscribed_name_6 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 187;
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_subscript_name_7 = const_int_pos_1;
                        tmp_assign_source_41 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_6, tmp_subscript_name_7, 1);
                        Py_DECREF(tmp_subscribed_name_6);
                        if (tmp_assign_source_41 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 187;
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        {
                            PyObject *old = var_drive;
                            assert(old != NULL);
                            var_drive = tmp_assign_source_41;
                            Py_DECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assattr_name_7;
                        PyObject *tmp_assattr_target_7;
                        CHECK_OBJECT(var_drive);
                        tmp_assattr_name_7 = var_drive;
                        CHECK_OBJECT(par_ui);
                        tmp_assattr_target_7 = par_ui;
                        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_7, const_str_plain_pass_dir, tmp_assattr_name_7);
                        if (tmp_result == false) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 188;
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                    }
                    branch_no_20:;
                }
                branch_end_18:;
            }
            {
                nuitka_bool tmp_condition_result_21;
                int tmp_and_left_truth_4;
                nuitka_bool tmp_and_left_value_4;
                nuitka_bool tmp_and_right_value_4;
                PyObject *tmp_compexpr_left_19;
                PyObject *tmp_compexpr_right_19;
                PyObject *tmp_called_name_8;
                PyObject *tmp_source_name_54;
                PyObject *tmp_source_name_55;
                PyObject *tmp_mvar_value_24;
                PyObject *tmp_call_result_32;
                PyObject *tmp_args_element_name_19;
                int tmp_truth_name_6;
                if (var_drive == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "drive");
                    exception_tb = NULL;

                    exception_lineno = 193;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_compexpr_left_19 = var_drive;
                tmp_compexpr_right_19 = const_str_empty;
                tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_19, tmp_compexpr_right_19);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 193;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_and_left_value_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                tmp_and_left_truth_4 = tmp_and_left_value_4 == NUITKA_BOOL_TRUE ? 1 : 0;
                if (tmp_and_left_truth_4 == 1) {
                    goto and_right_4;
                } else {
                    goto and_left_4;
                }
                and_right_4:;
                tmp_mvar_value_24 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                if (unlikely(tmp_mvar_value_24 == NULL)) {
                    tmp_mvar_value_24 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                }

                if (tmp_mvar_value_24 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                    exception_tb = NULL;

                    exception_lineno = 193;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_source_name_55 = tmp_mvar_value_24;
                tmp_source_name_54 = LOOKUP_ATTRIBUTE(tmp_source_name_55, const_str_plain_path);
                if (tmp_source_name_54 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 193;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_called_name_8 = LOOKUP_ATTRIBUTE(tmp_source_name_54, const_str_plain_isdir);
                Py_DECREF(tmp_source_name_54);
                if (tmp_called_name_8 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 193;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                if (var_drive == NULL) {
                    Py_DECREF(tmp_called_name_8);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "drive");
                    exception_tb = NULL;

                    exception_lineno = 193;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_args_element_name_19 = var_drive;
                frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 193;
                tmp_call_result_32 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_8, tmp_args_element_name_19);
                Py_DECREF(tmp_called_name_8);
                if (tmp_call_result_32 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 193;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_truth_name_6 = CHECK_IF_TRUE(tmp_call_result_32);
                if (tmp_truth_name_6 == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_call_result_32);

                    exception_lineno = 193;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_and_right_value_4 = tmp_truth_name_6 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                Py_DECREF(tmp_call_result_32);
                tmp_condition_result_21 = tmp_and_right_value_4;
                goto and_end_4;
                and_left_4:;
                tmp_condition_result_21 = tmp_and_left_value_4;
                and_end_4:;
                if (tmp_condition_result_21 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_21;
                } else {
                    goto branch_no_21;
                }
                branch_yes_21:;
                {
                    PyObject *tmp_assign_source_42;
                    PyObject *tmp_left_name_7;
                    PyObject *tmp_right_name_7;
                    if (var_drive == NULL) {

                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "drive");
                        exception_tb = NULL;

                        exception_lineno = 194;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_left_name_7 = var_drive;
                    tmp_right_name_7 = const_str_digest_4927d8947aa11be5037039c09aabf3b0;
                    tmp_assign_source_42 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_7, tmp_right_name_7);
                    if (tmp_assign_source_42 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 194;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    assert(var_dir_fl == NULL);
                    var_dir_fl = tmp_assign_source_42;
                }
                {
                    nuitka_bool tmp_condition_result_22;
                    PyObject *tmp_called_instance_55;
                    PyObject *tmp_source_name_56;
                    PyObject *tmp_mvar_value_25;
                    PyObject *tmp_call_result_33;
                    PyObject *tmp_args_element_name_20;
                    int tmp_truth_name_7;
                    tmp_mvar_value_25 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                    if (unlikely(tmp_mvar_value_25 == NULL)) {
                        tmp_mvar_value_25 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                    }

                    if (tmp_mvar_value_25 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                        exception_tb = NULL;

                        exception_lineno = 195;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_source_name_56 = tmp_mvar_value_25;
                    tmp_called_instance_55 = LOOKUP_ATTRIBUTE(tmp_source_name_56, const_str_plain_path);
                    if (tmp_called_instance_55 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 195;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(var_dir_fl);
                    tmp_args_element_name_20 = var_dir_fl;
                    frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 195;
                    {
                        PyObject *call_args[] = {tmp_args_element_name_20};
                        tmp_call_result_33 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_55, const_str_plain_isdir, call_args);
                    }

                    Py_DECREF(tmp_called_instance_55);
                    if (tmp_call_result_33 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 195;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_truth_name_7 = CHECK_IF_TRUE(tmp_call_result_33);
                    if (tmp_truth_name_7 == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_call_result_33);

                        exception_lineno = 195;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_condition_result_22 = tmp_truth_name_7 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    Py_DECREF(tmp_call_result_33);
                    if (tmp_condition_result_22 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_22;
                    } else {
                        goto branch_no_22;
                    }
                    branch_yes_22:;
                    {
                        PyObject *tmp_assign_source_43;
                        // Tried code:
                        {
                            PyObject *tmp_assign_source_44;
                            PyObject *tmp_iter_arg_3;
                            PyObject *tmp_called_instance_56;
                            PyObject *tmp_mvar_value_26;
                            PyObject *tmp_args_element_name_21;
                            tmp_mvar_value_26 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                            if (unlikely(tmp_mvar_value_26 == NULL)) {
                                tmp_mvar_value_26 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                            }

                            if (tmp_mvar_value_26 == NULL) {

                                exception_type = PyExc_NameError;
                                Py_INCREF(exception_type);
                                exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                                exception_tb = NULL;

                                exception_lineno = 196;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_4;
                            }

                            tmp_called_instance_56 = tmp_mvar_value_26;
                            CHECK_OBJECT(var_dir_fl);
                            tmp_args_element_name_21 = var_dir_fl;
                            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 196;
                            {
                                PyObject *call_args[] = {tmp_args_element_name_21};
                                tmp_iter_arg_3 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_56, const_str_plain_listdir, call_args);
                            }

                            if (tmp_iter_arg_3 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 196;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_4;
                            }
                            tmp_assign_source_44 = MAKE_ITERATOR(tmp_iter_arg_3);
                            Py_DECREF(tmp_iter_arg_3);
                            if (tmp_assign_source_44 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 196;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_4;
                            }
                            assert(tmp_list_contraction_1__$0 == NULL);
                            tmp_list_contraction_1__$0 = tmp_assign_source_44;
                        }
                        {
                            PyObject *tmp_assign_source_45;
                            tmp_assign_source_45 = PyList_New(0);
                            assert(tmp_list_contraction_1__contraction_result == NULL);
                            tmp_list_contraction_1__contraction_result = tmp_assign_source_45;
                        }
                        loop_start_4:;
                        {
                            PyObject *tmp_next_source_3;
                            PyObject *tmp_assign_source_46;
                            CHECK_OBJECT(tmp_list_contraction_1__$0);
                            tmp_next_source_3 = tmp_list_contraction_1__$0;
                            tmp_assign_source_46 = ITERATOR_NEXT(tmp_next_source_3);
                            if (tmp_assign_source_46 == NULL) {
                                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                                    goto loop_end_4;
                                } else {

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                    exception_lineno = 196;
                                    goto try_except_handler_4;
                                }
                            }

                            {
                                PyObject *old = tmp_list_contraction_1__iter_value_0;
                                tmp_list_contraction_1__iter_value_0 = tmp_assign_source_46;
                                Py_XDECREF(old);
                            }

                        }
                        {
                            PyObject *tmp_assign_source_47;
                            CHECK_OBJECT(tmp_list_contraction_1__iter_value_0);
                            tmp_assign_source_47 = tmp_list_contraction_1__iter_value_0;
                            {
                                PyObject *old = var_f;
                                var_f = tmp_assign_source_47;
                                Py_INCREF(var_f);
                                Py_XDECREF(old);
                            }

                        }
                        {
                            nuitka_bool tmp_condition_result_23;
                            PyObject *tmp_called_name_9;
                            PyObject *tmp_source_name_57;
                            PyObject *tmp_source_name_58;
                            PyObject *tmp_mvar_value_27;
                            PyObject *tmp_call_result_34;
                            PyObject *tmp_args_element_name_22;
                            PyObject *tmp_left_name_8;
                            PyObject *tmp_right_name_8;
                            int tmp_truth_name_8;
                            tmp_mvar_value_27 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                            if (unlikely(tmp_mvar_value_27 == NULL)) {
                                tmp_mvar_value_27 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                            }

                            if (tmp_mvar_value_27 == NULL) {

                                exception_type = PyExc_NameError;
                                Py_INCREF(exception_type);
                                exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                                exception_tb = NULL;

                                exception_lineno = 196;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_4;
                            }

                            tmp_source_name_58 = tmp_mvar_value_27;
                            tmp_source_name_57 = LOOKUP_ATTRIBUTE(tmp_source_name_58, const_str_plain_path);
                            if (tmp_source_name_57 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 196;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_4;
                            }
                            tmp_called_name_9 = LOOKUP_ATTRIBUTE(tmp_source_name_57, const_str_plain_isfile);
                            Py_DECREF(tmp_source_name_57);
                            if (tmp_called_name_9 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 196;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_4;
                            }
                            CHECK_OBJECT(var_dir_fl);
                            tmp_left_name_8 = var_dir_fl;
                            CHECK_OBJECT(var_f);
                            tmp_right_name_8 = var_f;
                            tmp_args_element_name_22 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_8, tmp_right_name_8);
                            if (tmp_args_element_name_22 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_9);

                                exception_lineno = 196;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_4;
                            }
                            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 196;
                            tmp_call_result_34 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_9, tmp_args_element_name_22);
                            Py_DECREF(tmp_called_name_9);
                            Py_DECREF(tmp_args_element_name_22);
                            if (tmp_call_result_34 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 196;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_4;
                            }
                            tmp_truth_name_8 = CHECK_IF_TRUE(tmp_call_result_34);
                            if (tmp_truth_name_8 == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_call_result_34);

                                exception_lineno = 196;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_4;
                            }
                            tmp_condition_result_23 = tmp_truth_name_8 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            Py_DECREF(tmp_call_result_34);
                            if (tmp_condition_result_23 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_23;
                            } else {
                                goto branch_no_23;
                            }
                            branch_yes_23:;
                            {
                                PyObject *tmp_append_list_1;
                                PyObject *tmp_append_value_1;
                                CHECK_OBJECT(tmp_list_contraction_1__contraction_result);
                                tmp_append_list_1 = tmp_list_contraction_1__contraction_result;
                                CHECK_OBJECT(var_f);
                                tmp_append_value_1 = var_f;
                                assert(PyList_Check(tmp_append_list_1));
                                tmp_res = PyList_Append(tmp_append_list_1, tmp_append_value_1);
                                if (tmp_res == -1) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 196;
                                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                    goto try_except_handler_4;
                                }
                            }
                            branch_no_23:;
                        }
                        if (CONSIDER_THREADING() == false) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 196;
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            goto try_except_handler_4;
                        }
                        goto loop_start_4;
                        loop_end_4:;
                        CHECK_OBJECT(tmp_list_contraction_1__contraction_result);
                        tmp_assign_source_43 = tmp_list_contraction_1__contraction_result;
                        Py_INCREF(tmp_assign_source_43);
                        goto try_return_handler_4;
                        // tried codes exits in all cases
                        NUITKA_CANNOT_GET_HERE(runop$$$function_4_run_setupFull);
                        return NULL;
                        // Return handler code:
                        try_return_handler_4:;
                        CHECK_OBJECT((PyObject *)tmp_list_contraction_1__$0);
                        Py_DECREF(tmp_list_contraction_1__$0);
                        tmp_list_contraction_1__$0 = NULL;

                        CHECK_OBJECT((PyObject *)tmp_list_contraction_1__contraction_result);
                        Py_DECREF(tmp_list_contraction_1__contraction_result);
                        tmp_list_contraction_1__contraction_result = NULL;

                        Py_XDECREF(tmp_list_contraction_1__iter_value_0);
                        tmp_list_contraction_1__iter_value_0 = NULL;

                        goto outline_result_1;
                        // Exception handler code:
                        try_except_handler_4:;
                        exception_keeper_type_3 = exception_type;
                        exception_keeper_value_3 = exception_value;
                        exception_keeper_tb_3 = exception_tb;
                        exception_keeper_lineno_3 = exception_lineno;
                        exception_type = NULL;
                        exception_value = NULL;
                        exception_tb = NULL;
                        exception_lineno = 0;

                        Py_XDECREF(tmp_list_contraction_1__$0);
                        tmp_list_contraction_1__$0 = NULL;

                        Py_XDECREF(tmp_list_contraction_1__contraction_result);
                        tmp_list_contraction_1__contraction_result = NULL;

                        Py_XDECREF(tmp_list_contraction_1__iter_value_0);
                        tmp_list_contraction_1__iter_value_0 = NULL;

                        // Re-raise.
                        exception_type = exception_keeper_type_3;
                        exception_value = exception_keeper_value_3;
                        exception_tb = exception_keeper_tb_3;
                        exception_lineno = exception_keeper_lineno_3;

                        goto frame_exception_exit_1;
                        // End of try:
                        // Return statement must have exited already.
                        NUITKA_CANNOT_GET_HERE(runop$$$function_4_run_setupFull);
                        return NULL;
                        outline_result_1:;
                        assert(var_existingfiles == NULL);
                        var_existingfiles = tmp_assign_source_43;
                    }
                    {
                        nuitka_bool tmp_condition_result_24;
                        PyObject *tmp_compexpr_left_20;
                        PyObject *tmp_compexpr_right_20;
                        PyObject *tmp_len_arg_5;
                        CHECK_OBJECT(var_existingfiles);
                        tmp_len_arg_5 = var_existingfiles;
                        tmp_compexpr_left_20 = BUILTIN_LEN(tmp_len_arg_5);
                        if (tmp_compexpr_left_20 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 197;
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_compexpr_right_20 = const_int_0;
                        tmp_res = RICH_COMPARE_BOOL_GT_OBJECT_INT(tmp_compexpr_left_20, tmp_compexpr_right_20);
                        Py_DECREF(tmp_compexpr_left_20);
                        assert(!(tmp_res == -1));
                        tmp_condition_result_24 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_24 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_24;
                        } else {
                            goto branch_no_24;
                        }
                        branch_yes_24:;
                        {
                            PyObject *tmp_assign_source_48;
                            PyObject *tmp_iter_arg_4;
                            CHECK_OBJECT(var_existingfiles);
                            tmp_iter_arg_4 = var_existingfiles;
                            tmp_assign_source_48 = MAKE_ITERATOR(tmp_iter_arg_4);
                            if (tmp_assign_source_48 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 198;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto frame_exception_exit_1;
                            }
                            assert(tmp_for_loop_3__for_iterator == NULL);
                            tmp_for_loop_3__for_iterator = tmp_assign_source_48;
                        }
                        // Tried code:
                        loop_start_5:;
                        {
                            PyObject *tmp_next_source_4;
                            PyObject *tmp_assign_source_49;
                            CHECK_OBJECT(tmp_for_loop_3__for_iterator);
                            tmp_next_source_4 = tmp_for_loop_3__for_iterator;
                            tmp_assign_source_49 = ITERATOR_NEXT(tmp_next_source_4);
                            if (tmp_assign_source_49 == NULL) {
                                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                                    goto loop_end_5;
                                } else {

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                    exception_lineno = 198;
                                    goto try_except_handler_5;
                                }
                            }

                            {
                                PyObject *old = tmp_for_loop_3__iter_value;
                                tmp_for_loop_3__iter_value = tmp_assign_source_49;
                                Py_XDECREF(old);
                            }

                        }
                        {
                            PyObject *tmp_assign_source_50;
                            CHECK_OBJECT(tmp_for_loop_3__iter_value);
                            tmp_assign_source_50 = tmp_for_loop_3__iter_value;
                            {
                                PyObject *old = var_p;
                                var_p = tmp_assign_source_50;
                                Py_INCREF(var_p);
                                Py_XDECREF(old);
                            }

                        }
                        // Tried code:
                        {
                            PyObject *tmp_assign_source_51;
                            PyObject *tmp_open_filename_1;
                            PyObject *tmp_left_name_9;
                            PyObject *tmp_right_name_9;
                            PyObject *tmp_open_mode_1;
                            CHECK_OBJECT(var_dir_fl);
                            tmp_left_name_9 = var_dir_fl;
                            CHECK_OBJECT(var_p);
                            tmp_right_name_9 = var_p;
                            tmp_open_filename_1 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_9, tmp_right_name_9);
                            if (tmp_open_filename_1 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 200;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_6;
                            }
                            tmp_open_mode_1 = const_str_plain_r;
                            tmp_assign_source_51 = BUILTIN_OPEN(tmp_open_filename_1, tmp_open_mode_1, NULL);
                            Py_DECREF(tmp_open_filename_1);
                            if (tmp_assign_source_51 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 200;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_6;
                            }
                            {
                                PyObject *old = var_f;
                                var_f = tmp_assign_source_51;
                                Py_XDECREF(old);
                            }

                        }
                        {
                            PyObject *tmp_assign_source_52;
                            PyObject *tmp_called_instance_57;
                            CHECK_OBJECT(var_f);
                            tmp_called_instance_57 = var_f;
                            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 201;
                            tmp_assign_source_52 = CALL_METHOD_NO_ARGS(tmp_called_instance_57, const_str_plain_read);
                            if (tmp_assign_source_52 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 201;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_6;
                            }
                            {
                                PyObject *old = var_txt;
                                var_txt = tmp_assign_source_52;
                                Py_XDECREF(old);
                            }

                        }
                        {
                            PyObject *tmp_called_instance_58;
                            PyObject *tmp_call_result_35;
                            CHECK_OBJECT(var_f);
                            tmp_called_instance_58 = var_f;
                            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 202;
                            tmp_call_result_35 = CALL_METHOD_NO_ARGS(tmp_called_instance_58, const_str_plain_close);
                            if (tmp_call_result_35 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 202;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_6;
                            }
                            Py_DECREF(tmp_call_result_35);
                        }
                        {
                            PyObject *tmp_assign_source_53;
                            PyObject *tmp_tuple_element_1;
                            PyObject *tmp_left_name_10;
                            PyObject *tmp_right_name_10;
                            CHECK_OBJECT(var_dir_fl);
                            tmp_left_name_10 = var_dir_fl;
                            CHECK_OBJECT(var_p);
                            tmp_right_name_10 = var_p;
                            tmp_tuple_element_1 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_10, tmp_right_name_10);
                            if (tmp_tuple_element_1 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 203;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_6;
                            }
                            tmp_assign_source_53 = PyTuple_New(2);
                            PyTuple_SET_ITEM(tmp_assign_source_53, 0, tmp_tuple_element_1);
                            CHECK_OBJECT(var_txt);
                            tmp_tuple_element_1 = var_txt;
                            Py_INCREF(tmp_tuple_element_1);
                            PyTuple_SET_ITEM(tmp_assign_source_53, 1, tmp_tuple_element_1);
                            {
                                PyObject *old = var_tp;
                                var_tp = tmp_assign_source_53;
                                Py_XDECREF(old);
                            }

                        }
                        {
                            PyObject *tmp_called_instance_59;
                            PyObject *tmp_call_result_36;
                            PyObject *tmp_args_element_name_23;
                            CHECK_OBJECT(var_preserved_files);
                            tmp_called_instance_59 = var_preserved_files;
                            CHECK_OBJECT(var_tp);
                            tmp_args_element_name_23 = var_tp;
                            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 204;
                            {
                                PyObject *call_args[] = {tmp_args_element_name_23};
                                tmp_call_result_36 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_59, const_str_plain_append, call_args);
                            }

                            if (tmp_call_result_36 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 204;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_6;
                            }
                            Py_DECREF(tmp_call_result_36);
                        }
                        goto try_end_3;
                        // Exception handler code:
                        try_except_handler_6:;
                        exception_keeper_type_4 = exception_type;
                        exception_keeper_value_4 = exception_value;
                        exception_keeper_tb_4 = exception_tb;
                        exception_keeper_lineno_4 = exception_lineno;
                        exception_type = NULL;
                        exception_value = NULL;
                        exception_tb = NULL;
                        exception_lineno = 0;

                        // Preserve existing published exception.
                        PRESERVE_FRAME_EXCEPTION(frame_6b526a20a2c31b45221ec586b02b4694);
                        if (exception_keeper_tb_4 == NULL) {
                            exception_keeper_tb_4 = MAKE_TRACEBACK(frame_6b526a20a2c31b45221ec586b02b4694, exception_keeper_lineno_4);
                        } else if (exception_keeper_lineno_4 != 0) {
                            exception_keeper_tb_4 = ADD_TRACEBACK(exception_keeper_tb_4, frame_6b526a20a2c31b45221ec586b02b4694, exception_keeper_lineno_4);
                        }

                        NORMALIZE_EXCEPTION(&exception_keeper_type_4, &exception_keeper_value_4, &exception_keeper_tb_4);
                        PUBLISH_EXCEPTION(&exception_keeper_type_4, &exception_keeper_value_4, &exception_keeper_tb_4);
                        {
                            nuitka_bool tmp_condition_result_25;
                            PyObject *tmp_operand_name_4;
                            PyObject *tmp_compexpr_left_21;
                            PyObject *tmp_compexpr_right_21;
                            tmp_compexpr_left_21 = EXC_TYPE(PyThreadState_GET());
                            tmp_compexpr_right_21 = PyExc_IOError;
                            tmp_res = EXCEPTION_MATCH_BOOL(tmp_compexpr_left_21, tmp_compexpr_right_21);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 205;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_5;
                            }
                            tmp_operand_name_4 = (tmp_res != 0) ? Py_True : Py_False;
                            tmp_res = CHECK_IF_TRUE(tmp_operand_name_4);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 205;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_5;
                            }
                            tmp_condition_result_25 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            if (tmp_condition_result_25 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_25;
                            } else {
                                goto branch_no_25;
                            }
                            branch_yes_25:;
                            tmp_result = RERAISE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                            if (unlikely(tmp_result == false)) {
                                exception_lineno = 199;
                            }

                            if (exception_tb && exception_tb->tb_frame == &frame_6b526a20a2c31b45221ec586b02b4694->m_frame) frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = exception_tb->tb_lineno;
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            goto try_except_handler_5;
                            branch_no_25:;
                        }
                        goto try_end_3;
                        // exception handler codes exits in all cases
                        NUITKA_CANNOT_GET_HERE(runop$$$function_4_run_setupFull);
                        return NULL;
                        // End of try:
                        try_end_3:;
                        if (CONSIDER_THREADING() == false) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 198;
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            goto try_except_handler_5;
                        }
                        goto loop_start_5;
                        loop_end_5:;
                        goto try_end_4;
                        // Exception handler code:
                        try_except_handler_5:;
                        exception_keeper_type_5 = exception_type;
                        exception_keeper_value_5 = exception_value;
                        exception_keeper_tb_5 = exception_tb;
                        exception_keeper_lineno_5 = exception_lineno;
                        exception_type = NULL;
                        exception_value = NULL;
                        exception_tb = NULL;
                        exception_lineno = 0;

                        Py_XDECREF(tmp_for_loop_3__iter_value);
                        tmp_for_loop_3__iter_value = NULL;

                        CHECK_OBJECT((PyObject *)tmp_for_loop_3__for_iterator);
                        Py_DECREF(tmp_for_loop_3__for_iterator);
                        tmp_for_loop_3__for_iterator = NULL;

                        // Re-raise.
                        exception_type = exception_keeper_type_5;
                        exception_value = exception_keeper_value_5;
                        exception_tb = exception_keeper_tb_5;
                        exception_lineno = exception_keeper_lineno_5;

                        goto frame_exception_exit_1;
                        // End of try:
                        try_end_4:;
                        Py_XDECREF(tmp_for_loop_3__iter_value);
                        tmp_for_loop_3__iter_value = NULL;

                        CHECK_OBJECT((PyObject *)tmp_for_loop_3__for_iterator);
                        Py_DECREF(tmp_for_loop_3__for_iterator);
                        tmp_for_loop_3__for_iterator = NULL;

                        branch_no_24:;
                    }
                    branch_no_22:;
                }
                branch_no_21:;
            }
            branch_no_17:;
        }
        {
            nuitka_bool tmp_condition_result_26;
            PyObject *tmp_compexpr_left_22;
            PyObject *tmp_compexpr_right_22;
            PyObject *tmp_source_name_59;
            CHECK_OBJECT(par_ui);
            tmp_source_name_59 = par_ui;
            tmp_compexpr_left_22 = LOOKUP_ATTRIBUTE(tmp_source_name_59, const_str_plain_DEV_OS);
            if (tmp_compexpr_left_22 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 210;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_22 = const_str_plain_Windows;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_22, tmp_compexpr_right_22);
            Py_DECREF(tmp_compexpr_left_22);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 210;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_26 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_26 == NUITKA_BOOL_TRUE) {
                goto branch_yes_26;
            } else {
                goto branch_no_26;
            }
            branch_yes_26:;
            {
                PyObject *tmp_assign_source_54;
                PyObject *tmp_called_instance_60;
                PyObject *tmp_called_name_10;
                PyObject *tmp_source_name_60;
                PyObject *tmp_mvar_value_28;
                PyObject *tmp_args_element_name_24;
                PyObject *tmp_left_name_11;
                PyObject *tmp_source_name_61;
                PyObject *tmp_right_name_11;
                tmp_mvar_value_28 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                if (unlikely(tmp_mvar_value_28 == NULL)) {
                    tmp_mvar_value_28 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                }

                if (tmp_mvar_value_28 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                    exception_tb = NULL;

                    exception_lineno = 211;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_source_name_60 = tmp_mvar_value_28;
                tmp_called_name_10 = LOOKUP_ATTRIBUTE(tmp_source_name_60, const_str_plain_popen);
                if (tmp_called_name_10 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 211;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                CHECK_OBJECT(par_ui);
                tmp_source_name_61 = par_ui;
                tmp_left_name_11 = LOOKUP_ATTRIBUTE(tmp_source_name_61, const_str_plain_prefix);
                if (tmp_left_name_11 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_10);

                    exception_lineno = 211;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_right_name_11 = const_str_digest_8c96842b8b2bfd9741967a12c4a512ae;
                tmp_args_element_name_24 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_11, tmp_right_name_11);
                Py_DECREF(tmp_left_name_11);
                if (tmp_args_element_name_24 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_10);

                    exception_lineno = 211;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 211;
                tmp_called_instance_60 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_10, tmp_args_element_name_24);
                Py_DECREF(tmp_called_name_10);
                Py_DECREF(tmp_args_element_name_24);
                if (tmp_called_instance_60 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 211;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 211;
                tmp_assign_source_54 = CALL_METHOD_NO_ARGS(tmp_called_instance_60, const_str_plain_read);
                Py_DECREF(tmp_called_instance_60);
                if (tmp_assign_source_54 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 211;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                {
                    PyObject *old = var_txt;
                    var_txt = tmp_assign_source_54;
                    Py_XDECREF(old);
                }

            }
            {
                PyObject *tmp_assign_source_55;
                PyObject *tmp_called_instance_61;
                PyObject *tmp_mvar_value_29;
                PyObject *tmp_args_element_name_25;
                PyObject *tmp_args_element_name_26;
                tmp_mvar_value_29 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

                if (unlikely(tmp_mvar_value_29 == NULL)) {
                    tmp_mvar_value_29 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
                }

                if (tmp_mvar_value_29 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
                    exception_tb = NULL;

                    exception_lineno = 213;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_called_instance_61 = tmp_mvar_value_29;
                tmp_args_element_name_25 = const_str_digest_4b8d3f96b43e55a1f0ce0c23563c4be0;
                CHECK_OBJECT(var_txt);
                tmp_args_element_name_26 = var_txt;
                frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 213;
                {
                    PyObject *call_args[] = {tmp_args_element_name_25, tmp_args_element_name_26};
                    tmp_assign_source_55 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_61, const_str_plain_findall, call_args);
                }

                if (tmp_assign_source_55 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 213;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                assert(var_usb_check == NULL);
                var_usb_check = tmp_assign_source_55;
            }
            {
                PyObject *tmp_assign_source_56;
                PyObject *tmp_len_arg_6;
                CHECK_OBJECT(var_usb_check);
                tmp_len_arg_6 = var_usb_check;
                tmp_assign_source_56 = BUILTIN_LEN(tmp_len_arg_6);
                if (tmp_assign_source_56 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 215;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                assert(var_length == NULL);
                var_length = tmp_assign_source_56;
            }
            {
                nuitka_bool tmp_condition_result_27;
                PyObject *tmp_compexpr_left_23;
                PyObject *tmp_compexpr_right_23;
                CHECK_OBJECT(var_length);
                tmp_compexpr_left_23 = var_length;
                tmp_compexpr_right_23 = const_int_0;
                tmp_res = RICH_COMPARE_BOOL_GT_OBJECT_INT(tmp_compexpr_left_23, tmp_compexpr_right_23);
                assert(!(tmp_res == -1));
                tmp_condition_result_27 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_27 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_27;
                } else {
                    goto branch_no_27;
                }
                branch_yes_27:;
                {
                    PyObject *tmp_assign_source_57;
                    tmp_assign_source_57 = const_int_0;
                    assert(var_count == NULL);
                    Py_INCREF(tmp_assign_source_57);
                    var_count = tmp_assign_source_57;
                }
                {
                    PyObject *tmp_assign_source_58;
                    tmp_assign_source_58 = PyList_New(0);
                    assert(var_usb_final == NULL);
                    var_usb_final = tmp_assign_source_58;
                }
                {
                    PyObject *tmp_assign_source_59;
                    PyObject *tmp_iter_arg_5;
                    CHECK_OBJECT(var_usb_check);
                    tmp_iter_arg_5 = var_usb_check;
                    tmp_assign_source_59 = MAKE_ITERATOR(tmp_iter_arg_5);
                    if (tmp_assign_source_59 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 220;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    assert(tmp_for_loop_4__for_iterator == NULL);
                    tmp_for_loop_4__for_iterator = tmp_assign_source_59;
                }
                // Tried code:
                loop_start_6:;
                {
                    PyObject *tmp_next_source_5;
                    PyObject *tmp_assign_source_60;
                    CHECK_OBJECT(tmp_for_loop_4__for_iterator);
                    tmp_next_source_5 = tmp_for_loop_4__for_iterator;
                    tmp_assign_source_60 = ITERATOR_NEXT(tmp_next_source_5);
                    if (tmp_assign_source_60 == NULL) {
                        if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                            goto loop_end_6;
                        } else {

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            exception_lineno = 220;
                            goto try_except_handler_7;
                        }
                    }

                    {
                        PyObject *old = tmp_for_loop_4__iter_value;
                        tmp_for_loop_4__iter_value = tmp_assign_source_60;
                        Py_XDECREF(old);
                    }

                }
                {
                    PyObject *tmp_assign_source_61;
                    CHECK_OBJECT(tmp_for_loop_4__iter_value);
                    tmp_assign_source_61 = tmp_for_loop_4__iter_value;
                    {
                        PyObject *old = var_d;
                        var_d = tmp_assign_source_61;
                        Py_INCREF(var_d);
                        Py_XDECREF(old);
                    }

                }
                {
                    PyObject *tmp_assign_source_62;
                    PyObject *tmp_left_name_12;
                    PyObject *tmp_right_name_12;
                    PyObject *tmp_subscribed_name_8;
                    PyObject *tmp_subscript_name_8;
                    tmp_left_name_12 = const_str_digest_860d00cf321643e9e9ab82de992e8e2f;
                    CHECK_OBJECT(var_d);
                    tmp_subscribed_name_8 = var_d;
                    tmp_subscript_name_8 = const_int_pos_1;
                    tmp_right_name_12 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_8, tmp_subscript_name_8, 1);
                    if (tmp_right_name_12 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 222;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                    tmp_assign_source_62 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_12, tmp_right_name_12);
                    Py_DECREF(tmp_right_name_12);
                    if (tmp_assign_source_62 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 222;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                    {
                        PyObject *old = var_mod;
                        var_mod = tmp_assign_source_62;
                        Py_XDECREF(old);
                    }

                }
                {
                    nuitka_bool tmp_condition_result_28;
                    PyObject *tmp_compexpr_left_24;
                    PyObject *tmp_compexpr_right_24;
                    PyObject *tmp_source_name_62;
                    CHECK_OBJECT(var_mod);
                    tmp_compexpr_left_24 = var_mod;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_62 = par_ui;
                    tmp_compexpr_right_24 = LOOKUP_ATTRIBUTE(tmp_source_name_62, const_str_plain_devs_list);
                    if (tmp_compexpr_right_24 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 223;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                    tmp_res = PySequence_Contains(tmp_compexpr_right_24, tmp_compexpr_left_24);
                    Py_DECREF(tmp_compexpr_right_24);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 223;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                    tmp_condition_result_28 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_28 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_28;
                    } else {
                        goto branch_no_28;
                    }
                    branch_yes_28:;
                    {
                        PyObject *tmp_called_instance_62;
                        PyObject *tmp_call_result_37;
                        PyObject *tmp_args_element_name_27;
                        CHECK_OBJECT(var_usb_final);
                        tmp_called_instance_62 = var_usb_final;
                        CHECK_OBJECT(var_d);
                        tmp_args_element_name_27 = var_d;
                        frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 224;
                        {
                            PyObject *call_args[] = {tmp_args_element_name_27};
                            tmp_call_result_37 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_62, const_str_plain_append, call_args);
                        }

                        if (tmp_call_result_37 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 224;
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        Py_DECREF(tmp_call_result_37);
                    }
                    {
                        PyObject *tmp_assign_source_63;
                        PyObject *tmp_left_name_13;
                        PyObject *tmp_right_name_13;
                        if (var_count == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "count");
                            exception_tb = NULL;

                            exception_lineno = 225;
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            goto try_except_handler_7;
                        }

                        tmp_left_name_13 = var_count;
                        tmp_right_name_13 = const_int_pos_1;
                        tmp_assign_source_63 = BINARY_OPERATION_ADD_OBJECT_INT(tmp_left_name_13, tmp_right_name_13);
                        if (tmp_assign_source_63 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 225;
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        {
                            PyObject *old = var_count;
                            var_count = tmp_assign_source_63;
                            Py_XDECREF(old);
                        }

                    }
                    branch_no_28:;
                }
                if (CONSIDER_THREADING() == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 220;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto try_except_handler_7;
                }
                goto loop_start_6;
                loop_end_6:;
                goto try_end_5;
                // Exception handler code:
                try_except_handler_7:;
                exception_keeper_type_6 = exception_type;
                exception_keeper_value_6 = exception_value;
                exception_keeper_tb_6 = exception_tb;
                exception_keeper_lineno_6 = exception_lineno;
                exception_type = NULL;
                exception_value = NULL;
                exception_tb = NULL;
                exception_lineno = 0;

                Py_XDECREF(tmp_for_loop_4__iter_value);
                tmp_for_loop_4__iter_value = NULL;

                CHECK_OBJECT((PyObject *)tmp_for_loop_4__for_iterator);
                Py_DECREF(tmp_for_loop_4__for_iterator);
                tmp_for_loop_4__for_iterator = NULL;

                // Re-raise.
                exception_type = exception_keeper_type_6;
                exception_value = exception_keeper_value_6;
                exception_tb = exception_keeper_tb_6;
                exception_lineno = exception_keeper_lineno_6;

                goto frame_exception_exit_1;
                // End of try:
                try_end_5:;
                Py_XDECREF(tmp_for_loop_4__iter_value);
                tmp_for_loop_4__iter_value = NULL;

                CHECK_OBJECT((PyObject *)tmp_for_loop_4__for_iterator);
                Py_DECREF(tmp_for_loop_4__for_iterator);
                tmp_for_loop_4__for_iterator = NULL;

                {
                    PyObject *tmp_assign_source_64;
                    CHECK_OBJECT(var_usb_final);
                    tmp_assign_source_64 = var_usb_final;
                    {
                        PyObject *old = var_usb_check;
                        assert(old != NULL);
                        var_usb_check = tmp_assign_source_64;
                        Py_INCREF(var_usb_check);
                        Py_DECREF(old);
                    }

                }
                branch_no_27:;
            }
            {
                PyObject *tmp_assign_source_65;
                tmp_assign_source_65 = Py_False;
                assert(var_found == NULL);
                Py_INCREF(tmp_assign_source_65);
                var_found = tmp_assign_source_65;
            }
            {
                PyObject *tmp_assign_source_66;
                PyObject *tmp_iter_arg_6;
                CHECK_OBJECT(var_usb_check);
                tmp_iter_arg_6 = var_usb_check;
                tmp_assign_source_66 = MAKE_ITERATOR(tmp_iter_arg_6);
                if (tmp_assign_source_66 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 233;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                assert(tmp_for_loop_5__for_iterator == NULL);
                tmp_for_loop_5__for_iterator = tmp_assign_source_66;
            }
            // Tried code:
            loop_start_7:;
            {
                PyObject *tmp_next_source_6;
                PyObject *tmp_assign_source_67;
                CHECK_OBJECT(tmp_for_loop_5__for_iterator);
                tmp_next_source_6 = tmp_for_loop_5__for_iterator;
                tmp_assign_source_67 = ITERATOR_NEXT(tmp_next_source_6);
                if (tmp_assign_source_67 == NULL) {
                    if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                        goto loop_end_7;
                    } else {

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        exception_lineno = 233;
                        goto try_except_handler_8;
                    }
                }

                {
                    PyObject *old = tmp_for_loop_5__iter_value;
                    tmp_for_loop_5__iter_value = tmp_assign_source_67;
                    Py_XDECREF(old);
                }

            }
            {
                PyObject *tmp_assign_source_68;
                CHECK_OBJECT(tmp_for_loop_5__iter_value);
                tmp_assign_source_68 = tmp_for_loop_5__iter_value;
                {
                    PyObject *old = var_entry;
                    var_entry = tmp_assign_source_68;
                    Py_INCREF(var_entry);
                    Py_XDECREF(old);
                }

            }
            {
                nuitka_bool tmp_condition_result_29;
                int tmp_and_left_truth_5;
                nuitka_bool tmp_and_left_value_5;
                nuitka_bool tmp_and_right_value_5;
                PyObject *tmp_compexpr_left_25;
                PyObject *tmp_compexpr_right_25;
                PyObject *tmp_subscribed_name_9;
                PyObject *tmp_subscribed_name_10;
                PyObject *tmp_source_name_63;
                PyObject *tmp_subscript_name_9;
                PyObject *tmp_subscript_name_10;
                PyObject *tmp_subscribed_name_11;
                PyObject *tmp_subscript_name_11;
                PyObject *tmp_compexpr_left_26;
                PyObject *tmp_compexpr_right_26;
                PyObject *tmp_subscribed_name_12;
                PyObject *tmp_subscribed_name_13;
                PyObject *tmp_source_name_64;
                PyObject *tmp_subscript_name_12;
                PyObject *tmp_subscript_name_13;
                PyObject *tmp_subscribed_name_14;
                PyObject *tmp_subscript_name_14;
                CHECK_OBJECT(par_ui);
                tmp_source_name_63 = par_ui;
                tmp_subscribed_name_10 = LOOKUP_ATTRIBUTE(tmp_source_name_63, const_str_plain_usb_list);
                if (tmp_subscribed_name_10 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 234;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto try_except_handler_8;
                }
                CHECK_OBJECT(var_index2);
                tmp_subscript_name_9 = var_index2;
                tmp_subscribed_name_9 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_10, tmp_subscript_name_9);
                Py_DECREF(tmp_subscribed_name_10);
                if (tmp_subscribed_name_9 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 234;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto try_except_handler_8;
                }
                tmp_subscript_name_10 = const_int_0;
                tmp_compexpr_left_25 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_9, tmp_subscript_name_10, 0);
                Py_DECREF(tmp_subscribed_name_9);
                if (tmp_compexpr_left_25 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 234;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto try_except_handler_8;
                }
                CHECK_OBJECT(var_entry);
                tmp_subscribed_name_11 = var_entry;
                tmp_subscript_name_11 = const_int_0;
                tmp_compexpr_right_25 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_11, tmp_subscript_name_11, 0);
                if (tmp_compexpr_right_25 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_compexpr_left_25);

                    exception_lineno = 234;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto try_except_handler_8;
                }
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_25, tmp_compexpr_right_25);
                Py_DECREF(tmp_compexpr_left_25);
                Py_DECREF(tmp_compexpr_right_25);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 234;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto try_except_handler_8;
                }
                tmp_and_left_value_5 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                tmp_and_left_truth_5 = tmp_and_left_value_5 == NUITKA_BOOL_TRUE ? 1 : 0;
                if (tmp_and_left_truth_5 == 1) {
                    goto and_right_5;
                } else {
                    goto and_left_5;
                }
                and_right_5:;
                CHECK_OBJECT(par_ui);
                tmp_source_name_64 = par_ui;
                tmp_subscribed_name_13 = LOOKUP_ATTRIBUTE(tmp_source_name_64, const_str_plain_usb_list);
                if (tmp_subscribed_name_13 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 234;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto try_except_handler_8;
                }
                CHECK_OBJECT(var_index2);
                tmp_subscript_name_12 = var_index2;
                tmp_subscribed_name_12 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_13, tmp_subscript_name_12);
                Py_DECREF(tmp_subscribed_name_13);
                if (tmp_subscribed_name_12 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 234;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto try_except_handler_8;
                }
                tmp_subscript_name_13 = const_int_pos_1;
                tmp_compexpr_left_26 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_12, tmp_subscript_name_13, 1);
                Py_DECREF(tmp_subscribed_name_12);
                if (tmp_compexpr_left_26 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 234;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto try_except_handler_8;
                }
                CHECK_OBJECT(var_entry);
                tmp_subscribed_name_14 = var_entry;
                tmp_subscript_name_14 = const_int_pos_1;
                tmp_compexpr_right_26 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_14, tmp_subscript_name_14, 1);
                if (tmp_compexpr_right_26 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_compexpr_left_26);

                    exception_lineno = 234;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto try_except_handler_8;
                }
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_26, tmp_compexpr_right_26);
                Py_DECREF(tmp_compexpr_left_26);
                Py_DECREF(tmp_compexpr_right_26);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 234;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto try_except_handler_8;
                }
                tmp_and_right_value_5 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                tmp_condition_result_29 = tmp_and_right_value_5;
                goto and_end_5;
                and_left_5:;
                tmp_condition_result_29 = tmp_and_left_value_5;
                and_end_5:;
                if (tmp_condition_result_29 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_29;
                } else {
                    goto branch_no_29;
                }
                branch_yes_29:;
                {
                    PyObject *tmp_assign_source_69;
                    tmp_assign_source_69 = Py_True;
                    {
                        PyObject *old = var_found;
                        var_found = tmp_assign_source_69;
                        Py_INCREF(var_found);
                        Py_XDECREF(old);
                    }

                }
                branch_no_29:;
            }
            if (CONSIDER_THREADING() == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 233;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto try_except_handler_8;
            }
            goto loop_start_7;
            loop_end_7:;
            goto try_end_6;
            // Exception handler code:
            try_except_handler_8:;
            exception_keeper_type_7 = exception_type;
            exception_keeper_value_7 = exception_value;
            exception_keeper_tb_7 = exception_tb;
            exception_keeper_lineno_7 = exception_lineno;
            exception_type = NULL;
            exception_value = NULL;
            exception_tb = NULL;
            exception_lineno = 0;

            Py_XDECREF(tmp_for_loop_5__iter_value);
            tmp_for_loop_5__iter_value = NULL;

            CHECK_OBJECT((PyObject *)tmp_for_loop_5__for_iterator);
            Py_DECREF(tmp_for_loop_5__for_iterator);
            tmp_for_loop_5__for_iterator = NULL;

            // Re-raise.
            exception_type = exception_keeper_type_7;
            exception_value = exception_keeper_value_7;
            exception_tb = exception_keeper_tb_7;
            exception_lineno = exception_keeper_lineno_7;

            goto frame_exception_exit_1;
            // End of try:
            try_end_6:;
            Py_XDECREF(tmp_for_loop_5__iter_value);
            tmp_for_loop_5__iter_value = NULL;

            CHECK_OBJECT((PyObject *)tmp_for_loop_5__for_iterator);
            Py_DECREF(tmp_for_loop_5__for_iterator);
            tmp_for_loop_5__for_iterator = NULL;

            {
                nuitka_bool tmp_condition_result_30;
                PyObject *tmp_operand_name_5;
                if (var_found == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "found");
                    exception_tb = NULL;

                    exception_lineno = 236;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_operand_name_5 = var_found;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_5);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 236;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_condition_result_30 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_30 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_30;
                } else {
                    goto branch_no_30;
                }
                branch_yes_30:;
                {
                    PyObject *tmp_called_instance_63;
                    PyObject *tmp_call_result_38;
                    CHECK_OBJECT(par_ui);
                    tmp_called_instance_63 = par_ui;
                    frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 237;
                    tmp_call_result_38 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_63, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_2e55302ed6c9023409284cb1ad8d5c94_tuple, 0));

                    if (tmp_call_result_38 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 237;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_38);
                }
                {
                    PyObject *tmp_called_instance_64;
                    PyObject *tmp_source_name_65;
                    PyObject *tmp_call_result_39;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_65 = par_ui;
                    tmp_called_instance_64 = LOOKUP_ATTRIBUTE(tmp_source_name_65, const_str_plain_op_instr);
                    if (tmp_called_instance_64 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 238;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 238;
                    tmp_call_result_39 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_64, const_str_plain_set_text, &PyTuple_GET_ITEM(const_tuple_str_digest_7433d933e5328ace60520ecd13e3a283_tuple, 0));

                    Py_DECREF(tmp_called_instance_64);
                    if (tmp_call_result_39 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 238;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_39);
                }
                {
                    PyObject *tmp_called_instance_65;
                    PyObject *tmp_call_result_40;
                    CHECK_OBJECT(par_ui);
                    tmp_called_instance_65 = par_ui;
                    frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 239;
                    tmp_call_result_40 = CALL_METHOD_NO_ARGS(tmp_called_instance_65, const_str_plain_setup_prompt1);
                    if (tmp_call_result_40 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 239;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_40);
                }
                tmp_return_value = Py_None;
                Py_INCREF(tmp_return_value);
                goto frame_return_exit_1;
                branch_no_30:;
            }
            goto branch_end_26;
            branch_no_26:;
            {
                nuitka_bool tmp_condition_result_31;
                PyObject *tmp_compexpr_left_27;
                PyObject *tmp_compexpr_right_27;
                PyObject *tmp_source_name_66;
                CHECK_OBJECT(par_ui);
                tmp_source_name_66 = par_ui;
                tmp_compexpr_left_27 = LOOKUP_ATTRIBUTE(tmp_source_name_66, const_str_plain_DEV_OS);
                if (tmp_compexpr_left_27 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 241;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_compexpr_right_27 = const_str_plain_Linux;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_27, tmp_compexpr_right_27);
                Py_DECREF(tmp_compexpr_left_27);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 241;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_condition_result_31 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_31 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_31;
                } else {
                    goto branch_no_31;
                }
                branch_yes_31:;
                {
                    PyObject *tmp_assign_source_70;
                    PyObject *tmp_called_instance_66;
                    PyObject *tmp_called_instance_67;
                    PyObject *tmp_mvar_value_30;
                    tmp_mvar_value_30 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                    if (unlikely(tmp_mvar_value_30 == NULL)) {
                        tmp_mvar_value_30 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                    }

                    if (tmp_mvar_value_30 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                        exception_tb = NULL;

                        exception_lineno = 242;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_called_instance_67 = tmp_mvar_value_30;
                    frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 242;
                    tmp_called_instance_66 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_67, const_str_plain_popen, &PyTuple_GET_ITEM(const_tuple_str_digest_0c8d3c6eed5d4373e00b3d74bc2f9bc8_tuple, 0));

                    if (tmp_called_instance_66 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 242;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 242;
                    tmp_assign_source_70 = CALL_METHOD_NO_ARGS(tmp_called_instance_66, const_str_plain_read);
                    Py_DECREF(tmp_called_instance_66);
                    if (tmp_assign_source_70 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 242;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    {
                        PyObject *old = var_txt;
                        var_txt = tmp_assign_source_70;
                        Py_XDECREF(old);
                    }

                }
                {
                    PyObject *tmp_assign_source_71;
                    PyObject *tmp_called_instance_68;
                    PyObject *tmp_mvar_value_31;
                    PyObject *tmp_args_element_name_28;
                    PyObject *tmp_args_element_name_29;
                    tmp_mvar_value_31 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

                    if (unlikely(tmp_mvar_value_31 == NULL)) {
                        tmp_mvar_value_31 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
                    }

                    if (tmp_mvar_value_31 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
                        exception_tb = NULL;

                        exception_lineno = 244;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_called_instance_68 = tmp_mvar_value_31;
                    tmp_args_element_name_28 = const_str_digest_931335e1ae383d3cde48789cdd73233d;
                    CHECK_OBJECT(var_txt);
                    tmp_args_element_name_29 = var_txt;
                    frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 244;
                    {
                        PyObject *call_args[] = {tmp_args_element_name_28, tmp_args_element_name_29};
                        tmp_assign_source_71 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_68, const_str_plain_findall, call_args);
                    }

                    if (tmp_assign_source_71 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 244;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    assert(var_list_u == NULL);
                    var_list_u = tmp_assign_source_71;
                }
                {
                    PyObject *tmp_assign_source_72;
                    PyObject *tmp_iter_arg_7;
                    CHECK_OBJECT(var_list_u);
                    tmp_iter_arg_7 = var_list_u;
                    tmp_assign_source_72 = MAKE_ITERATOR(tmp_iter_arg_7);
                    if (tmp_assign_source_72 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 245;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    assert(tmp_for_loop_6__for_iterator == NULL);
                    tmp_for_loop_6__for_iterator = tmp_assign_source_72;
                }
                // Tried code:
                loop_start_8:;
                {
                    PyObject *tmp_next_source_7;
                    PyObject *tmp_assign_source_73;
                    CHECK_OBJECT(tmp_for_loop_6__for_iterator);
                    tmp_next_source_7 = tmp_for_loop_6__for_iterator;
                    tmp_assign_source_73 = ITERATOR_NEXT(tmp_next_source_7);
                    if (tmp_assign_source_73 == NULL) {
                        if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                            goto loop_end_8;
                        } else {

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            exception_lineno = 245;
                            goto try_except_handler_9;
                        }
                    }

                    {
                        PyObject *old = tmp_for_loop_6__iter_value;
                        tmp_for_loop_6__iter_value = tmp_assign_source_73;
                        Py_XDECREF(old);
                    }

                }
                {
                    PyObject *tmp_assign_source_74;
                    CHECK_OBJECT(tmp_for_loop_6__iter_value);
                    tmp_assign_source_74 = tmp_for_loop_6__iter_value;
                    {
                        PyObject *old = var_u;
                        var_u = tmp_assign_source_74;
                        Py_INCREF(var_u);
                        Py_XDECREF(old);
                    }

                }
                {
                    PyObject *tmp_assign_source_75;
                    PyObject *tmp_called_instance_69;
                    PyObject *tmp_called_name_11;
                    PyObject *tmp_source_name_67;
                    PyObject *tmp_mvar_value_32;
                    PyObject *tmp_args_element_name_30;
                    PyObject *tmp_left_name_14;
                    PyObject *tmp_source_name_68;
                    PyObject *tmp_right_name_14;
                    tmp_mvar_value_32 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                    if (unlikely(tmp_mvar_value_32 == NULL)) {
                        tmp_mvar_value_32 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                    }

                    if (tmp_mvar_value_32 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                        exception_tb = NULL;

                        exception_lineno = 246;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto try_except_handler_9;
                    }

                    tmp_source_name_67 = tmp_mvar_value_32;
                    tmp_called_name_11 = LOOKUP_ATTRIBUTE(tmp_source_name_67, const_str_plain_popen);
                    if (tmp_called_name_11 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 246;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto try_except_handler_9;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_68 = par_ui;
                    tmp_left_name_14 = LOOKUP_ATTRIBUTE(tmp_source_name_68, const_str_plain_prefix);
                    if (tmp_left_name_14 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_11);

                        exception_lineno = 246;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto try_except_handler_9;
                    }
                    tmp_right_name_14 = const_str_plain_mount;
                    tmp_args_element_name_30 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_14, tmp_right_name_14);
                    Py_DECREF(tmp_left_name_14);
                    if (tmp_args_element_name_30 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_11);

                        exception_lineno = 246;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto try_except_handler_9;
                    }
                    frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 246;
                    tmp_called_instance_69 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_11, tmp_args_element_name_30);
                    Py_DECREF(tmp_called_name_11);
                    Py_DECREF(tmp_args_element_name_30);
                    if (tmp_called_instance_69 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 246;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto try_except_handler_9;
                    }
                    frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 246;
                    tmp_assign_source_75 = CALL_METHOD_NO_ARGS(tmp_called_instance_69, const_str_plain_read);
                    Py_DECREF(tmp_called_instance_69);
                    if (tmp_assign_source_75 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 246;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto try_except_handler_9;
                    }
                    {
                        PyObject *old = var_txt1;
                        var_txt1 = tmp_assign_source_75;
                        Py_XDECREF(old);
                    }

                }
                {
                    PyObject *tmp_assign_source_76;
                    PyObject *tmp_called_instance_70;
                    PyObject *tmp_mvar_value_33;
                    PyObject *tmp_args_element_name_31;
                    PyObject *tmp_args_element_name_32;
                    tmp_mvar_value_33 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

                    if (unlikely(tmp_mvar_value_33 == NULL)) {
                        tmp_mvar_value_33 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
                    }

                    if (tmp_mvar_value_33 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
                        exception_tb = NULL;

                        exception_lineno = 247;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto try_except_handler_9;
                    }

                    tmp_called_instance_70 = tmp_mvar_value_33;
                    CHECK_OBJECT(var_u);
                    tmp_args_element_name_31 = var_u;
                    CHECK_OBJECT(var_txt1);
                    tmp_args_element_name_32 = var_txt1;
                    frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 247;
                    {
                        PyObject *call_args[] = {tmp_args_element_name_31, tmp_args_element_name_32};
                        tmp_assign_source_76 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_70, const_str_plain_search, call_args);
                    }

                    if (tmp_assign_source_76 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 247;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto try_except_handler_9;
                    }
                    {
                        PyObject *old = var_m;
                        var_m = tmp_assign_source_76;
                        Py_XDECREF(old);
                    }

                }
                {
                    nuitka_bool tmp_condition_result_32;
                    PyObject *tmp_operand_name_6;
                    CHECK_OBJECT(var_m);
                    tmp_operand_name_6 = var_m;
                    tmp_res = CHECK_IF_TRUE(tmp_operand_name_6);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 248;
                        type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                        goto try_except_handler_9;
                    }
                    tmp_condition_result_32 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_32 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_32;
                    } else {
                        goto branch_no_32;
                    }
                    branch_yes_32:;
                    {
                        PyObject *tmp_assign_source_77;
                        PyObject *tmp_called_instance_71;
                        PyObject *tmp_called_name_12;
                        PyObject *tmp_source_name_69;
                        PyObject *tmp_mvar_value_34;
                        PyObject *tmp_args_element_name_33;
                        PyObject *tmp_left_name_15;
                        PyObject *tmp_source_name_70;
                        PyObject *tmp_right_name_15;
                        tmp_mvar_value_34 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                        if (unlikely(tmp_mvar_value_34 == NULL)) {
                            tmp_mvar_value_34 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                        }

                        if (tmp_mvar_value_34 == NULL) {

                            exception_type = PyExc_NameError;
                            Py_INCREF(exception_type);
                            exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                            exception_tb = NULL;

                            exception_lineno = 249;
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            goto try_except_handler_9;
                        }

                        tmp_source_name_69 = tmp_mvar_value_34;
                        tmp_called_name_12 = LOOKUP_ATTRIBUTE(tmp_source_name_69, const_str_plain_popen);
                        if (tmp_called_name_12 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 249;
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            goto try_except_handler_9;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_70 = par_ui;
                        tmp_left_name_15 = LOOKUP_ATTRIBUTE(tmp_source_name_70, const_str_plain_prefix);
                        if (tmp_left_name_15 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_12);

                            exception_lineno = 249;
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            goto try_except_handler_9;
                        }
                        tmp_right_name_15 = const_str_plain_blkid;
                        tmp_args_element_name_33 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_15, tmp_right_name_15);
                        Py_DECREF(tmp_left_name_15);
                        if (tmp_args_element_name_33 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_12);

                            exception_lineno = 249;
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            goto try_except_handler_9;
                        }
                        frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 249;
                        tmp_called_instance_71 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_12, tmp_args_element_name_33);
                        Py_DECREF(tmp_called_name_12);
                        Py_DECREF(tmp_args_element_name_33);
                        if (tmp_called_instance_71 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 249;
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            goto try_except_handler_9;
                        }
                        frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 249;
                        tmp_assign_source_77 = CALL_METHOD_NO_ARGS(tmp_called_instance_71, const_str_plain_read);
                        Py_DECREF(tmp_called_instance_71);
                        if (tmp_assign_source_77 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 249;
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            goto try_except_handler_9;
                        }
                        {
                            PyObject *old = var_txt2;
                            var_txt2 = tmp_assign_source_77;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assign_source_78;
                        PyObject *tmp_left_name_16;
                        PyObject *tmp_right_name_16;
                        CHECK_OBJECT(var_u);
                        tmp_left_name_16 = var_u;
                        tmp_right_name_16 = const_str_digest_2a99f2106e37159d649e36cd642454d7;
                        tmp_assign_source_78 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_16, tmp_right_name_16);
                        if (tmp_assign_source_78 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 250;
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            goto try_except_handler_9;
                        }
                        {
                            PyObject *old = var_rgx;
                            var_rgx = tmp_assign_source_78;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assign_source_79;
                        PyObject *tmp_called_instance_72;
                        PyObject *tmp_mvar_value_35;
                        PyObject *tmp_args_element_name_34;
                        PyObject *tmp_args_element_name_35;
                        tmp_mvar_value_35 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

                        if (unlikely(tmp_mvar_value_35 == NULL)) {
                            tmp_mvar_value_35 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
                        }

                        if (tmp_mvar_value_35 == NULL) {

                            exception_type = PyExc_NameError;
                            Py_INCREF(exception_type);
                            exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
                            exception_tb = NULL;

                            exception_lineno = 251;
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            goto try_except_handler_9;
                        }

                        tmp_called_instance_72 = tmp_mvar_value_35;
                        CHECK_OBJECT(var_rgx);
                        tmp_args_element_name_34 = var_rgx;
                        CHECK_OBJECT(var_txt2);
                        tmp_args_element_name_35 = var_txt2;
                        frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 251;
                        {
                            PyObject *call_args[] = {tmp_args_element_name_34, tmp_args_element_name_35};
                            tmp_assign_source_79 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_72, const_str_plain_search, call_args);
                        }

                        if (tmp_assign_source_79 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 251;
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            goto try_except_handler_9;
                        }
                        {
                            PyObject *old = var_m1;
                            var_m1 = tmp_assign_source_79;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        nuitka_bool tmp_condition_result_33;
                        int tmp_truth_name_9;
                        CHECK_OBJECT(var_m1);
                        tmp_truth_name_9 = CHECK_IF_TRUE(var_m1);
                        if (tmp_truth_name_9 == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 252;
                            type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                            goto try_except_handler_9;
                        }
                        tmp_condition_result_33 = tmp_truth_name_9 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_33 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_33;
                        } else {
                            goto branch_no_33;
                        }
                        branch_yes_33:;
                        {
                            PyObject *tmp_assign_source_80;
                            tmp_assign_source_80 = const_str_digest_1573e6b4805ac8da2565b5c6f8345d3c;
                            {
                                PyObject *old = var_r2;
                                var_r2 = tmp_assign_source_80;
                                Py_INCREF(var_r2);
                                Py_XDECREF(old);
                            }

                        }
                        {
                            PyObject *tmp_assign_source_81;
                            PyObject *tmp_called_instance_73;
                            CHECK_OBJECT(var_m1);
                            tmp_called_instance_73 = var_m1;
                            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 254;
                            tmp_assign_source_81 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_73, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_int_0_tuple, 0));

                            if (tmp_assign_source_81 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 254;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_9;
                            }
                            {
                                PyObject *old = var_txt3;
                                var_txt3 = tmp_assign_source_81;
                                Py_XDECREF(old);
                            }

                        }
                        {
                            PyObject *tmp_assign_source_82;
                            PyObject *tmp_called_instance_74;
                            PyObject *tmp_mvar_value_36;
                            PyObject *tmp_args_element_name_36;
                            PyObject *tmp_args_element_name_37;
                            tmp_mvar_value_36 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

                            if (unlikely(tmp_mvar_value_36 == NULL)) {
                                tmp_mvar_value_36 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
                            }

                            if (tmp_mvar_value_36 == NULL) {

                                exception_type = PyExc_NameError;
                                Py_INCREF(exception_type);
                                exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
                                exception_tb = NULL;

                                exception_lineno = 255;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_9;
                            }

                            tmp_called_instance_74 = tmp_mvar_value_36;
                            CHECK_OBJECT(var_r2);
                            tmp_args_element_name_36 = var_r2;
                            CHECK_OBJECT(var_txt3);
                            tmp_args_element_name_37 = var_txt3;
                            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 255;
                            {
                                PyObject *call_args[] = {tmp_args_element_name_36, tmp_args_element_name_37};
                                tmp_assign_source_82 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_74, const_str_plain_search, call_args);
                            }

                            if (tmp_assign_source_82 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 255;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_9;
                            }
                            {
                                PyObject *old = var_m2;
                                var_m2 = tmp_assign_source_82;
                                Py_XDECREF(old);
                            }

                        }
                        {
                            PyObject *tmp_assign_source_83;
                            PyObject *tmp_called_instance_75;
                            CHECK_OBJECT(var_m2);
                            tmp_called_instance_75 = var_m2;
                            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 256;
                            tmp_assign_source_83 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_75, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_int_pos_1_tuple, 0));

                            if (tmp_assign_source_83 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 256;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_9;
                            }
                            {
                                PyObject *old = var_type_a;
                                var_type_a = tmp_assign_source_83;
                                Py_XDECREF(old);
                            }

                        }
                        {
                            PyObject *tmp_assign_source_84;
                            PyObject *tmp_called_name_13;
                            PyObject *tmp_source_name_71;
                            PyObject *tmp_mvar_value_37;
                            PyObject *tmp_args_element_name_38;
                            PyObject *tmp_left_name_17;
                            PyObject *tmp_left_name_18;
                            PyObject *tmp_left_name_19;
                            PyObject *tmp_left_name_20;
                            PyObject *tmp_left_name_21;
                            PyObject *tmp_source_name_72;
                            PyObject *tmp_right_name_17;
                            PyObject *tmp_right_name_18;
                            PyObject *tmp_right_name_19;
                            PyObject *tmp_right_name_20;
                            PyObject *tmp_right_name_21;
                            tmp_mvar_value_37 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                            if (unlikely(tmp_mvar_value_37 == NULL)) {
                                tmp_mvar_value_37 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                            }

                            if (tmp_mvar_value_37 == NULL) {

                                exception_type = PyExc_NameError;
                                Py_INCREF(exception_type);
                                exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                                exception_tb = NULL;

                                exception_lineno = 257;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_9;
                            }

                            tmp_source_name_71 = tmp_mvar_value_37;
                            tmp_called_name_13 = LOOKUP_ATTRIBUTE(tmp_source_name_71, const_str_plain_system);
                            if (tmp_called_name_13 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 257;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_9;
                            }
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_72 = par_ui;
                            tmp_left_name_21 = LOOKUP_ATTRIBUTE(tmp_source_name_72, const_str_plain_prefix);
                            if (tmp_left_name_21 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_13);

                                exception_lineno = 257;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_9;
                            }
                            tmp_right_name_17 = const_str_digest_f3d167b0dffa906401fa6c94639c194d;
                            tmp_left_name_20 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_21, tmp_right_name_17);
                            Py_DECREF(tmp_left_name_21);
                            if (tmp_left_name_20 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_13);

                                exception_lineno = 257;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_9;
                            }
                            CHECK_OBJECT(var_type_a);
                            tmp_right_name_18 = var_type_a;
                            tmp_left_name_19 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_20, tmp_right_name_18);
                            Py_DECREF(tmp_left_name_20);
                            if (tmp_left_name_19 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_13);

                                exception_lineno = 257;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_9;
                            }
                            tmp_right_name_19 = const_str_digest_a84c2f9bb883ab000c4f334da93978e8;
                            tmp_left_name_18 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_19, tmp_right_name_19);
                            Py_DECREF(tmp_left_name_19);
                            if (tmp_left_name_18 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_13);

                                exception_lineno = 257;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_9;
                            }
                            CHECK_OBJECT(var_u);
                            tmp_right_name_20 = var_u;
                            tmp_left_name_17 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_18, tmp_right_name_20);
                            Py_DECREF(tmp_left_name_18);
                            if (tmp_left_name_17 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_13);

                                exception_lineno = 257;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_9;
                            }
                            tmp_right_name_21 = const_str_plain_1;
                            tmp_args_element_name_38 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_17, tmp_right_name_21);
                            Py_DECREF(tmp_left_name_17);
                            if (tmp_args_element_name_38 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_13);

                                exception_lineno = 257;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_9;
                            }
                            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 257;
                            tmp_assign_source_84 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_13, tmp_args_element_name_38);
                            Py_DECREF(tmp_called_name_13);
                            Py_DECREF(tmp_args_element_name_38);
                            if (tmp_assign_source_84 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 257;
                                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                                goto try_except_handler_9;
                            }
                            {
                                PyObject *old = var_s;
                                var_s = tmp_assign_source_84;
                                Py_XDECREF(old);
                            }

                        }
                        branch_no_33:;
                    }
                    branch_no_32:;
                }
                if (CONSIDER_THREADING() == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 245;
                    type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                    goto try_except_handler_9;
                }
                goto loop_start_8;
                loop_end_8:;
                goto try_end_7;
                // Exception handler code:
                try_except_handler_9:;
                exception_keeper_type_8 = exception_type;
                exception_keeper_value_8 = exception_value;
                exception_keeper_tb_8 = exception_tb;
                exception_keeper_lineno_8 = exception_lineno;
                exception_type = NULL;
                exception_value = NULL;
                exception_tb = NULL;
                exception_lineno = 0;

                Py_XDECREF(tmp_for_loop_6__iter_value);
                tmp_for_loop_6__iter_value = NULL;

                CHECK_OBJECT((PyObject *)tmp_for_loop_6__for_iterator);
                Py_DECREF(tmp_for_loop_6__for_iterator);
                tmp_for_loop_6__for_iterator = NULL;

                // Re-raise.
                exception_type = exception_keeper_type_8;
                exception_value = exception_keeper_value_8;
                exception_tb = exception_keeper_tb_8;
                exception_lineno = exception_keeper_lineno_8;

                goto frame_exception_exit_1;
                // End of try:
                try_end_7:;
                Py_XDECREF(tmp_for_loop_6__iter_value);
                tmp_for_loop_6__iter_value = NULL;

                CHECK_OBJECT((PyObject *)tmp_for_loop_6__for_iterator);
                Py_DECREF(tmp_for_loop_6__for_iterator);
                tmp_for_loop_6__for_iterator = NULL;

                branch_no_31:;
            }
            branch_end_26:;
        }
        {
            PyObject *tmp_called_instance_76;
            PyObject *tmp_call_result_41;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_76 = par_ui;
            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 261;
            tmp_call_result_41 = CALL_METHOD_NO_ARGS(tmp_called_instance_76, const_str_plain_start_spin);
            if (tmp_call_result_41 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 261;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_41);
        }
        {
            PyObject *tmp_called_instance_77;
            PyObject *tmp_source_name_73;
            PyObject *tmp_call_result_42;
            CHECK_OBJECT(par_ui);
            tmp_source_name_73 = par_ui;
            tmp_called_instance_77 = LOOKUP_ATTRIBUTE(tmp_source_name_73, const_str_plain_setup_wait_instr);
            if (tmp_called_instance_77 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 262;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 262;
            tmp_call_result_42 = CALL_METHOD_NO_ARGS(tmp_called_instance_77, const_str_plain_show);
            Py_DECREF(tmp_called_instance_77);
            if (tmp_call_result_42 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 262;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_42);
        }
        {
            PyObject *tmp_called_instance_78;
            PyObject *tmp_source_name_74;
            PyObject *tmp_call_result_43;
            CHECK_OBJECT(par_ui);
            tmp_source_name_74 = par_ui;
            tmp_called_instance_78 = LOOKUP_ATTRIBUTE(tmp_source_name_74, const_str_plain_progress_bar);
            if (tmp_called_instance_78 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 263;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 263;
            tmp_call_result_43 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_78, const_str_plain_set_fraction, &PyTuple_GET_ITEM(const_tuple_float_0_0_tuple, 0));

            Py_DECREF(tmp_called_instance_78);
            if (tmp_call_result_43 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 263;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_43);
        }
        {
            PyObject *tmp_called_instance_79;
            PyObject *tmp_source_name_75;
            PyObject *tmp_call_result_44;
            CHECK_OBJECT(par_ui);
            tmp_source_name_75 = par_ui;
            tmp_called_instance_79 = LOOKUP_ATTRIBUTE(tmp_source_name_75, const_str_plain_progress_bar);
            if (tmp_called_instance_79 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 264;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 264;
            tmp_call_result_44 = CALL_METHOD_NO_ARGS(tmp_called_instance_79, const_str_plain_show);
            Py_DECREF(tmp_called_instance_79);
            if (tmp_call_result_44 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 264;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_44);
        }
        {
            PyObject *tmp_assattr_name_8;
            PyObject *tmp_assattr_target_8;
            tmp_assattr_name_8 = Py_True;
            CHECK_OBJECT(par_ui);
            tmp_assattr_target_8 = par_ui;
            tmp_result = SET_ATTRIBUTE(tmp_assattr_target_8, const_str_plain_op_inprogress, tmp_assattr_name_8);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 266;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
        }
        {
            PyObject *tmp_assattr_name_9;
            PyObject *tmp_assattr_target_9;
            tmp_assattr_name_9 = Py_True;
            CHECK_OBJECT(par_ui);
            tmp_assattr_target_9 = par_ui;
            tmp_result = SET_ATTRIBUTE(tmp_assattr_target_9, const_str_plain_pbawrite_ip, tmp_assattr_name_9);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 267;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
        }
        {
            PyObject *tmp_assign_source_85;
            PyObject *tmp_called_name_14;
            PyObject *tmp_source_name_76;
            PyObject *tmp_mvar_value_38;
            PyObject *tmp_kw_name_5;
            PyObject *tmp_dict_key_12;
            PyObject *tmp_dict_value_12;
            PyObject *tmp_source_name_77;
            PyObject *tmp_mvar_value_39;
            PyObject *tmp_dict_key_13;
            PyObject *tmp_dict_value_13;
            PyObject *tmp_tuple_element_2;
            tmp_mvar_value_38 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_threading);

            if (unlikely(tmp_mvar_value_38 == NULL)) {
                tmp_mvar_value_38 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_threading);
            }

            if (tmp_mvar_value_38 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 661 ], 38, 0);
                exception_tb = NULL;

                exception_lineno = 270;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_source_name_76 = tmp_mvar_value_38;
            tmp_called_name_14 = LOOKUP_ATTRIBUTE(tmp_source_name_76, const_str_plain_Thread);
            if (tmp_called_name_14 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 270;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_mvar_value_39 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_runsetup);

            if (unlikely(tmp_mvar_value_39 == NULL)) {
                tmp_mvar_value_39 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runsetup);
            }

            if (tmp_mvar_value_39 == NULL) {
                Py_DECREF(tmp_called_name_14);
                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 5095 ], 37, 0);
                exception_tb = NULL;

                exception_lineno = 270;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_source_name_77 = tmp_mvar_value_39;
            tmp_dict_value_12 = LOOKUP_ATTRIBUTE(tmp_source_name_77, const_str_plain_rt_setupFull);
            if (tmp_dict_value_12 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_14);

                exception_lineno = 270;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_dict_key_12 = const_str_plain_target;
            tmp_kw_name_5 = _PyDict_NewPresized( 2 );
            tmp_res = PyDict_SetItem(tmp_kw_name_5, tmp_dict_key_12, tmp_dict_value_12);
            Py_DECREF(tmp_dict_value_12);
            assert(!(tmp_res != 0));
            CHECK_OBJECT(par_ui);
            tmp_tuple_element_2 = par_ui;
            tmp_dict_value_13 = PyTuple_New(4);
            Py_INCREF(tmp_tuple_element_2);
            PyTuple_SET_ITEM(tmp_dict_value_13, 0, tmp_tuple_element_2);
            CHECK_OBJECT(var_selected_list);
            tmp_tuple_element_2 = var_selected_list;
            Py_INCREF(tmp_tuple_element_2);
            PyTuple_SET_ITEM(tmp_dict_value_13, 1, tmp_tuple_element_2);
            CHECK_OBJECT(var_index2);
            tmp_tuple_element_2 = var_index2;
            Py_INCREF(tmp_tuple_element_2);
            PyTuple_SET_ITEM(tmp_dict_value_13, 2, tmp_tuple_element_2);
            CHECK_OBJECT(var_preserved_files);
            tmp_tuple_element_2 = var_preserved_files;
            Py_INCREF(tmp_tuple_element_2);
            PyTuple_SET_ITEM(tmp_dict_value_13, 3, tmp_tuple_element_2);
            tmp_dict_key_13 = const_str_plain_args;
            tmp_res = PyDict_SetItem(tmp_kw_name_5, tmp_dict_key_13, tmp_dict_value_13);
            Py_DECREF(tmp_dict_value_13);
            assert(!(tmp_res != 0));
            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 270;
            tmp_assign_source_85 = CALL_FUNCTION_WITH_KEYARGS(tmp_called_name_14, tmp_kw_name_5);
            Py_DECREF(tmp_called_name_14);
            Py_DECREF(tmp_kw_name_5);
            if (tmp_assign_source_85 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 270;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(var_t_m == NULL);
            var_t_m = tmp_assign_source_85;
        }
        {
            PyObject *tmp_called_instance_80;
            PyObject *tmp_call_result_45;
            CHECK_OBJECT(var_t_m);
            tmp_called_instance_80 = var_t_m;
            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 271;
            tmp_call_result_45 = CALL_METHOD_NO_ARGS(tmp_called_instance_80, const_str_plain_start);
            if (tmp_call_result_45 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 271;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_45);
        }
        goto branch_end_12;
        branch_no_12:;
        {
            PyObject *tmp_called_instance_81;
            PyObject *tmp_source_name_78;
            PyObject *tmp_call_result_46;
            CHECK_OBJECT(par_ui);
            tmp_source_name_78 = par_ui;
            tmp_called_instance_81 = LOOKUP_ATTRIBUTE(tmp_source_name_78, const_str_plain_op_instr);
            if (tmp_called_instance_81 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 274;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 274;
            tmp_call_result_46 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_81, const_str_plain_set_text, &PyTuple_GET_ITEM(const_tuple_str_digest_7433d933e5328ace60520ecd13e3a283_tuple, 0));

            Py_DECREF(tmp_called_instance_81);
            if (tmp_call_result_46 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 274;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_46);
        }
        {
            PyObject *tmp_called_instance_82;
            PyObject *tmp_call_result_47;
            CHECK_OBJECT(var_message2);
            tmp_called_instance_82 = var_message2;
            frame_6b526a20a2c31b45221ec586b02b4694->m_frame.f_lineno = 275;
            tmp_call_result_47 = CALL_METHOD_NO_ARGS(tmp_called_instance_82, const_str_plain_destroy);
            if (tmp_call_result_47 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 275;
                type_description_1 = "ooNoooooooooooNooooooooooNooNooooooooobooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_47);
        }
        branch_end_12:;
    }

#if 1
    RESTORE_FRAME_EXCEPTION(frame_6b526a20a2c31b45221ec586b02b4694);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 1
    RESTORE_FRAME_EXCEPTION(frame_6b526a20a2c31b45221ec586b02b4694);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto try_return_handler_1;

    frame_exception_exit_1:;

#if 1
    RESTORE_FRAME_EXCEPTION(frame_6b526a20a2c31b45221ec586b02b4694);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_6b526a20a2c31b45221ec586b02b4694, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_6b526a20a2c31b45221ec586b02b4694->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_6b526a20a2c31b45221ec586b02b4694, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_6b526a20a2c31b45221ec586b02b4694,
        type_description_1,
        par_button,
        par_ui,
        NULL,
        var_selected,
        var_list_v,
        var_list_u,
        var_dir_fl,
        var_existingfiles,
        var_drive,
        var_usb_dev,
        var_selected_list,
        var_pw_trim_confirm,
        var_message,
        var_txt,
        NULL,
        var_index,
        var_pw,
        var_t_m,
        var_rgx,
        var_res,
        var_usb_check,
        var_usb_dialog,
        var_message2,
        var_tp,
        var_m1,
        NULL,
        var_m2,
        var_u,
        NULL,
        var_count,
        var_type_a,
        var_res2,
        var_s,
        var_res1,
        var_found,
        var_index2,
        var_preserved_files,
        var_mod,
        (int)var_proceed,
        var_pw_confirm,
        var_entry,
        var_d,
        var_r2,
        var_f,
        var_j,
        var_m,
        var_pw_trim,
        var_iter,
        var_msg_usb,
        var_p,
        var_length,
        var_usb_final,
        var_output,
        var_txt1,
        var_txt2,
        var_txt3
    );


    // Release cached frame.
    if (frame_6b526a20a2c31b45221ec586b02b4694 == cache_frame_6b526a20a2c31b45221ec586b02b4694) {
        Py_DECREF(frame_6b526a20a2c31b45221ec586b02b4694);
    }
    cache_frame_6b526a20a2c31b45221ec586b02b4694 = NULL;

    assertFrameObject(frame_6b526a20a2c31b45221ec586b02b4694);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(runop$$$function_4_run_setupFull);
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    Py_XDECREF(var_selected);
    var_selected = NULL;

    Py_XDECREF(var_list_v);
    var_list_v = NULL;

    Py_XDECREF(var_list_u);
    var_list_u = NULL;

    Py_XDECREF(var_dir_fl);
    var_dir_fl = NULL;

    Py_XDECREF(var_existingfiles);
    var_existingfiles = NULL;

    Py_XDECREF(var_drive);
    var_drive = NULL;

    Py_XDECREF(var_usb_dev);
    var_usb_dev = NULL;

    Py_XDECREF(var_selected_list);
    var_selected_list = NULL;

    Py_XDECREF(var_pw_trim_confirm);
    var_pw_trim_confirm = NULL;

    Py_XDECREF(var_message);
    var_message = NULL;

    Py_XDECREF(var_txt);
    var_txt = NULL;

    Py_XDECREF(var_index);
    var_index = NULL;

    Py_XDECREF(var_pw);
    var_pw = NULL;

    Py_XDECREF(var_t_m);
    var_t_m = NULL;

    Py_XDECREF(var_rgx);
    var_rgx = NULL;

    Py_XDECREF(var_res);
    var_res = NULL;

    Py_XDECREF(var_usb_check);
    var_usb_check = NULL;

    Py_XDECREF(var_usb_dialog);
    var_usb_dialog = NULL;

    Py_XDECREF(var_message2);
    var_message2 = NULL;

    Py_XDECREF(var_tp);
    var_tp = NULL;

    Py_XDECREF(var_m1);
    var_m1 = NULL;

    Py_XDECREF(var_m2);
    var_m2 = NULL;

    Py_XDECREF(var_u);
    var_u = NULL;

    Py_XDECREF(var_count);
    var_count = NULL;

    Py_XDECREF(var_type_a);
    var_type_a = NULL;

    Py_XDECREF(var_res2);
    var_res2 = NULL;

    Py_XDECREF(var_s);
    var_s = NULL;

    Py_XDECREF(var_res1);
    var_res1 = NULL;

    Py_XDECREF(var_found);
    var_found = NULL;

    Py_XDECREF(var_index2);
    var_index2 = NULL;

    Py_XDECREF(var_preserved_files);
    var_preserved_files = NULL;

    Py_XDECREF(var_mod);
    var_mod = NULL;

    Py_XDECREF(var_pw_confirm);
    var_pw_confirm = NULL;

    Py_XDECREF(var_entry);
    var_entry = NULL;

    Py_XDECREF(var_d);
    var_d = NULL;

    Py_XDECREF(var_r2);
    var_r2 = NULL;

    Py_XDECREF(var_f);
    var_f = NULL;

    Py_XDECREF(var_j);
    var_j = NULL;

    Py_XDECREF(var_m);
    var_m = NULL;

    Py_XDECREF(var_pw_trim);
    var_pw_trim = NULL;

    Py_XDECREF(var_iter);
    var_iter = NULL;

    Py_XDECREF(var_msg_usb);
    var_msg_usb = NULL;

    Py_XDECREF(var_p);
    var_p = NULL;

    Py_XDECREF(var_length);
    var_length = NULL;

    Py_XDECREF(var_usb_final);
    var_usb_final = NULL;

    Py_XDECREF(var_output);
    var_output = NULL;

    Py_XDECREF(var_txt1);
    var_txt1 = NULL;

    Py_XDECREF(var_txt2);
    var_txt2 = NULL;

    Py_XDECREF(var_txt3);
    var_txt3 = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_9 = exception_type;
    exception_keeper_value_9 = exception_value;
    exception_keeper_tb_9 = exception_tb;
    exception_keeper_lineno_9 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_selected);
    var_selected = NULL;

    Py_XDECREF(var_list_v);
    var_list_v = NULL;

    Py_XDECREF(var_list_u);
    var_list_u = NULL;

    Py_XDECREF(var_dir_fl);
    var_dir_fl = NULL;

    Py_XDECREF(var_existingfiles);
    var_existingfiles = NULL;

    Py_XDECREF(var_drive);
    var_drive = NULL;

    Py_XDECREF(var_usb_dev);
    var_usb_dev = NULL;

    Py_XDECREF(var_selected_list);
    var_selected_list = NULL;

    Py_XDECREF(var_pw_trim_confirm);
    var_pw_trim_confirm = NULL;

    Py_XDECREF(var_message);
    var_message = NULL;

    Py_XDECREF(var_txt);
    var_txt = NULL;

    Py_XDECREF(var_index);
    var_index = NULL;

    Py_XDECREF(var_pw);
    var_pw = NULL;

    Py_XDECREF(var_t_m);
    var_t_m = NULL;

    Py_XDECREF(var_rgx);
    var_rgx = NULL;

    Py_XDECREF(var_res);
    var_res = NULL;

    Py_XDECREF(var_usb_check);
    var_usb_check = NULL;

    Py_XDECREF(var_usb_dialog);
    var_usb_dialog = NULL;

    Py_XDECREF(var_message2);
    var_message2 = NULL;

    Py_XDECREF(var_tp);
    var_tp = NULL;

    Py_XDECREF(var_m1);
    var_m1 = NULL;

    Py_XDECREF(var_m2);
    var_m2 = NULL;

    Py_XDECREF(var_u);
    var_u = NULL;

    Py_XDECREF(var_count);
    var_count = NULL;

    Py_XDECREF(var_type_a);
    var_type_a = NULL;

    Py_XDECREF(var_res2);
    var_res2 = NULL;

    Py_XDECREF(var_s);
    var_s = NULL;

    Py_XDECREF(var_res1);
    var_res1 = NULL;

    Py_XDECREF(var_found);
    var_found = NULL;

    Py_XDECREF(var_index2);
    var_index2 = NULL;

    Py_XDECREF(var_preserved_files);
    var_preserved_files = NULL;

    Py_XDECREF(var_mod);
    var_mod = NULL;

    Py_XDECREF(var_pw_confirm);
    var_pw_confirm = NULL;

    Py_XDECREF(var_entry);
    var_entry = NULL;

    Py_XDECREF(var_d);
    var_d = NULL;

    Py_XDECREF(var_r2);
    var_r2 = NULL;

    Py_XDECREF(var_f);
    var_f = NULL;

    Py_XDECREF(var_j);
    var_j = NULL;

    Py_XDECREF(var_m);
    var_m = NULL;

    Py_XDECREF(var_pw_trim);
    var_pw_trim = NULL;

    Py_XDECREF(var_iter);
    var_iter = NULL;

    Py_XDECREF(var_msg_usb);
    var_msg_usb = NULL;

    Py_XDECREF(var_p);
    var_p = NULL;

    Py_XDECREF(var_length);
    var_length = NULL;

    Py_XDECREF(var_usb_final);
    var_usb_final = NULL;

    Py_XDECREF(var_output);
    var_output = NULL;

    Py_XDECREF(var_txt1);
    var_txt1 = NULL;

    Py_XDECREF(var_txt2);
    var_txt2 = NULL;

    Py_XDECREF(var_txt3);
    var_txt3 = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_9;
    exception_value = exception_keeper_value_9;
    exception_tb = exception_keeper_tb_9;
    exception_lineno = exception_keeper_lineno_9;

    goto function_exception_exit;
    // End of try:

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(runop$$$function_4_run_setupFull);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_button);
    Py_DECREF(par_button);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_button);
    Py_DECREF(par_button);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_runop$$$function_5_run_pbaWrite(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_button = python_pars[0];
    PyObject *par_ui = python_pars[1];
    PyObject *var_pw_strip = NULL;
    PyObject *var_list_sn = NULL;
    PyObject *var_d_list = NULL;
    PyObject *var_drive_list = NULL;
    PyObject *var_index = NULL;
    PyObject *var_selected = NULL;
    PyObject *var_drive = NULL;
    PyObject *var_iter = NULL;
    PyObject *var_devs = NULL;
    PyObject *var_f_list = NULL;
    PyObject *var_a = NULL;
    PyObject *var_selected_list = NULL;
    PyObject *var_list_mn = NULL;
    PyObject *var_dev_idx = NULL;
    PyObject *var_t_m = NULL;
    PyObject *tmp_for_loop_1__for_iterator = NULL;
    PyObject *tmp_for_loop_1__iter_value = NULL;
    struct Nuitka_FrameObject *frame_94b94040b10849e982615a25a2e7e439;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    static struct Nuitka_FrameObject *cache_frame_94b94040b10849e982615a25a2e7e439 = NULL;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;

    // Actual function body.
    // Tried code:
    MAKE_OR_REUSE_FRAME(cache_frame_94b94040b10849e982615a25a2e7e439, codeobj_94b94040b10849e982615a25a2e7e439, module_runop, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
    frame_94b94040b10849e982615a25a2e7e439 = cache_frame_94b94040b10849e982615a25a2e7e439;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_94b94040b10849e982615a25a2e7e439);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_94b94040b10849e982615a25a2e7e439) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_instance_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_call_result_1;
        PyObject *tmp_args_element_name_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_verify);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_verify);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 236 ], 35, 0);
            exception_tb = NULL;

            exception_lineno = 278;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_1 = tmp_mvar_value_1;
        CHECK_OBJECT(par_ui);
        tmp_args_element_name_1 = par_ui;
        frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 278;
        {
            PyObject *call_args[] = {tmp_args_element_name_1};
            tmp_call_result_1 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_1, const_str_plain_licCheck, call_args);
        }

        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 278;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_1);
    }
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_called_name_1;
        PyObject *tmp_source_name_1;
        PyObject *tmp_mvar_value_2;
        PyObject *tmp_args_element_name_2;
        PyObject *tmp_args_element_name_3;
        PyObject *tmp_args_element_name_4;
        PyObject *tmp_called_instance_2;
        PyObject *tmp_source_name_2;
        tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_2 == NULL)) {
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_2 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
            exception_tb = NULL;

            exception_lineno = 284;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_1 = tmp_mvar_value_2;
        tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_sub);
        if (tmp_called_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 284;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_2 = const_str_digest_29fe972ddfd3c3ace7d88aee7a9cd77e;
        tmp_args_element_name_3 = const_str_empty;
        CHECK_OBJECT(par_ui);
        tmp_source_name_2 = par_ui;
        tmp_called_instance_2 = LOOKUP_ATTRIBUTE(tmp_source_name_2, const_str_plain_pass_entry);
        if (tmp_called_instance_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_1);

            exception_lineno = 284;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 284;
        tmp_args_element_name_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_2, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_2);
        if (tmp_args_element_name_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_1);

            exception_lineno = 284;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 284;
        {
            PyObject *call_args[] = {tmp_args_element_name_2, tmp_args_element_name_3, tmp_args_element_name_4};
            tmp_assign_source_1 = CALL_FUNCTION_WITH_ARGS3(tmp_called_name_1, call_args);
        }

        Py_DECREF(tmp_called_name_1);
        Py_DECREF(tmp_args_element_name_4);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 284;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        assert(var_pw_strip == NULL);
        var_pw_strip = tmp_assign_source_1;
    }
    {
        nuitka_bool tmp_condition_result_1;
        int tmp_and_left_truth_1;
        nuitka_bool tmp_and_left_value_1;
        nuitka_bool tmp_and_right_value_1;
        PyObject *tmp_compexpr_left_1;
        PyObject *tmp_compexpr_right_1;
        PyObject *tmp_called_instance_3;
        PyObject *tmp_source_name_3;
        int tmp_or_left_truth_1;
        nuitka_bool tmp_or_left_value_1;
        nuitka_bool tmp_or_right_value_1;
        PyObject *tmp_compexpr_left_2;
        PyObject *tmp_compexpr_right_2;
        PyObject *tmp_source_name_4;
        PyObject *tmp_operand_name_1;
        PyObject *tmp_called_instance_4;
        PyObject *tmp_source_name_5;
        CHECK_OBJECT(par_ui);
        tmp_source_name_3 = par_ui;
        tmp_called_instance_3 = LOOKUP_ATTRIBUTE(tmp_source_name_3, const_str_plain_pass_entry);
        if (tmp_called_instance_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 286;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 286;
        tmp_compexpr_left_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_3, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_3);
        if (tmp_compexpr_left_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 286;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_1 = const_str_empty;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_1, tmp_compexpr_right_1);
        Py_DECREF(tmp_compexpr_left_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 286;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_1 = tmp_and_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_1 == 1) {
            goto and_right_1;
        } else {
            goto and_left_1;
        }
        and_right_1:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_4 = par_ui;
        tmp_compexpr_left_2 = LOOKUP_ATTRIBUTE(tmp_source_name_4, const_str_plain_VERSION);
        if (tmp_compexpr_left_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 286;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_2 = const_int_pos_3;
        tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_INT(tmp_compexpr_left_2, tmp_compexpr_right_2);
        Py_DECREF(tmp_compexpr_left_2);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 286;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_or_left_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_or_left_truth_1 = tmp_or_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_or_left_truth_1 == 1) {
            goto or_left_1;
        } else {
            goto or_right_1;
        }
        or_right_1:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_5 = par_ui;
        tmp_called_instance_4 = LOOKUP_ATTRIBUTE(tmp_source_name_5, const_str_plain_check_pass_rd);
        if (tmp_called_instance_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 286;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 286;
        tmp_operand_name_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_4, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_4);
        if (tmp_operand_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 286;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_1);
        Py_DECREF(tmp_operand_name_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 286;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_or_right_value_1 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_right_value_1 = tmp_or_right_value_1;
        goto or_end_1;
        or_left_1:;
        tmp_and_right_value_1 = tmp_or_left_value_1;
        or_end_1:;
        tmp_condition_result_1 = tmp_and_right_value_1;
        goto and_end_1;
        and_left_1:;
        tmp_condition_result_1 = tmp_and_left_value_1;
        and_end_1:;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        {
            PyObject *tmp_called_instance_5;
            PyObject *tmp_call_result_2;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_5 = par_ui;
            frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 287;
            tmp_call_result_2 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_5, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_8482c425481a7392528c91276c4d7ae3_tuple, 0));

            if (tmp_call_result_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 287;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_2);
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        goto branch_end_1;
        branch_no_1:;
        {
            nuitka_bool tmp_condition_result_2;
            int tmp_and_left_truth_2;
            nuitka_bool tmp_and_left_value_2;
            nuitka_bool tmp_and_right_value_2;
            PyObject *tmp_compexpr_left_3;
            PyObject *tmp_compexpr_right_3;
            int tmp_or_left_truth_2;
            nuitka_bool tmp_or_left_value_2;
            nuitka_bool tmp_or_right_value_2;
            PyObject *tmp_compexpr_left_4;
            PyObject *tmp_compexpr_right_4;
            PyObject *tmp_source_name_6;
            PyObject *tmp_operand_name_2;
            PyObject *tmp_called_instance_6;
            PyObject *tmp_source_name_7;
            CHECK_OBJECT(var_pw_strip);
            tmp_compexpr_left_3 = var_pw_strip;
            tmp_compexpr_right_3 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_3, tmp_compexpr_right_3);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 289;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            tmp_and_left_value_2 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_and_left_truth_2 = tmp_and_left_value_2 == NUITKA_BOOL_TRUE ? 1 : 0;
            if (tmp_and_left_truth_2 == 1) {
                goto and_right_2;
            } else {
                goto and_left_2;
            }
            and_right_2:;
            CHECK_OBJECT(par_ui);
            tmp_source_name_6 = par_ui;
            tmp_compexpr_left_4 = LOOKUP_ATTRIBUTE(tmp_source_name_6, const_str_plain_VERSION);
            if (tmp_compexpr_left_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 289;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_4 = const_int_pos_3;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_INT(tmp_compexpr_left_4, tmp_compexpr_right_4);
            Py_DECREF(tmp_compexpr_left_4);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 289;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            tmp_or_left_value_2 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_or_left_truth_2 = tmp_or_left_value_2 == NUITKA_BOOL_TRUE ? 1 : 0;
            if (tmp_or_left_truth_2 == 1) {
                goto or_left_2;
            } else {
                goto or_right_2;
            }
            or_right_2:;
            CHECK_OBJECT(par_ui);
            tmp_source_name_7 = par_ui;
            tmp_called_instance_6 = LOOKUP_ATTRIBUTE(tmp_source_name_7, const_str_plain_check_pass_rd);
            if (tmp_called_instance_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 289;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 289;
            tmp_operand_name_2 = CALL_METHOD_NO_ARGS(tmp_called_instance_6, const_str_plain_get_active);
            Py_DECREF(tmp_called_instance_6);
            if (tmp_operand_name_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 289;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_2);
            Py_DECREF(tmp_operand_name_2);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 289;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            tmp_or_right_value_2 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_and_right_value_2 = tmp_or_right_value_2;
            goto or_end_2;
            or_left_2:;
            tmp_and_right_value_2 = tmp_or_left_value_2;
            or_end_2:;
            tmp_condition_result_2 = tmp_and_right_value_2;
            goto and_end_2;
            and_left_2:;
            tmp_condition_result_2 = tmp_and_left_value_2;
            and_end_2:;
            if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
                goto branch_yes_2;
            } else {
                goto branch_no_2;
            }
            branch_yes_2:;
            {
                PyObject *tmp_called_instance_7;
                PyObject *tmp_call_result_3;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_7 = par_ui;
                frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 290;
                tmp_call_result_3 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_7, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_84ba3144e8a4c8824551fdd8d0fe5bde_tuple, 0));

                if (tmp_call_result_3 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 290;
                    type_description_1 = "ooNoooooooooooooNoo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_3);
            }
            tmp_return_value = Py_None;
            Py_INCREF(tmp_return_value);
            goto frame_return_exit_1;
            branch_no_2:;
        }
        branch_end_1:;
    }
    {
        nuitka_bool tmp_condition_result_3;
        int tmp_and_left_truth_3;
        nuitka_bool tmp_and_left_value_3;
        nuitka_bool tmp_and_right_value_3;
        int tmp_or_left_truth_3;
        nuitka_bool tmp_or_left_value_3;
        nuitka_bool tmp_or_right_value_3;
        PyObject *tmp_compexpr_left_5;
        PyObject *tmp_compexpr_right_5;
        PyObject *tmp_left_name_1;
        PyObject *tmp_source_name_8;
        PyObject *tmp_right_name_1;
        int tmp_and_left_truth_4;
        nuitka_bool tmp_and_left_value_4;
        nuitka_bool tmp_and_right_value_4;
        PyObject *tmp_compexpr_left_6;
        PyObject *tmp_compexpr_right_6;
        PyObject *tmp_source_name_9;
        PyObject *tmp_compexpr_left_7;
        PyObject *tmp_compexpr_right_7;
        PyObject *tmp_source_name_10;
        int tmp_and_left_truth_5;
        nuitka_bool tmp_and_left_value_5;
        nuitka_bool tmp_and_right_value_5;
        PyObject *tmp_called_instance_8;
        PyObject *tmp_source_name_11;
        PyObject *tmp_call_result_4;
        int tmp_truth_name_1;
        PyObject *tmp_compexpr_left_8;
        PyObject *tmp_compexpr_right_8;
        PyObject *tmp_len_arg_1;
        PyObject *tmp_source_name_12;
        CHECK_OBJECT(par_ui);
        tmp_source_name_8 = par_ui;
        tmp_left_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_8, const_str_plain_VERSION);
        if (tmp_left_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 292;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_right_name_1 = const_int_pos_3;
        tmp_compexpr_left_5 = BINARY_OPERATION_MOD_OBJECT_INT(tmp_left_name_1, tmp_right_name_1);
        Py_DECREF(tmp_left_name_1);
        if (tmp_compexpr_left_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 292;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_5 = const_int_0;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_5, tmp_compexpr_right_5);
        Py_DECREF(tmp_compexpr_left_5);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 292;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_or_left_value_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_or_left_truth_3 = tmp_or_left_value_3 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_or_left_truth_3 == 1) {
            goto or_left_3;
        } else {
            goto or_right_3;
        }
        or_right_3:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_9 = par_ui;
        tmp_compexpr_left_6 = LOOKUP_ATTRIBUTE(tmp_source_name_9, const_str_plain_VERSION);
        if (tmp_compexpr_left_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 292;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_6 = const_int_pos_1;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_6, tmp_compexpr_right_6);
        Py_DECREF(tmp_compexpr_left_6);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 292;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_4 = tmp_and_left_value_4 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_4 == 1) {
            goto and_right_4;
        } else {
            goto and_left_4;
        }
        and_right_4:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_10 = par_ui;
        tmp_compexpr_left_7 = LOOKUP_ATTRIBUTE(tmp_source_name_10, const_str_plain_PBA_VERSION);
        if (tmp_compexpr_left_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 292;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_7 = const_int_pos_1;
        tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_INT(tmp_compexpr_left_7, tmp_compexpr_right_7);
        Py_DECREF(tmp_compexpr_left_7);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 292;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_or_right_value_3 = tmp_and_right_value_4;
        goto and_end_4;
        and_left_4:;
        tmp_or_right_value_3 = tmp_and_left_value_4;
        and_end_4:;
        tmp_and_left_value_3 = tmp_or_right_value_3;
        goto or_end_3;
        or_left_3:;
        tmp_and_left_value_3 = tmp_or_left_value_3;
        or_end_3:;
        tmp_and_left_truth_3 = tmp_and_left_value_3 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_3 == 1) {
            goto and_right_3;
        } else {
            goto and_left_3;
        }
        and_right_3:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_11 = par_ui;
        tmp_called_instance_8 = LOOKUP_ATTRIBUTE(tmp_source_name_11, const_str_plain_pass_sav);
        if (tmp_called_instance_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 292;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 292;
        tmp_call_result_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_8, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_8);
        if (tmp_call_result_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 292;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_1 = CHECK_IF_TRUE(tmp_call_result_4);
        if (tmp_truth_name_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_4);

            exception_lineno = 292;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_5 = tmp_truth_name_1 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_4);
        tmp_and_left_truth_5 = tmp_and_left_value_5 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_5 == 1) {
            goto and_right_5;
        } else {
            goto and_left_5;
        }
        and_right_5:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_12 = par_ui;
        tmp_len_arg_1 = LOOKUP_ATTRIBUTE(tmp_source_name_12, const_str_plain_drive_list);
        if (tmp_len_arg_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 292;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_left_8 = BUILTIN_LEN(tmp_len_arg_1);
        Py_DECREF(tmp_len_arg_1);
        if (tmp_compexpr_left_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 292;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_8 = const_int_0;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_8, tmp_compexpr_right_8);
        Py_DECREF(tmp_compexpr_left_8);
        assert(!(tmp_res == -1));
        tmp_and_right_value_5 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_right_value_3 = tmp_and_right_value_5;
        goto and_end_5;
        and_left_5:;
        tmp_and_right_value_3 = tmp_and_left_value_5;
        and_end_5:;
        tmp_condition_result_3 = tmp_and_right_value_3;
        goto and_end_3;
        and_left_3:;
        tmp_condition_result_3 = tmp_and_left_value_3;
        and_end_3:;
        if (tmp_condition_result_3 == NUITKA_BOOL_TRUE) {
            goto branch_yes_3;
        } else {
            goto branch_no_3;
        }
        branch_yes_3:;
        {
            PyObject *tmp_called_instance_9;
            PyObject *tmp_call_result_5;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_9 = par_ui;
            frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 293;
            tmp_call_result_5 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_9, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_1a4b86fee576c2932467ec44f9732332_tuple, 0));

            if (tmp_call_result_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 293;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_5);
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        branch_no_3:;
    }
    {
        nuitka_bool tmp_condition_result_4;
        int tmp_and_left_truth_6;
        nuitka_bool tmp_and_left_value_6;
        nuitka_bool tmp_and_right_value_6;
        int tmp_or_left_truth_4;
        nuitka_bool tmp_or_left_value_4;
        nuitka_bool tmp_or_right_value_4;
        PyObject *tmp_compexpr_left_9;
        PyObject *tmp_compexpr_right_9;
        PyObject *tmp_left_name_2;
        PyObject *tmp_source_name_13;
        PyObject *tmp_right_name_2;
        int tmp_and_left_truth_7;
        nuitka_bool tmp_and_left_value_7;
        nuitka_bool tmp_and_right_value_7;
        PyObject *tmp_compexpr_left_10;
        PyObject *tmp_compexpr_right_10;
        PyObject *tmp_source_name_14;
        PyObject *tmp_compexpr_left_11;
        PyObject *tmp_compexpr_right_11;
        PyObject *tmp_source_name_15;
        PyObject *tmp_called_instance_10;
        PyObject *tmp_source_name_16;
        PyObject *tmp_call_result_6;
        int tmp_truth_name_2;
        CHECK_OBJECT(par_ui);
        tmp_source_name_13 = par_ui;
        tmp_left_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_13, const_str_plain_VERSION);
        if (tmp_left_name_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 295;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_right_name_2 = const_int_pos_3;
        tmp_compexpr_left_9 = BINARY_OPERATION_MOD_OBJECT_INT(tmp_left_name_2, tmp_right_name_2);
        Py_DECREF(tmp_left_name_2);
        if (tmp_compexpr_left_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 295;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_9 = const_int_0;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_9, tmp_compexpr_right_9);
        Py_DECREF(tmp_compexpr_left_9);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 295;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_or_left_value_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_or_left_truth_4 = tmp_or_left_value_4 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_or_left_truth_4 == 1) {
            goto or_left_4;
        } else {
            goto or_right_4;
        }
        or_right_4:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_14 = par_ui;
        tmp_compexpr_left_10 = LOOKUP_ATTRIBUTE(tmp_source_name_14, const_str_plain_VERSION);
        if (tmp_compexpr_left_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 295;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_10 = const_int_pos_1;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_10, tmp_compexpr_right_10);
        Py_DECREF(tmp_compexpr_left_10);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 295;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_7 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_7 = tmp_and_left_value_7 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_7 == 1) {
            goto and_right_7;
        } else {
            goto and_left_7;
        }
        and_right_7:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_15 = par_ui;
        tmp_compexpr_left_11 = LOOKUP_ATTRIBUTE(tmp_source_name_15, const_str_plain_PBA_VERSION);
        if (tmp_compexpr_left_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 295;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_11 = const_int_pos_1;
        tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_INT(tmp_compexpr_left_11, tmp_compexpr_right_11);
        Py_DECREF(tmp_compexpr_left_11);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 295;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_7 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_or_right_value_4 = tmp_and_right_value_7;
        goto and_end_7;
        and_left_7:;
        tmp_or_right_value_4 = tmp_and_left_value_7;
        and_end_7:;
        tmp_and_left_value_6 = tmp_or_right_value_4;
        goto or_end_4;
        or_left_4:;
        tmp_and_left_value_6 = tmp_or_left_value_4;
        or_end_4:;
        tmp_and_left_truth_6 = tmp_and_left_value_6 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_6 == 1) {
            goto and_right_6;
        } else {
            goto and_left_6;
        }
        and_right_6:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_16 = par_ui;
        tmp_called_instance_10 = LOOKUP_ATTRIBUTE(tmp_source_name_16, const_str_plain_pass_sav);
        if (tmp_called_instance_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 295;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 295;
        tmp_call_result_6 = CALL_METHOD_NO_ARGS(tmp_called_instance_10, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_10);
        if (tmp_call_result_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 295;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_2 = CHECK_IF_TRUE(tmp_call_result_6);
        if (tmp_truth_name_2 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_6);

            exception_lineno = 295;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_6 = tmp_truth_name_2 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_6);
        tmp_condition_result_4 = tmp_and_right_value_6;
        goto and_end_6;
        and_left_6:;
        tmp_condition_result_4 = tmp_and_left_value_6;
        and_end_6:;
        if (tmp_condition_result_4 == NUITKA_BOOL_TRUE) {
            goto branch_yes_4;
        } else {
            goto branch_no_4;
        }
        branch_yes_4:;
        {
            PyObject *tmp_assign_source_2;
            PyObject *tmp_called_instance_11;
            PyObject *tmp_source_name_17;
            CHECK_OBJECT(par_ui);
            tmp_source_name_17 = par_ui;
            tmp_called_instance_11 = LOOKUP_ATTRIBUTE(tmp_source_name_17, const_str_plain_drive_menu);
            if (tmp_called_instance_11 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 296;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 296;
            tmp_assign_source_2 = CALL_METHOD_NO_ARGS(tmp_called_instance_11, const_str_plain_get_active_text);
            Py_DECREF(tmp_called_instance_11);
            if (tmp_assign_source_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 296;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            assert(var_drive == NULL);
            var_drive = tmp_assign_source_2;
        }
        {
            nuitka_bool tmp_condition_result_5;
            PyObject *tmp_compexpr_left_12;
            PyObject *tmp_compexpr_right_12;
            PyObject *tmp_source_name_18;
            CHECK_OBJECT(par_ui);
            tmp_source_name_18 = par_ui;
            tmp_compexpr_left_12 = LOOKUP_ATTRIBUTE(tmp_source_name_18, const_str_plain_DEV_OS);
            if (tmp_compexpr_left_12 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 298;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_12 = const_str_plain_Windows;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_12, tmp_compexpr_right_12);
            Py_DECREF(tmp_compexpr_left_12);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 298;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_5 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_5 == NUITKA_BOOL_TRUE) {
                goto branch_yes_5;
            } else {
                goto branch_no_5;
            }
            branch_yes_5:;
            {
                PyObject *tmp_assign_source_3;
                PyObject *tmp_left_name_3;
                PyObject *tmp_right_name_3;
                CHECK_OBJECT(var_drive);
                tmp_left_name_3 = var_drive;
                tmp_right_name_3 = const_str_chr_92;
                tmp_assign_source_3 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_3, tmp_right_name_3);
                if (tmp_assign_source_3 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 299;
                    type_description_1 = "ooNoooooooooooooNoo";
                    goto frame_exception_exit_1;
                }
                {
                    PyObject *old = var_drive;
                    assert(old != NULL);
                    var_drive = tmp_assign_source_3;
                    Py_DECREF(old);
                }

            }
            branch_no_5:;
        }
        {
            nuitka_bool tmp_condition_result_6;
            PyObject *tmp_operand_name_3;
            PyObject *tmp_called_instance_12;
            PyObject *tmp_source_name_19;
            PyObject *tmp_mvar_value_3;
            PyObject *tmp_args_element_name_5;
            tmp_mvar_value_3 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

            if (unlikely(tmp_mvar_value_3 == NULL)) {
                tmp_mvar_value_3 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
            }

            if (tmp_mvar_value_3 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                exception_tb = NULL;

                exception_lineno = 300;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }

            tmp_source_name_19 = tmp_mvar_value_3;
            tmp_called_instance_12 = LOOKUP_ATTRIBUTE(tmp_source_name_19, const_str_plain_path);
            if (tmp_called_instance_12 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 300;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            CHECK_OBJECT(var_drive);
            tmp_args_element_name_5 = var_drive;
            frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 300;
            {
                PyObject *call_args[] = {tmp_args_element_name_5};
                tmp_operand_name_3 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_12, const_str_plain_isdir, call_args);
            }

            Py_DECREF(tmp_called_instance_12);
            if (tmp_operand_name_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 300;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_3);
            Py_DECREF(tmp_operand_name_3);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 300;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_6 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_6 == NUITKA_BOOL_TRUE) {
                goto branch_yes_6;
            } else {
                goto branch_no_6;
            }
            branch_yes_6:;
            {
                PyObject *tmp_called_instance_13;
                PyObject *tmp_call_result_7;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_13 = par_ui;
                frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 301;
                tmp_call_result_7 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_13, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_e56275e2a5c0026638e77956d372e275_tuple, 0));

                if (tmp_call_result_7 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 301;
                    type_description_1 = "ooNoooooooooooooNoo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_7);
            }
            tmp_return_value = Py_None;
            Py_INCREF(tmp_return_value);
            goto frame_return_exit_1;
            branch_no_6:;
        }
        branch_no_4:;
    }
    {
        nuitka_bool tmp_condition_result_7;
        PyObject *tmp_called_instance_14;
        PyObject *tmp_source_name_20;
        PyObject *tmp_call_result_8;
        int tmp_truth_name_3;
        CHECK_OBJECT(par_ui);
        tmp_source_name_20 = par_ui;
        tmp_called_instance_14 = LOOKUP_ATTRIBUTE(tmp_source_name_20, const_str_plain_toggleSingle_radio);
        if (tmp_called_instance_14 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 306;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 306;
        tmp_call_result_8 = CALL_METHOD_NO_ARGS(tmp_called_instance_14, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_14);
        if (tmp_call_result_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 306;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_3 = CHECK_IF_TRUE(tmp_call_result_8);
        if (tmp_truth_name_3 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_8);

            exception_lineno = 306;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_7 = tmp_truth_name_3 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_8);
        if (tmp_condition_result_7 == NUITKA_BOOL_TRUE) {
            goto branch_yes_7;
        } else {
            goto branch_no_7;
        }
        branch_yes_7:;
        {
            PyObject *tmp_assign_source_4;
            PyObject *tmp_called_instance_15;
            PyObject *tmp_source_name_21;
            CHECK_OBJECT(par_ui);
            tmp_source_name_21 = par_ui;
            tmp_called_instance_15 = LOOKUP_ATTRIBUTE(tmp_source_name_21, const_str_plain_dev_select);
            if (tmp_called_instance_15 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 307;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 307;
            tmp_assign_source_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_15, const_str_plain_get_active);
            Py_DECREF(tmp_called_instance_15);
            if (tmp_assign_source_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 307;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            assert(var_dev_idx == NULL);
            var_dev_idx = tmp_assign_source_4;
        }
        {
            PyObject *tmp_assign_source_5;
            PyObject *tmp_list_element_1;
            CHECK_OBJECT(var_dev_idx);
            tmp_list_element_1 = var_dev_idx;
            tmp_assign_source_5 = PyList_New(1);
            Py_INCREF(tmp_list_element_1);
            PyList_SET_ITEM(tmp_assign_source_5, 0, tmp_list_element_1);
            assert(var_selected_list == NULL);
            var_selected_list = tmp_assign_source_5;
        }
        goto branch_end_7;
        branch_no_7:;
        {
            PyObject *tmp_assign_source_6;
            tmp_assign_source_6 = const_int_0;
            assert(var_index == NULL);
            Py_INCREF(tmp_assign_source_6);
            var_index = tmp_assign_source_6;
        }
        {
            PyObject *tmp_assign_source_7;
            tmp_assign_source_7 = PyList_New(0);
            assert(var_selected_list == NULL);
            var_selected_list = tmp_assign_source_7;
        }
        {
            PyObject *tmp_assign_source_8;
            PyObject *tmp_called_instance_16;
            PyObject *tmp_source_name_22;
            CHECK_OBJECT(par_ui);
            tmp_source_name_22 = par_ui;
            tmp_called_instance_16 = LOOKUP_ATTRIBUTE(tmp_source_name_22, const_str_plain_liststore);
            if (tmp_called_instance_16 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 313;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 313;
            tmp_assign_source_8 = CALL_METHOD_NO_ARGS(tmp_called_instance_16, const_str_plain_get_iter_first);
            Py_DECREF(tmp_called_instance_16);
            if (tmp_assign_source_8 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 313;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            assert(var_iter == NULL);
            var_iter = tmp_assign_source_8;
        }
        loop_start_1:;
        {
            nuitka_bool tmp_condition_result_8;
            PyObject *tmp_operand_name_4;
            PyObject *tmp_compexpr_left_13;
            PyObject *tmp_compexpr_right_13;
            CHECK_OBJECT(var_iter);
            tmp_compexpr_left_13 = var_iter;
            tmp_compexpr_right_13 = Py_None;
            tmp_operand_name_4 = RICH_COMPARE_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_13, tmp_compexpr_right_13);
            if (tmp_operand_name_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 314;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_4);
            Py_DECREF(tmp_operand_name_4);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 314;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_8 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_8 == NUITKA_BOOL_TRUE) {
                goto branch_yes_8;
            } else {
                goto branch_no_8;
            }
            branch_yes_8:;
            goto loop_end_1;
            branch_no_8:;
        }
        {
            PyObject *tmp_assign_source_9;
            PyObject *tmp_called_instance_17;
            PyObject *tmp_source_name_23;
            PyObject *tmp_args_element_name_6;
            PyObject *tmp_args_element_name_7;
            CHECK_OBJECT(par_ui);
            tmp_source_name_23 = par_ui;
            tmp_called_instance_17 = LOOKUP_ATTRIBUTE(tmp_source_name_23, const_str_plain_liststore);
            if (tmp_called_instance_17 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 315;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            CHECK_OBJECT(var_iter);
            tmp_args_element_name_6 = var_iter;
            tmp_args_element_name_7 = const_int_0;
            frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 315;
            {
                PyObject *call_args[] = {tmp_args_element_name_6, tmp_args_element_name_7};
                tmp_assign_source_9 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_17, const_str_plain_get_value, call_args);
            }

            Py_DECREF(tmp_called_instance_17);
            if (tmp_assign_source_9 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 315;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            {
                PyObject *old = var_selected;
                var_selected = tmp_assign_source_9;
                Py_XDECREF(old);
            }

        }
        {
            nuitka_bool tmp_condition_result_9;
            int tmp_truth_name_4;
            CHECK_OBJECT(var_selected);
            tmp_truth_name_4 = CHECK_IF_TRUE(var_selected);
            if (tmp_truth_name_4 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 316;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_9 = tmp_truth_name_4 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_9 == NUITKA_BOOL_TRUE) {
                goto branch_yes_9;
            } else {
                goto branch_no_9;
            }
            branch_yes_9:;
            {
                PyObject *tmp_called_instance_18;
                PyObject *tmp_call_result_9;
                PyObject *tmp_args_element_name_8;
                CHECK_OBJECT(var_selected_list);
                tmp_called_instance_18 = var_selected_list;
                CHECK_OBJECT(var_index);
                tmp_args_element_name_8 = var_index;
                frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 317;
                {
                    PyObject *call_args[] = {tmp_args_element_name_8};
                    tmp_call_result_9 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_18, const_str_plain_append, call_args);
                }

                if (tmp_call_result_9 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 317;
                    type_description_1 = "ooNoooooooooooooNoo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_9);
            }
            branch_no_9:;
        }
        {
            PyObject *tmp_assign_source_10;
            PyObject *tmp_called_instance_19;
            PyObject *tmp_source_name_24;
            PyObject *tmp_args_element_name_9;
            CHECK_OBJECT(par_ui);
            tmp_source_name_24 = par_ui;
            tmp_called_instance_19 = LOOKUP_ATTRIBUTE(tmp_source_name_24, const_str_plain_liststore);
            if (tmp_called_instance_19 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 318;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            CHECK_OBJECT(var_iter);
            tmp_args_element_name_9 = var_iter;
            frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 318;
            {
                PyObject *call_args[] = {tmp_args_element_name_9};
                tmp_assign_source_10 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_19, const_str_plain_iter_next, call_args);
            }

            Py_DECREF(tmp_called_instance_19);
            if (tmp_assign_source_10 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 318;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            {
                PyObject *old = var_iter;
                assert(old != NULL);
                var_iter = tmp_assign_source_10;
                Py_DECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_11;
            PyObject *tmp_left_name_4;
            PyObject *tmp_right_name_4;
            CHECK_OBJECT(var_index);
            tmp_left_name_4 = var_index;
            tmp_right_name_4 = const_int_pos_1;
            tmp_assign_source_11 = BINARY_OPERATION_ADD_OBJECT_INT(tmp_left_name_4, tmp_right_name_4);
            assert(!(tmp_assign_source_11 == NULL));
            {
                PyObject *old = var_index;
                assert(old != NULL);
                var_index = tmp_assign_source_11;
                Py_DECREF(old);
            }

        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 314;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        goto loop_start_1;
        loop_end_1:;
        {
            nuitka_bool tmp_condition_result_10;
            PyObject *tmp_compexpr_left_14;
            PyObject *tmp_compexpr_right_14;
            PyObject *tmp_len_arg_2;
            CHECK_OBJECT(var_selected_list);
            tmp_len_arg_2 = var_selected_list;
            tmp_compexpr_left_14 = BUILTIN_LEN(tmp_len_arg_2);
            assert(!(tmp_compexpr_left_14 == NULL));
            tmp_compexpr_right_14 = const_int_0;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_14, tmp_compexpr_right_14);
            Py_DECREF(tmp_compexpr_left_14);
            assert(!(tmp_res == -1));
            tmp_condition_result_10 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_10 == NUITKA_BOOL_TRUE) {
                goto branch_yes_10;
            } else {
                goto branch_no_10;
            }
            branch_yes_10:;
            {
                PyObject *tmp_called_instance_20;
                PyObject *tmp_call_result_10;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_20 = par_ui;
                frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 321;
                tmp_call_result_10 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_20, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_1115ebe932d1b941d1eed30a47fde5a6_tuple, 0));

                if (tmp_call_result_10 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 321;
                    type_description_1 = "ooNoooooooooooooNoo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_10);
            }
            tmp_return_value = Py_None;
            Py_INCREF(tmp_return_value);
            goto frame_return_exit_1;
            branch_no_10:;
        }
        branch_end_7:;
    }
    {
        nuitka_bool tmp_condition_result_11;
        int tmp_and_left_truth_8;
        nuitka_bool tmp_and_left_value_8;
        nuitka_bool tmp_and_right_value_8;
        PyObject *tmp_compexpr_left_15;
        PyObject *tmp_compexpr_right_15;
        PyObject *tmp_source_name_25;
        PyObject *tmp_called_instance_21;
        PyObject *tmp_source_name_26;
        PyObject *tmp_call_result_11;
        int tmp_truth_name_5;
        CHECK_OBJECT(par_ui);
        tmp_source_name_25 = par_ui;
        tmp_compexpr_left_15 = LOOKUP_ATTRIBUTE(tmp_source_name_25, const_str_plain_VERSION);
        if (tmp_compexpr_left_15 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 324;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_15 = const_int_pos_3;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_15, tmp_compexpr_right_15);
        Py_DECREF(tmp_compexpr_left_15);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 324;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_8 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_8 = tmp_and_left_value_8 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_8 == 1) {
            goto and_right_8;
        } else {
            goto and_left_8;
        }
        and_right_8:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_26 = par_ui;
        tmp_called_instance_21 = LOOKUP_ATTRIBUTE(tmp_source_name_26, const_str_plain_check_pass_rd);
        if (tmp_called_instance_21 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 324;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 324;
        tmp_call_result_11 = CALL_METHOD_NO_ARGS(tmp_called_instance_21, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_21);
        if (tmp_call_result_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 324;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_5 = CHECK_IF_TRUE(tmp_call_result_11);
        if (tmp_truth_name_5 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_11);

            exception_lineno = 324;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_8 = tmp_truth_name_5 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_11);
        tmp_condition_result_11 = tmp_and_right_value_8;
        goto and_end_8;
        and_left_8:;
        tmp_condition_result_11 = tmp_and_left_value_8;
        and_end_8:;
        if (tmp_condition_result_11 == NUITKA_BOOL_TRUE) {
            goto branch_yes_11;
        } else {
            goto branch_no_11;
        }
        branch_yes_11:;
        {
            PyObject *tmp_assign_source_12;
            tmp_assign_source_12 = PyList_New(0);
            assert(var_devs == NULL);
            var_devs = tmp_assign_source_12;
        }
        {
            PyObject *tmp_assign_source_13;
            tmp_assign_source_13 = PyList_New(0);
            assert(var_list_mn == NULL);
            var_list_mn = tmp_assign_source_13;
        }
        {
            PyObject *tmp_assign_source_14;
            tmp_assign_source_14 = PyList_New(0);
            assert(var_list_sn == NULL);
            var_list_sn = tmp_assign_source_14;
        }
        {
            PyObject *tmp_assign_source_15;
            PyObject *tmp_iter_arg_1;
            CHECK_OBJECT(var_selected_list);
            tmp_iter_arg_1 = var_selected_list;
            tmp_assign_source_15 = MAKE_ITERATOR(tmp_iter_arg_1);
            if (tmp_assign_source_15 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 328;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_1__for_iterator == NULL);
            tmp_for_loop_1__for_iterator = tmp_assign_source_15;
        }
        // Tried code:
        loop_start_2:;
        {
            PyObject *tmp_next_source_1;
            PyObject *tmp_assign_source_16;
            CHECK_OBJECT(tmp_for_loop_1__for_iterator);
            tmp_next_source_1 = tmp_for_loop_1__for_iterator;
            tmp_assign_source_16 = ITERATOR_NEXT(tmp_next_source_1);
            if (tmp_assign_source_16 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_2;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "ooNoooooooooooooNoo";
                    exception_lineno = 328;
                    goto try_except_handler_2;
                }
            }

            {
                PyObject *old = tmp_for_loop_1__iter_value;
                tmp_for_loop_1__iter_value = tmp_assign_source_16;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_17;
            CHECK_OBJECT(tmp_for_loop_1__iter_value);
            tmp_assign_source_17 = tmp_for_loop_1__iter_value;
            {
                PyObject *old = var_a;
                var_a = tmp_assign_source_17;
                Py_INCREF(var_a);
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_called_name_2;
            PyObject *tmp_source_name_27;
            PyObject *tmp_call_result_12;
            PyObject *tmp_args_element_name_10;
            PyObject *tmp_subscribed_name_1;
            PyObject *tmp_source_name_28;
            PyObject *tmp_subscript_name_1;
            CHECK_OBJECT(var_devs);
            tmp_source_name_27 = var_devs;
            tmp_called_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_27, const_str_plain_append);
            if (tmp_called_name_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 329;
                type_description_1 = "ooNoooooooooooooNoo";
                goto try_except_handler_2;
            }
            CHECK_OBJECT(par_ui);
            tmp_source_name_28 = par_ui;
            tmp_subscribed_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_28, const_str_plain_devs_list);
            if (tmp_subscribed_name_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_2);

                exception_lineno = 329;
                type_description_1 = "ooNoooooooooooooNoo";
                goto try_except_handler_2;
            }
            CHECK_OBJECT(var_a);
            tmp_subscript_name_1 = var_a;
            tmp_args_element_name_10 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_1, tmp_subscript_name_1);
            Py_DECREF(tmp_subscribed_name_1);
            if (tmp_args_element_name_10 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_2);

                exception_lineno = 329;
                type_description_1 = "ooNoooooooooooooNoo";
                goto try_except_handler_2;
            }
            frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 329;
            tmp_call_result_12 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_2, tmp_args_element_name_10);
            Py_DECREF(tmp_called_name_2);
            Py_DECREF(tmp_args_element_name_10);
            if (tmp_call_result_12 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 329;
                type_description_1 = "ooNoooooooooooooNoo";
                goto try_except_handler_2;
            }
            Py_DECREF(tmp_call_result_12);
        }
        {
            PyObject *tmp_called_name_3;
            PyObject *tmp_source_name_29;
            PyObject *tmp_call_result_13;
            PyObject *tmp_args_element_name_11;
            PyObject *tmp_subscribed_name_2;
            PyObject *tmp_source_name_30;
            PyObject *tmp_subscript_name_2;
            CHECK_OBJECT(var_list_mn);
            tmp_source_name_29 = var_list_mn;
            tmp_called_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_29, const_str_plain_append);
            if (tmp_called_name_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 330;
                type_description_1 = "ooNoooooooooooooNoo";
                goto try_except_handler_2;
            }
            CHECK_OBJECT(par_ui);
            tmp_source_name_30 = par_ui;
            tmp_subscribed_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_30, const_str_plain_vendor_list);
            if (tmp_subscribed_name_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_3);

                exception_lineno = 330;
                type_description_1 = "ooNoooooooooooooNoo";
                goto try_except_handler_2;
            }
            CHECK_OBJECT(var_a);
            tmp_subscript_name_2 = var_a;
            tmp_args_element_name_11 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_2, tmp_subscript_name_2);
            Py_DECREF(tmp_subscribed_name_2);
            if (tmp_args_element_name_11 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_3);

                exception_lineno = 330;
                type_description_1 = "ooNoooooooooooooNoo";
                goto try_except_handler_2;
            }
            frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 330;
            tmp_call_result_13 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_3, tmp_args_element_name_11);
            Py_DECREF(tmp_called_name_3);
            Py_DECREF(tmp_args_element_name_11);
            if (tmp_call_result_13 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 330;
                type_description_1 = "ooNoooooooooooooNoo";
                goto try_except_handler_2;
            }
            Py_DECREF(tmp_call_result_13);
        }
        {
            PyObject *tmp_called_name_4;
            PyObject *tmp_source_name_31;
            PyObject *tmp_call_result_14;
            PyObject *tmp_args_element_name_12;
            PyObject *tmp_subscribed_name_3;
            PyObject *tmp_source_name_32;
            PyObject *tmp_subscript_name_3;
            CHECK_OBJECT(var_list_sn);
            tmp_source_name_31 = var_list_sn;
            tmp_called_name_4 = LOOKUP_ATTRIBUTE(tmp_source_name_31, const_str_plain_append);
            if (tmp_called_name_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 331;
                type_description_1 = "ooNoooooooooooooNoo";
                goto try_except_handler_2;
            }
            CHECK_OBJECT(par_ui);
            tmp_source_name_32 = par_ui;
            tmp_subscribed_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_32, const_str_plain_sn_list);
            if (tmp_subscribed_name_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_4);

                exception_lineno = 331;
                type_description_1 = "ooNoooooooooooooNoo";
                goto try_except_handler_2;
            }
            CHECK_OBJECT(var_a);
            tmp_subscript_name_3 = var_a;
            tmp_args_element_name_12 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_3, tmp_subscript_name_3);
            Py_DECREF(tmp_subscribed_name_3);
            if (tmp_args_element_name_12 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_4);

                exception_lineno = 331;
                type_description_1 = "ooNoooooooooooooNoo";
                goto try_except_handler_2;
            }
            frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 331;
            tmp_call_result_14 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_4, tmp_args_element_name_12);
            Py_DECREF(tmp_called_name_4);
            Py_DECREF(tmp_args_element_name_12);
            if (tmp_call_result_14 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 331;
                type_description_1 = "ooNoooooooooooooNoo";
                goto try_except_handler_2;
            }
            Py_DECREF(tmp_call_result_14);
        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 328;
            type_description_1 = "ooNoooooooooooooNoo";
            goto try_except_handler_2;
        }
        goto loop_start_2;
        loop_end_2:;
        goto try_end_1;
        // Exception handler code:
        try_except_handler_2:;
        exception_keeper_type_1 = exception_type;
        exception_keeper_value_1 = exception_value;
        exception_keeper_tb_1 = exception_tb;
        exception_keeper_lineno_1 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_1__iter_value);
        tmp_for_loop_1__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_1__for_iterator);
        Py_DECREF(tmp_for_loop_1__for_iterator);
        tmp_for_loop_1__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_1;
        exception_value = exception_keeper_value_1;
        exception_tb = exception_keeper_tb_1;
        exception_lineno = exception_keeper_lineno_1;

        goto frame_exception_exit_1;
        // End of try:
        try_end_1:;
        Py_XDECREF(tmp_for_loop_1__iter_value);
        tmp_for_loop_1__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_1__for_iterator);
        Py_DECREF(tmp_for_loop_1__for_iterator);
        tmp_for_loop_1__for_iterator = NULL;

        {
            PyObject *tmp_assign_source_18;
            PyObject *tmp_called_instance_22;
            PyObject *tmp_mvar_value_4;
            PyObject *tmp_args_element_name_13;
            PyObject *tmp_args_element_name_14;
            PyObject *tmp_args_element_name_15;
            PyObject *tmp_args_element_name_16;
            tmp_mvar_value_4 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_runprocess);

            if (unlikely(tmp_mvar_value_4 == NULL)) {
                tmp_mvar_value_4 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runprocess);
            }

            if (tmp_mvar_value_4 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 5132 ], 39, 0);
                exception_tb = NULL;

                exception_lineno = 332;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }

            tmp_called_instance_22 = tmp_mvar_value_4;
            tmp_args_element_name_13 = const_str_plain_Admin;
            CHECK_OBJECT(var_devs);
            tmp_args_element_name_14 = var_devs;
            CHECK_OBJECT(var_list_mn);
            tmp_args_element_name_15 = var_list_mn;
            CHECK_OBJECT(var_list_sn);
            tmp_args_element_name_16 = var_list_sn;
            frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 332;
            {
                PyObject *call_args[] = {tmp_args_element_name_13, tmp_args_element_name_14, tmp_args_element_name_15, tmp_args_element_name_16};
                tmp_assign_source_18 = CALL_METHOD_WITH_ARGS4(tmp_called_instance_22, const_str_plain_findUSB, call_args);
            }

            if (tmp_assign_source_18 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 332;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            assert(var_d_list == NULL);
            var_d_list = tmp_assign_source_18;
        }
        {
            PyObject *tmp_assign_source_19;
            PyObject *tmp_subscribed_name_4;
            PyObject *tmp_subscript_name_4;
            CHECK_OBJECT(var_d_list);
            tmp_subscribed_name_4 = var_d_list;
            tmp_subscript_name_4 = const_int_pos_1;
            tmp_assign_source_19 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_4, tmp_subscript_name_4, 1);
            if (tmp_assign_source_19 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 333;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            assert(var_drive_list == NULL);
            var_drive_list = tmp_assign_source_19;
        }
        {
            PyObject *tmp_assign_source_20;
            PyObject *tmp_subscribed_name_5;
            PyObject *tmp_subscript_name_5;
            CHECK_OBJECT(var_d_list);
            tmp_subscribed_name_5 = var_d_list;
            tmp_subscript_name_5 = const_int_0;
            tmp_assign_source_20 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_5, tmp_subscript_name_5, 0);
            if (tmp_assign_source_20 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 334;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            assert(var_f_list == NULL);
            var_f_list = tmp_assign_source_20;
        }
        {
            nuitka_bool tmp_condition_result_12;
            PyObject *tmp_compexpr_left_16;
            PyObject *tmp_compexpr_right_16;
            PyObject *tmp_len_arg_3;
            CHECK_OBJECT(var_drive_list);
            tmp_len_arg_3 = var_drive_list;
            tmp_compexpr_left_16 = BUILTIN_LEN(tmp_len_arg_3);
            if (tmp_compexpr_left_16 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 335;
                type_description_1 = "ooNoooooooooooooNoo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_16 = const_int_0;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_16, tmp_compexpr_right_16);
            Py_DECREF(tmp_compexpr_left_16);
            assert(!(tmp_res == -1));
            tmp_condition_result_12 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_12 == NUITKA_BOOL_TRUE) {
                goto branch_yes_12;
            } else {
                goto branch_no_12;
            }
            branch_yes_12:;
            {
                PyObject *tmp_called_instance_23;
                PyObject *tmp_call_result_15;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_23 = par_ui;
                frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 336;
                tmp_call_result_15 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_23, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_65f1ca3cc21751516d4508974112f1bb_tuple, 0));

                if (tmp_call_result_15 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 336;
                    type_description_1 = "ooNoooooooooooooNoo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_15);
            }
            tmp_return_value = Py_None;
            Py_INCREF(tmp_return_value);
            goto frame_return_exit_1;
            goto branch_end_12;
            branch_no_12:;
            {
                nuitka_bool tmp_condition_result_13;
                PyObject *tmp_compexpr_left_17;
                PyObject *tmp_compexpr_right_17;
                PyObject *tmp_len_arg_4;
                CHECK_OBJECT(var_f_list);
                tmp_len_arg_4 = var_f_list;
                tmp_compexpr_left_17 = BUILTIN_LEN(tmp_len_arg_4);
                if (tmp_compexpr_left_17 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 338;
                    type_description_1 = "ooNoooooooooooooNoo";
                    goto frame_exception_exit_1;
                }
                tmp_compexpr_right_17 = const_int_0;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_17, tmp_compexpr_right_17);
                Py_DECREF(tmp_compexpr_left_17);
                assert(!(tmp_res == -1));
                tmp_condition_result_13 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_13 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_13;
                } else {
                    goto branch_no_13;
                }
                branch_yes_13:;
                {
                    PyObject *tmp_called_instance_24;
                    PyObject *tmp_call_result_16;
                    CHECK_OBJECT(par_ui);
                    tmp_called_instance_24 = par_ui;
                    frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 339;
                    tmp_call_result_16 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_24, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_dcd804658f8e9977f257a841a58a2840_tuple, 0));

                    if (tmp_call_result_16 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 339;
                        type_description_1 = "ooNoooooooooooooNoo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_16);
                }
                tmp_return_value = Py_None;
                Py_INCREF(tmp_return_value);
                goto frame_return_exit_1;
                goto branch_end_13;
                branch_no_13:;
                {
                    nuitka_bool tmp_condition_result_14;
                    PyObject *tmp_compexpr_left_18;
                    PyObject *tmp_compexpr_right_18;
                    PyObject *tmp_subscribed_name_6;
                    PyObject *tmp_subscript_name_6;
                    CHECK_OBJECT(var_d_list);
                    tmp_subscribed_name_6 = var_d_list;
                    tmp_subscript_name_6 = const_int_pos_2;
                    tmp_compexpr_left_18 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_6, tmp_subscript_name_6, 2);
                    if (tmp_compexpr_left_18 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 341;
                        type_description_1 = "ooNoooooooooooooNoo";
                        goto frame_exception_exit_1;
                    }
                    tmp_compexpr_right_18 = const_str_empty;
                    tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_18, tmp_compexpr_right_18);
                    Py_DECREF(tmp_compexpr_left_18);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 341;
                        type_description_1 = "ooNoooooooooooooNoo";
                        goto frame_exception_exit_1;
                    }
                    tmp_condition_result_14 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_14 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_14;
                    } else {
                        goto branch_no_14;
                    }
                    branch_yes_14:;
                    {
                        PyObject *tmp_called_name_5;
                        PyObject *tmp_source_name_33;
                        PyObject *tmp_call_result_17;
                        PyObject *tmp_args_element_name_17;
                        PyObject *tmp_left_name_5;
                        PyObject *tmp_left_name_6;
                        PyObject *tmp_right_name_5;
                        PyObject *tmp_subscribed_name_7;
                        PyObject *tmp_subscript_name_7;
                        PyObject *tmp_right_name_6;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_33 = par_ui;
                        tmp_called_name_5 = LOOKUP_ATTRIBUTE(tmp_source_name_33, const_str_plain_msg_err);
                        if (tmp_called_name_5 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 342;
                            type_description_1 = "ooNoooooooooooooNoo";
                            goto frame_exception_exit_1;
                        }
                        tmp_left_name_6 = const_str_digest_1002dc717d1fdd81c2ea7f5f9f7ab4a3;
                        CHECK_OBJECT(var_d_list);
                        tmp_subscribed_name_7 = var_d_list;
                        tmp_subscript_name_7 = const_int_pos_2;
                        tmp_right_name_5 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_7, tmp_subscript_name_7, 2);
                        if (tmp_right_name_5 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_5);

                            exception_lineno = 342;
                            type_description_1 = "ooNoooooooooooooNoo";
                            goto frame_exception_exit_1;
                        }
                        tmp_left_name_5 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_6, tmp_right_name_5);
                        Py_DECREF(tmp_right_name_5);
                        if (tmp_left_name_5 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_5);

                            exception_lineno = 342;
                            type_description_1 = "ooNoooooooooooooNoo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_6 = const_str_dot;
                        tmp_args_element_name_17 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_5, tmp_right_name_6);
                        Py_DECREF(tmp_left_name_5);
                        if (tmp_args_element_name_17 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_5);

                            exception_lineno = 342;
                            type_description_1 = "ooNoooooooooooooNoo";
                            goto frame_exception_exit_1;
                        }
                        frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 342;
                        tmp_call_result_17 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_5, tmp_args_element_name_17);
                        Py_DECREF(tmp_called_name_5);
                        Py_DECREF(tmp_args_element_name_17);
                        if (tmp_call_result_17 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 342;
                            type_description_1 = "ooNoooooooooooooNoo";
                            goto frame_exception_exit_1;
                        }
                        Py_DECREF(tmp_call_result_17);
                    }
                    tmp_return_value = Py_None;
                    Py_INCREF(tmp_return_value);
                    goto frame_return_exit_1;
                    branch_no_14:;
                }
                branch_end_13:;
            }
            branch_end_12:;
        }
        branch_no_11:;
    }
    {
        PyObject *tmp_called_instance_25;
        PyObject *tmp_call_result_18;
        CHECK_OBJECT(par_ui);
        tmp_called_instance_25 = par_ui;
        frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 346;
        tmp_call_result_18 = CALL_METHOD_NO_ARGS(tmp_called_instance_25, const_str_plain_start_spin);
        if (tmp_call_result_18 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 346;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_18);
    }
    {
        PyObject *tmp_called_instance_26;
        PyObject *tmp_source_name_34;
        PyObject *tmp_call_result_19;
        CHECK_OBJECT(par_ui);
        tmp_source_name_34 = par_ui;
        tmp_called_instance_26 = LOOKUP_ATTRIBUTE(tmp_source_name_34, const_str_plain_pba_wait_instr);
        if (tmp_called_instance_26 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 347;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 347;
        tmp_call_result_19 = CALL_METHOD_NO_ARGS(tmp_called_instance_26, const_str_plain_show);
        Py_DECREF(tmp_called_instance_26);
        if (tmp_call_result_19 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 347;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_19);
    }
    {
        PyObject *tmp_called_instance_27;
        PyObject *tmp_source_name_35;
        PyObject *tmp_call_result_20;
        CHECK_OBJECT(par_ui);
        tmp_source_name_35 = par_ui;
        tmp_called_instance_27 = LOOKUP_ATTRIBUTE(tmp_source_name_35, const_str_plain_progress_bar);
        if (tmp_called_instance_27 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 348;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 348;
        tmp_call_result_20 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_27, const_str_plain_set_fraction, &PyTuple_GET_ITEM(const_tuple_float_0_0_tuple, 0));

        Py_DECREF(tmp_called_instance_27);
        if (tmp_call_result_20 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 348;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_20);
    }
    {
        PyObject *tmp_called_instance_28;
        PyObject *tmp_source_name_36;
        PyObject *tmp_call_result_21;
        CHECK_OBJECT(par_ui);
        tmp_source_name_36 = par_ui;
        tmp_called_instance_28 = LOOKUP_ATTRIBUTE(tmp_source_name_36, const_str_plain_progress_bar);
        if (tmp_called_instance_28 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 349;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 349;
        tmp_call_result_21 = CALL_METHOD_NO_ARGS(tmp_called_instance_28, const_str_plain_show);
        Py_DECREF(tmp_called_instance_28);
        if (tmp_call_result_21 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 349;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_21);
    }
    {
        PyObject *tmp_assign_source_21;
        PyObject *tmp_called_name_6;
        PyObject *tmp_source_name_37;
        PyObject *tmp_mvar_value_5;
        PyObject *tmp_kw_name_1;
        PyObject *tmp_dict_key_1;
        PyObject *tmp_dict_value_1;
        PyObject *tmp_source_name_38;
        PyObject *tmp_mvar_value_6;
        PyObject *tmp_dict_key_2;
        PyObject *tmp_dict_value_2;
        PyObject *tmp_tuple_element_1;
        tmp_mvar_value_5 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_threading);

        if (unlikely(tmp_mvar_value_5 == NULL)) {
            tmp_mvar_value_5 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_threading);
        }

        if (tmp_mvar_value_5 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 661 ], 38, 0);
            exception_tb = NULL;

            exception_lineno = 353;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_37 = tmp_mvar_value_5;
        tmp_called_name_6 = LOOKUP_ATTRIBUTE(tmp_source_name_37, const_str_plain_Thread);
        if (tmp_called_name_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 353;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_mvar_value_6 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_runsetup);

        if (unlikely(tmp_mvar_value_6 == NULL)) {
            tmp_mvar_value_6 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runsetup);
        }

        if (tmp_mvar_value_6 == NULL) {
            Py_DECREF(tmp_called_name_6);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 5095 ], 37, 0);
            exception_tb = NULL;

            exception_lineno = 353;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_38 = tmp_mvar_value_6;
        tmp_dict_value_1 = LOOKUP_ATTRIBUTE(tmp_source_name_38, const_str_plain_rt_pbaWrite);
        if (tmp_dict_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_6);

            exception_lineno = 353;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        tmp_dict_key_1 = const_str_plain_target;
        tmp_kw_name_1 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_kw_name_1, tmp_dict_key_1, tmp_dict_value_1);
        Py_DECREF(tmp_dict_value_1);
        assert(!(tmp_res != 0));
        CHECK_OBJECT(par_ui);
        tmp_tuple_element_1 = par_ui;
        tmp_dict_value_2 = PyTuple_New(2);
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_dict_value_2, 0, tmp_tuple_element_1);
        CHECK_OBJECT(var_selected_list);
        tmp_tuple_element_1 = var_selected_list;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_dict_value_2, 1, tmp_tuple_element_1);
        tmp_dict_key_2 = const_str_plain_args;
        tmp_res = PyDict_SetItem(tmp_kw_name_1, tmp_dict_key_2, tmp_dict_value_2);
        Py_DECREF(tmp_dict_value_2);
        assert(!(tmp_res != 0));
        frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 353;
        tmp_assign_source_21 = CALL_FUNCTION_WITH_KEYARGS(tmp_called_name_6, tmp_kw_name_1);
        Py_DECREF(tmp_called_name_6);
        Py_DECREF(tmp_kw_name_1);
        if (tmp_assign_source_21 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 353;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        assert(var_t_m == NULL);
        var_t_m = tmp_assign_source_21;
    }
    {
        PyObject *tmp_called_instance_29;
        PyObject *tmp_call_result_22;
        CHECK_OBJECT(var_t_m);
        tmp_called_instance_29 = var_t_m;
        frame_94b94040b10849e982615a25a2e7e439->m_frame.f_lineno = 354;
        tmp_call_result_22 = CALL_METHOD_NO_ARGS(tmp_called_instance_29, const_str_plain_start);
        if (tmp_call_result_22 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 354;
            type_description_1 = "ooNoooooooooooooNoo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_22);
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_94b94040b10849e982615a25a2e7e439);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_94b94040b10849e982615a25a2e7e439);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto try_return_handler_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_94b94040b10849e982615a25a2e7e439);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_94b94040b10849e982615a25a2e7e439, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_94b94040b10849e982615a25a2e7e439->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_94b94040b10849e982615a25a2e7e439, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_94b94040b10849e982615a25a2e7e439,
        type_description_1,
        par_button,
        par_ui,
        NULL,
        var_pw_strip,
        var_list_sn,
        var_d_list,
        var_drive_list,
        var_index,
        var_selected,
        var_drive,
        var_iter,
        var_devs,
        var_f_list,
        var_a,
        var_selected_list,
        var_list_mn,
        NULL,
        var_dev_idx,
        var_t_m
    );


    // Release cached frame.
    if (frame_94b94040b10849e982615a25a2e7e439 == cache_frame_94b94040b10849e982615a25a2e7e439) {
        Py_DECREF(frame_94b94040b10849e982615a25a2e7e439);
    }
    cache_frame_94b94040b10849e982615a25a2e7e439 = NULL;

    assertFrameObject(frame_94b94040b10849e982615a25a2e7e439);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(runop$$$function_5_run_pbaWrite);
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    CHECK_OBJECT((PyObject *)var_pw_strip);
    Py_DECREF(var_pw_strip);
    var_pw_strip = NULL;

    Py_XDECREF(var_list_sn);
    var_list_sn = NULL;

    Py_XDECREF(var_d_list);
    var_d_list = NULL;

    Py_XDECREF(var_drive_list);
    var_drive_list = NULL;

    Py_XDECREF(var_index);
    var_index = NULL;

    Py_XDECREF(var_selected);
    var_selected = NULL;

    Py_XDECREF(var_drive);
    var_drive = NULL;

    Py_XDECREF(var_iter);
    var_iter = NULL;

    Py_XDECREF(var_devs);
    var_devs = NULL;

    Py_XDECREF(var_f_list);
    var_f_list = NULL;

    Py_XDECREF(var_a);
    var_a = NULL;

    Py_XDECREF(var_selected_list);
    var_selected_list = NULL;

    Py_XDECREF(var_list_mn);
    var_list_mn = NULL;

    Py_XDECREF(var_dev_idx);
    var_dev_idx = NULL;

    Py_XDECREF(var_t_m);
    var_t_m = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_2 = exception_type;
    exception_keeper_value_2 = exception_value;
    exception_keeper_tb_2 = exception_tb;
    exception_keeper_lineno_2 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_pw_strip);
    var_pw_strip = NULL;

    Py_XDECREF(var_list_sn);
    var_list_sn = NULL;

    Py_XDECREF(var_d_list);
    var_d_list = NULL;

    Py_XDECREF(var_drive_list);
    var_drive_list = NULL;

    Py_XDECREF(var_index);
    var_index = NULL;

    Py_XDECREF(var_selected);
    var_selected = NULL;

    Py_XDECREF(var_drive);
    var_drive = NULL;

    Py_XDECREF(var_iter);
    var_iter = NULL;

    Py_XDECREF(var_devs);
    var_devs = NULL;

    Py_XDECREF(var_f_list);
    var_f_list = NULL;

    Py_XDECREF(var_a);
    var_a = NULL;

    Py_XDECREF(var_selected_list);
    var_selected_list = NULL;

    Py_XDECREF(var_list_mn);
    var_list_mn = NULL;

    Py_XDECREF(var_dev_idx);
    var_dev_idx = NULL;

    Py_XDECREF(var_t_m);
    var_t_m = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_2;
    exception_value = exception_keeper_value_2;
    exception_tb = exception_keeper_tb_2;
    exception_lineno = exception_keeper_lineno_2;

    goto function_exception_exit;
    // End of try:

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(runop$$$function_5_run_pbaWrite);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_button);
    Py_DECREF(par_button);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_button);
    Py_DECREF(par_button);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_runop$$$function_6_run_changePW(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_button = python_pars[0];
    PyObject *par_ui = python_pars[1];
    PyObject *var_pw_strip = NULL;
    PyObject *var_list_mn = NULL;
    PyObject *var_level = NULL;
    PyObject *var_index = NULL;
    PyObject *var_selected = NULL;
    PyObject *var_pw_trim = NULL;
    PyObject *var_iter = NULL;
    PyObject *var_drive = NULL;
    PyObject *var_devs = NULL;
    PyObject *var_f_list = NULL;
    PyObject *var_selected_list = NULL;
    PyObject *var_pw_trim_confirm = NULL;
    PyObject *var_t_m = NULL;
    PyObject *var_new_pass = NULL;
    PyObject *var_list_sn = NULL;
    PyObject *var_new_pass_confirm = NULL;
    struct Nuitka_FrameObject *frame_1d9f736b66df80facf100f38971740c7;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    PyObject *tmp_return_value = NULL;
    bool tmp_result;
    static struct Nuitka_FrameObject *cache_frame_1d9f736b66df80facf100f38971740c7 = NULL;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;

    // Actual function body.
    // Tried code:
    MAKE_OR_REUSE_FRAME(cache_frame_1d9f736b66df80facf100f38971740c7, codeobj_1d9f736b66df80facf100f38971740c7, module_runop, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
    frame_1d9f736b66df80facf100f38971740c7 = cache_frame_1d9f736b66df80facf100f38971740c7;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_1d9f736b66df80facf100f38971740c7);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_1d9f736b66df80facf100f38971740c7) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_instance_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_call_result_1;
        PyObject *tmp_args_element_name_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_verify);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_verify);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 236 ], 35, 0);
            exception_tb = NULL;

            exception_lineno = 357;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_1 = tmp_mvar_value_1;
        CHECK_OBJECT(par_ui);
        tmp_args_element_name_1 = par_ui;
        frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 357;
        {
            PyObject *call_args[] = {tmp_args_element_name_1};
            tmp_call_result_1 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_1, const_str_plain_licCheck, call_args);
        }

        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 357;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_1);
    }
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_called_name_1;
        PyObject *tmp_source_name_1;
        PyObject *tmp_mvar_value_2;
        PyObject *tmp_args_element_name_2;
        PyObject *tmp_args_element_name_3;
        PyObject *tmp_args_element_name_4;
        PyObject *tmp_called_instance_2;
        PyObject *tmp_source_name_2;
        tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_2 == NULL)) {
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_2 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
            exception_tb = NULL;

            exception_lineno = 358;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_1 = tmp_mvar_value_2;
        tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_sub);
        if (tmp_called_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 358;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_2 = const_str_digest_29fe972ddfd3c3ace7d88aee7a9cd77e;
        tmp_args_element_name_3 = const_str_empty;
        CHECK_OBJECT(par_ui);
        tmp_source_name_2 = par_ui;
        tmp_called_instance_2 = LOOKUP_ATTRIBUTE(tmp_source_name_2, const_str_plain_pass_entry);
        if (tmp_called_instance_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_1);

            exception_lineno = 358;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 358;
        tmp_args_element_name_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_2, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_2);
        if (tmp_args_element_name_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_1);

            exception_lineno = 358;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 358;
        {
            PyObject *call_args[] = {tmp_args_element_name_2, tmp_args_element_name_3, tmp_args_element_name_4};
            tmp_assign_source_1 = CALL_FUNCTION_WITH_ARGS3(tmp_called_name_1, call_args);
        }

        Py_DECREF(tmp_called_name_1);
        Py_DECREF(tmp_args_element_name_4);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 358;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        assert(var_pw_strip == NULL);
        var_pw_strip = tmp_assign_source_1;
    }
    {
        nuitka_bool tmp_condition_result_1;
        int tmp_or_left_truth_1;
        nuitka_bool tmp_or_left_value_1;
        nuitka_bool tmp_or_right_value_1;
        int tmp_and_left_truth_1;
        nuitka_bool tmp_and_left_value_1;
        nuitka_bool tmp_and_right_value_1;
        PyObject *tmp_compexpr_left_1;
        PyObject *tmp_compexpr_right_1;
        PyObject *tmp_called_instance_3;
        PyObject *tmp_source_name_3;
        int tmp_or_left_truth_2;
        nuitka_bool tmp_or_left_value_2;
        nuitka_bool tmp_or_right_value_2;
        PyObject *tmp_compexpr_left_2;
        PyObject *tmp_compexpr_right_2;
        PyObject *tmp_source_name_4;
        PyObject *tmp_operand_name_1;
        PyObject *tmp_called_instance_4;
        PyObject *tmp_source_name_5;
        int tmp_or_left_truth_3;
        nuitka_bool tmp_or_left_value_3;
        nuitka_bool tmp_or_right_value_3;
        PyObject *tmp_compexpr_left_3;
        PyObject *tmp_compexpr_right_3;
        PyObject *tmp_called_instance_5;
        PyObject *tmp_source_name_6;
        PyObject *tmp_compexpr_left_4;
        PyObject *tmp_compexpr_right_4;
        PyObject *tmp_called_instance_6;
        PyObject *tmp_source_name_7;
        CHECK_OBJECT(par_ui);
        tmp_source_name_3 = par_ui;
        tmp_called_instance_3 = LOOKUP_ATTRIBUTE(tmp_source_name_3, const_str_plain_pass_entry);
        if (tmp_called_instance_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 359;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 359;
        tmp_compexpr_left_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_3, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_3);
        if (tmp_compexpr_left_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 359;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_1 = const_str_empty;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_1, tmp_compexpr_right_1);
        Py_DECREF(tmp_compexpr_left_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 359;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_1 = tmp_and_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_1 == 1) {
            goto and_right_1;
        } else {
            goto and_left_1;
        }
        and_right_1:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_4 = par_ui;
        tmp_compexpr_left_2 = LOOKUP_ATTRIBUTE(tmp_source_name_4, const_str_plain_VERSION);
        if (tmp_compexpr_left_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 359;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_2 = const_int_pos_3;
        tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_INT(tmp_compexpr_left_2, tmp_compexpr_right_2);
        Py_DECREF(tmp_compexpr_left_2);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 359;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_left_value_2 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_or_left_truth_2 = tmp_or_left_value_2 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_or_left_truth_2 == 1) {
            goto or_left_2;
        } else {
            goto or_right_2;
        }
        or_right_2:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_5 = par_ui;
        tmp_called_instance_4 = LOOKUP_ATTRIBUTE(tmp_source_name_5, const_str_plain_check_pass_rd);
        if (tmp_called_instance_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 359;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 359;
        tmp_operand_name_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_4, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_4);
        if (tmp_operand_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 359;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_1);
        Py_DECREF(tmp_operand_name_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 359;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_right_value_2 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_right_value_1 = tmp_or_right_value_2;
        goto or_end_2;
        or_left_2:;
        tmp_and_right_value_1 = tmp_or_left_value_2;
        or_end_2:;
        tmp_or_left_value_1 = tmp_and_right_value_1;
        goto and_end_1;
        and_left_1:;
        tmp_or_left_value_1 = tmp_and_left_value_1;
        and_end_1:;
        tmp_or_left_truth_1 = tmp_or_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_or_left_truth_1 == 1) {
            goto or_left_1;
        } else {
            goto or_right_1;
        }
        or_right_1:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_6 = par_ui;
        tmp_called_instance_5 = LOOKUP_ATTRIBUTE(tmp_source_name_6, const_str_plain_new_pass_entry);
        if (tmp_called_instance_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 359;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 359;
        tmp_compexpr_left_3 = CALL_METHOD_NO_ARGS(tmp_called_instance_5, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_5);
        if (tmp_compexpr_left_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 359;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_3 = const_str_empty;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_3, tmp_compexpr_right_3);
        Py_DECREF(tmp_compexpr_left_3);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 359;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_left_value_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_or_left_truth_3 = tmp_or_left_value_3 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_or_left_truth_3 == 1) {
            goto or_left_3;
        } else {
            goto or_right_3;
        }
        or_right_3:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_7 = par_ui;
        tmp_called_instance_6 = LOOKUP_ATTRIBUTE(tmp_source_name_7, const_str_plain_confirm_pass_entry);
        if (tmp_called_instance_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 359;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 359;
        tmp_compexpr_left_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_6, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_6);
        if (tmp_compexpr_left_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 359;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_4 = const_str_empty;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_4, tmp_compexpr_right_4);
        Py_DECREF(tmp_compexpr_left_4);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 359;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_right_value_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_or_right_value_1 = tmp_or_right_value_3;
        goto or_end_3;
        or_left_3:;
        tmp_or_right_value_1 = tmp_or_left_value_3;
        or_end_3:;
        tmp_condition_result_1 = tmp_or_right_value_1;
        goto or_end_1;
        or_left_1:;
        tmp_condition_result_1 = tmp_or_left_value_1;
        or_end_1:;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        {
            PyObject *tmp_called_instance_7;
            PyObject *tmp_call_result_2;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_7 = par_ui;
            frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 360;
            tmp_call_result_2 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_7, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_5d19484996ce99edb28174f508d4c89b_tuple, 0));

            if (tmp_call_result_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 360;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_2);
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        goto branch_end_1;
        branch_no_1:;
        {
            nuitka_bool tmp_condition_result_2;
            int tmp_and_left_truth_2;
            nuitka_bool tmp_and_left_value_2;
            nuitka_bool tmp_and_right_value_2;
            PyObject *tmp_compexpr_left_5;
            PyObject *tmp_compexpr_right_5;
            int tmp_or_left_truth_4;
            nuitka_bool tmp_or_left_value_4;
            nuitka_bool tmp_or_right_value_4;
            PyObject *tmp_compexpr_left_6;
            PyObject *tmp_compexpr_right_6;
            PyObject *tmp_source_name_8;
            PyObject *tmp_operand_name_2;
            PyObject *tmp_called_instance_8;
            PyObject *tmp_source_name_9;
            CHECK_OBJECT(var_pw_strip);
            tmp_compexpr_left_5 = var_pw_strip;
            tmp_compexpr_right_5 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_5, tmp_compexpr_right_5);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 362;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            tmp_and_left_value_2 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_and_left_truth_2 = tmp_and_left_value_2 == NUITKA_BOOL_TRUE ? 1 : 0;
            if (tmp_and_left_truth_2 == 1) {
                goto and_right_2;
            } else {
                goto and_left_2;
            }
            and_right_2:;
            CHECK_OBJECT(par_ui);
            tmp_source_name_8 = par_ui;
            tmp_compexpr_left_6 = LOOKUP_ATTRIBUTE(tmp_source_name_8, const_str_plain_VERSION);
            if (tmp_compexpr_left_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 362;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_6 = const_int_pos_3;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_INT(tmp_compexpr_left_6, tmp_compexpr_right_6);
            Py_DECREF(tmp_compexpr_left_6);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 362;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            tmp_or_left_value_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_or_left_truth_4 = tmp_or_left_value_4 == NUITKA_BOOL_TRUE ? 1 : 0;
            if (tmp_or_left_truth_4 == 1) {
                goto or_left_4;
            } else {
                goto or_right_4;
            }
            or_right_4:;
            CHECK_OBJECT(par_ui);
            tmp_source_name_9 = par_ui;
            tmp_called_instance_8 = LOOKUP_ATTRIBUTE(tmp_source_name_9, const_str_plain_check_pass_rd);
            if (tmp_called_instance_8 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 362;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 362;
            tmp_operand_name_2 = CALL_METHOD_NO_ARGS(tmp_called_instance_8, const_str_plain_get_active);
            Py_DECREF(tmp_called_instance_8);
            if (tmp_operand_name_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 362;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_2);
            Py_DECREF(tmp_operand_name_2);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 362;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            tmp_or_right_value_4 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_and_right_value_2 = tmp_or_right_value_4;
            goto or_end_4;
            or_left_4:;
            tmp_and_right_value_2 = tmp_or_left_value_4;
            or_end_4:;
            tmp_condition_result_2 = tmp_and_right_value_2;
            goto and_end_2;
            and_left_2:;
            tmp_condition_result_2 = tmp_and_left_value_2;
            and_end_2:;
            if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
                goto branch_yes_2;
            } else {
                goto branch_no_2;
            }
            branch_yes_2:;
            {
                PyObject *tmp_called_instance_9;
                PyObject *tmp_call_result_3;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_9 = par_ui;
                frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 363;
                tmp_call_result_3 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_9, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_84ba3144e8a4c8824551fdd8d0fe5bde_tuple, 0));

                if (tmp_call_result_3 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 363;
                    type_description_1 = "ooooooooooooNoooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_3);
            }
            tmp_return_value = Py_None;
            Py_INCREF(tmp_return_value);
            goto frame_return_exit_1;
            branch_no_2:;
        }
        branch_end_1:;
    }
    {
        nuitka_bool tmp_condition_result_3;
        int tmp_and_left_truth_3;
        nuitka_bool tmp_and_left_value_3;
        nuitka_bool tmp_and_right_value_3;
        PyObject *tmp_compexpr_left_7;
        PyObject *tmp_compexpr_right_7;
        PyObject *tmp_source_name_10;
        int tmp_and_left_truth_4;
        nuitka_bool tmp_and_left_value_4;
        nuitka_bool tmp_and_right_value_4;
        PyObject *tmp_called_instance_10;
        PyObject *tmp_source_name_11;
        PyObject *tmp_call_result_4;
        int tmp_truth_name_1;
        int tmp_and_left_truth_5;
        nuitka_bool tmp_and_left_value_5;
        nuitka_bool tmp_and_right_value_5;
        PyObject *tmp_operand_name_3;
        PyObject *tmp_called_instance_11;
        PyObject *tmp_source_name_12;
        PyObject *tmp_compexpr_left_8;
        PyObject *tmp_compexpr_right_8;
        PyObject *tmp_len_arg_1;
        PyObject *tmp_source_name_13;
        CHECK_OBJECT(par_ui);
        tmp_source_name_10 = par_ui;
        tmp_compexpr_left_7 = LOOKUP_ATTRIBUTE(tmp_source_name_10, const_str_plain_VERSION);
        if (tmp_compexpr_left_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 365;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_7 = const_int_pos_3;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_7, tmp_compexpr_right_7);
        Py_DECREF(tmp_compexpr_left_7);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 365;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_3 = tmp_and_left_value_3 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_3 == 1) {
            goto and_right_3;
        } else {
            goto and_left_3;
        }
        and_right_3:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_11 = par_ui;
        tmp_called_instance_10 = LOOKUP_ATTRIBUTE(tmp_source_name_11, const_str_plain_pass_sav);
        if (tmp_called_instance_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 365;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 365;
        tmp_call_result_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_10, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_10);
        if (tmp_call_result_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 365;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_1 = CHECK_IF_TRUE(tmp_call_result_4);
        if (tmp_truth_name_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_4);

            exception_lineno = 365;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_4 = tmp_truth_name_1 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_4);
        tmp_and_left_truth_4 = tmp_and_left_value_4 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_4 == 1) {
            goto and_right_4;
        } else {
            goto and_left_4;
        }
        and_right_4:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_12 = par_ui;
        tmp_called_instance_11 = LOOKUP_ATTRIBUTE(tmp_source_name_12, const_str_plain_check_pass_rd);
        if (tmp_called_instance_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 365;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 365;
        tmp_operand_name_3 = CALL_METHOD_NO_ARGS(tmp_called_instance_11, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_11);
        if (tmp_operand_name_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 365;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_3);
        Py_DECREF(tmp_operand_name_3);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 365;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_5 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_5 = tmp_and_left_value_5 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_5 == 1) {
            goto and_right_5;
        } else {
            goto and_left_5;
        }
        and_right_5:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_13 = par_ui;
        tmp_len_arg_1 = LOOKUP_ATTRIBUTE(tmp_source_name_13, const_str_plain_drive_list);
        if (tmp_len_arg_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 365;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_left_8 = BUILTIN_LEN(tmp_len_arg_1);
        Py_DECREF(tmp_len_arg_1);
        if (tmp_compexpr_left_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 365;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_8 = const_int_0;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_8, tmp_compexpr_right_8);
        Py_DECREF(tmp_compexpr_left_8);
        assert(!(tmp_res == -1));
        tmp_and_right_value_5 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_right_value_4 = tmp_and_right_value_5;
        goto and_end_5;
        and_left_5:;
        tmp_and_right_value_4 = tmp_and_left_value_5;
        and_end_5:;
        tmp_and_right_value_3 = tmp_and_right_value_4;
        goto and_end_4;
        and_left_4:;
        tmp_and_right_value_3 = tmp_and_left_value_4;
        and_end_4:;
        tmp_condition_result_3 = tmp_and_right_value_3;
        goto and_end_3;
        and_left_3:;
        tmp_condition_result_3 = tmp_and_left_value_3;
        and_end_3:;
        if (tmp_condition_result_3 == NUITKA_BOOL_TRUE) {
            goto branch_yes_3;
        } else {
            goto branch_no_3;
        }
        branch_yes_3:;
        {
            PyObject *tmp_called_instance_12;
            PyObject *tmp_call_result_5;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_12 = par_ui;
            frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 366;
            tmp_call_result_5 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_12, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_1a4b86fee576c2932467ec44f9732332_tuple, 0));

            if (tmp_call_result_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 366;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_5);
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        branch_no_3:;
    }
    {
        PyObject *tmp_assign_source_2;
        tmp_assign_source_2 = PyList_New(0);
        assert(var_devs == NULL);
        var_devs = tmp_assign_source_2;
    }
    {
        PyObject *tmp_assign_source_3;
        tmp_assign_source_3 = PyList_New(0);
        assert(var_list_mn == NULL);
        var_list_mn = tmp_assign_source_3;
    }
    {
        PyObject *tmp_assign_source_4;
        tmp_assign_source_4 = PyList_New(0);
        assert(var_list_sn == NULL);
        var_list_sn = tmp_assign_source_4;
    }
    {
        PyObject *tmp_assign_source_5;
        tmp_assign_source_5 = PyList_New(0);
        assert(var_selected_list == NULL);
        var_selected_list = tmp_assign_source_5;
    }
    {
        nuitka_bool tmp_condition_result_4;
        PyObject *tmp_called_instance_13;
        PyObject *tmp_source_name_14;
        PyObject *tmp_call_result_6;
        int tmp_truth_name_2;
        CHECK_OBJECT(par_ui);
        tmp_source_name_14 = par_ui;
        tmp_called_instance_13 = LOOKUP_ATTRIBUTE(tmp_source_name_14, const_str_plain_toggleSingle_radio);
        if (tmp_called_instance_13 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 372;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 372;
        tmp_call_result_6 = CALL_METHOD_NO_ARGS(tmp_called_instance_13, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_13);
        if (tmp_call_result_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 372;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_2 = CHECK_IF_TRUE(tmp_call_result_6);
        if (tmp_truth_name_2 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_6);

            exception_lineno = 372;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_4 = tmp_truth_name_2 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_6);
        if (tmp_condition_result_4 == NUITKA_BOOL_TRUE) {
            goto branch_yes_4;
        } else {
            goto branch_no_4;
        }
        branch_yes_4:;
        {
            PyObject *tmp_assign_source_6;
            PyObject *tmp_called_instance_14;
            PyObject *tmp_source_name_15;
            CHECK_OBJECT(par_ui);
            tmp_source_name_15 = par_ui;
            tmp_called_instance_14 = LOOKUP_ATTRIBUTE(tmp_source_name_15, const_str_plain_dev_select);
            if (tmp_called_instance_14 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 373;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 373;
            tmp_assign_source_6 = CALL_METHOD_NO_ARGS(tmp_called_instance_14, const_str_plain_get_active);
            Py_DECREF(tmp_called_instance_14);
            if (tmp_assign_source_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 373;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            assert(var_index == NULL);
            var_index = tmp_assign_source_6;
        }
        {
            PyObject *tmp_assign_source_7;
            PyObject *tmp_list_element_1;
            CHECK_OBJECT(var_index);
            tmp_list_element_1 = var_index;
            tmp_assign_source_7 = PyList_New(1);
            Py_INCREF(tmp_list_element_1);
            PyList_SET_ITEM(tmp_assign_source_7, 0, tmp_list_element_1);
            {
                PyObject *old = var_selected_list;
                assert(old != NULL);
                var_selected_list = tmp_assign_source_7;
                Py_DECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_8;
            PyObject *tmp_list_element_2;
            PyObject *tmp_subscribed_name_1;
            PyObject *tmp_source_name_16;
            PyObject *tmp_subscript_name_1;
            CHECK_OBJECT(par_ui);
            tmp_source_name_16 = par_ui;
            tmp_subscribed_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_16, const_str_plain_devs_list);
            if (tmp_subscribed_name_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 375;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            CHECK_OBJECT(var_index);
            tmp_subscript_name_1 = var_index;
            tmp_list_element_2 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_1, tmp_subscript_name_1);
            Py_DECREF(tmp_subscribed_name_1);
            if (tmp_list_element_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 375;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            tmp_assign_source_8 = PyList_New(1);
            PyList_SET_ITEM(tmp_assign_source_8, 0, tmp_list_element_2);
            {
                PyObject *old = var_devs;
                assert(old != NULL);
                var_devs = tmp_assign_source_8;
                Py_DECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_9;
            PyObject *tmp_list_element_3;
            PyObject *tmp_subscribed_name_2;
            PyObject *tmp_source_name_17;
            PyObject *tmp_subscript_name_2;
            CHECK_OBJECT(par_ui);
            tmp_source_name_17 = par_ui;
            tmp_subscribed_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_17, const_str_plain_vendor_list);
            if (tmp_subscribed_name_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 376;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            CHECK_OBJECT(var_index);
            tmp_subscript_name_2 = var_index;
            tmp_list_element_3 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_2, tmp_subscript_name_2);
            Py_DECREF(tmp_subscribed_name_2);
            if (tmp_list_element_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 376;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            tmp_assign_source_9 = PyList_New(1);
            PyList_SET_ITEM(tmp_assign_source_9, 0, tmp_list_element_3);
            {
                PyObject *old = var_list_mn;
                assert(old != NULL);
                var_list_mn = tmp_assign_source_9;
                Py_DECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_10;
            PyObject *tmp_list_element_4;
            PyObject *tmp_subscribed_name_3;
            PyObject *tmp_source_name_18;
            PyObject *tmp_subscript_name_3;
            CHECK_OBJECT(par_ui);
            tmp_source_name_18 = par_ui;
            tmp_subscribed_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_18, const_str_plain_sn_list);
            if (tmp_subscribed_name_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 377;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            CHECK_OBJECT(var_index);
            tmp_subscript_name_3 = var_index;
            tmp_list_element_4 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_3, tmp_subscript_name_3);
            Py_DECREF(tmp_subscribed_name_3);
            if (tmp_list_element_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 377;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            tmp_assign_source_10 = PyList_New(1);
            PyList_SET_ITEM(tmp_assign_source_10, 0, tmp_list_element_4);
            {
                PyObject *old = var_list_sn;
                assert(old != NULL);
                var_list_sn = tmp_assign_source_10;
                Py_DECREF(old);
            }

        }
        goto branch_end_4;
        branch_no_4:;
        {
            PyObject *tmp_assign_source_11;
            tmp_assign_source_11 = const_int_0;
            assert(var_index == NULL);
            Py_INCREF(tmp_assign_source_11);
            var_index = tmp_assign_source_11;
        }
        {
            PyObject *tmp_assign_source_12;
            PyObject *tmp_called_instance_15;
            PyObject *tmp_source_name_19;
            CHECK_OBJECT(par_ui);
            tmp_source_name_19 = par_ui;
            tmp_called_instance_15 = LOOKUP_ATTRIBUTE(tmp_source_name_19, const_str_plain_liststore);
            if (tmp_called_instance_15 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 380;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 380;
            tmp_assign_source_12 = CALL_METHOD_NO_ARGS(tmp_called_instance_15, const_str_plain_get_iter_first);
            Py_DECREF(tmp_called_instance_15);
            if (tmp_assign_source_12 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 380;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            assert(var_iter == NULL);
            var_iter = tmp_assign_source_12;
        }
        loop_start_1:;
        {
            nuitka_bool tmp_condition_result_5;
            PyObject *tmp_operand_name_4;
            PyObject *tmp_compexpr_left_9;
            PyObject *tmp_compexpr_right_9;
            CHECK_OBJECT(var_iter);
            tmp_compexpr_left_9 = var_iter;
            tmp_compexpr_right_9 = Py_None;
            tmp_operand_name_4 = RICH_COMPARE_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_9, tmp_compexpr_right_9);
            if (tmp_operand_name_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 381;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_4);
            Py_DECREF(tmp_operand_name_4);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 381;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_5 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_5 == NUITKA_BOOL_TRUE) {
                goto branch_yes_5;
            } else {
                goto branch_no_5;
            }
            branch_yes_5:;
            goto loop_end_1;
            branch_no_5:;
        }
        {
            PyObject *tmp_assign_source_13;
            PyObject *tmp_called_instance_16;
            PyObject *tmp_source_name_20;
            PyObject *tmp_args_element_name_5;
            PyObject *tmp_args_element_name_6;
            CHECK_OBJECT(par_ui);
            tmp_source_name_20 = par_ui;
            tmp_called_instance_16 = LOOKUP_ATTRIBUTE(tmp_source_name_20, const_str_plain_liststore);
            if (tmp_called_instance_16 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 382;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            CHECK_OBJECT(var_iter);
            tmp_args_element_name_5 = var_iter;
            tmp_args_element_name_6 = const_int_0;
            frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 382;
            {
                PyObject *call_args[] = {tmp_args_element_name_5, tmp_args_element_name_6};
                tmp_assign_source_13 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_16, const_str_plain_get_value, call_args);
            }

            Py_DECREF(tmp_called_instance_16);
            if (tmp_assign_source_13 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 382;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            {
                PyObject *old = var_selected;
                var_selected = tmp_assign_source_13;
                Py_XDECREF(old);
            }

        }
        {
            nuitka_bool tmp_condition_result_6;
            int tmp_truth_name_3;
            CHECK_OBJECT(var_selected);
            tmp_truth_name_3 = CHECK_IF_TRUE(var_selected);
            if (tmp_truth_name_3 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 383;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_6 = tmp_truth_name_3 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_6 == NUITKA_BOOL_TRUE) {
                goto branch_yes_6;
            } else {
                goto branch_no_6;
            }
            branch_yes_6:;
            {
                nuitka_bool tmp_condition_result_7;
                PyObject *tmp_compexpr_left_10;
                PyObject *tmp_compexpr_right_10;
                PyObject *tmp_called_instance_17;
                PyObject *tmp_source_name_21;
                CHECK_OBJECT(par_ui);
                tmp_source_name_21 = par_ui;
                tmp_called_instance_17 = LOOKUP_ATTRIBUTE(tmp_source_name_21, const_str_plain_auth_menu);
                if (tmp_called_instance_17 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 384;
                    type_description_1 = "ooooooooooooNoooooo";
                    goto frame_exception_exit_1;
                }
                frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 384;
                tmp_compexpr_left_10 = CALL_METHOD_NO_ARGS(tmp_called_instance_17, const_str_plain_get_active);
                Py_DECREF(tmp_called_instance_17);
                if (tmp_compexpr_left_10 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 384;
                    type_description_1 = "ooooooooooooNoooooo";
                    goto frame_exception_exit_1;
                }
                tmp_compexpr_right_10 = const_int_0;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_10, tmp_compexpr_right_10);
                Py_DECREF(tmp_compexpr_left_10);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 384;
                    type_description_1 = "ooooooooooooNoooooo";
                    goto frame_exception_exit_1;
                }
                tmp_condition_result_7 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_7 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_7;
                } else {
                    goto branch_no_7;
                }
                branch_yes_7:;
                {
                    PyObject *tmp_called_instance_18;
                    PyObject *tmp_call_result_7;
                    PyObject *tmp_args_element_name_7;
                    CHECK_OBJECT(var_selected_list);
                    tmp_called_instance_18 = var_selected_list;
                    CHECK_OBJECT(var_index);
                    tmp_args_element_name_7 = var_index;
                    frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 385;
                    {
                        PyObject *call_args[] = {tmp_args_element_name_7};
                        tmp_call_result_7 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_18, const_str_plain_append, call_args);
                    }

                    if (tmp_call_result_7 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 385;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_7);
                }
                {
                    PyObject *tmp_called_name_2;
                    PyObject *tmp_source_name_22;
                    PyObject *tmp_call_result_8;
                    PyObject *tmp_args_element_name_8;
                    PyObject *tmp_subscribed_name_4;
                    PyObject *tmp_source_name_23;
                    PyObject *tmp_subscript_name_4;
                    CHECK_OBJECT(var_devs);
                    tmp_source_name_22 = var_devs;
                    tmp_called_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_22, const_str_plain_append);
                    if (tmp_called_name_2 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 386;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_23 = par_ui;
                    tmp_subscribed_name_4 = LOOKUP_ATTRIBUTE(tmp_source_name_23, const_str_plain_devs_list);
                    if (tmp_subscribed_name_4 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_2);

                        exception_lineno = 386;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(var_index);
                    tmp_subscript_name_4 = var_index;
                    tmp_args_element_name_8 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_4, tmp_subscript_name_4);
                    Py_DECREF(tmp_subscribed_name_4);
                    if (tmp_args_element_name_8 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_2);

                        exception_lineno = 386;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 386;
                    tmp_call_result_8 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_2, tmp_args_element_name_8);
                    Py_DECREF(tmp_called_name_2);
                    Py_DECREF(tmp_args_element_name_8);
                    if (tmp_call_result_8 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 386;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_8);
                }
                {
                    PyObject *tmp_called_name_3;
                    PyObject *tmp_source_name_24;
                    PyObject *tmp_call_result_9;
                    PyObject *tmp_args_element_name_9;
                    PyObject *tmp_subscribed_name_5;
                    PyObject *tmp_source_name_25;
                    PyObject *tmp_subscript_name_5;
                    CHECK_OBJECT(var_list_mn);
                    tmp_source_name_24 = var_list_mn;
                    tmp_called_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_24, const_str_plain_append);
                    if (tmp_called_name_3 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 387;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_25 = par_ui;
                    tmp_subscribed_name_5 = LOOKUP_ATTRIBUTE(tmp_source_name_25, const_str_plain_vendor_list);
                    if (tmp_subscribed_name_5 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_3);

                        exception_lineno = 387;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(var_index);
                    tmp_subscript_name_5 = var_index;
                    tmp_args_element_name_9 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_5, tmp_subscript_name_5);
                    Py_DECREF(tmp_subscribed_name_5);
                    if (tmp_args_element_name_9 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_3);

                        exception_lineno = 387;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 387;
                    tmp_call_result_9 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_3, tmp_args_element_name_9);
                    Py_DECREF(tmp_called_name_3);
                    Py_DECREF(tmp_args_element_name_9);
                    if (tmp_call_result_9 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 387;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_9);
                }
                {
                    PyObject *tmp_called_name_4;
                    PyObject *tmp_source_name_26;
                    PyObject *tmp_call_result_10;
                    PyObject *tmp_args_element_name_10;
                    PyObject *tmp_subscribed_name_6;
                    PyObject *tmp_source_name_27;
                    PyObject *tmp_subscript_name_6;
                    CHECK_OBJECT(var_list_sn);
                    tmp_source_name_26 = var_list_sn;
                    tmp_called_name_4 = LOOKUP_ATTRIBUTE(tmp_source_name_26, const_str_plain_append);
                    if (tmp_called_name_4 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 388;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_27 = par_ui;
                    tmp_subscribed_name_6 = LOOKUP_ATTRIBUTE(tmp_source_name_27, const_str_plain_sn_list);
                    if (tmp_subscribed_name_6 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_4);

                        exception_lineno = 388;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(var_index);
                    tmp_subscript_name_6 = var_index;
                    tmp_args_element_name_10 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_6, tmp_subscript_name_6);
                    Py_DECREF(tmp_subscribed_name_6);
                    if (tmp_args_element_name_10 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_4);

                        exception_lineno = 388;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 388;
                    tmp_call_result_10 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_4, tmp_args_element_name_10);
                    Py_DECREF(tmp_called_name_4);
                    Py_DECREF(tmp_args_element_name_10);
                    if (tmp_call_result_10 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 388;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_10);
                }
                goto branch_end_7;
                branch_no_7:;
                {
                    PyObject *tmp_called_instance_19;
                    PyObject *tmp_call_result_11;
                    PyObject *tmp_args_element_name_11;
                    CHECK_OBJECT(var_selected_list);
                    tmp_called_instance_19 = var_selected_list;
                    CHECK_OBJECT(var_index);
                    tmp_args_element_name_11 = var_index;
                    frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 390;
                    {
                        PyObject *call_args[] = {tmp_args_element_name_11};
                        tmp_call_result_11 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_19, const_str_plain_append, call_args);
                    }

                    if (tmp_call_result_11 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 390;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_11);
                }
                {
                    PyObject *tmp_called_name_5;
                    PyObject *tmp_source_name_28;
                    PyObject *tmp_call_result_12;
                    PyObject *tmp_args_element_name_12;
                    PyObject *tmp_subscribed_name_7;
                    PyObject *tmp_source_name_29;
                    PyObject *tmp_subscript_name_7;
                    CHECK_OBJECT(var_devs);
                    tmp_source_name_28 = var_devs;
                    tmp_called_name_5 = LOOKUP_ATTRIBUTE(tmp_source_name_28, const_str_plain_append);
                    if (tmp_called_name_5 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 391;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_29 = par_ui;
                    tmp_subscribed_name_7 = LOOKUP_ATTRIBUTE(tmp_source_name_29, const_str_plain_devs_list);
                    if (tmp_subscribed_name_7 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_5);

                        exception_lineno = 391;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(var_index);
                    tmp_subscript_name_7 = var_index;
                    tmp_args_element_name_12 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_7, tmp_subscript_name_7);
                    Py_DECREF(tmp_subscribed_name_7);
                    if (tmp_args_element_name_12 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_5);

                        exception_lineno = 391;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 391;
                    tmp_call_result_12 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_5, tmp_args_element_name_12);
                    Py_DECREF(tmp_called_name_5);
                    Py_DECREF(tmp_args_element_name_12);
                    if (tmp_call_result_12 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 391;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_12);
                }
                {
                    PyObject *tmp_called_name_6;
                    PyObject *tmp_source_name_30;
                    PyObject *tmp_call_result_13;
                    PyObject *tmp_args_element_name_13;
                    PyObject *tmp_subscribed_name_8;
                    PyObject *tmp_source_name_31;
                    PyObject *tmp_subscript_name_8;
                    CHECK_OBJECT(var_list_mn);
                    tmp_source_name_30 = var_list_mn;
                    tmp_called_name_6 = LOOKUP_ATTRIBUTE(tmp_source_name_30, const_str_plain_append);
                    if (tmp_called_name_6 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 392;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_31 = par_ui;
                    tmp_subscribed_name_8 = LOOKUP_ATTRIBUTE(tmp_source_name_31, const_str_plain_vendor_list);
                    if (tmp_subscribed_name_8 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_6);

                        exception_lineno = 392;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(var_index);
                    tmp_subscript_name_8 = var_index;
                    tmp_args_element_name_13 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_8, tmp_subscript_name_8);
                    Py_DECREF(tmp_subscribed_name_8);
                    if (tmp_args_element_name_13 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_6);

                        exception_lineno = 392;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 392;
                    tmp_call_result_13 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_6, tmp_args_element_name_13);
                    Py_DECREF(tmp_called_name_6);
                    Py_DECREF(tmp_args_element_name_13);
                    if (tmp_call_result_13 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 392;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_13);
                }
                {
                    PyObject *tmp_called_name_7;
                    PyObject *tmp_source_name_32;
                    PyObject *tmp_call_result_14;
                    PyObject *tmp_args_element_name_14;
                    PyObject *tmp_subscribed_name_9;
                    PyObject *tmp_source_name_33;
                    PyObject *tmp_subscript_name_9;
                    CHECK_OBJECT(var_list_sn);
                    tmp_source_name_32 = var_list_sn;
                    tmp_called_name_7 = LOOKUP_ATTRIBUTE(tmp_source_name_32, const_str_plain_append);
                    if (tmp_called_name_7 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 393;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_33 = par_ui;
                    tmp_subscribed_name_9 = LOOKUP_ATTRIBUTE(tmp_source_name_33, const_str_plain_sn_list);
                    if (tmp_subscribed_name_9 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_7);

                        exception_lineno = 393;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(var_index);
                    tmp_subscript_name_9 = var_index;
                    tmp_args_element_name_14 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_9, tmp_subscript_name_9);
                    Py_DECREF(tmp_subscribed_name_9);
                    if (tmp_args_element_name_14 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_7);

                        exception_lineno = 393;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 393;
                    tmp_call_result_14 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_7, tmp_args_element_name_14);
                    Py_DECREF(tmp_called_name_7);
                    Py_DECREF(tmp_args_element_name_14);
                    if (tmp_call_result_14 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 393;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_14);
                }
                branch_end_7:;
            }
            branch_no_6:;
        }
        {
            PyObject *tmp_assign_source_14;
            PyObject *tmp_called_instance_20;
            PyObject *tmp_source_name_34;
            PyObject *tmp_args_element_name_15;
            CHECK_OBJECT(par_ui);
            tmp_source_name_34 = par_ui;
            tmp_called_instance_20 = LOOKUP_ATTRIBUTE(tmp_source_name_34, const_str_plain_liststore);
            if (tmp_called_instance_20 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 394;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            CHECK_OBJECT(var_iter);
            tmp_args_element_name_15 = var_iter;
            frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 394;
            {
                PyObject *call_args[] = {tmp_args_element_name_15};
                tmp_assign_source_14 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_20, const_str_plain_iter_next, call_args);
            }

            Py_DECREF(tmp_called_instance_20);
            if (tmp_assign_source_14 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 394;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            {
                PyObject *old = var_iter;
                assert(old != NULL);
                var_iter = tmp_assign_source_14;
                Py_DECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_15;
            PyObject *tmp_left_name_1;
            PyObject *tmp_right_name_1;
            CHECK_OBJECT(var_index);
            tmp_left_name_1 = var_index;
            tmp_right_name_1 = const_int_pos_1;
            tmp_assign_source_15 = BINARY_OPERATION_ADD_OBJECT_INT(tmp_left_name_1, tmp_right_name_1);
            assert(!(tmp_assign_source_15 == NULL));
            {
                PyObject *old = var_index;
                assert(old != NULL);
                var_index = tmp_assign_source_15;
                Py_DECREF(old);
            }

        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 381;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        goto loop_start_1;
        loop_end_1:;
        {
            nuitka_bool tmp_condition_result_8;
            PyObject *tmp_compexpr_left_11;
            PyObject *tmp_compexpr_right_11;
            PyObject *tmp_len_arg_2;
            CHECK_OBJECT(var_selected_list);
            tmp_len_arg_2 = var_selected_list;
            tmp_compexpr_left_11 = BUILTIN_LEN(tmp_len_arg_2);
            assert(!(tmp_compexpr_left_11 == NULL));
            tmp_compexpr_right_11 = const_int_0;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_11, tmp_compexpr_right_11);
            Py_DECREF(tmp_compexpr_left_11);
            assert(!(tmp_res == -1));
            tmp_condition_result_8 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_8 == NUITKA_BOOL_TRUE) {
                goto branch_yes_8;
            } else {
                goto branch_no_8;
            }
            branch_yes_8:;
            {
                PyObject *tmp_called_instance_21;
                PyObject *tmp_call_result_15;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_21 = par_ui;
                frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 397;
                tmp_call_result_15 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_21, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_1115ebe932d1b941d1eed30a47fde5a6_tuple, 0));

                if (tmp_call_result_15 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 397;
                    type_description_1 = "ooooooooooooNoooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_15);
            }
            tmp_return_value = Py_None;
            Py_INCREF(tmp_return_value);
            goto frame_return_exit_1;
            branch_no_8:;
        }
        branch_end_4:;
    }
    {
        nuitka_bool tmp_condition_result_9;
        int tmp_and_left_truth_6;
        nuitka_bool tmp_and_left_value_6;
        nuitka_bool tmp_and_right_value_6;
        PyObject *tmp_compexpr_left_12;
        PyObject *tmp_compexpr_right_12;
        PyObject *tmp_source_name_35;
        PyObject *tmp_called_instance_22;
        PyObject *tmp_source_name_36;
        PyObject *tmp_call_result_16;
        int tmp_truth_name_4;
        CHECK_OBJECT(par_ui);
        tmp_source_name_35 = par_ui;
        tmp_compexpr_left_12 = LOOKUP_ATTRIBUTE(tmp_source_name_35, const_str_plain_VERSION);
        if (tmp_compexpr_left_12 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 400;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_12 = const_int_pos_3;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_12, tmp_compexpr_right_12);
        Py_DECREF(tmp_compexpr_left_12);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 400;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_6 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_6 = tmp_and_left_value_6 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_6 == 1) {
            goto and_right_6;
        } else {
            goto and_left_6;
        }
        and_right_6:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_36 = par_ui;
        tmp_called_instance_22 = LOOKUP_ATTRIBUTE(tmp_source_name_36, const_str_plain_check_pass_rd);
        if (tmp_called_instance_22 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 400;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 400;
        tmp_call_result_16 = CALL_METHOD_NO_ARGS(tmp_called_instance_22, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_22);
        if (tmp_call_result_16 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 400;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_4 = CHECK_IF_TRUE(tmp_call_result_16);
        if (tmp_truth_name_4 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_16);

            exception_lineno = 400;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_6 = tmp_truth_name_4 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_16);
        tmp_condition_result_9 = tmp_and_right_value_6;
        goto and_end_6;
        and_left_6:;
        tmp_condition_result_9 = tmp_and_left_value_6;
        and_end_6:;
        if (tmp_condition_result_9 == NUITKA_BOOL_TRUE) {
            goto branch_yes_9;
        } else {
            goto branch_no_9;
        }
        branch_yes_9:;
        {
            PyObject *tmp_assign_source_16;
            PyObject *tmp_called_name_8;
            PyObject *tmp_source_name_37;
            PyObject *tmp_mvar_value_3;
            PyObject *tmp_args_element_name_16;
            PyObject *tmp_called_instance_23;
            PyObject *tmp_source_name_38;
            PyObject *tmp_args_element_name_17;
            PyObject *tmp_args_element_name_18;
            PyObject *tmp_args_element_name_19;
            tmp_mvar_value_3 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_runprocess);

            if (unlikely(tmp_mvar_value_3 == NULL)) {
                tmp_mvar_value_3 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runprocess);
            }

            if (tmp_mvar_value_3 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 5132 ], 39, 0);
                exception_tb = NULL;

                exception_lineno = 401;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }

            tmp_source_name_37 = tmp_mvar_value_3;
            tmp_called_name_8 = LOOKUP_ATTRIBUTE(tmp_source_name_37, const_str_plain_findUSB);
            if (tmp_called_name_8 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 401;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            CHECK_OBJECT(par_ui);
            tmp_source_name_38 = par_ui;
            tmp_called_instance_23 = LOOKUP_ATTRIBUTE(tmp_source_name_38, const_str_plain_auth_menu);
            if (tmp_called_instance_23 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_8);

                exception_lineno = 401;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 401;
            tmp_args_element_name_16 = CALL_METHOD_NO_ARGS(tmp_called_instance_23, const_str_plain_get_active_text);
            Py_DECREF(tmp_called_instance_23);
            if (tmp_args_element_name_16 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_8);

                exception_lineno = 401;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            CHECK_OBJECT(var_devs);
            tmp_args_element_name_17 = var_devs;
            CHECK_OBJECT(var_list_mn);
            tmp_args_element_name_18 = var_list_mn;
            CHECK_OBJECT(var_list_sn);
            tmp_args_element_name_19 = var_list_sn;
            frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 401;
            {
                PyObject *call_args[] = {tmp_args_element_name_16, tmp_args_element_name_17, tmp_args_element_name_18, tmp_args_element_name_19};
                tmp_assign_source_16 = CALL_FUNCTION_WITH_ARGS4(tmp_called_name_8, call_args);
            }

            Py_DECREF(tmp_called_name_8);
            Py_DECREF(tmp_args_element_name_16);
            if (tmp_assign_source_16 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 401;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            assert(var_f_list == NULL);
            var_f_list = tmp_assign_source_16;
        }
        {
            nuitka_bool tmp_condition_result_10;
            PyObject *tmp_compexpr_left_13;
            PyObject *tmp_compexpr_right_13;
            PyObject *tmp_len_arg_3;
            PyObject *tmp_subscribed_name_10;
            PyObject *tmp_subscript_name_10;
            CHECK_OBJECT(var_f_list);
            tmp_subscribed_name_10 = var_f_list;
            tmp_subscript_name_10 = const_int_pos_1;
            tmp_len_arg_3 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_10, tmp_subscript_name_10, 1);
            if (tmp_len_arg_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 402;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_left_13 = BUILTIN_LEN(tmp_len_arg_3);
            Py_DECREF(tmp_len_arg_3);
            if (tmp_compexpr_left_13 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 402;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_13 = const_int_0;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_13, tmp_compexpr_right_13);
            Py_DECREF(tmp_compexpr_left_13);
            assert(!(tmp_res == -1));
            tmp_condition_result_10 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_10 == NUITKA_BOOL_TRUE) {
                goto branch_yes_10;
            } else {
                goto branch_no_10;
            }
            branch_yes_10:;
            {
                PyObject *tmp_called_instance_24;
                PyObject *tmp_call_result_17;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_24 = par_ui;
                frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 403;
                tmp_call_result_17 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_24, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_65f1ca3cc21751516d4508974112f1bb_tuple, 0));

                if (tmp_call_result_17 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 403;
                    type_description_1 = "ooooooooooooNoooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_17);
            }
            tmp_return_value = Py_None;
            Py_INCREF(tmp_return_value);
            goto frame_return_exit_1;
            goto branch_end_10;
            branch_no_10:;
            {
                nuitka_bool tmp_condition_result_11;
                PyObject *tmp_compexpr_left_14;
                PyObject *tmp_compexpr_right_14;
                PyObject *tmp_len_arg_4;
                PyObject *tmp_subscribed_name_11;
                PyObject *tmp_subscript_name_11;
                CHECK_OBJECT(var_f_list);
                tmp_subscribed_name_11 = var_f_list;
                tmp_subscript_name_11 = const_int_0;
                tmp_len_arg_4 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_11, tmp_subscript_name_11, 0);
                if (tmp_len_arg_4 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 405;
                    type_description_1 = "ooooooooooooNoooooo";
                    goto frame_exception_exit_1;
                }
                tmp_compexpr_left_14 = BUILTIN_LEN(tmp_len_arg_4);
                Py_DECREF(tmp_len_arg_4);
                if (tmp_compexpr_left_14 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 405;
                    type_description_1 = "ooooooooooooNoooooo";
                    goto frame_exception_exit_1;
                }
                tmp_compexpr_right_14 = const_int_0;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_14, tmp_compexpr_right_14);
                Py_DECREF(tmp_compexpr_left_14);
                assert(!(tmp_res == -1));
                tmp_condition_result_11 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_11 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_11;
                } else {
                    goto branch_no_11;
                }
                branch_yes_11:;
                {
                    PyObject *tmp_called_instance_25;
                    PyObject *tmp_call_result_18;
                    CHECK_OBJECT(par_ui);
                    tmp_called_instance_25 = par_ui;
                    frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 406;
                    tmp_call_result_18 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_25, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_36979e110b22a61921d06dc3852bf838_tuple, 0));

                    if (tmp_call_result_18 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 406;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_18);
                }
                tmp_return_value = Py_None;
                Py_INCREF(tmp_return_value);
                goto frame_return_exit_1;
                goto branch_end_11;
                branch_no_11:;
                {
                    nuitka_bool tmp_condition_result_12;
                    PyObject *tmp_compexpr_left_15;
                    PyObject *tmp_compexpr_right_15;
                    PyObject *tmp_subscribed_name_12;
                    PyObject *tmp_subscript_name_12;
                    CHECK_OBJECT(var_f_list);
                    tmp_subscribed_name_12 = var_f_list;
                    tmp_subscript_name_12 = const_int_pos_2;
                    tmp_compexpr_left_15 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_12, tmp_subscript_name_12, 2);
                    if (tmp_compexpr_left_15 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 408;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_compexpr_right_15 = const_str_empty;
                    tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_15, tmp_compexpr_right_15);
                    Py_DECREF(tmp_compexpr_left_15);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 408;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_condition_result_12 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_12 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_12;
                    } else {
                        goto branch_no_12;
                    }
                    branch_yes_12:;
                    {
                        nuitka_bool tmp_condition_result_13;
                        PyObject *tmp_compexpr_left_16;
                        PyObject *tmp_compexpr_right_16;
                        PyObject *tmp_called_instance_26;
                        PyObject *tmp_source_name_39;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_39 = par_ui;
                        tmp_called_instance_26 = LOOKUP_ATTRIBUTE(tmp_source_name_39, const_str_plain_auth_menu);
                        if (tmp_called_instance_26 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 409;
                            type_description_1 = "ooooooooooooNoooooo";
                            goto frame_exception_exit_1;
                        }
                        frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 409;
                        tmp_compexpr_left_16 = CALL_METHOD_NO_ARGS(tmp_called_instance_26, const_str_plain_get_active);
                        Py_DECREF(tmp_called_instance_26);
                        if (tmp_compexpr_left_16 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 409;
                            type_description_1 = "ooooooooooooNoooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_compexpr_right_16 = const_int_0;
                        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_16, tmp_compexpr_right_16);
                        Py_DECREF(tmp_compexpr_left_16);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 409;
                            type_description_1 = "ooooooooooooNoooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_condition_result_13 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_13 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_13;
                        } else {
                            goto branch_no_13;
                        }
                        branch_yes_13:;
                        {
                            PyObject *tmp_called_name_9;
                            PyObject *tmp_source_name_40;
                            PyObject *tmp_call_result_19;
                            PyObject *tmp_args_element_name_20;
                            PyObject *tmp_left_name_2;
                            PyObject *tmp_left_name_3;
                            PyObject *tmp_right_name_2;
                            PyObject *tmp_subscribed_name_13;
                            PyObject *tmp_subscript_name_13;
                            PyObject *tmp_right_name_3;
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_40 = par_ui;
                            tmp_called_name_9 = LOOKUP_ATTRIBUTE(tmp_source_name_40, const_str_plain_msg_err);
                            if (tmp_called_name_9 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 410;
                                type_description_1 = "ooooooooooooNoooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_left_name_3 = const_str_digest_1002dc717d1fdd81c2ea7f5f9f7ab4a3;
                            CHECK_OBJECT(var_f_list);
                            tmp_subscribed_name_13 = var_f_list;
                            tmp_subscript_name_13 = const_int_pos_2;
                            tmp_right_name_2 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_13, tmp_subscript_name_13, 2);
                            if (tmp_right_name_2 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_9);

                                exception_lineno = 410;
                                type_description_1 = "ooooooooooooNoooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_left_name_2 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_3, tmp_right_name_2);
                            Py_DECREF(tmp_right_name_2);
                            if (tmp_left_name_2 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_9);

                                exception_lineno = 410;
                                type_description_1 = "ooooooooooooNoooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_right_name_3 = const_str_dot;
                            tmp_args_element_name_20 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_2, tmp_right_name_3);
                            Py_DECREF(tmp_left_name_2);
                            if (tmp_args_element_name_20 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_9);

                                exception_lineno = 410;
                                type_description_1 = "ooooooooooooNoooooo";
                                goto frame_exception_exit_1;
                            }
                            frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 410;
                            tmp_call_result_19 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_9, tmp_args_element_name_20);
                            Py_DECREF(tmp_called_name_9);
                            Py_DECREF(tmp_args_element_name_20);
                            if (tmp_call_result_19 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 410;
                                type_description_1 = "ooooooooooooNoooooo";
                                goto frame_exception_exit_1;
                            }
                            Py_DECREF(tmp_call_result_19);
                        }
                        goto branch_end_13;
                        branch_no_13:;
                        {
                            PyObject *tmp_called_name_10;
                            PyObject *tmp_source_name_41;
                            PyObject *tmp_call_result_20;
                            PyObject *tmp_args_element_name_21;
                            PyObject *tmp_left_name_4;
                            PyObject *tmp_left_name_5;
                            PyObject *tmp_right_name_4;
                            PyObject *tmp_subscribed_name_14;
                            PyObject *tmp_subscript_name_14;
                            PyObject *tmp_right_name_5;
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_41 = par_ui;
                            tmp_called_name_10 = LOOKUP_ATTRIBUTE(tmp_source_name_41, const_str_plain_msg_err);
                            if (tmp_called_name_10 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 412;
                                type_description_1 = "ooooooooooooNoooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_left_name_5 = const_str_digest_47e7b4a4005120dc05c79622c84885e4;
                            CHECK_OBJECT(var_f_list);
                            tmp_subscribed_name_14 = var_f_list;
                            tmp_subscript_name_14 = const_int_pos_2;
                            tmp_right_name_4 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_14, tmp_subscript_name_14, 2);
                            if (tmp_right_name_4 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_10);

                                exception_lineno = 412;
                                type_description_1 = "ooooooooooooNoooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_left_name_4 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_5, tmp_right_name_4);
                            Py_DECREF(tmp_right_name_4);
                            if (tmp_left_name_4 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_10);

                                exception_lineno = 412;
                                type_description_1 = "ooooooooooooNoooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_right_name_5 = const_str_dot;
                            tmp_args_element_name_21 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_4, tmp_right_name_5);
                            Py_DECREF(tmp_left_name_4);
                            if (tmp_args_element_name_21 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_10);

                                exception_lineno = 412;
                                type_description_1 = "ooooooooooooNoooooo";
                                goto frame_exception_exit_1;
                            }
                            frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 412;
                            tmp_call_result_20 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_10, tmp_args_element_name_21);
                            Py_DECREF(tmp_called_name_10);
                            Py_DECREF(tmp_args_element_name_21);
                            if (tmp_call_result_20 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 412;
                                type_description_1 = "ooooooooooooNoooooo";
                                goto frame_exception_exit_1;
                            }
                            Py_DECREF(tmp_call_result_20);
                        }
                        branch_end_13:;
                    }
                    tmp_return_value = Py_None;
                    Py_INCREF(tmp_return_value);
                    goto frame_return_exit_1;
                    branch_no_12:;
                }
                branch_end_11:;
            }
            branch_end_10:;
        }
        branch_no_9:;
    }
    {
        PyObject *tmp_assign_source_17;
        PyObject *tmp_called_instance_27;
        PyObject *tmp_source_name_42;
        CHECK_OBJECT(par_ui);
        tmp_source_name_42 = par_ui;
        tmp_called_instance_27 = LOOKUP_ATTRIBUTE(tmp_source_name_42, const_str_plain_new_pass_entry);
        if (tmp_called_instance_27 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 415;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 415;
        tmp_assign_source_17 = CALL_METHOD_NO_ARGS(tmp_called_instance_27, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_27);
        if (tmp_assign_source_17 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 415;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        assert(var_new_pass == NULL);
        var_new_pass = tmp_assign_source_17;
    }
    {
        PyObject *tmp_assign_source_18;
        PyObject *tmp_called_instance_28;
        PyObject *tmp_source_name_43;
        CHECK_OBJECT(par_ui);
        tmp_source_name_43 = par_ui;
        tmp_called_instance_28 = LOOKUP_ATTRIBUTE(tmp_source_name_43, const_str_plain_confirm_pass_entry);
        if (tmp_called_instance_28 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 416;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 416;
        tmp_assign_source_18 = CALL_METHOD_NO_ARGS(tmp_called_instance_28, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_28);
        if (tmp_assign_source_18 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 416;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        assert(var_new_pass_confirm == NULL);
        var_new_pass_confirm = tmp_assign_source_18;
    }
    {
        PyObject *tmp_assign_source_19;
        PyObject *tmp_called_instance_29;
        PyObject *tmp_mvar_value_4;
        PyObject *tmp_args_element_name_22;
        PyObject *tmp_args_element_name_23;
        PyObject *tmp_args_element_name_24;
        tmp_mvar_value_4 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_4 == NULL)) {
            tmp_mvar_value_4 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_4 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
            exception_tb = NULL;

            exception_lineno = 418;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_29 = tmp_mvar_value_4;
        tmp_args_element_name_22 = const_str_digest_29fe972ddfd3c3ace7d88aee7a9cd77e;
        tmp_args_element_name_23 = const_str_empty;
        CHECK_OBJECT(var_new_pass);
        tmp_args_element_name_24 = var_new_pass;
        frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 418;
        {
            PyObject *call_args[] = {tmp_args_element_name_22, tmp_args_element_name_23, tmp_args_element_name_24};
            tmp_assign_source_19 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_29, const_str_plain_sub, call_args);
        }

        if (tmp_assign_source_19 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 418;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        assert(var_pw_trim == NULL);
        var_pw_trim = tmp_assign_source_19;
    }
    {
        PyObject *tmp_assign_source_20;
        PyObject *tmp_called_instance_30;
        PyObject *tmp_mvar_value_5;
        PyObject *tmp_args_element_name_25;
        PyObject *tmp_args_element_name_26;
        PyObject *tmp_args_element_name_27;
        tmp_mvar_value_5 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_5 == NULL)) {
            tmp_mvar_value_5 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_5 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
            exception_tb = NULL;

            exception_lineno = 419;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_30 = tmp_mvar_value_5;
        tmp_args_element_name_25 = const_str_digest_2717a74e8094c62311bf53472f4de0ca;
        tmp_args_element_name_26 = const_str_empty;
        CHECK_OBJECT(var_new_pass_confirm);
        tmp_args_element_name_27 = var_new_pass_confirm;
        frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 419;
        {
            PyObject *call_args[] = {tmp_args_element_name_25, tmp_args_element_name_26, tmp_args_element_name_27};
            tmp_assign_source_20 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_30, const_str_plain_sub, call_args);
        }

        if (tmp_assign_source_20 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 419;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        assert(var_pw_trim_confirm == NULL);
        var_pw_trim_confirm = tmp_assign_source_20;
    }
    {
        nuitka_bool tmp_condition_result_14;
        PyObject *tmp_compexpr_left_17;
        PyObject *tmp_compexpr_right_17;
        PyObject *tmp_len_arg_5;
        CHECK_OBJECT(var_pw_trim);
        tmp_len_arg_5 = var_pw_trim;
        tmp_compexpr_left_17 = BUILTIN_LEN(tmp_len_arg_5);
        if (tmp_compexpr_left_17 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 420;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_17 = const_int_pos_8;
        tmp_res = RICH_COMPARE_BOOL_LT_OBJECT_INT(tmp_compexpr_left_17, tmp_compexpr_right_17);
        Py_DECREF(tmp_compexpr_left_17);
        assert(!(tmp_res == -1));
        tmp_condition_result_14 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_14 == NUITKA_BOOL_TRUE) {
            goto branch_yes_14;
        } else {
            goto branch_no_14;
        }
        branch_yes_14:;
        {
            PyObject *tmp_called_instance_31;
            PyObject *tmp_call_result_21;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_31 = par_ui;
            frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 421;
            tmp_call_result_21 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_31, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_27f0647d657a108c4dc843014a115167_tuple, 0));

            if (tmp_call_result_21 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 421;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_21);
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        goto branch_end_14;
        branch_no_14:;
        {
            nuitka_bool tmp_condition_result_15;
            PyObject *tmp_called_instance_32;
            PyObject *tmp_source_name_44;
            PyObject *tmp_call_result_22;
            PyObject *tmp_args_element_name_28;
            int tmp_truth_name_5;
            CHECK_OBJECT(par_ui);
            tmp_source_name_44 = par_ui;
            tmp_called_instance_32 = LOOKUP_ATTRIBUTE(tmp_source_name_44, const_str_plain_bad_pw);
            if (tmp_called_instance_32 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 423;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            CHECK_OBJECT(var_pw_trim);
            tmp_args_element_name_28 = var_pw_trim;
            frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 423;
            {
                PyObject *call_args[] = {tmp_args_element_name_28};
                tmp_call_result_22 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_32, const_str_plain_has_key, call_args);
            }

            Py_DECREF(tmp_called_instance_32);
            if (tmp_call_result_22 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 423;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            tmp_truth_name_5 = CHECK_IF_TRUE(tmp_call_result_22);
            if (tmp_truth_name_5 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_call_result_22);

                exception_lineno = 423;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_15 = tmp_truth_name_5 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            Py_DECREF(tmp_call_result_22);
            if (tmp_condition_result_15 == NUITKA_BOOL_TRUE) {
                goto branch_yes_15;
            } else {
                goto branch_no_15;
            }
            branch_yes_15:;
            {
                PyObject *tmp_called_instance_33;
                PyObject *tmp_call_result_23;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_33 = par_ui;
                frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 424;
                tmp_call_result_23 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_33, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_6d3ebca9adf50b5bbcf862f7d0db7bdc_tuple, 0));

                if (tmp_call_result_23 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 424;
                    type_description_1 = "ooooooooooooNoooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_23);
            }
            tmp_return_value = Py_None;
            Py_INCREF(tmp_return_value);
            goto frame_return_exit_1;
            goto branch_end_15;
            branch_no_15:;
            {
                nuitka_bool tmp_condition_result_16;
                PyObject *tmp_compexpr_left_18;
                PyObject *tmp_compexpr_right_18;
                CHECK_OBJECT(var_new_pass);
                tmp_compexpr_left_18 = var_new_pass;
                CHECK_OBJECT(var_new_pass_confirm);
                tmp_compexpr_right_18 = var_new_pass_confirm;
                tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_18, tmp_compexpr_right_18);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 426;
                    type_description_1 = "ooooooooooooNoooooo";
                    goto frame_exception_exit_1;
                }
                tmp_condition_result_16 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_16 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_16;
                } else {
                    goto branch_no_16;
                }
                branch_yes_16:;
                {
                    PyObject *tmp_called_instance_34;
                    PyObject *tmp_call_result_24;
                    CHECK_OBJECT(par_ui);
                    tmp_called_instance_34 = par_ui;
                    frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 427;
                    tmp_call_result_24 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_34, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_ec250c46d7b35bdd88731f5a342fe610_tuple, 0));

                    if (tmp_call_result_24 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 427;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_24);
                }
                tmp_return_value = Py_None;
                Py_INCREF(tmp_return_value);
                goto frame_return_exit_1;
                goto branch_end_16;
                branch_no_16:;
                {
                    nuitka_bool tmp_condition_result_17;
                    int tmp_and_left_truth_7;
                    nuitka_bool tmp_and_left_value_7;
                    nuitka_bool tmp_and_right_value_7;
                    int tmp_or_left_truth_5;
                    nuitka_bool tmp_or_left_value_5;
                    nuitka_bool tmp_or_right_value_5;
                    PyObject *tmp_compexpr_left_19;
                    PyObject *tmp_compexpr_right_19;
                    PyObject *tmp_left_name_6;
                    PyObject *tmp_source_name_45;
                    PyObject *tmp_right_name_6;
                    int tmp_and_left_truth_8;
                    nuitka_bool tmp_and_left_value_8;
                    nuitka_bool tmp_and_right_value_8;
                    PyObject *tmp_compexpr_left_20;
                    PyObject *tmp_compexpr_right_20;
                    PyObject *tmp_source_name_46;
                    PyObject *tmp_compexpr_left_21;
                    PyObject *tmp_compexpr_right_21;
                    PyObject *tmp_source_name_47;
                    int tmp_and_left_truth_9;
                    nuitka_bool tmp_and_left_value_9;
                    nuitka_bool tmp_and_right_value_9;
                    PyObject *tmp_called_instance_35;
                    PyObject *tmp_source_name_48;
                    PyObject *tmp_call_result_25;
                    int tmp_truth_name_6;
                    PyObject *tmp_operand_name_5;
                    PyObject *tmp_called_instance_36;
                    PyObject *tmp_source_name_49;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_45 = par_ui;
                    tmp_left_name_6 = LOOKUP_ATTRIBUTE(tmp_source_name_45, const_str_plain_VERSION);
                    if (tmp_left_name_6 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 429;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_6 = const_int_pos_3;
                    tmp_compexpr_left_19 = BINARY_OPERATION_MOD_OBJECT_INT(tmp_left_name_6, tmp_right_name_6);
                    Py_DECREF(tmp_left_name_6);
                    if (tmp_compexpr_left_19 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 429;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_compexpr_right_19 = const_int_0;
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_19, tmp_compexpr_right_19);
                    Py_DECREF(tmp_compexpr_left_19);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 429;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_or_left_value_5 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_or_left_truth_5 = tmp_or_left_value_5 == NUITKA_BOOL_TRUE ? 1 : 0;
                    if (tmp_or_left_truth_5 == 1) {
                        goto or_left_5;
                    } else {
                        goto or_right_5;
                    }
                    or_right_5:;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_46 = par_ui;
                    tmp_compexpr_left_20 = LOOKUP_ATTRIBUTE(tmp_source_name_46, const_str_plain_VERSION);
                    if (tmp_compexpr_left_20 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 429;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_compexpr_right_20 = const_int_pos_1;
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_20, tmp_compexpr_right_20);
                    Py_DECREF(tmp_compexpr_left_20);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 429;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_and_left_value_8 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_and_left_truth_8 = tmp_and_left_value_8 == NUITKA_BOOL_TRUE ? 1 : 0;
                    if (tmp_and_left_truth_8 == 1) {
                        goto and_right_8;
                    } else {
                        goto and_left_8;
                    }
                    and_right_8:;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_47 = par_ui;
                    tmp_compexpr_left_21 = LOOKUP_ATTRIBUTE(tmp_source_name_47, const_str_plain_PBA_VERSION);
                    if (tmp_compexpr_left_21 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 429;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_compexpr_right_21 = const_int_pos_1;
                    tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_INT(tmp_compexpr_left_21, tmp_compexpr_right_21);
                    Py_DECREF(tmp_compexpr_left_21);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 429;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_and_right_value_8 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_or_right_value_5 = tmp_and_right_value_8;
                    goto and_end_8;
                    and_left_8:;
                    tmp_or_right_value_5 = tmp_and_left_value_8;
                    and_end_8:;
                    tmp_and_left_value_7 = tmp_or_right_value_5;
                    goto or_end_5;
                    or_left_5:;
                    tmp_and_left_value_7 = tmp_or_left_value_5;
                    or_end_5:;
                    tmp_and_left_truth_7 = tmp_and_left_value_7 == NUITKA_BOOL_TRUE ? 1 : 0;
                    if (tmp_and_left_truth_7 == 1) {
                        goto and_right_7;
                    } else {
                        goto and_left_7;
                    }
                    and_right_7:;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_48 = par_ui;
                    tmp_called_instance_35 = LOOKUP_ATTRIBUTE(tmp_source_name_48, const_str_plain_pass_sav);
                    if (tmp_called_instance_35 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 429;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 429;
                    tmp_call_result_25 = CALL_METHOD_NO_ARGS(tmp_called_instance_35, const_str_plain_get_active);
                    Py_DECREF(tmp_called_instance_35);
                    if (tmp_call_result_25 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 429;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_truth_name_6 = CHECK_IF_TRUE(tmp_call_result_25);
                    if (tmp_truth_name_6 == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_call_result_25);

                        exception_lineno = 429;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_and_left_value_9 = tmp_truth_name_6 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    Py_DECREF(tmp_call_result_25);
                    tmp_and_left_truth_9 = tmp_and_left_value_9 == NUITKA_BOOL_TRUE ? 1 : 0;
                    if (tmp_and_left_truth_9 == 1) {
                        goto and_right_9;
                    } else {
                        goto and_left_9;
                    }
                    and_right_9:;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_49 = par_ui;
                    tmp_called_instance_36 = LOOKUP_ATTRIBUTE(tmp_source_name_49, const_str_plain_check_pass_rd);
                    if (tmp_called_instance_36 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 429;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 429;
                    tmp_operand_name_5 = CALL_METHOD_NO_ARGS(tmp_called_instance_36, const_str_plain_get_active);
                    Py_DECREF(tmp_called_instance_36);
                    if (tmp_operand_name_5 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 429;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_res = CHECK_IF_TRUE(tmp_operand_name_5);
                    Py_DECREF(tmp_operand_name_5);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 429;
                        type_description_1 = "ooooooooooooNoooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_and_right_value_9 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_and_right_value_7 = tmp_and_right_value_9;
                    goto and_end_9;
                    and_left_9:;
                    tmp_and_right_value_7 = tmp_and_left_value_9;
                    and_end_9:;
                    tmp_condition_result_17 = tmp_and_right_value_7;
                    goto and_end_7;
                    and_left_7:;
                    tmp_condition_result_17 = tmp_and_left_value_7;
                    and_end_7:;
                    if (tmp_condition_result_17 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_17;
                    } else {
                        goto branch_no_17;
                    }
                    branch_yes_17:;
                    {
                        PyObject *tmp_assign_source_21;
                        PyObject *tmp_called_instance_37;
                        PyObject *tmp_source_name_50;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_50 = par_ui;
                        tmp_called_instance_37 = LOOKUP_ATTRIBUTE(tmp_source_name_50, const_str_plain_drive_menu);
                        if (tmp_called_instance_37 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 430;
                            type_description_1 = "ooooooooooooNoooooo";
                            goto frame_exception_exit_1;
                        }
                        frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 430;
                        tmp_assign_source_21 = CALL_METHOD_NO_ARGS(tmp_called_instance_37, const_str_plain_get_active_text);
                        Py_DECREF(tmp_called_instance_37);
                        if (tmp_assign_source_21 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 430;
                            type_description_1 = "ooooooooooooNoooooo";
                            goto frame_exception_exit_1;
                        }
                        assert(var_drive == NULL);
                        var_drive = tmp_assign_source_21;
                    }
                    {
                        nuitka_bool tmp_condition_result_18;
                        PyObject *tmp_compexpr_left_22;
                        PyObject *tmp_compexpr_right_22;
                        PyObject *tmp_source_name_51;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_51 = par_ui;
                        tmp_compexpr_left_22 = LOOKUP_ATTRIBUTE(tmp_source_name_51, const_str_plain_DEV_OS);
                        if (tmp_compexpr_left_22 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 432;
                            type_description_1 = "ooooooooooooNoooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_compexpr_right_22 = const_str_plain_Windows;
                        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_22, tmp_compexpr_right_22);
                        Py_DECREF(tmp_compexpr_left_22);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 432;
                            type_description_1 = "ooooooooooooNoooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_condition_result_18 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_18 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_18;
                        } else {
                            goto branch_no_18;
                        }
                        branch_yes_18:;
                        {
                            PyObject *tmp_assign_source_22;
                            PyObject *tmp_left_name_7;
                            PyObject *tmp_right_name_7;
                            CHECK_OBJECT(var_drive);
                            tmp_left_name_7 = var_drive;
                            tmp_right_name_7 = const_str_chr_92;
                            tmp_assign_source_22 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_7, tmp_right_name_7);
                            if (tmp_assign_source_22 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 433;
                                type_description_1 = "ooooooooooooNoooooo";
                                goto frame_exception_exit_1;
                            }
                            {
                                PyObject *old = var_drive;
                                assert(old != NULL);
                                var_drive = tmp_assign_source_22;
                                Py_DECREF(old);
                            }

                        }
                        branch_no_18:;
                    }
                    {
                        nuitka_bool tmp_condition_result_19;
                        PyObject *tmp_operand_name_6;
                        PyObject *tmp_called_instance_38;
                        PyObject *tmp_source_name_52;
                        PyObject *tmp_mvar_value_6;
                        PyObject *tmp_args_element_name_29;
                        tmp_mvar_value_6 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                        if (unlikely(tmp_mvar_value_6 == NULL)) {
                            tmp_mvar_value_6 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                        }

                        if (tmp_mvar_value_6 == NULL) {

                            exception_type = PyExc_NameError;
                            Py_INCREF(exception_type);
                            exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                            exception_tb = NULL;

                            exception_lineno = 434;
                            type_description_1 = "ooooooooooooNoooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_source_name_52 = tmp_mvar_value_6;
                        tmp_called_instance_38 = LOOKUP_ATTRIBUTE(tmp_source_name_52, const_str_plain_path);
                        if (tmp_called_instance_38 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 434;
                            type_description_1 = "ooooooooooooNoooooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(var_drive);
                        tmp_args_element_name_29 = var_drive;
                        frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 434;
                        {
                            PyObject *call_args[] = {tmp_args_element_name_29};
                            tmp_operand_name_6 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_38, const_str_plain_isdir, call_args);
                        }

                        Py_DECREF(tmp_called_instance_38);
                        if (tmp_operand_name_6 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 434;
                            type_description_1 = "ooooooooooooNoooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_res = CHECK_IF_TRUE(tmp_operand_name_6);
                        Py_DECREF(tmp_operand_name_6);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 434;
                            type_description_1 = "ooooooooooooNoooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_condition_result_19 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_19 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_19;
                        } else {
                            goto branch_no_19;
                        }
                        branch_yes_19:;
                        {
                            PyObject *tmp_called_instance_39;
                            PyObject *tmp_call_result_26;
                            CHECK_OBJECT(par_ui);
                            tmp_called_instance_39 = par_ui;
                            frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 435;
                            tmp_call_result_26 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_39, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_e56275e2a5c0026638e77956d372e275_tuple, 0));

                            if (tmp_call_result_26 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 435;
                                type_description_1 = "ooooooooooooNoooooo";
                                goto frame_exception_exit_1;
                            }
                            Py_DECREF(tmp_call_result_26);
                        }
                        tmp_return_value = Py_None;
                        Py_INCREF(tmp_return_value);
                        goto frame_return_exit_1;
                        branch_no_19:;
                    }
                    branch_no_17:;
                }
                branch_end_16:;
            }
            branch_end_15:;
        }
        branch_end_14:;
    }
    {
        PyObject *tmp_called_instance_40;
        PyObject *tmp_call_result_27;
        CHECK_OBJECT(par_ui);
        tmp_called_instance_40 = par_ui;
        frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 437;
        tmp_call_result_27 = CALL_METHOD_NO_ARGS(tmp_called_instance_40, const_str_plain_start_spin);
        if (tmp_call_result_27 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 437;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_27);
    }
    {
        nuitka_bool tmp_condition_result_20;
        PyObject *tmp_compexpr_left_23;
        PyObject *tmp_compexpr_right_23;
        PyObject *tmp_len_arg_6;
        CHECK_OBJECT(var_selected_list);
        tmp_len_arg_6 = var_selected_list;
        tmp_compexpr_left_23 = BUILTIN_LEN(tmp_len_arg_6);
        assert(!(tmp_compexpr_left_23 == NULL));
        tmp_compexpr_right_23 = const_int_pos_1;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_23, tmp_compexpr_right_23);
        Py_DECREF(tmp_compexpr_left_23);
        assert(!(tmp_res == -1));
        tmp_condition_result_20 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_20 == NUITKA_BOOL_TRUE) {
            goto branch_yes_20;
        } else {
            goto branch_no_20;
        }
        branch_yes_20:;
        {
            PyObject *tmp_called_instance_41;
            PyObject *tmp_source_name_53;
            PyObject *tmp_call_result_28;
            CHECK_OBJECT(par_ui);
            tmp_source_name_53 = par_ui;
            tmp_called_instance_41 = LOOKUP_ATTRIBUTE(tmp_source_name_53, const_str_plain_wait_instr);
            if (tmp_called_instance_41 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 439;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 439;
            tmp_call_result_28 = CALL_METHOD_NO_ARGS(tmp_called_instance_41, const_str_plain_show);
            Py_DECREF(tmp_called_instance_41);
            if (tmp_call_result_28 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 439;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_28);
        }
        goto branch_end_20;
        branch_no_20:;
        {
            PyObject *tmp_called_instance_42;
            PyObject *tmp_source_name_54;
            PyObject *tmp_call_result_29;
            CHECK_OBJECT(par_ui);
            tmp_source_name_54 = par_ui;
            tmp_called_instance_42 = LOOKUP_ATTRIBUTE(tmp_source_name_54, const_str_plain_multi_wait_instr);
            if (tmp_called_instance_42 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 441;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 441;
            tmp_call_result_29 = CALL_METHOD_NO_ARGS(tmp_called_instance_42, const_str_plain_show);
            Py_DECREF(tmp_called_instance_42);
            if (tmp_call_result_29 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 441;
                type_description_1 = "ooooooooooooNoooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_29);
        }
        branch_end_20:;
    }
    {
        PyObject *tmp_assign_source_23;
        PyObject *tmp_called_instance_43;
        PyObject *tmp_source_name_55;
        CHECK_OBJECT(par_ui);
        tmp_source_name_55 = par_ui;
        tmp_called_instance_43 = LOOKUP_ATTRIBUTE(tmp_source_name_55, const_str_plain_auth_menu);
        if (tmp_called_instance_43 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 442;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 442;
        tmp_assign_source_23 = CALL_METHOD_NO_ARGS(tmp_called_instance_43, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_43);
        if (tmp_assign_source_23 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 442;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        assert(var_level == NULL);
        var_level = tmp_assign_source_23;
    }
    {
        PyObject *tmp_assattr_name_1;
        PyObject *tmp_assattr_target_1;
        tmp_assattr_name_1 = Py_True;
        CHECK_OBJECT(par_ui);
        tmp_assattr_target_1 = par_ui;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, const_str_plain_op_inprogress, tmp_assattr_name_1);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 443;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
    }
    {
        PyObject *tmp_assign_source_24;
        PyObject *tmp_called_name_11;
        PyObject *tmp_source_name_56;
        PyObject *tmp_mvar_value_7;
        PyObject *tmp_kw_name_1;
        PyObject *tmp_dict_key_1;
        PyObject *tmp_dict_value_1;
        PyObject *tmp_source_name_57;
        PyObject *tmp_mvar_value_8;
        PyObject *tmp_dict_key_2;
        PyObject *tmp_dict_value_2;
        PyObject *tmp_tuple_element_1;
        tmp_mvar_value_7 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_threading);

        if (unlikely(tmp_mvar_value_7 == NULL)) {
            tmp_mvar_value_7 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_threading);
        }

        if (tmp_mvar_value_7 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 661 ], 38, 0);
            exception_tb = NULL;

            exception_lineno = 446;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_56 = tmp_mvar_value_7;
        tmp_called_name_11 = LOOKUP_ATTRIBUTE(tmp_source_name_56, const_str_plain_Thread);
        if (tmp_called_name_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 446;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        tmp_mvar_value_8 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_runsetup);

        if (unlikely(tmp_mvar_value_8 == NULL)) {
            tmp_mvar_value_8 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runsetup);
        }

        if (tmp_mvar_value_8 == NULL) {
            Py_DECREF(tmp_called_name_11);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 5095 ], 37, 0);
            exception_tb = NULL;

            exception_lineno = 446;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_57 = tmp_mvar_value_8;
        tmp_dict_value_1 = LOOKUP_ATTRIBUTE(tmp_source_name_57, const_str_plain_rt_changePW);
        if (tmp_dict_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_11);

            exception_lineno = 446;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        tmp_dict_key_1 = const_str_plain_target;
        tmp_kw_name_1 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_kw_name_1, tmp_dict_key_1, tmp_dict_value_1);
        Py_DECREF(tmp_dict_value_1);
        assert(!(tmp_res != 0));
        CHECK_OBJECT(par_ui);
        tmp_tuple_element_1 = par_ui;
        tmp_dict_value_2 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_dict_value_2, 0, tmp_tuple_element_1);
        CHECK_OBJECT(var_selected_list);
        tmp_tuple_element_1 = var_selected_list;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_dict_value_2, 1, tmp_tuple_element_1);
        CHECK_OBJECT(var_level);
        tmp_tuple_element_1 = var_level;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_dict_value_2, 2, tmp_tuple_element_1);
        tmp_dict_key_2 = const_str_plain_args;
        tmp_res = PyDict_SetItem(tmp_kw_name_1, tmp_dict_key_2, tmp_dict_value_2);
        Py_DECREF(tmp_dict_value_2);
        assert(!(tmp_res != 0));
        frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 446;
        tmp_assign_source_24 = CALL_FUNCTION_WITH_KEYARGS(tmp_called_name_11, tmp_kw_name_1);
        Py_DECREF(tmp_called_name_11);
        Py_DECREF(tmp_kw_name_1);
        if (tmp_assign_source_24 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 446;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        assert(var_t_m == NULL);
        var_t_m = tmp_assign_source_24;
    }
    {
        PyObject *tmp_called_instance_44;
        PyObject *tmp_call_result_30;
        CHECK_OBJECT(var_t_m);
        tmp_called_instance_44 = var_t_m;
        frame_1d9f736b66df80facf100f38971740c7->m_frame.f_lineno = 447;
        tmp_call_result_30 = CALL_METHOD_NO_ARGS(tmp_called_instance_44, const_str_plain_start);
        if (tmp_call_result_30 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 447;
            type_description_1 = "ooooooooooooNoooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_30);
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_1d9f736b66df80facf100f38971740c7);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_1d9f736b66df80facf100f38971740c7);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto try_return_handler_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_1d9f736b66df80facf100f38971740c7);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_1d9f736b66df80facf100f38971740c7, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_1d9f736b66df80facf100f38971740c7->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_1d9f736b66df80facf100f38971740c7, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_1d9f736b66df80facf100f38971740c7,
        type_description_1,
        par_button,
        par_ui,
        var_pw_strip,
        var_list_mn,
        var_level,
        var_index,
        var_selected,
        var_pw_trim,
        var_iter,
        var_drive,
        var_devs,
        var_f_list,
        NULL,
        var_selected_list,
        var_pw_trim_confirm,
        var_t_m,
        var_new_pass,
        var_list_sn,
        var_new_pass_confirm
    );


    // Release cached frame.
    if (frame_1d9f736b66df80facf100f38971740c7 == cache_frame_1d9f736b66df80facf100f38971740c7) {
        Py_DECREF(frame_1d9f736b66df80facf100f38971740c7);
    }
    cache_frame_1d9f736b66df80facf100f38971740c7 = NULL;

    assertFrameObject(frame_1d9f736b66df80facf100f38971740c7);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(runop$$$function_6_run_changePW);
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    CHECK_OBJECT((PyObject *)var_pw_strip);
    Py_DECREF(var_pw_strip);
    var_pw_strip = NULL;

    Py_XDECREF(var_list_mn);
    var_list_mn = NULL;

    Py_XDECREF(var_level);
    var_level = NULL;

    Py_XDECREF(var_index);
    var_index = NULL;

    Py_XDECREF(var_selected);
    var_selected = NULL;

    Py_XDECREF(var_pw_trim);
    var_pw_trim = NULL;

    Py_XDECREF(var_iter);
    var_iter = NULL;

    Py_XDECREF(var_drive);
    var_drive = NULL;

    Py_XDECREF(var_devs);
    var_devs = NULL;

    Py_XDECREF(var_f_list);
    var_f_list = NULL;

    Py_XDECREF(var_selected_list);
    var_selected_list = NULL;

    Py_XDECREF(var_pw_trim_confirm);
    var_pw_trim_confirm = NULL;

    Py_XDECREF(var_t_m);
    var_t_m = NULL;

    Py_XDECREF(var_new_pass);
    var_new_pass = NULL;

    Py_XDECREF(var_list_sn);
    var_list_sn = NULL;

    Py_XDECREF(var_new_pass_confirm);
    var_new_pass_confirm = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_pw_strip);
    var_pw_strip = NULL;

    Py_XDECREF(var_list_mn);
    var_list_mn = NULL;

    Py_XDECREF(var_level);
    var_level = NULL;

    Py_XDECREF(var_index);
    var_index = NULL;

    Py_XDECREF(var_selected);
    var_selected = NULL;

    Py_XDECREF(var_pw_trim);
    var_pw_trim = NULL;

    Py_XDECREF(var_iter);
    var_iter = NULL;

    Py_XDECREF(var_drive);
    var_drive = NULL;

    Py_XDECREF(var_devs);
    var_devs = NULL;

    Py_XDECREF(var_f_list);
    var_f_list = NULL;

    Py_XDECREF(var_selected_list);
    var_selected_list = NULL;

    Py_XDECREF(var_pw_trim_confirm);
    var_pw_trim_confirm = NULL;

    Py_XDECREF(var_t_m);
    var_t_m = NULL;

    Py_XDECREF(var_new_pass);
    var_new_pass = NULL;

    Py_XDECREF(var_list_sn);
    var_list_sn = NULL;

    Py_XDECREF(var_new_pass_confirm);
    var_new_pass_confirm = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto function_exception_exit;
    // End of try:

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(runop$$$function_6_run_changePW);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_button);
    Py_DECREF(par_button);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_button);
    Py_DECREF(par_button);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_runop$$$function_7_run_setupUSB(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_button = python_pars[0];
    PyObject *par_ui = python_pars[1];
    PyObject *par_args = python_pars[2];
    PyObject *var_list_u = NULL;
    PyObject *var_t2 = NULL;
    PyObject *var_existingfiles = NULL;
    PyObject *var_message = NULL;
    PyObject *var_txt = NULL;
    PyObject *var_pw_strip = NULL;
    PyObject *var_index = NULL;
    PyObject *var_output = NULL;
    PyObject *var_rgx = NULL;
    PyObject *var_res = NULL;
    PyObject *var_usb_check = NULL;
    PyObject *var_usb_dialog = NULL;
    PyObject *var_tp = NULL;
    PyObject *var_dev1 = NULL;
    PyObject *var_m1 = NULL;
    PyObject *var_m2 = NULL;
    PyObject *var_type_a = NULL;
    PyObject *var_res1 = NULL;
    PyObject *var_start_time = NULL;
    PyObject *var_found = NULL;
    PyObject *var_index2 = NULL;
    PyObject *var_idx1 = NULL;
    PyObject *var_preserved_files = NULL;
    PyObject *var_e = NULL;
    PyObject *var_r2 = NULL;
    PyObject *var_f = NULL;
    PyObject *var_j = NULL;
    PyObject *var_m = NULL;
    PyObject *var_drive = NULL;
    PyObject *var_t1 = NULL;
    PyObject *var_dir_fl = NULL;
    PyObject *var_p = NULL;
    PyObject *var_s = NULL;
    PyObject *var_u = NULL;
    PyObject *var_entry = NULL;
    PyObject *var_txt1 = NULL;
    PyObject *var_txt2 = NULL;
    PyObject *var_txt3 = NULL;
    PyObject *tmp_for_loop_1__for_iterator = NULL;
    PyObject *tmp_for_loop_1__iter_value = NULL;
    PyObject *tmp_for_loop_2__for_iterator = NULL;
    PyObject *tmp_for_loop_2__iter_value = NULL;
    PyObject *tmp_for_loop_3__for_iterator = NULL;
    PyObject *tmp_for_loop_3__iter_value = NULL;
    PyObject *tmp_for_loop_4__for_iterator = NULL;
    PyObject *tmp_for_loop_4__iter_value = NULL;
    PyObject *tmp_for_loop_5__for_iterator = NULL;
    PyObject *tmp_for_loop_5__iter_value = NULL;
    PyObject *tmp_for_loop_6__for_iterator = NULL;
    PyObject *tmp_for_loop_6__iter_value = NULL;
    PyObject *tmp_list_contraction_1__$0 = NULL;
    PyObject *tmp_list_contraction_1__contraction_result = NULL;
    PyObject *tmp_list_contraction_1__iter_value_0 = NULL;
    struct Nuitka_FrameObject *frame_120e6cbb634311d08ade47582d57e262;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;
    PyObject *exception_keeper_type_3;
    PyObject *exception_keeper_value_3;
    PyTracebackObject *exception_keeper_tb_3;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_3;
    PyObject *exception_keeper_type_4;
    PyObject *exception_keeper_value_4;
    PyTracebackObject *exception_keeper_tb_4;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_4;
    PyObject *exception_keeper_type_5;
    PyObject *exception_keeper_value_5;
    PyTracebackObject *exception_keeper_tb_5;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_5;
    PyObject *exception_keeper_type_6;
    PyObject *exception_keeper_value_6;
    PyTracebackObject *exception_keeper_tb_6;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_6;
    PyObject *exception_keeper_type_7;
    PyObject *exception_keeper_value_7;
    PyTracebackObject *exception_keeper_tb_7;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_7;
    bool tmp_result;
    PyObject *exception_keeper_type_8;
    PyObject *exception_keeper_value_8;
    PyTracebackObject *exception_keeper_tb_8;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_8;
    static struct Nuitka_FrameObject *cache_frame_120e6cbb634311d08ade47582d57e262 = NULL;
    PyObject *exception_keeper_type_9;
    PyObject *exception_keeper_value_9;
    PyTracebackObject *exception_keeper_tb_9;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_9;

    // Actual function body.
    // Tried code:
    MAKE_OR_REUSE_FRAME(cache_frame_120e6cbb634311d08ade47582d57e262, codeobj_120e6cbb634311d08ade47582d57e262, module_runop, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
    frame_120e6cbb634311d08ade47582d57e262 = cache_frame_120e6cbb634311d08ade47582d57e262;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_120e6cbb634311d08ade47582d57e262);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_120e6cbb634311d08ade47582d57e262) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_instance_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_call_result_1;
        PyObject *tmp_args_element_name_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_verify);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_verify);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 236 ], 35, 0);
            exception_tb = NULL;

            exception_lineno = 450;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_1 = tmp_mvar_value_1;
        CHECK_OBJECT(par_ui);
        tmp_args_element_name_1 = par_ui;
        frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 450;
        {
            PyObject *call_args[] = {tmp_args_element_name_1};
            tmp_call_result_1 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_1, const_str_plain_licCheck, call_args);
        }

        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 450;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_1);
    }
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_called_name_1;
        PyObject *tmp_source_name_1;
        PyObject *tmp_mvar_value_2;
        PyObject *tmp_args_element_name_2;
        PyObject *tmp_args_element_name_3;
        PyObject *tmp_args_element_name_4;
        PyObject *tmp_called_instance_2;
        PyObject *tmp_source_name_2;
        tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_2 == NULL)) {
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_2 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
            exception_tb = NULL;

            exception_lineno = 451;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_1 = tmp_mvar_value_2;
        tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_sub);
        if (tmp_called_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 451;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_2 = const_str_digest_29fe972ddfd3c3ace7d88aee7a9cd77e;
        tmp_args_element_name_3 = const_str_empty;
        CHECK_OBJECT(par_ui);
        tmp_source_name_2 = par_ui;
        tmp_called_instance_2 = LOOKUP_ATTRIBUTE(tmp_source_name_2, const_str_plain_pass_entry);
        if (tmp_called_instance_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_1);

            exception_lineno = 451;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }
        frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 451;
        tmp_args_element_name_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_2, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_2);
        if (tmp_args_element_name_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_1);

            exception_lineno = 451;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }
        frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 451;
        {
            PyObject *call_args[] = {tmp_args_element_name_2, tmp_args_element_name_3, tmp_args_element_name_4};
            tmp_assign_source_1 = CALL_FUNCTION_WITH_ARGS3(tmp_called_name_1, call_args);
        }

        Py_DECREF(tmp_called_name_1);
        Py_DECREF(tmp_args_element_name_4);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 451;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_pw_strip == NULL);
        var_pw_strip = tmp_assign_source_1;
    }
    {
        nuitka_bool tmp_condition_result_1;
        int tmp_and_left_truth_1;
        nuitka_bool tmp_and_left_value_1;
        nuitka_bool tmp_and_right_value_1;
        int tmp_and_left_truth_2;
        nuitka_bool tmp_and_left_value_2;
        nuitka_bool tmp_and_right_value_2;
        int tmp_or_left_truth_1;
        nuitka_bool tmp_or_left_value_1;
        nuitka_bool tmp_or_right_value_1;
        PyObject *tmp_compexpr_left_1;
        PyObject *tmp_compexpr_right_1;
        PyObject *tmp_left_name_1;
        PyObject *tmp_source_name_3;
        PyObject *tmp_right_name_1;
        int tmp_and_left_truth_3;
        nuitka_bool tmp_and_left_value_3;
        nuitka_bool tmp_and_right_value_3;
        PyObject *tmp_compexpr_left_2;
        PyObject *tmp_compexpr_right_2;
        PyObject *tmp_source_name_4;
        PyObject *tmp_compexpr_left_3;
        PyObject *tmp_compexpr_right_3;
        PyObject *tmp_source_name_5;
        PyObject *tmp_called_instance_3;
        PyObject *tmp_source_name_6;
        PyObject *tmp_call_result_2;
        int tmp_truth_name_1;
        int tmp_and_left_truth_4;
        nuitka_bool tmp_and_left_value_4;
        nuitka_bool tmp_and_right_value_4;
        PyObject *tmp_compexpr_left_4;
        PyObject *tmp_compexpr_right_4;
        PyObject *tmp_called_instance_4;
        PyObject *tmp_source_name_7;
        PyObject *tmp_operand_name_1;
        PyObject *tmp_called_instance_5;
        PyObject *tmp_source_name_8;
        CHECK_OBJECT(par_ui);
        tmp_source_name_3 = par_ui;
        tmp_left_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_3, const_str_plain_VERSION);
        if (tmp_left_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 452;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_right_name_1 = const_int_pos_3;
        tmp_compexpr_left_1 = BINARY_OPERATION_MOD_OBJECT_INT(tmp_left_name_1, tmp_right_name_1);
        Py_DECREF(tmp_left_name_1);
        if (tmp_compexpr_left_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 452;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_1 = const_int_0;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_1, tmp_compexpr_right_1);
        Py_DECREF(tmp_compexpr_left_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 452;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_left_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_or_left_truth_1 = tmp_or_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_or_left_truth_1 == 1) {
            goto or_left_1;
        } else {
            goto or_right_1;
        }
        or_right_1:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_4 = par_ui;
        tmp_compexpr_left_2 = LOOKUP_ATTRIBUTE(tmp_source_name_4, const_str_plain_VERSION);
        if (tmp_compexpr_left_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 452;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_2 = const_int_pos_1;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_2, tmp_compexpr_right_2);
        Py_DECREF(tmp_compexpr_left_2);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 452;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_3 = tmp_and_left_value_3 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_3 == 1) {
            goto and_right_3;
        } else {
            goto and_left_3;
        }
        and_right_3:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_5 = par_ui;
        tmp_compexpr_left_3 = LOOKUP_ATTRIBUTE(tmp_source_name_5, const_str_plain_PBA_VERSION);
        if (tmp_compexpr_left_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 452;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_3 = const_int_pos_1;
        tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_INT(tmp_compexpr_left_3, tmp_compexpr_right_3);
        Py_DECREF(tmp_compexpr_left_3);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 452;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_or_right_value_1 = tmp_and_right_value_3;
        goto and_end_3;
        and_left_3:;
        tmp_or_right_value_1 = tmp_and_left_value_3;
        and_end_3:;
        tmp_and_left_value_2 = tmp_or_right_value_1;
        goto or_end_1;
        or_left_1:;
        tmp_and_left_value_2 = tmp_or_left_value_1;
        or_end_1:;
        tmp_and_left_truth_2 = tmp_and_left_value_2 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_2 == 1) {
            goto and_right_2;
        } else {
            goto and_left_2;
        }
        and_right_2:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_6 = par_ui;
        tmp_called_instance_3 = LOOKUP_ATTRIBUTE(tmp_source_name_6, const_str_plain_pass_sav);
        if (tmp_called_instance_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 452;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }
        frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 452;
        tmp_call_result_2 = CALL_METHOD_NO_ARGS(tmp_called_instance_3, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_3);
        if (tmp_call_result_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 452;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_1 = CHECK_IF_TRUE(tmp_call_result_2);
        if (tmp_truth_name_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_2);

            exception_lineno = 452;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_2 = tmp_truth_name_1 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_2);
        tmp_and_left_value_1 = tmp_and_right_value_2;
        goto and_end_2;
        and_left_2:;
        tmp_and_left_value_1 = tmp_and_left_value_2;
        and_end_2:;
        tmp_and_left_truth_1 = tmp_and_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_1 == 1) {
            goto and_right_1;
        } else {
            goto and_left_1;
        }
        and_right_1:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_7 = par_ui;
        tmp_called_instance_4 = LOOKUP_ATTRIBUTE(tmp_source_name_7, const_str_plain_pass_entry);
        if (tmp_called_instance_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 452;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }
        frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 452;
        tmp_compexpr_left_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_4, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_4);
        if (tmp_compexpr_left_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 452;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_4 = const_str_empty;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_4, tmp_compexpr_right_4);
        Py_DECREF(tmp_compexpr_left_4);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 452;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_4 = tmp_and_left_value_4 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_4 == 1) {
            goto and_right_4;
        } else {
            goto and_left_4;
        }
        and_right_4:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_8 = par_ui;
        tmp_called_instance_5 = LOOKUP_ATTRIBUTE(tmp_source_name_8, const_str_plain_check_pass_rd);
        if (tmp_called_instance_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 452;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }
        frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 452;
        tmp_operand_name_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_5, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_5);
        if (tmp_operand_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 452;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_1);
        Py_DECREF(tmp_operand_name_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 452;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_4 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_right_value_1 = tmp_and_right_value_4;
        goto and_end_4;
        and_left_4:;
        tmp_and_right_value_1 = tmp_and_left_value_4;
        and_end_4:;
        tmp_condition_result_1 = tmp_and_right_value_1;
        goto and_end_1;
        and_left_1:;
        tmp_condition_result_1 = tmp_and_left_value_1;
        and_end_1:;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        {
            PyObject *tmp_called_instance_6;
            PyObject *tmp_call_result_3;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_6 = par_ui;
            frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 453;
            tmp_call_result_3 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_6, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_8482c425481a7392528c91276c4d7ae3_tuple, 0));

            if (tmp_call_result_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 453;
                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_3);
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        goto branch_end_1;
        branch_no_1:;
        {
            nuitka_bool tmp_condition_result_2;
            int tmp_and_left_truth_5;
            nuitka_bool tmp_and_left_value_5;
            nuitka_bool tmp_and_right_value_5;
            int tmp_and_left_truth_6;
            nuitka_bool tmp_and_left_value_6;
            nuitka_bool tmp_and_right_value_6;
            int tmp_or_left_truth_2;
            nuitka_bool tmp_or_left_value_2;
            nuitka_bool tmp_or_right_value_2;
            PyObject *tmp_compexpr_left_5;
            PyObject *tmp_compexpr_right_5;
            PyObject *tmp_left_name_2;
            PyObject *tmp_source_name_9;
            PyObject *tmp_right_name_2;
            int tmp_and_left_truth_7;
            nuitka_bool tmp_and_left_value_7;
            nuitka_bool tmp_and_right_value_7;
            PyObject *tmp_compexpr_left_6;
            PyObject *tmp_compexpr_right_6;
            PyObject *tmp_source_name_10;
            PyObject *tmp_compexpr_left_7;
            PyObject *tmp_compexpr_right_7;
            PyObject *tmp_source_name_11;
            PyObject *tmp_called_instance_7;
            PyObject *tmp_source_name_12;
            PyObject *tmp_call_result_4;
            int tmp_truth_name_2;
            int tmp_and_left_truth_8;
            nuitka_bool tmp_and_left_value_8;
            nuitka_bool tmp_and_right_value_8;
            PyObject *tmp_compexpr_left_8;
            PyObject *tmp_compexpr_right_8;
            PyObject *tmp_operand_name_2;
            PyObject *tmp_called_instance_8;
            PyObject *tmp_source_name_13;
            CHECK_OBJECT(par_ui);
            tmp_source_name_9 = par_ui;
            tmp_left_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_9, const_str_plain_VERSION);
            if (tmp_left_name_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 455;
                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_right_name_2 = const_int_pos_3;
            tmp_compexpr_left_5 = BINARY_OPERATION_MOD_OBJECT_INT(tmp_left_name_2, tmp_right_name_2);
            Py_DECREF(tmp_left_name_2);
            if (tmp_compexpr_left_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 455;
                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_5 = const_int_0;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_5, tmp_compexpr_right_5);
            Py_DECREF(tmp_compexpr_left_5);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 455;
                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_or_left_value_2 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_or_left_truth_2 = tmp_or_left_value_2 == NUITKA_BOOL_TRUE ? 1 : 0;
            if (tmp_or_left_truth_2 == 1) {
                goto or_left_2;
            } else {
                goto or_right_2;
            }
            or_right_2:;
            CHECK_OBJECT(par_ui);
            tmp_source_name_10 = par_ui;
            tmp_compexpr_left_6 = LOOKUP_ATTRIBUTE(tmp_source_name_10, const_str_plain_VERSION);
            if (tmp_compexpr_left_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 455;
                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_6 = const_int_pos_1;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_6, tmp_compexpr_right_6);
            Py_DECREF(tmp_compexpr_left_6);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 455;
                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_and_left_value_7 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_and_left_truth_7 = tmp_and_left_value_7 == NUITKA_BOOL_TRUE ? 1 : 0;
            if (tmp_and_left_truth_7 == 1) {
                goto and_right_7;
            } else {
                goto and_left_7;
            }
            and_right_7:;
            CHECK_OBJECT(par_ui);
            tmp_source_name_11 = par_ui;
            tmp_compexpr_left_7 = LOOKUP_ATTRIBUTE(tmp_source_name_11, const_str_plain_PBA_VERSION);
            if (tmp_compexpr_left_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 455;
                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_7 = const_int_pos_1;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_INT(tmp_compexpr_left_7, tmp_compexpr_right_7);
            Py_DECREF(tmp_compexpr_left_7);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 455;
                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_and_right_value_7 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_or_right_value_2 = tmp_and_right_value_7;
            goto and_end_7;
            and_left_7:;
            tmp_or_right_value_2 = tmp_and_left_value_7;
            and_end_7:;
            tmp_and_left_value_6 = tmp_or_right_value_2;
            goto or_end_2;
            or_left_2:;
            tmp_and_left_value_6 = tmp_or_left_value_2;
            or_end_2:;
            tmp_and_left_truth_6 = tmp_and_left_value_6 == NUITKA_BOOL_TRUE ? 1 : 0;
            if (tmp_and_left_truth_6 == 1) {
                goto and_right_6;
            } else {
                goto and_left_6;
            }
            and_right_6:;
            CHECK_OBJECT(par_ui);
            tmp_source_name_12 = par_ui;
            tmp_called_instance_7 = LOOKUP_ATTRIBUTE(tmp_source_name_12, const_str_plain_pass_sav);
            if (tmp_called_instance_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 455;
                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                goto frame_exception_exit_1;
            }
            frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 455;
            tmp_call_result_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_7, const_str_plain_get_active);
            Py_DECREF(tmp_called_instance_7);
            if (tmp_call_result_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 455;
                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_truth_name_2 = CHECK_IF_TRUE(tmp_call_result_4);
            if (tmp_truth_name_2 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_call_result_4);

                exception_lineno = 455;
                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_and_right_value_6 = tmp_truth_name_2 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            Py_DECREF(tmp_call_result_4);
            tmp_and_left_value_5 = tmp_and_right_value_6;
            goto and_end_6;
            and_left_6:;
            tmp_and_left_value_5 = tmp_and_left_value_6;
            and_end_6:;
            tmp_and_left_truth_5 = tmp_and_left_value_5 == NUITKA_BOOL_TRUE ? 1 : 0;
            if (tmp_and_left_truth_5 == 1) {
                goto and_right_5;
            } else {
                goto and_left_5;
            }
            and_right_5:;
            CHECK_OBJECT(var_pw_strip);
            tmp_compexpr_left_8 = var_pw_strip;
            tmp_compexpr_right_8 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_8, tmp_compexpr_right_8);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 455;
                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_and_left_value_8 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_and_left_truth_8 = tmp_and_left_value_8 == NUITKA_BOOL_TRUE ? 1 : 0;
            if (tmp_and_left_truth_8 == 1) {
                goto and_right_8;
            } else {
                goto and_left_8;
            }
            and_right_8:;
            CHECK_OBJECT(par_ui);
            tmp_source_name_13 = par_ui;
            tmp_called_instance_8 = LOOKUP_ATTRIBUTE(tmp_source_name_13, const_str_plain_check_pass_rd);
            if (tmp_called_instance_8 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 455;
                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                goto frame_exception_exit_1;
            }
            frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 455;
            tmp_operand_name_2 = CALL_METHOD_NO_ARGS(tmp_called_instance_8, const_str_plain_get_active);
            Py_DECREF(tmp_called_instance_8);
            if (tmp_operand_name_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 455;
                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_2);
            Py_DECREF(tmp_operand_name_2);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 455;
                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_and_right_value_8 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_and_right_value_5 = tmp_and_right_value_8;
            goto and_end_8;
            and_left_8:;
            tmp_and_right_value_5 = tmp_and_left_value_8;
            and_end_8:;
            tmp_condition_result_2 = tmp_and_right_value_5;
            goto and_end_5;
            and_left_5:;
            tmp_condition_result_2 = tmp_and_left_value_5;
            and_end_5:;
            if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
                goto branch_yes_2;
            } else {
                goto branch_no_2;
            }
            branch_yes_2:;
            {
                PyObject *tmp_called_instance_9;
                PyObject *tmp_call_result_5;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_9 = par_ui;
                frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 456;
                tmp_call_result_5 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_9, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_84ba3144e8a4c8824551fdd8d0fe5bde_tuple, 0));

                if (tmp_call_result_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 456;
                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_5);
            }
            tmp_return_value = Py_None;
            Py_INCREF(tmp_return_value);
            goto frame_return_exit_1;
            branch_no_2:;
        }
        branch_end_1:;
    }
    {
        PyObject *tmp_assign_source_2;
        PyObject *tmp_called_instance_10;
        PyObject *tmp_mvar_value_3;
        PyObject *tmp_args_element_name_5;
        tmp_mvar_value_3 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_dialogs);

        if (unlikely(tmp_mvar_value_3 == NULL)) {
            tmp_mvar_value_3 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_dialogs);
        }

        if (tmp_mvar_value_3 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 418 ], 36, 0);
            exception_tb = NULL;

            exception_lineno = 475;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_10 = tmp_mvar_value_3;
        CHECK_OBJECT(par_ui);
        tmp_args_element_name_5 = par_ui;
        frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 475;
        {
            PyObject *call_args[] = {tmp_args_element_name_5};
            tmp_assign_source_2 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_10, const_str_plain_USBDialog, call_args);
        }

        if (tmp_assign_source_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 475;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_usb_dialog == NULL);
        var_usb_dialog = tmp_assign_source_2;
    }
    {
        PyObject *tmp_assign_source_3;
        PyObject *tmp_called_instance_11;
        CHECK_OBJECT(var_usb_dialog);
        tmp_called_instance_11 = var_usb_dialog;
        frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 476;
        tmp_assign_source_3 = CALL_METHOD_NO_ARGS(tmp_called_instance_11, const_str_plain_run);
        if (tmp_assign_source_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 476;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_res == NULL);
        var_res = tmp_assign_source_3;
    }
    {
        nuitka_bool tmp_condition_result_3;
        PyObject *tmp_compexpr_left_9;
        PyObject *tmp_compexpr_right_9;
        PyObject *tmp_source_name_14;
        PyObject *tmp_mvar_value_4;
        CHECK_OBJECT(var_res);
        tmp_compexpr_left_9 = var_res;
        tmp_mvar_value_4 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

        if (unlikely(tmp_mvar_value_4 == NULL)) {
            tmp_mvar_value_4 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
        }

        if (tmp_mvar_value_4 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
            exception_tb = NULL;

            exception_lineno = 477;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_14 = tmp_mvar_value_4;
        tmp_compexpr_right_9 = LOOKUP_ATTRIBUTE(tmp_source_name_14, const_str_plain_RESPONSE_OK);
        if (tmp_compexpr_right_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 477;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_9, tmp_compexpr_right_9);
        Py_DECREF(tmp_compexpr_right_9);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 477;
            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_3 == NUITKA_BOOL_TRUE) {
            goto branch_yes_3;
        } else {
            goto branch_no_3;
        }
        branch_yes_3:;
        {
            nuitka_bool tmp_condition_result_4;
            PyObject *tmp_compexpr_left_10;
            PyObject *tmp_compexpr_right_10;
            PyObject *tmp_called_instance_12;
            PyObject *tmp_source_name_15;
            CHECK_OBJECT(var_usb_dialog);
            tmp_source_name_15 = var_usb_dialog;
            tmp_called_instance_12 = LOOKUP_ATTRIBUTE(tmp_source_name_15, const_str_plain_usb_menu);
            if (tmp_called_instance_12 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 478;
                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                goto frame_exception_exit_1;
            }
            frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 478;
            tmp_compexpr_left_10 = CALL_METHOD_NO_ARGS(tmp_called_instance_12, const_str_plain_get_active);
            Py_DECREF(tmp_called_instance_12);
            if (tmp_compexpr_left_10 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 478;
                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_10 = const_int_0;
            tmp_res = RICH_COMPARE_BOOL_GTE_OBJECT_INT(tmp_compexpr_left_10, tmp_compexpr_right_10);
            Py_DECREF(tmp_compexpr_left_10);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 478;
                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_4 == NUITKA_BOOL_TRUE) {
                goto branch_yes_4;
            } else {
                goto branch_no_4;
            }
            branch_yes_4:;
            {
                PyObject *tmp_assign_source_4;
                PyObject *tmp_called_name_2;
                PyObject *tmp_source_name_16;
                PyObject *tmp_mvar_value_5;
                PyObject *tmp_kw_name_1;
                PyObject *tmp_dict_key_1;
                PyObject *tmp_dict_value_1;
                PyObject *tmp_source_name_17;
                PyObject *tmp_mvar_value_6;
                PyObject *tmp_dict_key_2;
                PyObject *tmp_dict_value_2;
                PyObject *tmp_source_name_18;
                PyObject *tmp_mvar_value_7;
                PyObject *tmp_dict_key_3;
                PyObject *tmp_dict_value_3;
                tmp_mvar_value_5 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

                if (unlikely(tmp_mvar_value_5 == NULL)) {
                    tmp_mvar_value_5 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
                }

                if (tmp_mvar_value_5 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                    exception_tb = NULL;

                    exception_lineno = 479;
                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_source_name_16 = tmp_mvar_value_5;
                tmp_called_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_16, const_str_plain_MessageDialog);
                if (tmp_called_name_2 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 479;
                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_mvar_value_6 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

                if (unlikely(tmp_mvar_value_6 == NULL)) {
                    tmp_mvar_value_6 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
                }

                if (tmp_mvar_value_6 == NULL) {
                    Py_DECREF(tmp_called_name_2);
                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                    exception_tb = NULL;

                    exception_lineno = 479;
                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_source_name_17 = tmp_mvar_value_6;
                tmp_dict_value_1 = LOOKUP_ATTRIBUTE(tmp_source_name_17, const_str_plain_MESSAGE_WARNING);
                if (tmp_dict_value_1 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_2);

                    exception_lineno = 479;
                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_dict_key_1 = const_str_plain_type;
                tmp_kw_name_1 = _PyDict_NewPresized( 3 );
                tmp_res = PyDict_SetItem(tmp_kw_name_1, tmp_dict_key_1, tmp_dict_value_1);
                Py_DECREF(tmp_dict_value_1);
                assert(!(tmp_res != 0));
                tmp_mvar_value_7 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

                if (unlikely(tmp_mvar_value_7 == NULL)) {
                    tmp_mvar_value_7 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
                }

                if (tmp_mvar_value_7 == NULL) {
                    Py_DECREF(tmp_called_name_2);
                    Py_DECREF(tmp_kw_name_1);
                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                    exception_tb = NULL;

                    exception_lineno = 479;
                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_source_name_18 = tmp_mvar_value_7;
                tmp_dict_value_2 = LOOKUP_ATTRIBUTE(tmp_source_name_18, const_str_plain_BUTTONS_YES_NO);
                if (tmp_dict_value_2 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_2);
                    Py_DECREF(tmp_kw_name_1);

                    exception_lineno = 479;
                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_dict_key_2 = const_str_plain_buttons;
                tmp_res = PyDict_SetItem(tmp_kw_name_1, tmp_dict_key_2, tmp_dict_value_2);
                Py_DECREF(tmp_dict_value_2);
                assert(!(tmp_res != 0));
                CHECK_OBJECT(par_ui);
                tmp_dict_value_3 = par_ui;
                tmp_dict_key_3 = const_str_plain_parent;
                tmp_res = PyDict_SetItem(tmp_kw_name_1, tmp_dict_key_3, tmp_dict_value_3);
                assert(!(tmp_res != 0));
                frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 479;
                tmp_assign_source_4 = CALL_FUNCTION_WITH_KEYARGS(tmp_called_name_2, tmp_kw_name_1);
                Py_DECREF(tmp_called_name_2);
                Py_DECREF(tmp_kw_name_1);
                if (tmp_assign_source_4 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 479;
                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                    goto frame_exception_exit_1;
                }
                assert(var_message == NULL);
                var_message = tmp_assign_source_4;
            }
            {
                PyObject *tmp_called_instance_13;
                PyObject *tmp_call_result_6;
                CHECK_OBJECT(var_message);
                tmp_called_instance_13 = var_message;
                frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 480;
                tmp_call_result_6 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_13, const_str_plain_set_markup, &PyTuple_GET_ITEM(const_tuple_str_digest_e044e1d24e8dd884c25925fd63f6b6d8_tuple, 0));

                if (tmp_call_result_6 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 480;
                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_6);
            }
            {
                PyObject *tmp_assign_source_5;
                PyObject *tmp_called_instance_14;
                CHECK_OBJECT(var_message);
                tmp_called_instance_14 = var_message;
                frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 482;
                tmp_assign_source_5 = CALL_METHOD_NO_ARGS(tmp_called_instance_14, const_str_plain_run);
                if (tmp_assign_source_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 482;
                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                    goto frame_exception_exit_1;
                }
                {
                    PyObject *old = var_res;
                    assert(old != NULL);
                    var_res = tmp_assign_source_5;
                    Py_DECREF(old);
                }

            }
            {
                nuitka_bool tmp_condition_result_5;
                PyObject *tmp_compexpr_left_11;
                PyObject *tmp_compexpr_right_11;
                PyObject *tmp_source_name_19;
                PyObject *tmp_mvar_value_8;
                CHECK_OBJECT(var_res);
                tmp_compexpr_left_11 = var_res;
                tmp_mvar_value_8 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

                if (unlikely(tmp_mvar_value_8 == NULL)) {
                    tmp_mvar_value_8 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
                }

                if (tmp_mvar_value_8 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                    exception_tb = NULL;

                    exception_lineno = 483;
                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_source_name_19 = tmp_mvar_value_8;
                tmp_compexpr_right_11 = LOOKUP_ATTRIBUTE(tmp_source_name_19, const_str_plain_RESPONSE_YES);
                if (tmp_compexpr_right_11 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 483;
                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_11, tmp_compexpr_right_11);
                Py_DECREF(tmp_compexpr_right_11);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 483;
                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_condition_result_5 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_5 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_5;
                } else {
                    goto branch_no_5;
                }
                branch_yes_5:;
                {
                    PyObject *tmp_called_instance_15;
                    PyObject *tmp_call_result_7;
                    CHECK_OBJECT(var_message);
                    tmp_called_instance_15 = var_message;
                    frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 484;
                    tmp_call_result_7 = CALL_METHOD_NO_ARGS(tmp_called_instance_15, const_str_plain_destroy);
                    if (tmp_call_result_7 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 484;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_7);
                }
                {
                    PyObject *tmp_assign_source_6;
                    tmp_assign_source_6 = PyList_New(0);
                    assert(var_preserved_files == NULL);
                    var_preserved_files = tmp_assign_source_6;
                }
                {
                    PyObject *tmp_assign_source_7;
                    PyObject *tmp_called_instance_16;
                    PyObject *tmp_source_name_20;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_20 = par_ui;
                    tmp_called_instance_16 = LOOKUP_ATTRIBUTE(tmp_source_name_20, const_str_plain_dev_select);
                    if (tmp_called_instance_16 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 488;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 488;
                    tmp_assign_source_7 = CALL_METHOD_NO_ARGS(tmp_called_instance_16, const_str_plain_get_active);
                    Py_DECREF(tmp_called_instance_16);
                    if (tmp_assign_source_7 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 488;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    assert(var_idx1 == NULL);
                    var_idx1 = tmp_assign_source_7;
                }
                {
                    PyObject *tmp_assign_source_8;
                    PyObject *tmp_subscribed_name_1;
                    PyObject *tmp_source_name_21;
                    PyObject *tmp_subscript_name_1;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_21 = par_ui;
                    tmp_subscribed_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_21, const_str_plain_devs_list);
                    if (tmp_subscribed_name_1 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 489;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(var_idx1);
                    tmp_subscript_name_1 = var_idx1;
                    tmp_assign_source_8 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_1, tmp_subscript_name_1);
                    Py_DECREF(tmp_subscribed_name_1);
                    if (tmp_assign_source_8 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 489;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    assert(var_dev1 == NULL);
                    var_dev1 = tmp_assign_source_8;
                }
                {
                    PyObject *tmp_assign_source_9;
                    PyObject *tmp_called_instance_17;
                    PyObject *tmp_source_name_22;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_22 = par_ui;
                    tmp_called_instance_17 = LOOKUP_ATTRIBUTE(tmp_source_name_22, const_str_plain_dev_select);
                    if (tmp_called_instance_17 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 490;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 490;
                    tmp_assign_source_9 = CALL_METHOD_NO_ARGS(tmp_called_instance_17, const_str_plain_get_active);
                    Py_DECREF(tmp_called_instance_17);
                    if (tmp_assign_source_9 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 490;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    assert(var_index == NULL);
                    var_index = tmp_assign_source_9;
                }
                {
                    PyObject *tmp_assign_source_10;
                    PyObject *tmp_called_instance_18;
                    PyObject *tmp_source_name_23;
                    CHECK_OBJECT(var_usb_dialog);
                    tmp_source_name_23 = var_usb_dialog;
                    tmp_called_instance_18 = LOOKUP_ATTRIBUTE(tmp_source_name_23, const_str_plain_usb_menu);
                    if (tmp_called_instance_18 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 491;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 491;
                    tmp_assign_source_10 = CALL_METHOD_NO_ARGS(tmp_called_instance_18, const_str_plain_get_active);
                    Py_DECREF(tmp_called_instance_18);
                    if (tmp_assign_source_10 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 491;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    assert(var_index2 == NULL);
                    var_index2 = tmp_assign_source_10;
                }
                {
                    PyObject *tmp_called_instance_19;
                    PyObject *tmp_call_result_8;
                    CHECK_OBJECT(var_usb_dialog);
                    tmp_called_instance_19 = var_usb_dialog;
                    frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 492;
                    tmp_call_result_8 = CALL_METHOD_NO_ARGS(tmp_called_instance_19, const_str_plain_destroy);
                    if (tmp_call_result_8 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 492;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_8);
                }
                {
                    nuitka_bool tmp_condition_result_6;
                    PyObject *tmp_compexpr_left_12;
                    PyObject *tmp_compexpr_right_12;
                    PyObject *tmp_source_name_24;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_24 = par_ui;
                    tmp_compexpr_left_12 = LOOKUP_ATTRIBUTE(tmp_source_name_24, const_str_plain_DEV_OS);
                    if (tmp_compexpr_left_12 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 497;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_compexpr_right_12 = const_str_plain_Windows;
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_12, tmp_compexpr_right_12);
                    Py_DECREF(tmp_compexpr_left_12);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 497;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_condition_result_6 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_6 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_6;
                    } else {
                        goto branch_no_6;
                    }
                    branch_yes_6:;
                    {
                        PyObject *tmp_assign_source_11;
                        PyObject *tmp_called_instance_20;
                        PyObject *tmp_called_name_3;
                        PyObject *tmp_source_name_25;
                        PyObject *tmp_mvar_value_9;
                        PyObject *tmp_args_element_name_6;
                        PyObject *tmp_left_name_3;
                        PyObject *tmp_source_name_26;
                        PyObject *tmp_right_name_3;
                        tmp_mvar_value_9 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                        if (unlikely(tmp_mvar_value_9 == NULL)) {
                            tmp_mvar_value_9 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                        }

                        if (tmp_mvar_value_9 == NULL) {

                            exception_type = PyExc_NameError;
                            Py_INCREF(exception_type);
                            exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                            exception_tb = NULL;

                            exception_lineno = 499;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_source_name_25 = tmp_mvar_value_9;
                        tmp_called_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_25, const_str_plain_popen);
                        if (tmp_called_name_3 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 499;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_26 = par_ui;
                        tmp_left_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_26, const_str_plain_prefix);
                        if (tmp_left_name_3 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_3);

                            exception_lineno = 499;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_3 = const_str_digest_8c96842b8b2bfd9741967a12c4a512ae;
                        tmp_args_element_name_6 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_3, tmp_right_name_3);
                        Py_DECREF(tmp_left_name_3);
                        if (tmp_args_element_name_6 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_3);

                            exception_lineno = 499;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 499;
                        tmp_called_instance_20 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_3, tmp_args_element_name_6);
                        Py_DECREF(tmp_called_name_3);
                        Py_DECREF(tmp_args_element_name_6);
                        if (tmp_called_instance_20 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 499;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 499;
                        tmp_assign_source_11 = CALL_METHOD_NO_ARGS(tmp_called_instance_20, const_str_plain_read);
                        Py_DECREF(tmp_called_instance_20);
                        if (tmp_assign_source_11 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 499;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        assert(var_txt == NULL);
                        var_txt = tmp_assign_source_11;
                    }
                    {
                        PyObject *tmp_assign_source_12;
                        PyObject *tmp_called_instance_21;
                        PyObject *tmp_mvar_value_10;
                        PyObject *tmp_args_element_name_7;
                        PyObject *tmp_args_element_name_8;
                        tmp_mvar_value_10 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

                        if (unlikely(tmp_mvar_value_10 == NULL)) {
                            tmp_mvar_value_10 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
                        }

                        if (tmp_mvar_value_10 == NULL) {

                            exception_type = PyExc_NameError;
                            Py_INCREF(exception_type);
                            exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
                            exception_tb = NULL;

                            exception_lineno = 503;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_called_instance_21 = tmp_mvar_value_10;
                        tmp_args_element_name_7 = const_str_digest_4b8d3f96b43e55a1f0ce0c23563c4be0;
                        CHECK_OBJECT(var_txt);
                        tmp_args_element_name_8 = var_txt;
                        frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 503;
                        {
                            PyObject *call_args[] = {tmp_args_element_name_7, tmp_args_element_name_8};
                            tmp_assign_source_12 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_21, const_str_plain_findall, call_args);
                        }

                        if (tmp_assign_source_12 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 503;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        assert(var_usb_check == NULL);
                        var_usb_check = tmp_assign_source_12;
                    }
                    {
                        nuitka_bool tmp_condition_result_7;
                        PyObject *tmp_compexpr_left_13;
                        PyObject *tmp_compexpr_right_13;
                        PyObject *tmp_len_arg_1;
                        CHECK_OBJECT(var_usb_check);
                        tmp_len_arg_1 = var_usb_check;
                        tmp_compexpr_left_13 = BUILTIN_LEN(tmp_len_arg_1);
                        if (tmp_compexpr_left_13 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 504;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_compexpr_right_13 = const_int_0;
                        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_13, tmp_compexpr_right_13);
                        Py_DECREF(tmp_compexpr_left_13);
                        assert(!(tmp_res == -1));
                        tmp_condition_result_7 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_7 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_7;
                        } else {
                            goto branch_no_7;
                        }
                        branch_yes_7:;
                        {
                            PyObject *tmp_called_instance_22;
                            PyObject *tmp_call_result_9;
                            CHECK_OBJECT(par_ui);
                            tmp_called_instance_22 = par_ui;
                            frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 505;
                            tmp_call_result_9 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_22, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_65f1ca3cc21751516d4508974112f1bb_tuple, 0));

                            if (tmp_call_result_9 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 505;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto frame_exception_exit_1;
                            }
                            Py_DECREF(tmp_call_result_9);
                        }
                        {
                            PyObject *tmp_called_instance_23;
                            PyObject *tmp_call_result_10;
                            CHECK_OBJECT(par_ui);
                            tmp_called_instance_23 = par_ui;
                            frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 506;
                            tmp_call_result_10 = CALL_METHOD_NO_ARGS(tmp_called_instance_23, const_str_plain_setupUSB_prompt);
                            if (tmp_call_result_10 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 506;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto frame_exception_exit_1;
                            }
                            Py_DECREF(tmp_call_result_10);
                        }
                        tmp_return_value = Py_None;
                        Py_INCREF(tmp_return_value);
                        goto frame_return_exit_1;
                        branch_no_7:;
                    }
                    {
                        PyObject *tmp_assign_source_13;
                        tmp_assign_source_13 = Py_False;
                        assert(var_found == NULL);
                        Py_INCREF(tmp_assign_source_13);
                        var_found = tmp_assign_source_13;
                    }
                    {
                        PyObject *tmp_assign_source_14;
                        PyObject *tmp_iter_arg_1;
                        CHECK_OBJECT(var_usb_check);
                        tmp_iter_arg_1 = var_usb_check;
                        tmp_assign_source_14 = MAKE_ITERATOR(tmp_iter_arg_1);
                        if (tmp_assign_source_14 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 509;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        assert(tmp_for_loop_1__for_iterator == NULL);
                        tmp_for_loop_1__for_iterator = tmp_assign_source_14;
                    }
                    // Tried code:
                    loop_start_1:;
                    {
                        PyObject *tmp_next_source_1;
                        PyObject *tmp_assign_source_15;
                        CHECK_OBJECT(tmp_for_loop_1__for_iterator);
                        tmp_next_source_1 = tmp_for_loop_1__for_iterator;
                        tmp_assign_source_15 = ITERATOR_NEXT(tmp_next_source_1);
                        if (tmp_assign_source_15 == NULL) {
                            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                                goto loop_end_1;
                            } else {

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                exception_lineno = 509;
                                goto try_except_handler_2;
                            }
                        }

                        {
                            PyObject *old = tmp_for_loop_1__iter_value;
                            tmp_for_loop_1__iter_value = tmp_assign_source_15;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assign_source_16;
                        CHECK_OBJECT(tmp_for_loop_1__iter_value);
                        tmp_assign_source_16 = tmp_for_loop_1__iter_value;
                        {
                            PyObject *old = var_entry;
                            var_entry = tmp_assign_source_16;
                            Py_INCREF(var_entry);
                            Py_XDECREF(old);
                        }

                    }
                    {
                        nuitka_bool tmp_condition_result_8;
                        int tmp_and_left_truth_9;
                        nuitka_bool tmp_and_left_value_9;
                        nuitka_bool tmp_and_right_value_9;
                        PyObject *tmp_compexpr_left_14;
                        PyObject *tmp_compexpr_right_14;
                        PyObject *tmp_subscribed_name_2;
                        PyObject *tmp_subscribed_name_3;
                        PyObject *tmp_source_name_27;
                        PyObject *tmp_subscript_name_2;
                        PyObject *tmp_subscript_name_3;
                        PyObject *tmp_subscribed_name_4;
                        PyObject *tmp_subscript_name_4;
                        PyObject *tmp_compexpr_left_15;
                        PyObject *tmp_compexpr_right_15;
                        PyObject *tmp_subscribed_name_5;
                        PyObject *tmp_subscribed_name_6;
                        PyObject *tmp_source_name_28;
                        PyObject *tmp_subscript_name_5;
                        PyObject *tmp_subscript_name_6;
                        PyObject *tmp_subscribed_name_7;
                        PyObject *tmp_subscript_name_7;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_27 = par_ui;
                        tmp_subscribed_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_27, const_str_plain_usb_list);
                        if (tmp_subscribed_name_3 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 510;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto try_except_handler_2;
                        }
                        CHECK_OBJECT(var_index2);
                        tmp_subscript_name_2 = var_index2;
                        tmp_subscribed_name_2 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_3, tmp_subscript_name_2);
                        Py_DECREF(tmp_subscribed_name_3);
                        if (tmp_subscribed_name_2 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 510;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto try_except_handler_2;
                        }
                        tmp_subscript_name_3 = const_int_0;
                        tmp_compexpr_left_14 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_2, tmp_subscript_name_3, 0);
                        Py_DECREF(tmp_subscribed_name_2);
                        if (tmp_compexpr_left_14 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 510;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto try_except_handler_2;
                        }
                        CHECK_OBJECT(var_entry);
                        tmp_subscribed_name_4 = var_entry;
                        tmp_subscript_name_4 = const_int_0;
                        tmp_compexpr_right_14 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_4, tmp_subscript_name_4, 0);
                        if (tmp_compexpr_right_14 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_compexpr_left_14);

                            exception_lineno = 510;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto try_except_handler_2;
                        }
                        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_14, tmp_compexpr_right_14);
                        Py_DECREF(tmp_compexpr_left_14);
                        Py_DECREF(tmp_compexpr_right_14);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 510;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto try_except_handler_2;
                        }
                        tmp_and_left_value_9 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        tmp_and_left_truth_9 = tmp_and_left_value_9 == NUITKA_BOOL_TRUE ? 1 : 0;
                        if (tmp_and_left_truth_9 == 1) {
                            goto and_right_9;
                        } else {
                            goto and_left_9;
                        }
                        and_right_9:;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_28 = par_ui;
                        tmp_subscribed_name_6 = LOOKUP_ATTRIBUTE(tmp_source_name_28, const_str_plain_usb_list);
                        if (tmp_subscribed_name_6 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 510;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto try_except_handler_2;
                        }
                        CHECK_OBJECT(var_index2);
                        tmp_subscript_name_5 = var_index2;
                        tmp_subscribed_name_5 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_6, tmp_subscript_name_5);
                        Py_DECREF(tmp_subscribed_name_6);
                        if (tmp_subscribed_name_5 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 510;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto try_except_handler_2;
                        }
                        tmp_subscript_name_6 = const_int_pos_1;
                        tmp_compexpr_left_15 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_5, tmp_subscript_name_6, 1);
                        Py_DECREF(tmp_subscribed_name_5);
                        if (tmp_compexpr_left_15 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 510;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto try_except_handler_2;
                        }
                        CHECK_OBJECT(var_entry);
                        tmp_subscribed_name_7 = var_entry;
                        tmp_subscript_name_7 = const_int_pos_1;
                        tmp_compexpr_right_15 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_7, tmp_subscript_name_7, 1);
                        if (tmp_compexpr_right_15 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_compexpr_left_15);

                            exception_lineno = 510;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto try_except_handler_2;
                        }
                        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_15, tmp_compexpr_right_15);
                        Py_DECREF(tmp_compexpr_left_15);
                        Py_DECREF(tmp_compexpr_right_15);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 510;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto try_except_handler_2;
                        }
                        tmp_and_right_value_9 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        tmp_condition_result_8 = tmp_and_right_value_9;
                        goto and_end_9;
                        and_left_9:;
                        tmp_condition_result_8 = tmp_and_left_value_9;
                        and_end_9:;
                        if (tmp_condition_result_8 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_8;
                        } else {
                            goto branch_no_8;
                        }
                        branch_yes_8:;
                        {
                            PyObject *tmp_assign_source_17;
                            tmp_assign_source_17 = Py_True;
                            {
                                PyObject *old = var_found;
                                var_found = tmp_assign_source_17;
                                Py_INCREF(var_found);
                                Py_XDECREF(old);
                            }

                        }
                        branch_no_8:;
                    }
                    if (CONSIDER_THREADING() == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 509;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto try_except_handler_2;
                    }
                    goto loop_start_1;
                    loop_end_1:;
                    goto try_end_1;
                    // Exception handler code:
                    try_except_handler_2:;
                    exception_keeper_type_1 = exception_type;
                    exception_keeper_value_1 = exception_value;
                    exception_keeper_tb_1 = exception_tb;
                    exception_keeper_lineno_1 = exception_lineno;
                    exception_type = NULL;
                    exception_value = NULL;
                    exception_tb = NULL;
                    exception_lineno = 0;

                    Py_XDECREF(tmp_for_loop_1__iter_value);
                    tmp_for_loop_1__iter_value = NULL;

                    CHECK_OBJECT((PyObject *)tmp_for_loop_1__for_iterator);
                    Py_DECREF(tmp_for_loop_1__for_iterator);
                    tmp_for_loop_1__for_iterator = NULL;

                    // Re-raise.
                    exception_type = exception_keeper_type_1;
                    exception_value = exception_keeper_value_1;
                    exception_tb = exception_keeper_tb_1;
                    exception_lineno = exception_keeper_lineno_1;

                    goto frame_exception_exit_1;
                    // End of try:
                    try_end_1:;
                    Py_XDECREF(tmp_for_loop_1__iter_value);
                    tmp_for_loop_1__iter_value = NULL;

                    CHECK_OBJECT((PyObject *)tmp_for_loop_1__for_iterator);
                    Py_DECREF(tmp_for_loop_1__for_iterator);
                    tmp_for_loop_1__for_iterator = NULL;

                    {
                        nuitka_bool tmp_condition_result_9;
                        PyObject *tmp_operand_name_3;
                        if (var_found == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "found");
                            exception_tb = NULL;

                            exception_lineno = 512;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_operand_name_3 = var_found;
                        tmp_res = CHECK_IF_TRUE(tmp_operand_name_3);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 512;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_condition_result_9 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_9 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_9;
                        } else {
                            goto branch_no_9;
                        }
                        branch_yes_9:;
                        {
                            PyObject *tmp_called_instance_24;
                            PyObject *tmp_call_result_11;
                            CHECK_OBJECT(par_ui);
                            tmp_called_instance_24 = par_ui;
                            frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 513;
                            tmp_call_result_11 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_24, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_b62eced012cb463810e5ce7621fab465_tuple, 0));

                            if (tmp_call_result_11 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 513;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto frame_exception_exit_1;
                            }
                            Py_DECREF(tmp_call_result_11);
                        }
                        {
                            PyObject *tmp_called_instance_25;
                            PyObject *tmp_call_result_12;
                            CHECK_OBJECT(par_ui);
                            tmp_called_instance_25 = par_ui;
                            frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 514;
                            tmp_call_result_12 = CALL_METHOD_NO_ARGS(tmp_called_instance_25, const_str_plain_setupUSB_prompt);
                            if (tmp_call_result_12 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 514;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto frame_exception_exit_1;
                            }
                            Py_DECREF(tmp_call_result_12);
                        }
                        tmp_return_value = Py_None;
                        Py_INCREF(tmp_return_value);
                        goto frame_return_exit_1;
                        branch_no_9:;
                    }
                    goto branch_end_6;
                    branch_no_6:;
                    {
                        nuitka_bool tmp_condition_result_10;
                        PyObject *tmp_compexpr_left_16;
                        PyObject *tmp_compexpr_right_16;
                        PyObject *tmp_source_name_29;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_29 = par_ui;
                        tmp_compexpr_left_16 = LOOKUP_ATTRIBUTE(tmp_source_name_29, const_str_plain_DEV_OS);
                        if (tmp_compexpr_left_16 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 516;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_compexpr_right_16 = const_str_plain_Linux;
                        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_16, tmp_compexpr_right_16);
                        Py_DECREF(tmp_compexpr_left_16);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 516;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_condition_result_10 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_10 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_10;
                        } else {
                            goto branch_no_10;
                        }
                        branch_yes_10:;
                        {
                            PyObject *tmp_assign_source_18;
                            PyObject *tmp_called_instance_26;
                            PyObject *tmp_called_instance_27;
                            PyObject *tmp_mvar_value_11;
                            tmp_mvar_value_11 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                            if (unlikely(tmp_mvar_value_11 == NULL)) {
                                tmp_mvar_value_11 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                            }

                            if (tmp_mvar_value_11 == NULL) {

                                exception_type = PyExc_NameError;
                                Py_INCREF(exception_type);
                                exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                                exception_tb = NULL;

                                exception_lineno = 517;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto frame_exception_exit_1;
                            }

                            tmp_called_instance_27 = tmp_mvar_value_11;
                            frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 517;
                            tmp_called_instance_26 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_27, const_str_plain_popen, &PyTuple_GET_ITEM(const_tuple_str_digest_0c8d3c6eed5d4373e00b3d74bc2f9bc8_tuple, 0));

                            if (tmp_called_instance_26 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 517;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto frame_exception_exit_1;
                            }
                            frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 517;
                            tmp_assign_source_18 = CALL_METHOD_NO_ARGS(tmp_called_instance_26, const_str_plain_read);
                            Py_DECREF(tmp_called_instance_26);
                            if (tmp_assign_source_18 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 517;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto frame_exception_exit_1;
                            }
                            assert(var_txt == NULL);
                            var_txt = tmp_assign_source_18;
                        }
                        {
                            PyObject *tmp_assign_source_19;
                            PyObject *tmp_called_instance_28;
                            PyObject *tmp_mvar_value_12;
                            PyObject *tmp_args_element_name_9;
                            PyObject *tmp_args_element_name_10;
                            tmp_mvar_value_12 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

                            if (unlikely(tmp_mvar_value_12 == NULL)) {
                                tmp_mvar_value_12 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
                            }

                            if (tmp_mvar_value_12 == NULL) {

                                exception_type = PyExc_NameError;
                                Py_INCREF(exception_type);
                                exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
                                exception_tb = NULL;

                                exception_lineno = 519;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto frame_exception_exit_1;
                            }

                            tmp_called_instance_28 = tmp_mvar_value_12;
                            tmp_args_element_name_9 = const_str_digest_931335e1ae383d3cde48789cdd73233d;
                            CHECK_OBJECT(var_txt);
                            tmp_args_element_name_10 = var_txt;
                            frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 519;
                            {
                                PyObject *call_args[] = {tmp_args_element_name_9, tmp_args_element_name_10};
                                tmp_assign_source_19 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_28, const_str_plain_findall, call_args);
                            }

                            if (tmp_assign_source_19 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 519;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto frame_exception_exit_1;
                            }
                            assert(var_list_u == NULL);
                            var_list_u = tmp_assign_source_19;
                        }
                        {
                            PyObject *tmp_assign_source_20;
                            PyObject *tmp_iter_arg_2;
                            CHECK_OBJECT(var_list_u);
                            tmp_iter_arg_2 = var_list_u;
                            tmp_assign_source_20 = MAKE_ITERATOR(tmp_iter_arg_2);
                            if (tmp_assign_source_20 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 520;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto frame_exception_exit_1;
                            }
                            assert(tmp_for_loop_2__for_iterator == NULL);
                            tmp_for_loop_2__for_iterator = tmp_assign_source_20;
                        }
                        // Tried code:
                        loop_start_2:;
                        {
                            PyObject *tmp_next_source_2;
                            PyObject *tmp_assign_source_21;
                            CHECK_OBJECT(tmp_for_loop_2__for_iterator);
                            tmp_next_source_2 = tmp_for_loop_2__for_iterator;
                            tmp_assign_source_21 = ITERATOR_NEXT(tmp_next_source_2);
                            if (tmp_assign_source_21 == NULL) {
                                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                                    goto loop_end_2;
                                } else {

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    exception_lineno = 520;
                                    goto try_except_handler_3;
                                }
                            }

                            {
                                PyObject *old = tmp_for_loop_2__iter_value;
                                tmp_for_loop_2__iter_value = tmp_assign_source_21;
                                Py_XDECREF(old);
                            }

                        }
                        {
                            PyObject *tmp_assign_source_22;
                            CHECK_OBJECT(tmp_for_loop_2__iter_value);
                            tmp_assign_source_22 = tmp_for_loop_2__iter_value;
                            {
                                PyObject *old = var_u;
                                var_u = tmp_assign_source_22;
                                Py_INCREF(var_u);
                                Py_XDECREF(old);
                            }

                        }
                        {
                            PyObject *tmp_assign_source_23;
                            PyObject *tmp_called_instance_29;
                            PyObject *tmp_called_name_4;
                            PyObject *tmp_source_name_30;
                            PyObject *tmp_mvar_value_13;
                            PyObject *tmp_args_element_name_11;
                            PyObject *tmp_left_name_4;
                            PyObject *tmp_source_name_31;
                            PyObject *tmp_right_name_4;
                            tmp_mvar_value_13 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                            if (unlikely(tmp_mvar_value_13 == NULL)) {
                                tmp_mvar_value_13 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                            }

                            if (tmp_mvar_value_13 == NULL) {

                                exception_type = PyExc_NameError;
                                Py_INCREF(exception_type);
                                exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                                exception_tb = NULL;

                                exception_lineno = 521;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto try_except_handler_3;
                            }

                            tmp_source_name_30 = tmp_mvar_value_13;
                            tmp_called_name_4 = LOOKUP_ATTRIBUTE(tmp_source_name_30, const_str_plain_popen);
                            if (tmp_called_name_4 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 521;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto try_except_handler_3;
                            }
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_31 = par_ui;
                            tmp_left_name_4 = LOOKUP_ATTRIBUTE(tmp_source_name_31, const_str_plain_prefix);
                            if (tmp_left_name_4 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_4);

                                exception_lineno = 521;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto try_except_handler_3;
                            }
                            tmp_right_name_4 = const_str_plain_mount;
                            tmp_args_element_name_11 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_4, tmp_right_name_4);
                            Py_DECREF(tmp_left_name_4);
                            if (tmp_args_element_name_11 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_4);

                                exception_lineno = 521;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto try_except_handler_3;
                            }
                            frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 521;
                            tmp_called_instance_29 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_4, tmp_args_element_name_11);
                            Py_DECREF(tmp_called_name_4);
                            Py_DECREF(tmp_args_element_name_11);
                            if (tmp_called_instance_29 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 521;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto try_except_handler_3;
                            }
                            frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 521;
                            tmp_assign_source_23 = CALL_METHOD_NO_ARGS(tmp_called_instance_29, const_str_plain_read);
                            Py_DECREF(tmp_called_instance_29);
                            if (tmp_assign_source_23 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 521;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto try_except_handler_3;
                            }
                            {
                                PyObject *old = var_txt1;
                                var_txt1 = tmp_assign_source_23;
                                Py_XDECREF(old);
                            }

                        }
                        {
                            PyObject *tmp_assign_source_24;
                            PyObject *tmp_called_instance_30;
                            PyObject *tmp_mvar_value_14;
                            PyObject *tmp_args_element_name_12;
                            PyObject *tmp_args_element_name_13;
                            tmp_mvar_value_14 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

                            if (unlikely(tmp_mvar_value_14 == NULL)) {
                                tmp_mvar_value_14 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
                            }

                            if (tmp_mvar_value_14 == NULL) {

                                exception_type = PyExc_NameError;
                                Py_INCREF(exception_type);
                                exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
                                exception_tb = NULL;

                                exception_lineno = 522;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto try_except_handler_3;
                            }

                            tmp_called_instance_30 = tmp_mvar_value_14;
                            CHECK_OBJECT(var_u);
                            tmp_args_element_name_12 = var_u;
                            CHECK_OBJECT(var_txt1);
                            tmp_args_element_name_13 = var_txt1;
                            frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 522;
                            {
                                PyObject *call_args[] = {tmp_args_element_name_12, tmp_args_element_name_13};
                                tmp_assign_source_24 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_30, const_str_plain_search, call_args);
                            }

                            if (tmp_assign_source_24 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 522;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto try_except_handler_3;
                            }
                            {
                                PyObject *old = var_m;
                                var_m = tmp_assign_source_24;
                                Py_XDECREF(old);
                            }

                        }
                        {
                            nuitka_bool tmp_condition_result_11;
                            PyObject *tmp_operand_name_4;
                            CHECK_OBJECT(var_m);
                            tmp_operand_name_4 = var_m;
                            tmp_res = CHECK_IF_TRUE(tmp_operand_name_4);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 523;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto try_except_handler_3;
                            }
                            tmp_condition_result_11 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            if (tmp_condition_result_11 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_11;
                            } else {
                                goto branch_no_11;
                            }
                            branch_yes_11:;
                            {
                                PyObject *tmp_assign_source_25;
                                PyObject *tmp_called_instance_31;
                                PyObject *tmp_called_name_5;
                                PyObject *tmp_source_name_32;
                                PyObject *tmp_mvar_value_15;
                                PyObject *tmp_args_element_name_14;
                                PyObject *tmp_left_name_5;
                                PyObject *tmp_source_name_33;
                                PyObject *tmp_right_name_5;
                                tmp_mvar_value_15 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                                if (unlikely(tmp_mvar_value_15 == NULL)) {
                                    tmp_mvar_value_15 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                                }

                                if (tmp_mvar_value_15 == NULL) {

                                    exception_type = PyExc_NameError;
                                    Py_INCREF(exception_type);
                                    exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                                    exception_tb = NULL;

                                    exception_lineno = 524;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto try_except_handler_3;
                                }

                                tmp_source_name_32 = tmp_mvar_value_15;
                                tmp_called_name_5 = LOOKUP_ATTRIBUTE(tmp_source_name_32, const_str_plain_popen);
                                if (tmp_called_name_5 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 524;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto try_except_handler_3;
                                }
                                CHECK_OBJECT(par_ui);
                                tmp_source_name_33 = par_ui;
                                tmp_left_name_5 = LOOKUP_ATTRIBUTE(tmp_source_name_33, const_str_plain_prefix);
                                if (tmp_left_name_5 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                    Py_DECREF(tmp_called_name_5);

                                    exception_lineno = 524;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto try_except_handler_3;
                                }
                                tmp_right_name_5 = const_str_plain_blkid;
                                tmp_args_element_name_14 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_5, tmp_right_name_5);
                                Py_DECREF(tmp_left_name_5);
                                if (tmp_args_element_name_14 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                    Py_DECREF(tmp_called_name_5);

                                    exception_lineno = 524;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto try_except_handler_3;
                                }
                                frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 524;
                                tmp_called_instance_31 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_5, tmp_args_element_name_14);
                                Py_DECREF(tmp_called_name_5);
                                Py_DECREF(tmp_args_element_name_14);
                                if (tmp_called_instance_31 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 524;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto try_except_handler_3;
                                }
                                frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 524;
                                tmp_assign_source_25 = CALL_METHOD_NO_ARGS(tmp_called_instance_31, const_str_plain_read);
                                Py_DECREF(tmp_called_instance_31);
                                if (tmp_assign_source_25 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 524;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto try_except_handler_3;
                                }
                                {
                                    PyObject *old = var_txt2;
                                    var_txt2 = tmp_assign_source_25;
                                    Py_XDECREF(old);
                                }

                            }
                            {
                                PyObject *tmp_assign_source_26;
                                PyObject *tmp_left_name_6;
                                PyObject *tmp_right_name_6;
                                CHECK_OBJECT(var_u);
                                tmp_left_name_6 = var_u;
                                tmp_right_name_6 = const_str_digest_2a99f2106e37159d649e36cd642454d7;
                                tmp_assign_source_26 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_6, tmp_right_name_6);
                                if (tmp_assign_source_26 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 525;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto try_except_handler_3;
                                }
                                {
                                    PyObject *old = var_rgx;
                                    var_rgx = tmp_assign_source_26;
                                    Py_XDECREF(old);
                                }

                            }
                            {
                                PyObject *tmp_assign_source_27;
                                PyObject *tmp_called_instance_32;
                                PyObject *tmp_mvar_value_16;
                                PyObject *tmp_args_element_name_15;
                                PyObject *tmp_args_element_name_16;
                                tmp_mvar_value_16 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

                                if (unlikely(tmp_mvar_value_16 == NULL)) {
                                    tmp_mvar_value_16 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
                                }

                                if (tmp_mvar_value_16 == NULL) {

                                    exception_type = PyExc_NameError;
                                    Py_INCREF(exception_type);
                                    exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
                                    exception_tb = NULL;

                                    exception_lineno = 526;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto try_except_handler_3;
                                }

                                tmp_called_instance_32 = tmp_mvar_value_16;
                                CHECK_OBJECT(var_rgx);
                                tmp_args_element_name_15 = var_rgx;
                                CHECK_OBJECT(var_txt2);
                                tmp_args_element_name_16 = var_txt2;
                                frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 526;
                                {
                                    PyObject *call_args[] = {tmp_args_element_name_15, tmp_args_element_name_16};
                                    tmp_assign_source_27 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_32, const_str_plain_search, call_args);
                                }

                                if (tmp_assign_source_27 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 526;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto try_except_handler_3;
                                }
                                {
                                    PyObject *old = var_m1;
                                    var_m1 = tmp_assign_source_27;
                                    Py_XDECREF(old);
                                }

                            }
                            {
                                nuitka_bool tmp_condition_result_12;
                                int tmp_truth_name_3;
                                CHECK_OBJECT(var_m1);
                                tmp_truth_name_3 = CHECK_IF_TRUE(var_m1);
                                if (tmp_truth_name_3 == -1) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 527;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto try_except_handler_3;
                                }
                                tmp_condition_result_12 = tmp_truth_name_3 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                                if (tmp_condition_result_12 == NUITKA_BOOL_TRUE) {
                                    goto branch_yes_12;
                                } else {
                                    goto branch_no_12;
                                }
                                branch_yes_12:;
                                {
                                    PyObject *tmp_assign_source_28;
                                    tmp_assign_source_28 = const_str_digest_1573e6b4805ac8da2565b5c6f8345d3c;
                                    {
                                        PyObject *old = var_r2;
                                        var_r2 = tmp_assign_source_28;
                                        Py_INCREF(var_r2);
                                        Py_XDECREF(old);
                                    }

                                }
                                {
                                    PyObject *tmp_assign_source_29;
                                    PyObject *tmp_called_instance_33;
                                    CHECK_OBJECT(var_m1);
                                    tmp_called_instance_33 = var_m1;
                                    frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 529;
                                    tmp_assign_source_29 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_33, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_int_0_tuple, 0));

                                    if (tmp_assign_source_29 == NULL) {
                                        assert(ERROR_OCCURRED());

                                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                        exception_lineno = 529;
                                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                        goto try_except_handler_3;
                                    }
                                    {
                                        PyObject *old = var_txt3;
                                        var_txt3 = tmp_assign_source_29;
                                        Py_XDECREF(old);
                                    }

                                }
                                {
                                    PyObject *tmp_assign_source_30;
                                    PyObject *tmp_called_instance_34;
                                    PyObject *tmp_mvar_value_17;
                                    PyObject *tmp_args_element_name_17;
                                    PyObject *tmp_args_element_name_18;
                                    tmp_mvar_value_17 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

                                    if (unlikely(tmp_mvar_value_17 == NULL)) {
                                        tmp_mvar_value_17 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
                                    }

                                    if (tmp_mvar_value_17 == NULL) {

                                        exception_type = PyExc_NameError;
                                        Py_INCREF(exception_type);
                                        exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
                                        exception_tb = NULL;

                                        exception_lineno = 530;
                                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                        goto try_except_handler_3;
                                    }

                                    tmp_called_instance_34 = tmp_mvar_value_17;
                                    CHECK_OBJECT(var_r2);
                                    tmp_args_element_name_17 = var_r2;
                                    CHECK_OBJECT(var_txt3);
                                    tmp_args_element_name_18 = var_txt3;
                                    frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 530;
                                    {
                                        PyObject *call_args[] = {tmp_args_element_name_17, tmp_args_element_name_18};
                                        tmp_assign_source_30 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_34, const_str_plain_search, call_args);
                                    }

                                    if (tmp_assign_source_30 == NULL) {
                                        assert(ERROR_OCCURRED());

                                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                        exception_lineno = 530;
                                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                        goto try_except_handler_3;
                                    }
                                    {
                                        PyObject *old = var_m2;
                                        var_m2 = tmp_assign_source_30;
                                        Py_XDECREF(old);
                                    }

                                }
                                {
                                    PyObject *tmp_assign_source_31;
                                    PyObject *tmp_called_instance_35;
                                    CHECK_OBJECT(var_m2);
                                    tmp_called_instance_35 = var_m2;
                                    frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 531;
                                    tmp_assign_source_31 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_35, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_int_pos_1_tuple, 0));

                                    if (tmp_assign_source_31 == NULL) {
                                        assert(ERROR_OCCURRED());

                                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                        exception_lineno = 531;
                                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                        goto try_except_handler_3;
                                    }
                                    {
                                        PyObject *old = var_type_a;
                                        var_type_a = tmp_assign_source_31;
                                        Py_XDECREF(old);
                                    }

                                }
                                {
                                    PyObject *tmp_assign_source_32;
                                    PyObject *tmp_called_name_6;
                                    PyObject *tmp_source_name_34;
                                    PyObject *tmp_mvar_value_18;
                                    PyObject *tmp_args_element_name_19;
                                    PyObject *tmp_left_name_7;
                                    PyObject *tmp_left_name_8;
                                    PyObject *tmp_left_name_9;
                                    PyObject *tmp_left_name_10;
                                    PyObject *tmp_left_name_11;
                                    PyObject *tmp_source_name_35;
                                    PyObject *tmp_right_name_7;
                                    PyObject *tmp_right_name_8;
                                    PyObject *tmp_right_name_9;
                                    PyObject *tmp_right_name_10;
                                    PyObject *tmp_right_name_11;
                                    tmp_mvar_value_18 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                                    if (unlikely(tmp_mvar_value_18 == NULL)) {
                                        tmp_mvar_value_18 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                                    }

                                    if (tmp_mvar_value_18 == NULL) {

                                        exception_type = PyExc_NameError;
                                        Py_INCREF(exception_type);
                                        exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                                        exception_tb = NULL;

                                        exception_lineno = 532;
                                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                        goto try_except_handler_3;
                                    }

                                    tmp_source_name_34 = tmp_mvar_value_18;
                                    tmp_called_name_6 = LOOKUP_ATTRIBUTE(tmp_source_name_34, const_str_plain_system);
                                    if (tmp_called_name_6 == NULL) {
                                        assert(ERROR_OCCURRED());

                                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                        exception_lineno = 532;
                                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                        goto try_except_handler_3;
                                    }
                                    CHECK_OBJECT(par_ui);
                                    tmp_source_name_35 = par_ui;
                                    tmp_left_name_11 = LOOKUP_ATTRIBUTE(tmp_source_name_35, const_str_plain_prefix);
                                    if (tmp_left_name_11 == NULL) {
                                        assert(ERROR_OCCURRED());

                                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                        Py_DECREF(tmp_called_name_6);

                                        exception_lineno = 532;
                                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                        goto try_except_handler_3;
                                    }
                                    tmp_right_name_7 = const_str_digest_f3d167b0dffa906401fa6c94639c194d;
                                    tmp_left_name_10 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_11, tmp_right_name_7);
                                    Py_DECREF(tmp_left_name_11);
                                    if (tmp_left_name_10 == NULL) {
                                        assert(ERROR_OCCURRED());

                                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                        Py_DECREF(tmp_called_name_6);

                                        exception_lineno = 532;
                                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                        goto try_except_handler_3;
                                    }
                                    CHECK_OBJECT(var_type_a);
                                    tmp_right_name_8 = var_type_a;
                                    tmp_left_name_9 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_10, tmp_right_name_8);
                                    Py_DECREF(tmp_left_name_10);
                                    if (tmp_left_name_9 == NULL) {
                                        assert(ERROR_OCCURRED());

                                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                        Py_DECREF(tmp_called_name_6);

                                        exception_lineno = 532;
                                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                        goto try_except_handler_3;
                                    }
                                    tmp_right_name_9 = const_str_digest_a84c2f9bb883ab000c4f334da93978e8;
                                    tmp_left_name_8 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_9, tmp_right_name_9);
                                    Py_DECREF(tmp_left_name_9);
                                    if (tmp_left_name_8 == NULL) {
                                        assert(ERROR_OCCURRED());

                                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                        Py_DECREF(tmp_called_name_6);

                                        exception_lineno = 532;
                                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                        goto try_except_handler_3;
                                    }
                                    CHECK_OBJECT(var_u);
                                    tmp_right_name_10 = var_u;
                                    tmp_left_name_7 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_8, tmp_right_name_10);
                                    Py_DECREF(tmp_left_name_8);
                                    if (tmp_left_name_7 == NULL) {
                                        assert(ERROR_OCCURRED());

                                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                        Py_DECREF(tmp_called_name_6);

                                        exception_lineno = 532;
                                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                        goto try_except_handler_3;
                                    }
                                    tmp_right_name_11 = const_str_plain_1;
                                    tmp_args_element_name_19 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_7, tmp_right_name_11);
                                    Py_DECREF(tmp_left_name_7);
                                    if (tmp_args_element_name_19 == NULL) {
                                        assert(ERROR_OCCURRED());

                                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                        Py_DECREF(tmp_called_name_6);

                                        exception_lineno = 532;
                                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                        goto try_except_handler_3;
                                    }
                                    frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 532;
                                    tmp_assign_source_32 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_6, tmp_args_element_name_19);
                                    Py_DECREF(tmp_called_name_6);
                                    Py_DECREF(tmp_args_element_name_19);
                                    if (tmp_assign_source_32 == NULL) {
                                        assert(ERROR_OCCURRED());

                                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                        exception_lineno = 532;
                                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                        goto try_except_handler_3;
                                    }
                                    {
                                        PyObject *old = var_s;
                                        var_s = tmp_assign_source_32;
                                        Py_XDECREF(old);
                                    }

                                }
                                branch_no_12:;
                            }
                            branch_no_11:;
                        }
                        if (CONSIDER_THREADING() == false) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 520;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto try_except_handler_3;
                        }
                        goto loop_start_2;
                        loop_end_2:;
                        goto try_end_2;
                        // Exception handler code:
                        try_except_handler_3:;
                        exception_keeper_type_2 = exception_type;
                        exception_keeper_value_2 = exception_value;
                        exception_keeper_tb_2 = exception_tb;
                        exception_keeper_lineno_2 = exception_lineno;
                        exception_type = NULL;
                        exception_value = NULL;
                        exception_tb = NULL;
                        exception_lineno = 0;

                        Py_XDECREF(tmp_for_loop_2__iter_value);
                        tmp_for_loop_2__iter_value = NULL;

                        CHECK_OBJECT((PyObject *)tmp_for_loop_2__for_iterator);
                        Py_DECREF(tmp_for_loop_2__for_iterator);
                        tmp_for_loop_2__for_iterator = NULL;

                        // Re-raise.
                        exception_type = exception_keeper_type_2;
                        exception_value = exception_keeper_value_2;
                        exception_tb = exception_keeper_tb_2;
                        exception_lineno = exception_keeper_lineno_2;

                        goto frame_exception_exit_1;
                        // End of try:
                        try_end_2:;
                        Py_XDECREF(tmp_for_loop_2__iter_value);
                        tmp_for_loop_2__iter_value = NULL;

                        CHECK_OBJECT((PyObject *)tmp_for_loop_2__for_iterator);
                        Py_DECREF(tmp_for_loop_2__for_iterator);
                        tmp_for_loop_2__for_iterator = NULL;

                        {
                            PyObject *tmp_assign_source_33;
                            PyObject *tmp_called_instance_36;
                            PyObject *tmp_called_name_7;
                            PyObject *tmp_source_name_36;
                            PyObject *tmp_mvar_value_19;
                            PyObject *tmp_args_element_name_20;
                            PyObject *tmp_left_name_12;
                            PyObject *tmp_source_name_37;
                            PyObject *tmp_right_name_12;
                            tmp_mvar_value_19 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                            if (unlikely(tmp_mvar_value_19 == NULL)) {
                                tmp_mvar_value_19 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                            }

                            if (tmp_mvar_value_19 == NULL) {

                                exception_type = PyExc_NameError;
                                Py_INCREF(exception_type);
                                exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                                exception_tb = NULL;

                                exception_lineno = 533;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto frame_exception_exit_1;
                            }

                            tmp_source_name_36 = tmp_mvar_value_19;
                            tmp_called_name_7 = LOOKUP_ATTRIBUTE(tmp_source_name_36, const_str_plain_popen);
                            if (tmp_called_name_7 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 533;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto frame_exception_exit_1;
                            }
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_37 = par_ui;
                            tmp_left_name_12 = LOOKUP_ATTRIBUTE(tmp_source_name_37, const_str_plain_prefix);
                            if (tmp_left_name_12 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_7);

                                exception_lineno = 533;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_right_name_12 = const_str_plain_mount;
                            tmp_args_element_name_20 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_12, tmp_right_name_12);
                            Py_DECREF(tmp_left_name_12);
                            if (tmp_args_element_name_20 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_7);

                                exception_lineno = 533;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto frame_exception_exit_1;
                            }
                            frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 533;
                            tmp_called_instance_36 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_7, tmp_args_element_name_20);
                            Py_DECREF(tmp_called_name_7);
                            Py_DECREF(tmp_args_element_name_20);
                            if (tmp_called_instance_36 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 533;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto frame_exception_exit_1;
                            }
                            frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 533;
                            tmp_assign_source_33 = CALL_METHOD_NO_ARGS(tmp_called_instance_36, const_str_plain_read);
                            Py_DECREF(tmp_called_instance_36);
                            if (tmp_assign_source_33 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 533;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto frame_exception_exit_1;
                            }
                            {
                                PyObject *old = var_txt3;
                                var_txt3 = tmp_assign_source_33;
                                Py_XDECREF(old);
                            }

                        }
                        {
                            PyObject *tmp_assign_source_34;
                            PyObject *tmp_called_instance_37;
                            PyObject *tmp_mvar_value_20;
                            PyObject *tmp_args_element_name_21;
                            PyObject *tmp_args_element_name_22;
                            tmp_mvar_value_20 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

                            if (unlikely(tmp_mvar_value_20 == NULL)) {
                                tmp_mvar_value_20 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
                            }

                            if (tmp_mvar_value_20 == NULL) {

                                exception_type = PyExc_NameError;
                                Py_INCREF(exception_type);
                                exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
                                exception_tb = NULL;

                                exception_lineno = 535;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto frame_exception_exit_1;
                            }

                            tmp_called_instance_37 = tmp_mvar_value_20;
                            tmp_args_element_name_21 = const_str_digest_362b9c39b7be7164b4f637e29c9f8900;
                            CHECK_OBJECT(var_txt3);
                            tmp_args_element_name_22 = var_txt3;
                            frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 535;
                            {
                                PyObject *call_args[] = {tmp_args_element_name_21, tmp_args_element_name_22};
                                tmp_assign_source_34 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_37, const_str_plain_findall, call_args);
                            }

                            if (tmp_assign_source_34 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 535;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto frame_exception_exit_1;
                            }
                            assert(var_usb_check == NULL);
                            var_usb_check = tmp_assign_source_34;
                        }
                        {
                            nuitka_bool tmp_condition_result_13;
                            PyObject *tmp_compexpr_left_17;
                            PyObject *tmp_compexpr_right_17;
                            PyObject *tmp_len_arg_2;
                            CHECK_OBJECT(var_usb_check);
                            tmp_len_arg_2 = var_usb_check;
                            tmp_compexpr_left_17 = BUILTIN_LEN(tmp_len_arg_2);
                            if (tmp_compexpr_left_17 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 536;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_compexpr_right_17 = const_int_0;
                            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_17, tmp_compexpr_right_17);
                            Py_DECREF(tmp_compexpr_left_17);
                            assert(!(tmp_res == -1));
                            tmp_condition_result_13 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            if (tmp_condition_result_13 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_13;
                            } else {
                                goto branch_no_13;
                            }
                            branch_yes_13:;
                            {
                                PyObject *tmp_called_instance_38;
                                PyObject *tmp_call_result_13;
                                CHECK_OBJECT(par_ui);
                                tmp_called_instance_38 = par_ui;
                                frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 537;
                                tmp_call_result_13 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_38, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_65f1ca3cc21751516d4508974112f1bb_tuple, 0));

                                if (tmp_call_result_13 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 537;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto frame_exception_exit_1;
                                }
                                Py_DECREF(tmp_call_result_13);
                            }
                            {
                                PyObject *tmp_called_instance_39;
                                PyObject *tmp_call_result_14;
                                CHECK_OBJECT(par_ui);
                                tmp_called_instance_39 = par_ui;
                                frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 538;
                                tmp_call_result_14 = CALL_METHOD_NO_ARGS(tmp_called_instance_39, const_str_plain_setupUSB_prompt);
                                if (tmp_call_result_14 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 538;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto frame_exception_exit_1;
                                }
                                Py_DECREF(tmp_call_result_14);
                            }
                            tmp_return_value = Py_None;
                            Py_INCREF(tmp_return_value);
                            goto frame_return_exit_1;
                            branch_no_13:;
                        }
                        {
                            PyObject *tmp_assign_source_35;
                            tmp_assign_source_35 = Py_False;
                            assert(var_found == NULL);
                            Py_INCREF(tmp_assign_source_35);
                            var_found = tmp_assign_source_35;
                        }
                        {
                            PyObject *tmp_assign_source_36;
                            PyObject *tmp_iter_arg_3;
                            CHECK_OBJECT(var_usb_check);
                            tmp_iter_arg_3 = var_usb_check;
                            tmp_assign_source_36 = MAKE_ITERATOR(tmp_iter_arg_3);
                            if (tmp_assign_source_36 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 541;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto frame_exception_exit_1;
                            }
                            assert(tmp_for_loop_3__for_iterator == NULL);
                            tmp_for_loop_3__for_iterator = tmp_assign_source_36;
                        }
                        // Tried code:
                        loop_start_3:;
                        {
                            PyObject *tmp_next_source_3;
                            PyObject *tmp_assign_source_37;
                            CHECK_OBJECT(tmp_for_loop_3__for_iterator);
                            tmp_next_source_3 = tmp_for_loop_3__for_iterator;
                            tmp_assign_source_37 = ITERATOR_NEXT(tmp_next_source_3);
                            if (tmp_assign_source_37 == NULL) {
                                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                                    goto loop_end_3;
                                } else {

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    exception_lineno = 541;
                                    goto try_except_handler_4;
                                }
                            }

                            {
                                PyObject *old = tmp_for_loop_3__iter_value;
                                tmp_for_loop_3__iter_value = tmp_assign_source_37;
                                Py_XDECREF(old);
                            }

                        }
                        {
                            PyObject *tmp_assign_source_38;
                            CHECK_OBJECT(tmp_for_loop_3__iter_value);
                            tmp_assign_source_38 = tmp_for_loop_3__iter_value;
                            {
                                PyObject *old = var_entry;
                                var_entry = tmp_assign_source_38;
                                Py_INCREF(var_entry);
                                Py_XDECREF(old);
                            }

                        }
                        {
                            nuitka_bool tmp_condition_result_14;
                            int tmp_and_left_truth_10;
                            nuitka_bool tmp_and_left_value_10;
                            nuitka_bool tmp_and_right_value_10;
                            PyObject *tmp_compexpr_left_18;
                            PyObject *tmp_compexpr_right_18;
                            PyObject *tmp_len_arg_3;
                            PyObject *tmp_source_name_38;
                            int tmp_and_left_truth_11;
                            nuitka_bool tmp_and_left_value_11;
                            nuitka_bool tmp_and_right_value_11;
                            PyObject *tmp_compexpr_left_19;
                            PyObject *tmp_compexpr_right_19;
                            PyObject *tmp_subscribed_name_8;
                            PyObject *tmp_subscribed_name_9;
                            PyObject *tmp_source_name_39;
                            PyObject *tmp_subscript_name_8;
                            PyObject *tmp_subscript_name_9;
                            PyObject *tmp_subscribed_name_10;
                            PyObject *tmp_subscript_name_10;
                            PyObject *tmp_compexpr_left_20;
                            PyObject *tmp_compexpr_right_20;
                            PyObject *tmp_subscribed_name_11;
                            PyObject *tmp_subscribed_name_12;
                            PyObject *tmp_source_name_40;
                            PyObject *tmp_subscript_name_11;
                            PyObject *tmp_subscript_name_12;
                            PyObject *tmp_subscribed_name_13;
                            PyObject *tmp_subscript_name_13;
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_38 = par_ui;
                            tmp_len_arg_3 = LOOKUP_ATTRIBUTE(tmp_source_name_38, const_str_plain_usb_list);
                            if (tmp_len_arg_3 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 542;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto try_except_handler_4;
                            }
                            tmp_compexpr_left_18 = BUILTIN_LEN(tmp_len_arg_3);
                            Py_DECREF(tmp_len_arg_3);
                            if (tmp_compexpr_left_18 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 542;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto try_except_handler_4;
                            }
                            CHECK_OBJECT(var_index2);
                            tmp_compexpr_right_18 = var_index2;
                            tmp_res = RICH_COMPARE_BOOL_GT_OBJECT_OBJECT(tmp_compexpr_left_18, tmp_compexpr_right_18);
                            Py_DECREF(tmp_compexpr_left_18);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 542;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto try_except_handler_4;
                            }
                            tmp_and_left_value_10 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            tmp_and_left_truth_10 = tmp_and_left_value_10 == NUITKA_BOOL_TRUE ? 1 : 0;
                            if (tmp_and_left_truth_10 == 1) {
                                goto and_right_10;
                            } else {
                                goto and_left_10;
                            }
                            and_right_10:;
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_39 = par_ui;
                            tmp_subscribed_name_9 = LOOKUP_ATTRIBUTE(tmp_source_name_39, const_str_plain_usb_list);
                            if (tmp_subscribed_name_9 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 542;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto try_except_handler_4;
                            }
                            CHECK_OBJECT(var_index2);
                            tmp_subscript_name_8 = var_index2;
                            tmp_subscribed_name_8 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_9, tmp_subscript_name_8);
                            Py_DECREF(tmp_subscribed_name_9);
                            if (tmp_subscribed_name_8 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 542;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto try_except_handler_4;
                            }
                            tmp_subscript_name_9 = const_int_0;
                            tmp_compexpr_left_19 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_8, tmp_subscript_name_9, 0);
                            Py_DECREF(tmp_subscribed_name_8);
                            if (tmp_compexpr_left_19 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 542;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto try_except_handler_4;
                            }
                            CHECK_OBJECT(var_entry);
                            tmp_subscribed_name_10 = var_entry;
                            tmp_subscript_name_10 = const_int_0;
                            tmp_compexpr_right_19 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_10, tmp_subscript_name_10, 0);
                            if (tmp_compexpr_right_19 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_compexpr_left_19);

                                exception_lineno = 542;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto try_except_handler_4;
                            }
                            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_19, tmp_compexpr_right_19);
                            Py_DECREF(tmp_compexpr_left_19);
                            Py_DECREF(tmp_compexpr_right_19);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 542;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto try_except_handler_4;
                            }
                            tmp_and_left_value_11 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            tmp_and_left_truth_11 = tmp_and_left_value_11 == NUITKA_BOOL_TRUE ? 1 : 0;
                            if (tmp_and_left_truth_11 == 1) {
                                goto and_right_11;
                            } else {
                                goto and_left_11;
                            }
                            and_right_11:;
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_40 = par_ui;
                            tmp_subscribed_name_12 = LOOKUP_ATTRIBUTE(tmp_source_name_40, const_str_plain_usb_list);
                            if (tmp_subscribed_name_12 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 542;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto try_except_handler_4;
                            }
                            CHECK_OBJECT(var_index2);
                            tmp_subscript_name_11 = var_index2;
                            tmp_subscribed_name_11 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_12, tmp_subscript_name_11);
                            Py_DECREF(tmp_subscribed_name_12);
                            if (tmp_subscribed_name_11 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 542;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto try_except_handler_4;
                            }
                            tmp_subscript_name_12 = const_int_pos_1;
                            tmp_compexpr_left_20 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_11, tmp_subscript_name_12, 1);
                            Py_DECREF(tmp_subscribed_name_11);
                            if (tmp_compexpr_left_20 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 542;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto try_except_handler_4;
                            }
                            CHECK_OBJECT(var_entry);
                            tmp_subscribed_name_13 = var_entry;
                            tmp_subscript_name_13 = const_int_pos_1;
                            tmp_compexpr_right_20 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_13, tmp_subscript_name_13, 1);
                            if (tmp_compexpr_right_20 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_compexpr_left_20);

                                exception_lineno = 542;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto try_except_handler_4;
                            }
                            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_20, tmp_compexpr_right_20);
                            Py_DECREF(tmp_compexpr_left_20);
                            Py_DECREF(tmp_compexpr_right_20);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 542;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto try_except_handler_4;
                            }
                            tmp_and_right_value_11 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            tmp_and_right_value_10 = tmp_and_right_value_11;
                            goto and_end_11;
                            and_left_11:;
                            tmp_and_right_value_10 = tmp_and_left_value_11;
                            and_end_11:;
                            tmp_condition_result_14 = tmp_and_right_value_10;
                            goto and_end_10;
                            and_left_10:;
                            tmp_condition_result_14 = tmp_and_left_value_10;
                            and_end_10:;
                            if (tmp_condition_result_14 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_14;
                            } else {
                                goto branch_no_14;
                            }
                            branch_yes_14:;
                            {
                                PyObject *tmp_assign_source_39;
                                tmp_assign_source_39 = Py_True;
                                {
                                    PyObject *old = var_found;
                                    var_found = tmp_assign_source_39;
                                    Py_INCREF(var_found);
                                    Py_XDECREF(old);
                                }

                            }
                            branch_no_14:;
                        }
                        if (CONSIDER_THREADING() == false) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 541;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto try_except_handler_4;
                        }
                        goto loop_start_3;
                        loop_end_3:;
                        goto try_end_3;
                        // Exception handler code:
                        try_except_handler_4:;
                        exception_keeper_type_3 = exception_type;
                        exception_keeper_value_3 = exception_value;
                        exception_keeper_tb_3 = exception_tb;
                        exception_keeper_lineno_3 = exception_lineno;
                        exception_type = NULL;
                        exception_value = NULL;
                        exception_tb = NULL;
                        exception_lineno = 0;

                        Py_XDECREF(tmp_for_loop_3__iter_value);
                        tmp_for_loop_3__iter_value = NULL;

                        CHECK_OBJECT((PyObject *)tmp_for_loop_3__for_iterator);
                        Py_DECREF(tmp_for_loop_3__for_iterator);
                        tmp_for_loop_3__for_iterator = NULL;

                        // Re-raise.
                        exception_type = exception_keeper_type_3;
                        exception_value = exception_keeper_value_3;
                        exception_tb = exception_keeper_tb_3;
                        exception_lineno = exception_keeper_lineno_3;

                        goto frame_exception_exit_1;
                        // End of try:
                        try_end_3:;
                        Py_XDECREF(tmp_for_loop_3__iter_value);
                        tmp_for_loop_3__iter_value = NULL;

                        CHECK_OBJECT((PyObject *)tmp_for_loop_3__for_iterator);
                        Py_DECREF(tmp_for_loop_3__for_iterator);
                        tmp_for_loop_3__for_iterator = NULL;

                        {
                            nuitka_bool tmp_condition_result_15;
                            PyObject *tmp_operand_name_5;
                            if (var_found == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "found");
                                exception_tb = NULL;

                                exception_lineno = 544;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto frame_exception_exit_1;
                            }

                            tmp_operand_name_5 = var_found;
                            tmp_res = CHECK_IF_TRUE(tmp_operand_name_5);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 544;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_condition_result_15 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            if (tmp_condition_result_15 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_15;
                            } else {
                                goto branch_no_15;
                            }
                            branch_yes_15:;
                            {
                                PyObject *tmp_called_instance_40;
                                PyObject *tmp_call_result_15;
                                CHECK_OBJECT(par_ui);
                                tmp_called_instance_40 = par_ui;
                                frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 545;
                                tmp_call_result_15 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_40, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_b62eced012cb463810e5ce7621fab465_tuple, 0));

                                if (tmp_call_result_15 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 545;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto frame_exception_exit_1;
                                }
                                Py_DECREF(tmp_call_result_15);
                            }
                            {
                                PyObject *tmp_called_instance_41;
                                PyObject *tmp_call_result_16;
                                CHECK_OBJECT(par_ui);
                                tmp_called_instance_41 = par_ui;
                                frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 546;
                                tmp_call_result_16 = CALL_METHOD_NO_ARGS(tmp_called_instance_41, const_str_plain_setupUSB_prompt);
                                if (tmp_call_result_16 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 546;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto frame_exception_exit_1;
                                }
                                Py_DECREF(tmp_call_result_16);
                            }
                            tmp_return_value = Py_None;
                            Py_INCREF(tmp_return_value);
                            goto frame_return_exit_1;
                            branch_no_15:;
                        }
                        branch_no_10:;
                    }
                    branch_end_6:;
                }
                {
                    PyObject *tmp_assign_source_40;
                    tmp_assign_source_40 = const_str_empty;
                    assert(var_drive == NULL);
                    Py_INCREF(tmp_assign_source_40);
                    var_drive = tmp_assign_source_40;
                }
                {
                    nuitka_bool tmp_condition_result_16;
                    PyObject *tmp_compexpr_left_21;
                    PyObject *tmp_compexpr_right_21;
                    PyObject *tmp_source_name_41;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_41 = par_ui;
                    tmp_compexpr_left_21 = LOOKUP_ATTRIBUTE(tmp_source_name_41, const_str_plain_DEV_OS);
                    if (tmp_compexpr_left_21 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 550;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_compexpr_right_21 = const_str_plain_Windows;
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_21, tmp_compexpr_right_21);
                    Py_DECREF(tmp_compexpr_left_21);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 550;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_condition_result_16 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_16 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_16;
                    } else {
                        goto branch_no_16;
                    }
                    branch_yes_16:;
                    {
                        PyObject *tmp_assign_source_41;
                        PyObject *tmp_iter_arg_4;
                        PyObject *tmp_range_arg_1;
                        PyObject *tmp_len_arg_4;
                        PyObject *tmp_source_name_42;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_42 = par_ui;
                        tmp_len_arg_4 = LOOKUP_ATTRIBUTE(tmp_source_name_42, const_str_plain_devs_list);
                        if (tmp_len_arg_4 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 551;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_range_arg_1 = BUILTIN_LEN(tmp_len_arg_4);
                        Py_DECREF(tmp_len_arg_4);
                        if (tmp_range_arg_1 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 551;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_iter_arg_4 = BUILTIN_RANGE(tmp_range_arg_1);
                        Py_DECREF(tmp_range_arg_1);
                        if (tmp_iter_arg_4 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 551;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_assign_source_41 = MAKE_ITERATOR(tmp_iter_arg_4);
                        Py_DECREF(tmp_iter_arg_4);
                        if (tmp_assign_source_41 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 551;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        assert(tmp_for_loop_4__for_iterator == NULL);
                        tmp_for_loop_4__for_iterator = tmp_assign_source_41;
                    }
                    // Tried code:
                    loop_start_4:;
                    {
                        PyObject *tmp_next_source_4;
                        PyObject *tmp_assign_source_42;
                        CHECK_OBJECT(tmp_for_loop_4__for_iterator);
                        tmp_next_source_4 = tmp_for_loop_4__for_iterator;
                        tmp_assign_source_42 = ITERATOR_NEXT(tmp_next_source_4);
                        if (tmp_assign_source_42 == NULL) {
                            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                                goto loop_end_4;
                            } else {

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                exception_lineno = 551;
                                goto try_except_handler_5;
                            }
                        }

                        {
                            PyObject *old = tmp_for_loop_4__iter_value;
                            tmp_for_loop_4__iter_value = tmp_assign_source_42;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assign_source_43;
                        CHECK_OBJECT(tmp_for_loop_4__iter_value);
                        tmp_assign_source_43 = tmp_for_loop_4__iter_value;
                        {
                            PyObject *old = var_j;
                            var_j = tmp_assign_source_43;
                            Py_INCREF(var_j);
                            Py_XDECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_called_name_8;
                        PyObject *tmp_mvar_value_21;
                        PyObject *tmp_call_result_17;
                        PyObject *tmp_args_element_name_23;
                        tmp_mvar_value_21 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_prelock);

                        if (unlikely(tmp_mvar_value_21 == NULL)) {
                            tmp_mvar_value_21 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_prelock);
                        }

                        if (tmp_mvar_value_21 == NULL) {

                            exception_type = PyExc_NameError;
                            Py_INCREF(exception_type);
                            exception_value = UNSTREAM_STRING(&constant_bin[ 5022 ], 36, 0);
                            exception_tb = NULL;

                            exception_lineno = 552;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto try_except_handler_5;
                        }

                        tmp_called_name_8 = tmp_mvar_value_21;
                        CHECK_OBJECT(var_j);
                        tmp_args_element_name_23 = var_j;
                        frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 552;
                        tmp_call_result_17 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_8, tmp_args_element_name_23);
                        if (tmp_call_result_17 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 552;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto try_except_handler_5;
                        }
                        Py_DECREF(tmp_call_result_17);
                    }
                    if (CONSIDER_THREADING() == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 551;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto try_except_handler_5;
                    }
                    goto loop_start_4;
                    loop_end_4:;
                    goto try_end_4;
                    // Exception handler code:
                    try_except_handler_5:;
                    exception_keeper_type_4 = exception_type;
                    exception_keeper_value_4 = exception_value;
                    exception_keeper_tb_4 = exception_tb;
                    exception_keeper_lineno_4 = exception_lineno;
                    exception_type = NULL;
                    exception_value = NULL;
                    exception_tb = NULL;
                    exception_lineno = 0;

                    Py_XDECREF(tmp_for_loop_4__iter_value);
                    tmp_for_loop_4__iter_value = NULL;

                    CHECK_OBJECT((PyObject *)tmp_for_loop_4__for_iterator);
                    Py_DECREF(tmp_for_loop_4__for_iterator);
                    tmp_for_loop_4__for_iterator = NULL;

                    // Re-raise.
                    exception_type = exception_keeper_type_4;
                    exception_value = exception_keeper_value_4;
                    exception_tb = exception_keeper_tb_4;
                    exception_lineno = exception_keeper_lineno_4;

                    goto frame_exception_exit_1;
                    // End of try:
                    try_end_4:;
                    Py_XDECREF(tmp_for_loop_4__iter_value);
                    tmp_for_loop_4__iter_value = NULL;

                    CHECK_OBJECT((PyObject *)tmp_for_loop_4__for_iterator);
                    Py_DECREF(tmp_for_loop_4__for_iterator);
                    tmp_for_loop_4__for_iterator = NULL;

                    {
                        PyObject *tmp_assign_source_44;
                        PyObject *tmp_called_name_9;
                        PyObject *tmp_source_name_43;
                        PyObject *tmp_mvar_value_22;
                        PyObject *tmp_args_name_1;
                        PyObject *tmp_kw_name_2;
                        PyObject *tmp_dict_key_4;
                        PyObject *tmp_dict_value_4;
                        PyObject *tmp_source_name_44;
                        PyObject *tmp_mvar_value_23;
                        PyObject *tmp_dict_key_5;
                        PyObject *tmp_dict_value_5;
                        PyObject *tmp_source_name_45;
                        PyObject *tmp_mvar_value_24;
                        tmp_mvar_value_22 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_subprocess);

                        if (unlikely(tmp_mvar_value_22 == NULL)) {
                            tmp_mvar_value_22 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_subprocess);
                        }

                        if (tmp_mvar_value_22 == NULL) {

                            exception_type = PyExc_NameError;
                            Py_INCREF(exception_type);
                            exception_value = UNSTREAM_STRING(&constant_bin[ 835 ], 39, 0);
                            exception_tb = NULL;

                            exception_lineno = 553;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_source_name_43 = tmp_mvar_value_22;
                        tmp_called_name_9 = LOOKUP_ATTRIBUTE(tmp_source_name_43, const_str_plain_Popen);
                        if (tmp_called_name_9 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 553;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_args_name_1 = DEEP_COPY(const_tuple_list_str_plain_diskpart_list_tuple);
                        tmp_mvar_value_23 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_subprocess);

                        if (unlikely(tmp_mvar_value_23 == NULL)) {
                            tmp_mvar_value_23 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_subprocess);
                        }

                        if (tmp_mvar_value_23 == NULL) {
                            Py_DECREF(tmp_called_name_9);
                            Py_DECREF(tmp_args_name_1);
                            exception_type = PyExc_NameError;
                            Py_INCREF(exception_type);
                            exception_value = UNSTREAM_STRING(&constant_bin[ 835 ], 39, 0);
                            exception_tb = NULL;

                            exception_lineno = 553;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_source_name_44 = tmp_mvar_value_23;
                        tmp_dict_value_4 = LOOKUP_ATTRIBUTE(tmp_source_name_44, const_str_plain_PIPE);
                        if (tmp_dict_value_4 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_9);
                            Py_DECREF(tmp_args_name_1);

                            exception_lineno = 553;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_dict_key_4 = const_str_plain_stdin;
                        tmp_kw_name_2 = _PyDict_NewPresized( 2 );
                        tmp_res = PyDict_SetItem(tmp_kw_name_2, tmp_dict_key_4, tmp_dict_value_4);
                        Py_DECREF(tmp_dict_value_4);
                        assert(!(tmp_res != 0));
                        tmp_mvar_value_24 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_subprocess);

                        if (unlikely(tmp_mvar_value_24 == NULL)) {
                            tmp_mvar_value_24 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_subprocess);
                        }

                        if (tmp_mvar_value_24 == NULL) {
                            Py_DECREF(tmp_called_name_9);
                            Py_DECREF(tmp_args_name_1);
                            Py_DECREF(tmp_kw_name_2);
                            exception_type = PyExc_NameError;
                            Py_INCREF(exception_type);
                            exception_value = UNSTREAM_STRING(&constant_bin[ 835 ], 39, 0);
                            exception_tb = NULL;

                            exception_lineno = 553;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_source_name_45 = tmp_mvar_value_24;
                        tmp_dict_value_5 = LOOKUP_ATTRIBUTE(tmp_source_name_45, const_str_plain_PIPE);
                        if (tmp_dict_value_5 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_9);
                            Py_DECREF(tmp_args_name_1);
                            Py_DECREF(tmp_kw_name_2);

                            exception_lineno = 553;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_dict_key_5 = const_str_plain_stdout;
                        tmp_res = PyDict_SetItem(tmp_kw_name_2, tmp_dict_key_5, tmp_dict_value_5);
                        Py_DECREF(tmp_dict_value_5);
                        assert(!(tmp_res != 0));
                        frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 553;
                        tmp_assign_source_44 = CALL_FUNCTION(tmp_called_name_9, tmp_args_name_1, tmp_kw_name_2);
                        Py_DECREF(tmp_called_name_9);
                        Py_DECREF(tmp_args_name_1);
                        Py_DECREF(tmp_kw_name_2);
                        if (tmp_assign_source_44 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 553;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        assert(var_p == NULL);
                        var_p = tmp_assign_source_44;
                    }
                    {
                        PyObject *tmp_assign_source_45;
                        PyObject *tmp_called_name_10;
                        PyObject *tmp_source_name_46;
                        PyObject *tmp_source_name_47;
                        PyObject *tmp_args_element_name_24;
                        PyObject *tmp_left_name_13;
                        PyObject *tmp_left_name_14;
                        PyObject *tmp_right_name_13;
                        PyObject *tmp_subscribed_name_14;
                        PyObject *tmp_subscribed_name_15;
                        PyObject *tmp_source_name_48;
                        PyObject *tmp_subscript_name_14;
                        PyObject *tmp_subscript_name_15;
                        PyObject *tmp_right_name_14;
                        CHECK_OBJECT(var_p);
                        tmp_source_name_47 = var_p;
                        tmp_source_name_46 = LOOKUP_ATTRIBUTE(tmp_source_name_47, const_str_plain_stdin);
                        if (tmp_source_name_46 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 554;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_called_name_10 = LOOKUP_ATTRIBUTE(tmp_source_name_46, const_str_plain_write);
                        Py_DECREF(tmp_source_name_46);
                        if (tmp_called_name_10 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 554;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_left_name_14 = const_str_digest_17549804b509a5d0faeadc1a5d0256fa;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_48 = par_ui;
                        tmp_subscribed_name_15 = LOOKUP_ATTRIBUTE(tmp_source_name_48, const_str_plain_usb_list);
                        if (tmp_subscribed_name_15 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_10);

                            exception_lineno = 554;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(var_index2);
                        tmp_subscript_name_14 = var_index2;
                        tmp_subscribed_name_14 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_15, tmp_subscript_name_14);
                        Py_DECREF(tmp_subscribed_name_15);
                        if (tmp_subscribed_name_14 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_10);

                            exception_lineno = 554;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_subscript_name_15 = const_int_pos_1;
                        tmp_right_name_13 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_14, tmp_subscript_name_15, 1);
                        Py_DECREF(tmp_subscribed_name_14);
                        if (tmp_right_name_13 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_10);

                            exception_lineno = 554;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_left_name_13 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_14, tmp_right_name_13);
                        Py_DECREF(tmp_right_name_13);
                        if (tmp_left_name_13 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_10);

                            exception_lineno = 554;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_14 = const_str_newline;
                        tmp_args_element_name_24 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_13, tmp_right_name_14);
                        Py_DECREF(tmp_left_name_13);
                        if (tmp_args_element_name_24 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_10);

                            exception_lineno = 554;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 554;
                        tmp_assign_source_45 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_10, tmp_args_element_name_24);
                        Py_DECREF(tmp_called_name_10);
                        Py_DECREF(tmp_args_element_name_24);
                        if (tmp_assign_source_45 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 554;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        assert(var_res1 == NULL);
                        var_res1 = tmp_assign_source_45;
                    }
                    {
                        PyObject *tmp_assign_source_46;
                        PyObject *tmp_called_instance_42;
                        PyObject *tmp_source_name_49;
                        CHECK_OBJECT(var_p);
                        tmp_source_name_49 = var_p;
                        tmp_called_instance_42 = LOOKUP_ATTRIBUTE(tmp_source_name_49, const_str_plain_stdin);
                        if (tmp_called_instance_42 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 555;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 555;
                        tmp_assign_source_46 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_42, const_str_plain_write, &PyTuple_GET_ITEM(const_tuple_str_digest_28ac2a2d748125d0d09a88c9c23c1ea8_tuple, 0));

                        Py_DECREF(tmp_called_instance_42);
                        if (tmp_assign_source_46 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 555;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        {
                            PyObject *old = var_res1;
                            assert(old != NULL);
                            var_res1 = tmp_assign_source_46;
                            Py_DECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assign_source_47;
                        PyObject *tmp_called_instance_43;
                        PyObject *tmp_source_name_50;
                        CHECK_OBJECT(var_p);
                        tmp_source_name_50 = var_p;
                        tmp_called_instance_43 = LOOKUP_ATTRIBUTE(tmp_source_name_50, const_str_plain_stdin);
                        if (tmp_called_instance_43 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 556;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 556;
                        tmp_assign_source_47 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_43, const_str_plain_write, &PyTuple_GET_ITEM(const_tuple_str_digest_5857891e3f97659e063da200742b49dc_tuple, 0));

                        Py_DECREF(tmp_called_instance_43);
                        if (tmp_assign_source_47 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 556;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        {
                            PyObject *old = var_res1;
                            assert(old != NULL);
                            var_res1 = tmp_assign_source_47;
                            Py_DECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assign_source_48;
                        PyObject *tmp_subscribed_name_16;
                        PyObject *tmp_called_instance_44;
                        PyObject *tmp_subscript_name_16;
                        CHECK_OBJECT(var_p);
                        tmp_called_instance_44 = var_p;
                        frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 557;
                        tmp_subscribed_name_16 = CALL_METHOD_NO_ARGS(tmp_called_instance_44, const_str_plain_communicate);
                        if (tmp_subscribed_name_16 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 557;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_subscript_name_16 = const_int_0;
                        tmp_assign_source_48 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_16, tmp_subscript_name_16, 0);
                        Py_DECREF(tmp_subscribed_name_16);
                        if (tmp_assign_source_48 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 557;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        assert(var_output == NULL);
                        var_output = tmp_assign_source_48;
                    }
                    {
                        PyObject *tmp_assign_source_49;
                        PyObject *tmp_iter_arg_5;
                        PyObject *tmp_range_arg_2;
                        PyObject *tmp_len_arg_5;
                        PyObject *tmp_source_name_51;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_51 = par_ui;
                        tmp_len_arg_5 = LOOKUP_ATTRIBUTE(tmp_source_name_51, const_str_plain_devs_list);
                        if (tmp_len_arg_5 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 558;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_range_arg_2 = BUILTIN_LEN(tmp_len_arg_5);
                        Py_DECREF(tmp_len_arg_5);
                        if (tmp_range_arg_2 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 558;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_iter_arg_5 = BUILTIN_RANGE(tmp_range_arg_2);
                        Py_DECREF(tmp_range_arg_2);
                        if (tmp_iter_arg_5 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 558;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_assign_source_49 = MAKE_ITERATOR(tmp_iter_arg_5);
                        Py_DECREF(tmp_iter_arg_5);
                        if (tmp_assign_source_49 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 558;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        assert(tmp_for_loop_5__for_iterator == NULL);
                        tmp_for_loop_5__for_iterator = tmp_assign_source_49;
                    }
                    // Tried code:
                    loop_start_5:;
                    {
                        PyObject *tmp_next_source_5;
                        PyObject *tmp_assign_source_50;
                        CHECK_OBJECT(tmp_for_loop_5__for_iterator);
                        tmp_next_source_5 = tmp_for_loop_5__for_iterator;
                        tmp_assign_source_50 = ITERATOR_NEXT(tmp_next_source_5);
                        if (tmp_assign_source_50 == NULL) {
                            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                                goto loop_end_5;
                            } else {

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                exception_lineno = 558;
                                goto try_except_handler_6;
                            }
                        }

                        {
                            PyObject *old = tmp_for_loop_5__iter_value;
                            tmp_for_loop_5__iter_value = tmp_assign_source_50;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assign_source_51;
                        CHECK_OBJECT(tmp_for_loop_5__iter_value);
                        tmp_assign_source_51 = tmp_for_loop_5__iter_value;
                        {
                            PyObject *old = var_j;
                            var_j = tmp_assign_source_51;
                            Py_INCREF(var_j);
                            Py_XDECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_called_name_11;
                        PyObject *tmp_mvar_value_25;
                        PyObject *tmp_call_result_18;
                        PyObject *tmp_args_element_name_25;
                        tmp_mvar_value_25 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_postlock);

                        if (unlikely(tmp_mvar_value_25 == NULL)) {
                            tmp_mvar_value_25 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_postlock);
                        }

                        if (tmp_mvar_value_25 == NULL) {

                            exception_type = PyExc_NameError;
                            Py_INCREF(exception_type);
                            exception_value = UNSTREAM_STRING(&constant_bin[ 5058 ], 37, 0);
                            exception_tb = NULL;

                            exception_lineno = 559;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto try_except_handler_6;
                        }

                        tmp_called_name_11 = tmp_mvar_value_25;
                        CHECK_OBJECT(var_j);
                        tmp_args_element_name_25 = var_j;
                        frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 559;
                        tmp_call_result_18 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_11, tmp_args_element_name_25);
                        if (tmp_call_result_18 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 559;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto try_except_handler_6;
                        }
                        Py_DECREF(tmp_call_result_18);
                    }
                    if (CONSIDER_THREADING() == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 558;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto try_except_handler_6;
                    }
                    goto loop_start_5;
                    loop_end_5:;
                    goto try_end_5;
                    // Exception handler code:
                    try_except_handler_6:;
                    exception_keeper_type_5 = exception_type;
                    exception_keeper_value_5 = exception_value;
                    exception_keeper_tb_5 = exception_tb;
                    exception_keeper_lineno_5 = exception_lineno;
                    exception_type = NULL;
                    exception_value = NULL;
                    exception_tb = NULL;
                    exception_lineno = 0;

                    Py_XDECREF(tmp_for_loop_5__iter_value);
                    tmp_for_loop_5__iter_value = NULL;

                    CHECK_OBJECT((PyObject *)tmp_for_loop_5__for_iterator);
                    Py_DECREF(tmp_for_loop_5__for_iterator);
                    tmp_for_loop_5__for_iterator = NULL;

                    // Re-raise.
                    exception_type = exception_keeper_type_5;
                    exception_value = exception_keeper_value_5;
                    exception_tb = exception_keeper_tb_5;
                    exception_lineno = exception_keeper_lineno_5;

                    goto frame_exception_exit_1;
                    // End of try:
                    try_end_5:;
                    Py_XDECREF(tmp_for_loop_5__iter_value);
                    tmp_for_loop_5__iter_value = NULL;

                    CHECK_OBJECT((PyObject *)tmp_for_loop_5__for_iterator);
                    Py_DECREF(tmp_for_loop_5__for_iterator);
                    tmp_for_loop_5__for_iterator = NULL;

                    {
                        PyObject *tmp_assign_source_52;
                        PyObject *tmp_called_instance_45;
                        PyObject *tmp_mvar_value_26;
                        PyObject *tmp_args_element_name_26;
                        PyObject *tmp_args_element_name_27;
                        tmp_mvar_value_26 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

                        if (unlikely(tmp_mvar_value_26 == NULL)) {
                            tmp_mvar_value_26 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
                        }

                        if (tmp_mvar_value_26 == NULL) {

                            exception_type = PyExc_NameError;
                            Py_INCREF(exception_type);
                            exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
                            exception_tb = NULL;

                            exception_lineno = 562;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_called_instance_45 = tmp_mvar_value_26;
                        tmp_args_element_name_26 = const_str_digest_deff663361aa8c2f12d71e786d757b70;
                        CHECK_OBJECT(var_output);
                        tmp_args_element_name_27 = var_output;
                        frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 562;
                        {
                            PyObject *call_args[] = {tmp_args_element_name_26, tmp_args_element_name_27};
                            tmp_assign_source_52 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_45, const_str_plain_search, call_args);
                        }

                        if (tmp_assign_source_52 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 562;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        {
                            PyObject *old = var_m;
                            var_m = tmp_assign_source_52;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        nuitka_bool tmp_condition_result_17;
                        int tmp_truth_name_4;
                        CHECK_OBJECT(var_m);
                        tmp_truth_name_4 = CHECK_IF_TRUE(var_m);
                        if (tmp_truth_name_4 == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 563;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_condition_result_17 = tmp_truth_name_4 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_17 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_17;
                        } else {
                            goto branch_no_17;
                        }
                        branch_yes_17:;
                        {
                            PyObject *tmp_assign_source_53;
                            PyObject *tmp_left_name_15;
                            PyObject *tmp_called_instance_46;
                            PyObject *tmp_right_name_15;
                            CHECK_OBJECT(var_m);
                            tmp_called_instance_46 = var_m;
                            frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 564;
                            tmp_left_name_15 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_46, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_int_pos_1_tuple, 0));

                            if (tmp_left_name_15 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 564;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_right_name_15 = const_str_digest_57b3a385d4fb10c0e6d10f4192f7bb01;
                            tmp_assign_source_53 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_15, tmp_right_name_15);
                            Py_DECREF(tmp_left_name_15);
                            if (tmp_assign_source_53 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 564;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto frame_exception_exit_1;
                            }
                            {
                                PyObject *old = var_drive;
                                assert(old != NULL);
                                var_drive = tmp_assign_source_53;
                                Py_DECREF(old);
                            }

                        }
                        branch_no_17:;
                    }
                    goto branch_end_16;
                    branch_no_16:;
                    {
                        nuitka_bool tmp_condition_result_18;
                        PyObject *tmp_compexpr_left_22;
                        PyObject *tmp_compexpr_right_22;
                        PyObject *tmp_source_name_52;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_52 = par_ui;
                        tmp_compexpr_left_22 = LOOKUP_ATTRIBUTE(tmp_source_name_52, const_str_plain_DEV_OS);
                        if (tmp_compexpr_left_22 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 568;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_compexpr_right_22 = const_str_plain_Linux;
                        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_22, tmp_compexpr_right_22);
                        Py_DECREF(tmp_compexpr_left_22);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 568;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_condition_result_18 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_18 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_18;
                        } else {
                            goto branch_no_18;
                        }
                        branch_yes_18:;
                        {
                            PyObject *tmp_assign_source_54;
                            PyObject *tmp_subscribed_name_17;
                            PyObject *tmp_subscribed_name_18;
                            PyObject *tmp_source_name_53;
                            PyObject *tmp_subscript_name_17;
                            PyObject *tmp_subscript_name_18;
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_53 = par_ui;
                            tmp_subscribed_name_18 = LOOKUP_ATTRIBUTE(tmp_source_name_53, const_str_plain_usb_list);
                            if (tmp_subscribed_name_18 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 569;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto frame_exception_exit_1;
                            }
                            CHECK_OBJECT(var_index2);
                            tmp_subscript_name_17 = var_index2;
                            tmp_subscribed_name_17 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_18, tmp_subscript_name_17);
                            Py_DECREF(tmp_subscribed_name_18);
                            if (tmp_subscribed_name_17 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 569;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_subscript_name_18 = const_int_pos_1;
                            tmp_assign_source_54 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_17, tmp_subscript_name_18, 1);
                            Py_DECREF(tmp_subscribed_name_17);
                            if (tmp_assign_source_54 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 569;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto frame_exception_exit_1;
                            }
                            {
                                PyObject *old = var_drive;
                                assert(old != NULL);
                                var_drive = tmp_assign_source_54;
                                Py_DECREF(old);
                            }

                        }
                        branch_no_18:;
                    }
                    branch_end_16:;
                }
                {
                    nuitka_bool tmp_condition_result_19;
                    int tmp_and_left_truth_12;
                    nuitka_bool tmp_and_left_value_12;
                    nuitka_bool tmp_and_right_value_12;
                    PyObject *tmp_compexpr_left_23;
                    PyObject *tmp_compexpr_right_23;
                    PyObject *tmp_operand_name_6;
                    PyObject *tmp_called_name_12;
                    PyObject *tmp_source_name_54;
                    PyObject *tmp_source_name_55;
                    PyObject *tmp_mvar_value_27;
                    PyObject *tmp_args_element_name_28;
                    if (var_drive == NULL) {

                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "drive");
                        exception_tb = NULL;

                        exception_lineno = 570;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_compexpr_left_23 = var_drive;
                    tmp_compexpr_right_23 = const_str_empty;
                    tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_23, tmp_compexpr_right_23);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 570;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_and_left_value_12 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_and_left_truth_12 = tmp_and_left_value_12 == NUITKA_BOOL_TRUE ? 1 : 0;
                    if (tmp_and_left_truth_12 == 1) {
                        goto and_right_12;
                    } else {
                        goto and_left_12;
                    }
                    and_right_12:;
                    tmp_mvar_value_27 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                    if (unlikely(tmp_mvar_value_27 == NULL)) {
                        tmp_mvar_value_27 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                    }

                    if (tmp_mvar_value_27 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                        exception_tb = NULL;

                        exception_lineno = 570;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_source_name_55 = tmp_mvar_value_27;
                    tmp_source_name_54 = LOOKUP_ATTRIBUTE(tmp_source_name_55, const_str_plain_path);
                    if (tmp_source_name_54 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 570;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_called_name_12 = LOOKUP_ATTRIBUTE(tmp_source_name_54, const_str_plain_isdir);
                    Py_DECREF(tmp_source_name_54);
                    if (tmp_called_name_12 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 570;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    if (var_drive == NULL) {
                        Py_DECREF(tmp_called_name_12);
                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "drive");
                        exception_tb = NULL;

                        exception_lineno = 570;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_args_element_name_28 = var_drive;
                    frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 570;
                    tmp_operand_name_6 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_12, tmp_args_element_name_28);
                    Py_DECREF(tmp_called_name_12);
                    if (tmp_operand_name_6 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 570;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_res = CHECK_IF_TRUE(tmp_operand_name_6);
                    Py_DECREF(tmp_operand_name_6);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 570;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_and_right_value_12 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_condition_result_19 = tmp_and_right_value_12;
                    goto and_end_12;
                    and_left_12:;
                    tmp_condition_result_19 = tmp_and_left_value_12;
                    and_end_12:;
                    if (tmp_condition_result_19 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_19;
                    } else {
                        goto branch_no_19;
                    }
                    branch_yes_19:;
                    {
                        PyObject *tmp_called_instance_47;
                        PyObject *tmp_call_result_19;
                        CHECK_OBJECT(par_ui);
                        tmp_called_instance_47 = par_ui;
                        frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 571;
                        tmp_call_result_19 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_47, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_7dce1312d265510c9f5fb49e99196289_tuple, 0));

                        if (tmp_call_result_19 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 571;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        Py_DECREF(tmp_call_result_19);
                    }
                    {
                        PyObject *tmp_called_instance_48;
                        PyObject *tmp_call_result_20;
                        CHECK_OBJECT(par_ui);
                        tmp_called_instance_48 = par_ui;
                        frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 572;
                        tmp_call_result_20 = CALL_METHOD_NO_ARGS(tmp_called_instance_48, const_str_plain_setupUSB_prompt);
                        if (tmp_call_result_20 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 572;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        Py_DECREF(tmp_call_result_20);
                    }
                    tmp_return_value = Py_None;
                    Py_INCREF(tmp_return_value);
                    goto frame_return_exit_1;
                    branch_no_19:;
                }
                {
                    nuitka_bool tmp_condition_result_20;
                    int tmp_and_left_truth_13;
                    nuitka_bool tmp_and_left_value_13;
                    nuitka_bool tmp_and_right_value_13;
                    PyObject *tmp_compexpr_left_24;
                    PyObject *tmp_compexpr_right_24;
                    PyObject *tmp_called_name_13;
                    PyObject *tmp_source_name_56;
                    PyObject *tmp_source_name_57;
                    PyObject *tmp_mvar_value_28;
                    PyObject *tmp_call_result_21;
                    PyObject *tmp_args_element_name_29;
                    int tmp_truth_name_5;
                    if (var_drive == NULL) {

                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "drive");
                        exception_tb = NULL;

                        exception_lineno = 575;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_compexpr_left_24 = var_drive;
                    tmp_compexpr_right_24 = const_str_empty;
                    tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_24, tmp_compexpr_right_24);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 575;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_and_left_value_13 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_and_left_truth_13 = tmp_and_left_value_13 == NUITKA_BOOL_TRUE ? 1 : 0;
                    if (tmp_and_left_truth_13 == 1) {
                        goto and_right_13;
                    } else {
                        goto and_left_13;
                    }
                    and_right_13:;
                    tmp_mvar_value_28 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                    if (unlikely(tmp_mvar_value_28 == NULL)) {
                        tmp_mvar_value_28 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                    }

                    if (tmp_mvar_value_28 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                        exception_tb = NULL;

                        exception_lineno = 575;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_source_name_57 = tmp_mvar_value_28;
                    tmp_source_name_56 = LOOKUP_ATTRIBUTE(tmp_source_name_57, const_str_plain_path);
                    if (tmp_source_name_56 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 575;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_called_name_13 = LOOKUP_ATTRIBUTE(tmp_source_name_56, const_str_plain_isdir);
                    Py_DECREF(tmp_source_name_56);
                    if (tmp_called_name_13 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 575;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    if (var_drive == NULL) {
                        Py_DECREF(tmp_called_name_13);
                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "drive");
                        exception_tb = NULL;

                        exception_lineno = 575;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_args_element_name_29 = var_drive;
                    frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 575;
                    tmp_call_result_21 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_13, tmp_args_element_name_29);
                    Py_DECREF(tmp_called_name_13);
                    if (tmp_call_result_21 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 575;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_truth_name_5 = CHECK_IF_TRUE(tmp_call_result_21);
                    if (tmp_truth_name_5 == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_call_result_21);

                        exception_lineno = 575;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_and_right_value_13 = tmp_truth_name_5 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    Py_DECREF(tmp_call_result_21);
                    tmp_condition_result_20 = tmp_and_right_value_13;
                    goto and_end_13;
                    and_left_13:;
                    tmp_condition_result_20 = tmp_and_left_value_13;
                    and_end_13:;
                    if (tmp_condition_result_20 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_20;
                    } else {
                        goto branch_no_20;
                    }
                    branch_yes_20:;
                    {
                        PyObject *tmp_assign_source_55;
                        PyObject *tmp_left_name_16;
                        PyObject *tmp_right_name_16;
                        if (var_drive == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "drive");
                            exception_tb = NULL;

                            exception_lineno = 576;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_left_name_16 = var_drive;
                        tmp_right_name_16 = const_str_digest_4927d8947aa11be5037039c09aabf3b0;
                        tmp_assign_source_55 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_16, tmp_right_name_16);
                        if (tmp_assign_source_55 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 576;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        assert(var_dir_fl == NULL);
                        var_dir_fl = tmp_assign_source_55;
                    }
                    {
                        nuitka_bool tmp_condition_result_21;
                        PyObject *tmp_called_instance_49;
                        PyObject *tmp_source_name_58;
                        PyObject *tmp_mvar_value_29;
                        PyObject *tmp_call_result_22;
                        PyObject *tmp_args_element_name_30;
                        int tmp_truth_name_6;
                        tmp_mvar_value_29 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                        if (unlikely(tmp_mvar_value_29 == NULL)) {
                            tmp_mvar_value_29 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                        }

                        if (tmp_mvar_value_29 == NULL) {

                            exception_type = PyExc_NameError;
                            Py_INCREF(exception_type);
                            exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                            exception_tb = NULL;

                            exception_lineno = 577;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_source_name_58 = tmp_mvar_value_29;
                        tmp_called_instance_49 = LOOKUP_ATTRIBUTE(tmp_source_name_58, const_str_plain_path);
                        if (tmp_called_instance_49 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 577;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(var_dir_fl);
                        tmp_args_element_name_30 = var_dir_fl;
                        frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 577;
                        {
                            PyObject *call_args[] = {tmp_args_element_name_30};
                            tmp_call_result_22 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_49, const_str_plain_isdir, call_args);
                        }

                        Py_DECREF(tmp_called_instance_49);
                        if (tmp_call_result_22 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 577;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_truth_name_6 = CHECK_IF_TRUE(tmp_call_result_22);
                        if (tmp_truth_name_6 == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_call_result_22);

                            exception_lineno = 577;
                            type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_condition_result_21 = tmp_truth_name_6 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        Py_DECREF(tmp_call_result_22);
                        if (tmp_condition_result_21 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_21;
                        } else {
                            goto branch_no_21;
                        }
                        branch_yes_21:;
                        {
                            PyObject *tmp_assign_source_56;
                            // Tried code:
                            {
                                PyObject *tmp_assign_source_57;
                                PyObject *tmp_iter_arg_6;
                                PyObject *tmp_called_instance_50;
                                PyObject *tmp_mvar_value_30;
                                PyObject *tmp_args_element_name_31;
                                tmp_mvar_value_30 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                                if (unlikely(tmp_mvar_value_30 == NULL)) {
                                    tmp_mvar_value_30 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                                }

                                if (tmp_mvar_value_30 == NULL) {

                                    exception_type = PyExc_NameError;
                                    Py_INCREF(exception_type);
                                    exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                                    exception_tb = NULL;

                                    exception_lineno = 578;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto try_except_handler_7;
                                }

                                tmp_called_instance_50 = tmp_mvar_value_30;
                                CHECK_OBJECT(var_dir_fl);
                                tmp_args_element_name_31 = var_dir_fl;
                                frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 578;
                                {
                                    PyObject *call_args[] = {tmp_args_element_name_31};
                                    tmp_iter_arg_6 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_50, const_str_plain_listdir, call_args);
                                }

                                if (tmp_iter_arg_6 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 578;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto try_except_handler_7;
                                }
                                tmp_assign_source_57 = MAKE_ITERATOR(tmp_iter_arg_6);
                                Py_DECREF(tmp_iter_arg_6);
                                if (tmp_assign_source_57 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 578;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto try_except_handler_7;
                                }
                                assert(tmp_list_contraction_1__$0 == NULL);
                                tmp_list_contraction_1__$0 = tmp_assign_source_57;
                            }
                            {
                                PyObject *tmp_assign_source_58;
                                tmp_assign_source_58 = PyList_New(0);
                                assert(tmp_list_contraction_1__contraction_result == NULL);
                                tmp_list_contraction_1__contraction_result = tmp_assign_source_58;
                            }
                            loop_start_6:;
                            {
                                PyObject *tmp_next_source_6;
                                PyObject *tmp_assign_source_59;
                                CHECK_OBJECT(tmp_list_contraction_1__$0);
                                tmp_next_source_6 = tmp_list_contraction_1__$0;
                                tmp_assign_source_59 = ITERATOR_NEXT(tmp_next_source_6);
                                if (tmp_assign_source_59 == NULL) {
                                    if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                                        goto loop_end_6;
                                    } else {

                                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                        exception_lineno = 578;
                                        goto try_except_handler_7;
                                    }
                                }

                                {
                                    PyObject *old = tmp_list_contraction_1__iter_value_0;
                                    tmp_list_contraction_1__iter_value_0 = tmp_assign_source_59;
                                    Py_XDECREF(old);
                                }

                            }
                            {
                                PyObject *tmp_assign_source_60;
                                CHECK_OBJECT(tmp_list_contraction_1__iter_value_0);
                                tmp_assign_source_60 = tmp_list_contraction_1__iter_value_0;
                                {
                                    PyObject *old = var_f;
                                    var_f = tmp_assign_source_60;
                                    Py_INCREF(var_f);
                                    Py_XDECREF(old);
                                }

                            }
                            {
                                nuitka_bool tmp_condition_result_22;
                                PyObject *tmp_called_name_14;
                                PyObject *tmp_source_name_59;
                                PyObject *tmp_source_name_60;
                                PyObject *tmp_mvar_value_31;
                                PyObject *tmp_call_result_23;
                                PyObject *tmp_args_element_name_32;
                                PyObject *tmp_left_name_17;
                                PyObject *tmp_right_name_17;
                                int tmp_truth_name_7;
                                tmp_mvar_value_31 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                                if (unlikely(tmp_mvar_value_31 == NULL)) {
                                    tmp_mvar_value_31 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                                }

                                if (tmp_mvar_value_31 == NULL) {

                                    exception_type = PyExc_NameError;
                                    Py_INCREF(exception_type);
                                    exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                                    exception_tb = NULL;

                                    exception_lineno = 578;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto try_except_handler_7;
                                }

                                tmp_source_name_60 = tmp_mvar_value_31;
                                tmp_source_name_59 = LOOKUP_ATTRIBUTE(tmp_source_name_60, const_str_plain_path);
                                if (tmp_source_name_59 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 578;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto try_except_handler_7;
                                }
                                tmp_called_name_14 = LOOKUP_ATTRIBUTE(tmp_source_name_59, const_str_plain_isfile);
                                Py_DECREF(tmp_source_name_59);
                                if (tmp_called_name_14 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 578;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto try_except_handler_7;
                                }
                                CHECK_OBJECT(var_dir_fl);
                                tmp_left_name_17 = var_dir_fl;
                                CHECK_OBJECT(var_f);
                                tmp_right_name_17 = var_f;
                                tmp_args_element_name_32 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_17, tmp_right_name_17);
                                if (tmp_args_element_name_32 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                    Py_DECREF(tmp_called_name_14);

                                    exception_lineno = 578;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto try_except_handler_7;
                                }
                                frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 578;
                                tmp_call_result_23 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_14, tmp_args_element_name_32);
                                Py_DECREF(tmp_called_name_14);
                                Py_DECREF(tmp_args_element_name_32);
                                if (tmp_call_result_23 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 578;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto try_except_handler_7;
                                }
                                tmp_truth_name_7 = CHECK_IF_TRUE(tmp_call_result_23);
                                if (tmp_truth_name_7 == -1) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                    Py_DECREF(tmp_call_result_23);

                                    exception_lineno = 578;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto try_except_handler_7;
                                }
                                tmp_condition_result_22 = tmp_truth_name_7 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                                Py_DECREF(tmp_call_result_23);
                                if (tmp_condition_result_22 == NUITKA_BOOL_TRUE) {
                                    goto branch_yes_22;
                                } else {
                                    goto branch_no_22;
                                }
                                branch_yes_22:;
                                {
                                    PyObject *tmp_append_list_1;
                                    PyObject *tmp_append_value_1;
                                    CHECK_OBJECT(tmp_list_contraction_1__contraction_result);
                                    tmp_append_list_1 = tmp_list_contraction_1__contraction_result;
                                    CHECK_OBJECT(var_f);
                                    tmp_append_value_1 = var_f;
                                    assert(PyList_Check(tmp_append_list_1));
                                    tmp_res = PyList_Append(tmp_append_list_1, tmp_append_value_1);
                                    if (tmp_res == -1) {
                                        assert(ERROR_OCCURRED());

                                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                        exception_lineno = 578;
                                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                        goto try_except_handler_7;
                                    }
                                }
                                branch_no_22:;
                            }
                            if (CONSIDER_THREADING() == false) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 578;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto try_except_handler_7;
                            }
                            goto loop_start_6;
                            loop_end_6:;
                            CHECK_OBJECT(tmp_list_contraction_1__contraction_result);
                            tmp_assign_source_56 = tmp_list_contraction_1__contraction_result;
                            Py_INCREF(tmp_assign_source_56);
                            goto try_return_handler_7;
                            // tried codes exits in all cases
                            NUITKA_CANNOT_GET_HERE(runop$$$function_7_run_setupUSB);
                            return NULL;
                            // Return handler code:
                            try_return_handler_7:;
                            CHECK_OBJECT((PyObject *)tmp_list_contraction_1__$0);
                            Py_DECREF(tmp_list_contraction_1__$0);
                            tmp_list_contraction_1__$0 = NULL;

                            CHECK_OBJECT((PyObject *)tmp_list_contraction_1__contraction_result);
                            Py_DECREF(tmp_list_contraction_1__contraction_result);
                            tmp_list_contraction_1__contraction_result = NULL;

                            Py_XDECREF(tmp_list_contraction_1__iter_value_0);
                            tmp_list_contraction_1__iter_value_0 = NULL;

                            goto outline_result_1;
                            // Exception handler code:
                            try_except_handler_7:;
                            exception_keeper_type_6 = exception_type;
                            exception_keeper_value_6 = exception_value;
                            exception_keeper_tb_6 = exception_tb;
                            exception_keeper_lineno_6 = exception_lineno;
                            exception_type = NULL;
                            exception_value = NULL;
                            exception_tb = NULL;
                            exception_lineno = 0;

                            Py_XDECREF(tmp_list_contraction_1__$0);
                            tmp_list_contraction_1__$0 = NULL;

                            Py_XDECREF(tmp_list_contraction_1__contraction_result);
                            tmp_list_contraction_1__contraction_result = NULL;

                            Py_XDECREF(tmp_list_contraction_1__iter_value_0);
                            tmp_list_contraction_1__iter_value_0 = NULL;

                            // Re-raise.
                            exception_type = exception_keeper_type_6;
                            exception_value = exception_keeper_value_6;
                            exception_tb = exception_keeper_tb_6;
                            exception_lineno = exception_keeper_lineno_6;

                            goto frame_exception_exit_1;
                            // End of try:
                            // Return statement must have exited already.
                            NUITKA_CANNOT_GET_HERE(runop$$$function_7_run_setupUSB);
                            return NULL;
                            outline_result_1:;
                            assert(var_existingfiles == NULL);
                            var_existingfiles = tmp_assign_source_56;
                        }
                        {
                            nuitka_bool tmp_condition_result_23;
                            PyObject *tmp_compexpr_left_25;
                            PyObject *tmp_compexpr_right_25;
                            PyObject *tmp_len_arg_6;
                            CHECK_OBJECT(var_existingfiles);
                            tmp_len_arg_6 = var_existingfiles;
                            tmp_compexpr_left_25 = BUILTIN_LEN(tmp_len_arg_6);
                            if (tmp_compexpr_left_25 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 579;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_compexpr_right_25 = const_int_0;
                            tmp_res = RICH_COMPARE_BOOL_GT_OBJECT_INT(tmp_compexpr_left_25, tmp_compexpr_right_25);
                            Py_DECREF(tmp_compexpr_left_25);
                            assert(!(tmp_res == -1));
                            tmp_condition_result_23 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            if (tmp_condition_result_23 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_23;
                            } else {
                                goto branch_no_23;
                            }
                            branch_yes_23:;
                            {
                                PyObject *tmp_assign_source_61;
                                PyObject *tmp_iter_arg_7;
                                CHECK_OBJECT(var_existingfiles);
                                tmp_iter_arg_7 = var_existingfiles;
                                tmp_assign_source_61 = MAKE_ITERATOR(tmp_iter_arg_7);
                                if (tmp_assign_source_61 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 580;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto frame_exception_exit_1;
                                }
                                assert(tmp_for_loop_6__for_iterator == NULL);
                                tmp_for_loop_6__for_iterator = tmp_assign_source_61;
                            }
                            // Tried code:
                            loop_start_7:;
                            {
                                PyObject *tmp_next_source_7;
                                PyObject *tmp_assign_source_62;
                                CHECK_OBJECT(tmp_for_loop_6__for_iterator);
                                tmp_next_source_7 = tmp_for_loop_6__for_iterator;
                                tmp_assign_source_62 = ITERATOR_NEXT(tmp_next_source_7);
                                if (tmp_assign_source_62 == NULL) {
                                    if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                                        goto loop_end_7;
                                    } else {

                                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                        exception_lineno = 580;
                                        goto try_except_handler_8;
                                    }
                                }

                                {
                                    PyObject *old = tmp_for_loop_6__iter_value;
                                    tmp_for_loop_6__iter_value = tmp_assign_source_62;
                                    Py_XDECREF(old);
                                }

                            }
                            {
                                PyObject *tmp_assign_source_63;
                                CHECK_OBJECT(tmp_for_loop_6__iter_value);
                                tmp_assign_source_63 = tmp_for_loop_6__iter_value;
                                {
                                    PyObject *old = var_p;
                                    var_p = tmp_assign_source_63;
                                    Py_INCREF(var_p);
                                    Py_XDECREF(old);
                                }

                            }
                            // Tried code:
                            {
                                PyObject *tmp_assign_source_64;
                                PyObject *tmp_open_filename_1;
                                PyObject *tmp_left_name_18;
                                PyObject *tmp_right_name_18;
                                PyObject *tmp_open_mode_1;
                                CHECK_OBJECT(var_dir_fl);
                                tmp_left_name_18 = var_dir_fl;
                                CHECK_OBJECT(var_p);
                                tmp_right_name_18 = var_p;
                                tmp_open_filename_1 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_18, tmp_right_name_18);
                                if (tmp_open_filename_1 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 582;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto try_except_handler_9;
                                }
                                tmp_open_mode_1 = const_str_plain_r;
                                tmp_assign_source_64 = BUILTIN_OPEN(tmp_open_filename_1, tmp_open_mode_1, NULL);
                                Py_DECREF(tmp_open_filename_1);
                                if (tmp_assign_source_64 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 582;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto try_except_handler_9;
                                }
                                {
                                    PyObject *old = var_f;
                                    var_f = tmp_assign_source_64;
                                    Py_XDECREF(old);
                                }

                            }
                            {
                                PyObject *tmp_assign_source_65;
                                PyObject *tmp_called_instance_51;
                                CHECK_OBJECT(var_f);
                                tmp_called_instance_51 = var_f;
                                frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 583;
                                tmp_assign_source_65 = CALL_METHOD_NO_ARGS(tmp_called_instance_51, const_str_plain_read);
                                if (tmp_assign_source_65 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 583;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto try_except_handler_9;
                                }
                                {
                                    PyObject *old = var_txt;
                                    var_txt = tmp_assign_source_65;
                                    Py_XDECREF(old);
                                }

                            }
                            {
                                PyObject *tmp_called_instance_52;
                                PyObject *tmp_call_result_24;
                                CHECK_OBJECT(var_f);
                                tmp_called_instance_52 = var_f;
                                frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 584;
                                tmp_call_result_24 = CALL_METHOD_NO_ARGS(tmp_called_instance_52, const_str_plain_close);
                                if (tmp_call_result_24 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 584;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto try_except_handler_9;
                                }
                                Py_DECREF(tmp_call_result_24);
                            }
                            {
                                PyObject *tmp_assign_source_66;
                                PyObject *tmp_tuple_element_1;
                                PyObject *tmp_left_name_19;
                                PyObject *tmp_right_name_19;
                                CHECK_OBJECT(var_dir_fl);
                                tmp_left_name_19 = var_dir_fl;
                                CHECK_OBJECT(var_p);
                                tmp_right_name_19 = var_p;
                                tmp_tuple_element_1 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_19, tmp_right_name_19);
                                if (tmp_tuple_element_1 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 585;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto try_except_handler_9;
                                }
                                tmp_assign_source_66 = PyTuple_New(2);
                                PyTuple_SET_ITEM(tmp_assign_source_66, 0, tmp_tuple_element_1);
                                CHECK_OBJECT(var_txt);
                                tmp_tuple_element_1 = var_txt;
                                Py_INCREF(tmp_tuple_element_1);
                                PyTuple_SET_ITEM(tmp_assign_source_66, 1, tmp_tuple_element_1);
                                {
                                    PyObject *old = var_tp;
                                    var_tp = tmp_assign_source_66;
                                    Py_XDECREF(old);
                                }

                            }
                            {
                                PyObject *tmp_called_instance_53;
                                PyObject *tmp_call_result_25;
                                PyObject *tmp_args_element_name_33;
                                CHECK_OBJECT(var_preserved_files);
                                tmp_called_instance_53 = var_preserved_files;
                                CHECK_OBJECT(var_tp);
                                tmp_args_element_name_33 = var_tp;
                                frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 586;
                                {
                                    PyObject *call_args[] = {tmp_args_element_name_33};
                                    tmp_call_result_25 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_53, const_str_plain_append, call_args);
                                }

                                if (tmp_call_result_25 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 586;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto try_except_handler_9;
                                }
                                Py_DECREF(tmp_call_result_25);
                            }
                            goto try_end_6;
                            // Exception handler code:
                            try_except_handler_9:;
                            exception_keeper_type_7 = exception_type;
                            exception_keeper_value_7 = exception_value;
                            exception_keeper_tb_7 = exception_tb;
                            exception_keeper_lineno_7 = exception_lineno;
                            exception_type = NULL;
                            exception_value = NULL;
                            exception_tb = NULL;
                            exception_lineno = 0;

                            // Preserve existing published exception.
                            PRESERVE_FRAME_EXCEPTION(frame_120e6cbb634311d08ade47582d57e262);
                            if (exception_keeper_tb_7 == NULL) {
                                exception_keeper_tb_7 = MAKE_TRACEBACK(frame_120e6cbb634311d08ade47582d57e262, exception_keeper_lineno_7);
                            } else if (exception_keeper_lineno_7 != 0) {
                                exception_keeper_tb_7 = ADD_TRACEBACK(exception_keeper_tb_7, frame_120e6cbb634311d08ade47582d57e262, exception_keeper_lineno_7);
                            }

                            NORMALIZE_EXCEPTION(&exception_keeper_type_7, &exception_keeper_value_7, &exception_keeper_tb_7);
                            PUBLISH_EXCEPTION(&exception_keeper_type_7, &exception_keeper_value_7, &exception_keeper_tb_7);
                            {
                                nuitka_bool tmp_condition_result_24;
                                PyObject *tmp_operand_name_7;
                                PyObject *tmp_compexpr_left_26;
                                PyObject *tmp_compexpr_right_26;
                                tmp_compexpr_left_26 = EXC_TYPE(PyThreadState_GET());
                                tmp_compexpr_right_26 = PyExc_IOError;
                                tmp_res = EXCEPTION_MATCH_BOOL(tmp_compexpr_left_26, tmp_compexpr_right_26);
                                if (tmp_res == -1) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 587;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto try_except_handler_8;
                                }
                                tmp_operand_name_7 = (tmp_res != 0) ? Py_True : Py_False;
                                tmp_res = CHECK_IF_TRUE(tmp_operand_name_7);
                                if (tmp_res == -1) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 587;
                                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                    goto try_except_handler_8;
                                }
                                tmp_condition_result_24 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                                if (tmp_condition_result_24 == NUITKA_BOOL_TRUE) {
                                    goto branch_yes_24;
                                } else {
                                    goto branch_no_24;
                                }
                                branch_yes_24:;
                                tmp_result = RERAISE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                                if (unlikely(tmp_result == false)) {
                                    exception_lineno = 581;
                                }

                                if (exception_tb && exception_tb->tb_frame == &frame_120e6cbb634311d08ade47582d57e262->m_frame) frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = exception_tb->tb_lineno;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto try_except_handler_8;
                                branch_no_24:;
                            }
                            goto try_end_6;
                            // exception handler codes exits in all cases
                            NUITKA_CANNOT_GET_HERE(runop$$$function_7_run_setupUSB);
                            return NULL;
                            // End of try:
                            try_end_6:;
                            if (CONSIDER_THREADING() == false) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 580;
                                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                                goto try_except_handler_8;
                            }
                            goto loop_start_7;
                            loop_end_7:;
                            goto try_end_7;
                            // Exception handler code:
                            try_except_handler_8:;
                            exception_keeper_type_8 = exception_type;
                            exception_keeper_value_8 = exception_value;
                            exception_keeper_tb_8 = exception_tb;
                            exception_keeper_lineno_8 = exception_lineno;
                            exception_type = NULL;
                            exception_value = NULL;
                            exception_tb = NULL;
                            exception_lineno = 0;

                            Py_XDECREF(tmp_for_loop_6__iter_value);
                            tmp_for_loop_6__iter_value = NULL;

                            CHECK_OBJECT((PyObject *)tmp_for_loop_6__for_iterator);
                            Py_DECREF(tmp_for_loop_6__for_iterator);
                            tmp_for_loop_6__for_iterator = NULL;

                            // Re-raise.
                            exception_type = exception_keeper_type_8;
                            exception_value = exception_keeper_value_8;
                            exception_tb = exception_keeper_tb_8;
                            exception_lineno = exception_keeper_lineno_8;

                            goto frame_exception_exit_1;
                            // End of try:
                            try_end_7:;
                            Py_XDECREF(tmp_for_loop_6__iter_value);
                            tmp_for_loop_6__iter_value = NULL;

                            CHECK_OBJECT((PyObject *)tmp_for_loop_6__for_iterator);
                            Py_DECREF(tmp_for_loop_6__for_iterator);
                            tmp_for_loop_6__for_iterator = NULL;

                            branch_no_23:;
                        }
                        branch_no_21:;
                    }
                    branch_no_20:;
                }
                {
                    PyObject *tmp_called_instance_54;
                    PyObject *tmp_call_result_26;
                    CHECK_OBJECT(par_ui);
                    tmp_called_instance_54 = par_ui;
                    frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 591;
                    tmp_call_result_26 = CALL_METHOD_NO_ARGS(tmp_called_instance_54, const_str_plain_start_spin);
                    if (tmp_call_result_26 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 591;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_26);
                }
                {
                    PyObject *tmp_called_instance_55;
                    PyObject *tmp_source_name_61;
                    PyObject *tmp_call_result_27;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_61 = par_ui;
                    tmp_called_instance_55 = LOOKUP_ATTRIBUTE(tmp_source_name_61, const_str_plain_wait_instr);
                    if (tmp_called_instance_55 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 592;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 592;
                    tmp_call_result_27 = CALL_METHOD_NO_ARGS(tmp_called_instance_55, const_str_plain_show);
                    Py_DECREF(tmp_called_instance_55);
                    if (tmp_call_result_27 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 592;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_27);
                }
                {
                    PyObject *tmp_assattr_name_1;
                    PyObject *tmp_assattr_target_1;
                    tmp_assattr_name_1 = Py_True;
                    CHECK_OBJECT(par_ui);
                    tmp_assattr_target_1 = par_ui;
                    tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, const_str_plain_op_inprogress, tmp_assattr_name_1);
                    if (tmp_result == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 593;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                }
                {
                    PyObject *tmp_assign_source_67;
                    PyObject *tmp_called_instance_56;
                    PyObject *tmp_mvar_value_32;
                    tmp_mvar_value_32 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_threading);

                    if (unlikely(tmp_mvar_value_32 == NULL)) {
                        tmp_mvar_value_32 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_threading);
                    }

                    if (tmp_mvar_value_32 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 661 ], 38, 0);
                        exception_tb = NULL;

                        exception_lineno = 596;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_called_instance_56 = tmp_mvar_value_32;
                    frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 596;
                    tmp_assign_source_67 = CALL_METHOD_NO_ARGS(tmp_called_instance_56, const_str_plain_Event);
                    if (tmp_assign_source_67 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 596;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    assert(var_e == NULL);
                    var_e = tmp_assign_source_67;
                }
                {
                    PyObject *tmp_assign_source_68;
                    PyObject *tmp_called_name_15;
                    PyObject *tmp_source_name_62;
                    PyObject *tmp_mvar_value_33;
                    PyObject *tmp_kw_name_3;
                    PyObject *tmp_dict_key_6;
                    PyObject *tmp_dict_value_6;
                    PyObject *tmp_source_name_63;
                    PyObject *tmp_mvar_value_34;
                    PyObject *tmp_dict_key_7;
                    PyObject *tmp_dict_value_7;
                    PyObject *tmp_tuple_element_2;
                    tmp_mvar_value_33 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_threading);

                    if (unlikely(tmp_mvar_value_33 == NULL)) {
                        tmp_mvar_value_33 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_threading);
                    }

                    if (tmp_mvar_value_33 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 661 ], 38, 0);
                        exception_tb = NULL;

                        exception_lineno = 597;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_source_name_62 = tmp_mvar_value_33;
                    tmp_called_name_15 = LOOKUP_ATTRIBUTE(tmp_source_name_62, const_str_plain_Thread);
                    if (tmp_called_name_15 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 597;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_mvar_value_34 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_runsetup);

                    if (unlikely(tmp_mvar_value_34 == NULL)) {
                        tmp_mvar_value_34 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runsetup);
                    }

                    if (tmp_mvar_value_34 == NULL) {
                        Py_DECREF(tmp_called_name_15);
                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 5095 ], 37, 0);
                        exception_tb = NULL;

                        exception_lineno = 597;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_source_name_63 = tmp_mvar_value_34;
                    tmp_dict_value_6 = LOOKUP_ATTRIBUTE(tmp_source_name_63, const_str_plain_rt_setupUSB);
                    if (tmp_dict_value_6 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_15);

                        exception_lineno = 597;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_dict_key_6 = const_str_plain_target;
                    tmp_kw_name_3 = _PyDict_NewPresized( 2 );
                    tmp_res = PyDict_SetItem(tmp_kw_name_3, tmp_dict_key_6, tmp_dict_value_6);
                    Py_DECREF(tmp_dict_value_6);
                    assert(!(tmp_res != 0));
                    CHECK_OBJECT(par_ui);
                    tmp_tuple_element_2 = par_ui;
                    tmp_dict_value_7 = PyTuple_New(5);
                    Py_INCREF(tmp_tuple_element_2);
                    PyTuple_SET_ITEM(tmp_dict_value_7, 0, tmp_tuple_element_2);
                    CHECK_OBJECT(var_index);
                    tmp_tuple_element_2 = var_index;
                    Py_INCREF(tmp_tuple_element_2);
                    PyTuple_SET_ITEM(tmp_dict_value_7, 1, tmp_tuple_element_2);
                    CHECK_OBJECT(var_index2);
                    tmp_tuple_element_2 = var_index2;
                    Py_INCREF(tmp_tuple_element_2);
                    PyTuple_SET_ITEM(tmp_dict_value_7, 2, tmp_tuple_element_2);
                    CHECK_OBJECT(var_e);
                    tmp_tuple_element_2 = var_e;
                    Py_INCREF(tmp_tuple_element_2);
                    PyTuple_SET_ITEM(tmp_dict_value_7, 3, tmp_tuple_element_2);
                    CHECK_OBJECT(var_preserved_files);
                    tmp_tuple_element_2 = var_preserved_files;
                    Py_INCREF(tmp_tuple_element_2);
                    PyTuple_SET_ITEM(tmp_dict_value_7, 4, tmp_tuple_element_2);
                    tmp_dict_key_7 = const_str_plain_args;
                    tmp_res = PyDict_SetItem(tmp_kw_name_3, tmp_dict_key_7, tmp_dict_value_7);
                    Py_DECREF(tmp_dict_value_7);
                    assert(!(tmp_res != 0));
                    frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 597;
                    tmp_assign_source_68 = CALL_FUNCTION_WITH_KEYARGS(tmp_called_name_15, tmp_kw_name_3);
                    Py_DECREF(tmp_called_name_15);
                    Py_DECREF(tmp_kw_name_3);
                    if (tmp_assign_source_68 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 597;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    assert(var_t1 == NULL);
                    var_t1 = tmp_assign_source_68;
                }
                {
                    PyObject *tmp_called_instance_57;
                    PyObject *tmp_call_result_28;
                    CHECK_OBJECT(var_t1);
                    tmp_called_instance_57 = var_t1;
                    frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 598;
                    tmp_call_result_28 = CALL_METHOD_NO_ARGS(tmp_called_instance_57, const_str_plain_start);
                    if (tmp_call_result_28 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 598;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_28);
                }
                {
                    PyObject *tmp_assign_source_69;
                    PyObject *tmp_called_instance_58;
                    PyObject *tmp_mvar_value_35;
                    tmp_mvar_value_35 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_time);

                    if (unlikely(tmp_mvar_value_35 == NULL)) {
                        tmp_mvar_value_35 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_time);
                    }

                    if (tmp_mvar_value_35 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1164 ], 33, 0);
                        exception_tb = NULL;

                        exception_lineno = 599;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_called_instance_58 = tmp_mvar_value_35;
                    frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 599;
                    tmp_assign_source_69 = CALL_METHOD_NO_ARGS(tmp_called_instance_58, const_str_plain_time);
                    if (tmp_assign_source_69 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 599;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    assert(var_start_time == NULL);
                    var_start_time = tmp_assign_source_69;
                }
                {
                    PyObject *tmp_assign_source_70;
                    PyObject *tmp_called_name_16;
                    PyObject *tmp_source_name_64;
                    PyObject *tmp_mvar_value_36;
                    PyObject *tmp_kw_name_4;
                    PyObject *tmp_dict_key_8;
                    PyObject *tmp_dict_value_8;
                    PyObject *tmp_source_name_65;
                    PyObject *tmp_mvar_value_37;
                    PyObject *tmp_dict_key_9;
                    PyObject *tmp_dict_value_9;
                    PyObject *tmp_tuple_element_3;
                    PyObject *tmp_list_element_1;
                    PyObject *tmp_source_name_66;
                    PyObject *tmp_mvar_value_38;
                    tmp_mvar_value_36 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_threading);

                    if (unlikely(tmp_mvar_value_36 == NULL)) {
                        tmp_mvar_value_36 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_threading);
                    }

                    if (tmp_mvar_value_36 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 661 ], 38, 0);
                        exception_tb = NULL;

                        exception_lineno = 600;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_source_name_64 = tmp_mvar_value_36;
                    tmp_called_name_16 = LOOKUP_ATTRIBUTE(tmp_source_name_64, const_str_plain_Thread);
                    if (tmp_called_name_16 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 600;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_mvar_value_37 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_runthread);

                    if (unlikely(tmp_mvar_value_37 == NULL)) {
                        tmp_mvar_value_37 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runthread);
                    }

                    if (tmp_mvar_value_37 == NULL) {
                        Py_DECREF(tmp_called_name_16);
                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 1304 ], 38, 0);
                        exception_tb = NULL;

                        exception_lineno = 600;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_source_name_65 = tmp_mvar_value_37;
                    tmp_dict_value_8 = LOOKUP_ATTRIBUTE(tmp_source_name_65, const_str_plain_timeout_track);
                    if (tmp_dict_value_8 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_16);

                        exception_lineno = 600;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_dict_key_8 = const_str_plain_target;
                    tmp_kw_name_4 = _PyDict_NewPresized( 2 );
                    tmp_res = PyDict_SetItem(tmp_kw_name_4, tmp_dict_key_8, tmp_dict_value_8);
                    Py_DECREF(tmp_dict_value_8);
                    assert(!(tmp_res != 0));
                    CHECK_OBJECT(par_ui);
                    tmp_tuple_element_3 = par_ui;
                    tmp_dict_value_9 = PyTuple_New(13);
                    Py_INCREF(tmp_tuple_element_3);
                    PyTuple_SET_ITEM(tmp_dict_value_9, 0, tmp_tuple_element_3);
                    tmp_tuple_element_3 = const_float_120_0;
                    Py_INCREF(tmp_tuple_element_3);
                    PyTuple_SET_ITEM(tmp_dict_value_9, 1, tmp_tuple_element_3);
                    CHECK_OBJECT(var_start_time);
                    tmp_tuple_element_3 = var_start_time;
                    Py_INCREF(tmp_tuple_element_3);
                    PyTuple_SET_ITEM(tmp_dict_value_9, 2, tmp_tuple_element_3);
                    CHECK_OBJECT(var_t1);
                    tmp_list_element_1 = var_t1;
                    tmp_tuple_element_3 = PyList_New(1);
                    Py_INCREF(tmp_list_element_1);
                    PyList_SET_ITEM(tmp_tuple_element_3, 0, tmp_list_element_1);
                    PyTuple_SET_ITEM(tmp_dict_value_9, 3, tmp_tuple_element_3);
                    tmp_tuple_element_3 = Py_None;
                    Py_INCREF(tmp_tuple_element_3);
                    PyTuple_SET_ITEM(tmp_dict_value_9, 4, tmp_tuple_element_3);
                    CHECK_OBJECT(var_e);
                    tmp_tuple_element_3 = var_e;
                    Py_INCREF(tmp_tuple_element_3);
                    PyTuple_SET_ITEM(tmp_dict_value_9, 5, tmp_tuple_element_3);
                    tmp_tuple_element_3 = Py_None;
                    Py_INCREF(tmp_tuple_element_3);
                    PyTuple_SET_ITEM(tmp_dict_value_9, 6, tmp_tuple_element_3);
                    tmp_tuple_element_3 = Py_None;
                    Py_INCREF(tmp_tuple_element_3);
                    PyTuple_SET_ITEM(tmp_dict_value_9, 7, tmp_tuple_element_3);
                    tmp_mvar_value_38 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_cleanop);

                    if (unlikely(tmp_mvar_value_38 == NULL)) {
                        tmp_mvar_value_38 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_cleanop);
                    }

                    if (tmp_mvar_value_38 == NULL) {
                        Py_DECREF(tmp_called_name_16);
                        Py_DECREF(tmp_kw_name_4);
                        Py_DECREF(tmp_dict_value_9);
                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 5171 ], 36, 0);
                        exception_tb = NULL;

                        exception_lineno = 600;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_source_name_66 = tmp_mvar_value_38;
                    tmp_tuple_element_3 = LOOKUP_ATTRIBUTE(tmp_source_name_66, const_str_plain_timeout_cleanup);
                    if (tmp_tuple_element_3 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_16);
                        Py_DECREF(tmp_kw_name_4);
                        Py_DECREF(tmp_dict_value_9);

                        exception_lineno = 600;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    PyTuple_SET_ITEM(tmp_dict_value_9, 8, tmp_tuple_element_3);
                    tmp_tuple_element_3 = const_int_neg_1;
                    Py_INCREF(tmp_tuple_element_3);
                    PyTuple_SET_ITEM(tmp_dict_value_9, 9, tmp_tuple_element_3);
                    tmp_tuple_element_3 = const_int_neg_1;
                    Py_INCREF(tmp_tuple_element_3);
                    PyTuple_SET_ITEM(tmp_dict_value_9, 10, tmp_tuple_element_3);
                    tmp_tuple_element_3 = const_int_neg_1;
                    Py_INCREF(tmp_tuple_element_3);
                    PyTuple_SET_ITEM(tmp_dict_value_9, 11, tmp_tuple_element_3);
                    tmp_tuple_element_3 = const_int_neg_1;
                    Py_INCREF(tmp_tuple_element_3);
                    PyTuple_SET_ITEM(tmp_dict_value_9, 12, tmp_tuple_element_3);
                    tmp_dict_key_9 = const_str_plain_args;
                    tmp_res = PyDict_SetItem(tmp_kw_name_4, tmp_dict_key_9, tmp_dict_value_9);
                    Py_DECREF(tmp_dict_value_9);
                    assert(!(tmp_res != 0));
                    frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 600;
                    tmp_assign_source_70 = CALL_FUNCTION_WITH_KEYARGS(tmp_called_name_16, tmp_kw_name_4);
                    Py_DECREF(tmp_called_name_16);
                    Py_DECREF(tmp_kw_name_4);
                    if (tmp_assign_source_70 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 600;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    assert(var_t2 == NULL);
                    var_t2 = tmp_assign_source_70;
                }
                {
                    PyObject *tmp_called_instance_59;
                    PyObject *tmp_call_result_29;
                    CHECK_OBJECT(var_t2);
                    tmp_called_instance_59 = var_t2;
                    frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 601;
                    tmp_call_result_29 = CALL_METHOD_NO_ARGS(tmp_called_instance_59, const_str_plain_start);
                    if (tmp_call_result_29 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 601;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_29);
                }
                goto branch_end_5;
                branch_no_5:;
                {
                    PyObject *tmp_called_instance_60;
                    PyObject *tmp_call_result_30;
                    CHECK_OBJECT(var_message);
                    tmp_called_instance_60 = var_message;
                    frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 603;
                    tmp_call_result_30 = CALL_METHOD_NO_ARGS(tmp_called_instance_60, const_str_plain_destroy);
                    if (tmp_call_result_30 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 603;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_30);
                }
                {
                    PyObject *tmp_called_instance_61;
                    PyObject *tmp_call_result_31;
                    CHECK_OBJECT(var_usb_dialog);
                    tmp_called_instance_61 = var_usb_dialog;
                    frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 604;
                    tmp_call_result_31 = CALL_METHOD_NO_ARGS(tmp_called_instance_61, const_str_plain_destroy);
                    if (tmp_call_result_31 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 604;
                        type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_31);
                }
                branch_end_5:;
            }
            goto branch_end_4;
            branch_no_4:;
            {
                PyObject *tmp_called_instance_62;
                PyObject *tmp_call_result_32;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_62 = par_ui;
                frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 606;
                tmp_call_result_32 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_62, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_adb771d2fcc1a581081cb4a03495a2e3_tuple, 0));

                if (tmp_call_result_32 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 606;
                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_32);
            }
            {
                PyObject *tmp_called_instance_63;
                PyObject *tmp_call_result_33;
                CHECK_OBJECT(var_usb_dialog);
                tmp_called_instance_63 = var_usb_dialog;
                frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 607;
                tmp_call_result_33 = CALL_METHOD_NO_ARGS(tmp_called_instance_63, const_str_plain_destroy);
                if (tmp_call_result_33 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 607;
                    type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_33);
            }
            branch_end_4:;
        }
        goto branch_end_3;
        branch_no_3:;
        {
            PyObject *tmp_called_instance_64;
            PyObject *tmp_call_result_34;
            CHECK_OBJECT(var_usb_dialog);
            tmp_called_instance_64 = var_usb_dialog;
            frame_120e6cbb634311d08ade47582d57e262->m_frame.f_lineno = 609;
            tmp_call_result_34 = CALL_METHOD_NO_ARGS(tmp_called_instance_64, const_str_plain_destroy);
            if (tmp_call_result_34 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 609;
                type_description_1 = "oooNNoooooooooooooNooooooooooooooooNooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_34);
        }
        branch_end_3:;
    }

#if 1
    RESTORE_FRAME_EXCEPTION(frame_120e6cbb634311d08ade47582d57e262);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 1
    RESTORE_FRAME_EXCEPTION(frame_120e6cbb634311d08ade47582d57e262);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto try_return_handler_1;

    frame_exception_exit_1:;

#if 1
    RESTORE_FRAME_EXCEPTION(frame_120e6cbb634311d08ade47582d57e262);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_120e6cbb634311d08ade47582d57e262, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_120e6cbb634311d08ade47582d57e262->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_120e6cbb634311d08ade47582d57e262, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_120e6cbb634311d08ade47582d57e262,
        type_description_1,
        par_button,
        par_ui,
        par_args,
        NULL,
        NULL,
        var_list_u,
        var_t2,
        var_existingfiles,
        var_message,
        var_txt,
        var_pw_strip,
        var_index,
        var_output,
        var_rgx,
        var_res,
        var_usb_check,
        var_usb_dialog,
        var_tp,
        NULL,
        var_dev1,
        var_m1,
        var_m2,
        var_type_a,
        var_res1,
        var_start_time,
        var_found,
        var_index2,
        var_idx1,
        var_preserved_files,
        var_e,
        var_r2,
        var_f,
        var_j,
        var_m,
        var_drive,
        NULL,
        var_t1,
        var_dir_fl,
        var_p,
        var_s,
        var_u,
        var_entry,
        var_txt1,
        var_txt2,
        var_txt3
    );


    // Release cached frame.
    if (frame_120e6cbb634311d08ade47582d57e262 == cache_frame_120e6cbb634311d08ade47582d57e262) {
        Py_DECREF(frame_120e6cbb634311d08ade47582d57e262);
    }
    cache_frame_120e6cbb634311d08ade47582d57e262 = NULL;

    assertFrameObject(frame_120e6cbb634311d08ade47582d57e262);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(runop$$$function_7_run_setupUSB);
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    Py_XDECREF(var_list_u);
    var_list_u = NULL;

    Py_XDECREF(var_t2);
    var_t2 = NULL;

    Py_XDECREF(var_existingfiles);
    var_existingfiles = NULL;

    Py_XDECREF(var_message);
    var_message = NULL;

    Py_XDECREF(var_txt);
    var_txt = NULL;

    CHECK_OBJECT((PyObject *)var_pw_strip);
    Py_DECREF(var_pw_strip);
    var_pw_strip = NULL;

    Py_XDECREF(var_index);
    var_index = NULL;

    Py_XDECREF(var_output);
    var_output = NULL;

    Py_XDECREF(var_rgx);
    var_rgx = NULL;

    Py_XDECREF(var_res);
    var_res = NULL;

    Py_XDECREF(var_usb_check);
    var_usb_check = NULL;

    Py_XDECREF(var_usb_dialog);
    var_usb_dialog = NULL;

    Py_XDECREF(var_tp);
    var_tp = NULL;

    Py_XDECREF(var_dev1);
    var_dev1 = NULL;

    Py_XDECREF(var_m1);
    var_m1 = NULL;

    Py_XDECREF(var_m2);
    var_m2 = NULL;

    Py_XDECREF(var_type_a);
    var_type_a = NULL;

    Py_XDECREF(var_res1);
    var_res1 = NULL;

    Py_XDECREF(var_start_time);
    var_start_time = NULL;

    Py_XDECREF(var_found);
    var_found = NULL;

    Py_XDECREF(var_index2);
    var_index2 = NULL;

    Py_XDECREF(var_idx1);
    var_idx1 = NULL;

    Py_XDECREF(var_preserved_files);
    var_preserved_files = NULL;

    Py_XDECREF(var_e);
    var_e = NULL;

    Py_XDECREF(var_r2);
    var_r2 = NULL;

    Py_XDECREF(var_f);
    var_f = NULL;

    Py_XDECREF(var_j);
    var_j = NULL;

    Py_XDECREF(var_m);
    var_m = NULL;

    Py_XDECREF(var_drive);
    var_drive = NULL;

    Py_XDECREF(var_t1);
    var_t1 = NULL;

    Py_XDECREF(var_dir_fl);
    var_dir_fl = NULL;

    Py_XDECREF(var_p);
    var_p = NULL;

    Py_XDECREF(var_s);
    var_s = NULL;

    Py_XDECREF(var_u);
    var_u = NULL;

    Py_XDECREF(var_entry);
    var_entry = NULL;

    Py_XDECREF(var_txt1);
    var_txt1 = NULL;

    Py_XDECREF(var_txt2);
    var_txt2 = NULL;

    Py_XDECREF(var_txt3);
    var_txt3 = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_9 = exception_type;
    exception_keeper_value_9 = exception_value;
    exception_keeper_tb_9 = exception_tb;
    exception_keeper_lineno_9 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_list_u);
    var_list_u = NULL;

    Py_XDECREF(var_t2);
    var_t2 = NULL;

    Py_XDECREF(var_existingfiles);
    var_existingfiles = NULL;

    Py_XDECREF(var_message);
    var_message = NULL;

    Py_XDECREF(var_txt);
    var_txt = NULL;

    Py_XDECREF(var_pw_strip);
    var_pw_strip = NULL;

    Py_XDECREF(var_index);
    var_index = NULL;

    Py_XDECREF(var_output);
    var_output = NULL;

    Py_XDECREF(var_rgx);
    var_rgx = NULL;

    Py_XDECREF(var_res);
    var_res = NULL;

    Py_XDECREF(var_usb_check);
    var_usb_check = NULL;

    Py_XDECREF(var_usb_dialog);
    var_usb_dialog = NULL;

    Py_XDECREF(var_tp);
    var_tp = NULL;

    Py_XDECREF(var_dev1);
    var_dev1 = NULL;

    Py_XDECREF(var_m1);
    var_m1 = NULL;

    Py_XDECREF(var_m2);
    var_m2 = NULL;

    Py_XDECREF(var_type_a);
    var_type_a = NULL;

    Py_XDECREF(var_res1);
    var_res1 = NULL;

    Py_XDECREF(var_start_time);
    var_start_time = NULL;

    Py_XDECREF(var_found);
    var_found = NULL;

    Py_XDECREF(var_index2);
    var_index2 = NULL;

    Py_XDECREF(var_idx1);
    var_idx1 = NULL;

    Py_XDECREF(var_preserved_files);
    var_preserved_files = NULL;

    Py_XDECREF(var_e);
    var_e = NULL;

    Py_XDECREF(var_r2);
    var_r2 = NULL;

    Py_XDECREF(var_f);
    var_f = NULL;

    Py_XDECREF(var_j);
    var_j = NULL;

    Py_XDECREF(var_m);
    var_m = NULL;

    Py_XDECREF(var_drive);
    var_drive = NULL;

    Py_XDECREF(var_t1);
    var_t1 = NULL;

    Py_XDECREF(var_dir_fl);
    var_dir_fl = NULL;

    Py_XDECREF(var_p);
    var_p = NULL;

    Py_XDECREF(var_s);
    var_s = NULL;

    Py_XDECREF(var_u);
    var_u = NULL;

    Py_XDECREF(var_entry);
    var_entry = NULL;

    Py_XDECREF(var_txt1);
    var_txt1 = NULL;

    Py_XDECREF(var_txt2);
    var_txt2 = NULL;

    Py_XDECREF(var_txt3);
    var_txt3 = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_9;
    exception_value = exception_keeper_value_9;
    exception_tb = exception_keeper_tb_9;
    exception_lineno = exception_keeper_lineno_9;

    goto function_exception_exit;
    // End of try:

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(runop$$$function_7_run_setupUSB);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);
    CHECK_OBJECT(par_args);
    Py_DECREF(par_args);
    CHECK_OBJECT(par_button);
    Py_DECREF(par_button);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);
    CHECK_OBJECT(par_args);
    Py_DECREF(par_args);
    CHECK_OBJECT(par_button);
    Py_DECREF(par_button);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_runop$$$function_8_run_setupUser(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_button = python_pars[0];
    PyObject *par_ui = python_pars[1];
    PyObject *var_pw_strip = NULL;
    PyObject *var_index = NULL;
    PyObject *var_e = NULL;
    PyObject *var_pw_u_trim = NULL;
    PyObject *var_t2 = NULL;
    PyObject *var_pw_u = NULL;
    PyObject *var_pw_u_trim_confirm = NULL;
    PyObject *var_pw_u_confirm = NULL;
    PyObject *var_t1 = NULL;
    PyObject *var_start_time = NULL;
    PyObject *var_msid = NULL;
    struct Nuitka_FrameObject *frame_9552b6460145c0ce514f3e6d66039fe2;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    PyObject *tmp_return_value = NULL;
    bool tmp_result;
    static struct Nuitka_FrameObject *cache_frame_9552b6460145c0ce514f3e6d66039fe2 = NULL;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;

    // Actual function body.
    // Tried code:
    MAKE_OR_REUSE_FRAME(cache_frame_9552b6460145c0ce514f3e6d66039fe2, codeobj_9552b6460145c0ce514f3e6d66039fe2, module_runop, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
    frame_9552b6460145c0ce514f3e6d66039fe2 = cache_frame_9552b6460145c0ce514f3e6d66039fe2;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_9552b6460145c0ce514f3e6d66039fe2);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_9552b6460145c0ce514f3e6d66039fe2) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_instance_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_call_result_1;
        PyObject *tmp_args_element_name_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_verify);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_verify);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 236 ], 35, 0);
            exception_tb = NULL;

            exception_lineno = 612;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_1 = tmp_mvar_value_1;
        CHECK_OBJECT(par_ui);
        tmp_args_element_name_1 = par_ui;
        frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 612;
        {
            PyObject *call_args[] = {tmp_args_element_name_1};
            tmp_call_result_1 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_1, const_str_plain_licCheck, call_args);
        }

        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 612;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_1);
    }
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_called_name_1;
        PyObject *tmp_source_name_1;
        PyObject *tmp_mvar_value_2;
        PyObject *tmp_args_element_name_2;
        PyObject *tmp_args_element_name_3;
        PyObject *tmp_args_element_name_4;
        PyObject *tmp_called_instance_2;
        PyObject *tmp_source_name_2;
        tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_2 == NULL)) {
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_2 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
            exception_tb = NULL;

            exception_lineno = 613;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_1 = tmp_mvar_value_2;
        tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_sub);
        if (tmp_called_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 613;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_2 = const_str_digest_29fe972ddfd3c3ace7d88aee7a9cd77e;
        tmp_args_element_name_3 = const_str_empty;
        CHECK_OBJECT(par_ui);
        tmp_source_name_2 = par_ui;
        tmp_called_instance_2 = LOOKUP_ATTRIBUTE(tmp_source_name_2, const_str_plain_pass_entry);
        if (tmp_called_instance_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_1);

            exception_lineno = 613;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 613;
        tmp_args_element_name_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_2, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_2);
        if (tmp_args_element_name_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_1);

            exception_lineno = 613;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 613;
        {
            PyObject *call_args[] = {tmp_args_element_name_2, tmp_args_element_name_3, tmp_args_element_name_4};
            tmp_assign_source_1 = CALL_FUNCTION_WITH_ARGS3(tmp_called_name_1, call_args);
        }

        Py_DECREF(tmp_called_name_1);
        Py_DECREF(tmp_args_element_name_4);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 613;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_pw_strip == NULL);
        var_pw_strip = tmp_assign_source_1;
    }
    {
        nuitka_bool tmp_condition_result_1;
        int tmp_and_left_truth_1;
        nuitka_bool tmp_and_left_value_1;
        nuitka_bool tmp_and_right_value_1;
        PyObject *tmp_compexpr_left_1;
        PyObject *tmp_compexpr_right_1;
        PyObject *tmp_called_instance_3;
        PyObject *tmp_source_name_3;
        PyObject *tmp_operand_name_1;
        PyObject *tmp_called_instance_4;
        PyObject *tmp_source_name_4;
        CHECK_OBJECT(par_ui);
        tmp_source_name_3 = par_ui;
        tmp_called_instance_3 = LOOKUP_ATTRIBUTE(tmp_source_name_3, const_str_plain_pass_entry);
        if (tmp_called_instance_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 614;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 614;
        tmp_compexpr_left_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_3, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_3);
        if (tmp_compexpr_left_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 614;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_1 = const_str_empty;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_1, tmp_compexpr_right_1);
        Py_DECREF(tmp_compexpr_left_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 614;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_1 = tmp_and_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_1 == 1) {
            goto and_right_1;
        } else {
            goto and_left_1;
        }
        and_right_1:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_4 = par_ui;
        tmp_called_instance_4 = LOOKUP_ATTRIBUTE(tmp_source_name_4, const_str_plain_check_pass_rd);
        if (tmp_called_instance_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 614;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 614;
        tmp_operand_name_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_4, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_4);
        if (tmp_operand_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 614;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_1);
        Py_DECREF(tmp_operand_name_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 614;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_1 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_condition_result_1 = tmp_and_right_value_1;
        goto and_end_1;
        and_left_1:;
        tmp_condition_result_1 = tmp_and_left_value_1;
        and_end_1:;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        {
            PyObject *tmp_called_instance_5;
            PyObject *tmp_call_result_2;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_5 = par_ui;
            frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 615;
            tmp_call_result_2 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_5, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_8482c425481a7392528c91276c4d7ae3_tuple, 0));

            if (tmp_call_result_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 615;
                type_description_1 = "ooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_2);
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        branch_no_1:;
    }
    {
        nuitka_bool tmp_condition_result_2;
        int tmp_and_left_truth_2;
        nuitka_bool tmp_and_left_value_2;
        nuitka_bool tmp_and_right_value_2;
        PyObject *tmp_compexpr_left_2;
        PyObject *tmp_compexpr_right_2;
        PyObject *tmp_operand_name_2;
        PyObject *tmp_called_instance_6;
        PyObject *tmp_source_name_5;
        CHECK_OBJECT(var_pw_strip);
        tmp_compexpr_left_2 = var_pw_strip;
        tmp_compexpr_right_2 = const_str_empty;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_2, tmp_compexpr_right_2);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 617;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_2 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_2 = tmp_and_left_value_2 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_2 == 1) {
            goto and_right_2;
        } else {
            goto and_left_2;
        }
        and_right_2:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_5 = par_ui;
        tmp_called_instance_6 = LOOKUP_ATTRIBUTE(tmp_source_name_5, const_str_plain_check_pass_rd);
        if (tmp_called_instance_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 617;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 617;
        tmp_operand_name_2 = CALL_METHOD_NO_ARGS(tmp_called_instance_6, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_6);
        if (tmp_operand_name_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 617;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_2);
        Py_DECREF(tmp_operand_name_2);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 617;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_2 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_condition_result_2 = tmp_and_right_value_2;
        goto and_end_2;
        and_left_2:;
        tmp_condition_result_2 = tmp_and_left_value_2;
        and_end_2:;
        if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
            goto branch_yes_2;
        } else {
            goto branch_no_2;
        }
        branch_yes_2:;
        {
            PyObject *tmp_called_instance_7;
            PyObject *tmp_call_result_3;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_7 = par_ui;
            frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 618;
            tmp_call_result_3 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_7, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_84ba3144e8a4c8824551fdd8d0fe5bde_tuple, 0));

            if (tmp_call_result_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 618;
                type_description_1 = "ooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_3);
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        branch_no_2:;
    }
    {
        nuitka_bool tmp_condition_result_3;
        int tmp_or_left_truth_1;
        nuitka_bool tmp_or_left_value_1;
        nuitka_bool tmp_or_right_value_1;
        PyObject *tmp_compexpr_left_3;
        PyObject *tmp_compexpr_right_3;
        PyObject *tmp_called_instance_8;
        PyObject *tmp_source_name_6;
        PyObject *tmp_compexpr_left_4;
        PyObject *tmp_compexpr_right_4;
        PyObject *tmp_called_instance_9;
        PyObject *tmp_source_name_7;
        CHECK_OBJECT(par_ui);
        tmp_source_name_6 = par_ui;
        tmp_called_instance_8 = LOOKUP_ATTRIBUTE(tmp_source_name_6, const_str_plain_new_pass_entry);
        if (tmp_called_instance_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 620;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 620;
        tmp_compexpr_left_3 = CALL_METHOD_NO_ARGS(tmp_called_instance_8, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_8);
        if (tmp_compexpr_left_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 620;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_3 = const_str_empty;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_3, tmp_compexpr_right_3);
        Py_DECREF(tmp_compexpr_left_3);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 620;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_left_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_or_left_truth_1 = tmp_or_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_or_left_truth_1 == 1) {
            goto or_left_1;
        } else {
            goto or_right_1;
        }
        or_right_1:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_7 = par_ui;
        tmp_called_instance_9 = LOOKUP_ATTRIBUTE(tmp_source_name_7, const_str_plain_confirm_pass_entry);
        if (tmp_called_instance_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 620;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 620;
        tmp_compexpr_left_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_9, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_9);
        if (tmp_compexpr_left_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 620;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_4 = const_str_empty;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_4, tmp_compexpr_right_4);
        Py_DECREF(tmp_compexpr_left_4);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 620;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_right_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_condition_result_3 = tmp_or_right_value_1;
        goto or_end_1;
        or_left_1:;
        tmp_condition_result_3 = tmp_or_left_value_1;
        or_end_1:;
        if (tmp_condition_result_3 == NUITKA_BOOL_TRUE) {
            goto branch_yes_3;
        } else {
            goto branch_no_3;
        }
        branch_yes_3:;
        {
            PyObject *tmp_called_instance_10;
            PyObject *tmp_call_result_4;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_10 = par_ui;
            frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 621;
            tmp_call_result_4 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_10, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_a268614b1c426f0356ccda8551576100_tuple, 0));

            if (tmp_call_result_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 621;
                type_description_1 = "ooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_4);
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        branch_no_3:;
    }
    {
        nuitka_bool tmp_condition_result_4;
        int tmp_and_left_truth_3;
        nuitka_bool tmp_and_left_value_3;
        nuitka_bool tmp_and_right_value_3;
        PyObject *tmp_called_instance_11;
        PyObject *tmp_source_name_8;
        PyObject *tmp_call_result_5;
        int tmp_truth_name_1;
        PyObject *tmp_compexpr_left_5;
        PyObject *tmp_compexpr_right_5;
        PyObject *tmp_len_arg_1;
        PyObject *tmp_source_name_9;
        CHECK_OBJECT(par_ui);
        tmp_source_name_8 = par_ui;
        tmp_called_instance_11 = LOOKUP_ATTRIBUTE(tmp_source_name_8, const_str_plain_pass_sav);
        if (tmp_called_instance_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 623;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 623;
        tmp_call_result_5 = CALL_METHOD_NO_ARGS(tmp_called_instance_11, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_11);
        if (tmp_call_result_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 623;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_1 = CHECK_IF_TRUE(tmp_call_result_5);
        if (tmp_truth_name_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_5);

            exception_lineno = 623;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_3 = tmp_truth_name_1 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_5);
        tmp_and_left_truth_3 = tmp_and_left_value_3 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_3 == 1) {
            goto and_right_3;
        } else {
            goto and_left_3;
        }
        and_right_3:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_9 = par_ui;
        tmp_len_arg_1 = LOOKUP_ATTRIBUTE(tmp_source_name_9, const_str_plain_drive_list);
        if (tmp_len_arg_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 623;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_left_5 = BUILTIN_LEN(tmp_len_arg_1);
        Py_DECREF(tmp_len_arg_1);
        if (tmp_compexpr_left_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 623;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_5 = const_int_0;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_5, tmp_compexpr_right_5);
        Py_DECREF(tmp_compexpr_left_5);
        assert(!(tmp_res == -1));
        tmp_and_right_value_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_condition_result_4 = tmp_and_right_value_3;
        goto and_end_3;
        and_left_3:;
        tmp_condition_result_4 = tmp_and_left_value_3;
        and_end_3:;
        if (tmp_condition_result_4 == NUITKA_BOOL_TRUE) {
            goto branch_yes_4;
        } else {
            goto branch_no_4;
        }
        branch_yes_4:;
        {
            PyObject *tmp_called_instance_12;
            PyObject *tmp_call_result_6;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_12 = par_ui;
            frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 624;
            tmp_call_result_6 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_12, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_1a4b86fee576c2932467ec44f9732332_tuple, 0));

            if (tmp_call_result_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 624;
                type_description_1 = "ooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_6);
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        branch_no_4:;
    }
    {
        PyObject *tmp_assign_source_2;
        PyObject *tmp_called_instance_13;
        PyObject *tmp_source_name_10;
        CHECK_OBJECT(par_ui);
        tmp_source_name_10 = par_ui;
        tmp_called_instance_13 = LOOKUP_ATTRIBUTE(tmp_source_name_10, const_str_plain_dev_select);
        if (tmp_called_instance_13 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 626;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 626;
        tmp_assign_source_2 = CALL_METHOD_NO_ARGS(tmp_called_instance_13, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_13);
        if (tmp_assign_source_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 626;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_index == NULL);
        var_index = tmp_assign_source_2;
    }
    {
        PyObject *tmp_assattr_name_1;
        PyObject *tmp_subscribed_name_1;
        PyObject *tmp_source_name_11;
        PyObject *tmp_subscript_name_1;
        PyObject *tmp_assattr_target_1;
        CHECK_OBJECT(par_ui);
        tmp_source_name_11 = par_ui;
        tmp_subscribed_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_11, const_str_plain_devs_list);
        if (tmp_subscribed_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 627;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_index);
        tmp_subscript_name_1 = var_index;
        tmp_assattr_name_1 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_1, tmp_subscript_name_1);
        Py_DECREF(tmp_subscribed_name_1);
        if (tmp_assattr_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 627;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_ui);
        tmp_assattr_target_1 = par_ui;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, const_str_plain_devname, tmp_assattr_name_1);
        Py_DECREF(tmp_assattr_name_1);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 627;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
    }
    {
        nuitka_bool tmp_condition_result_5;
        PyObject *tmp_compexpr_left_6;
        PyObject *tmp_compexpr_right_6;
        PyObject *tmp_subscribed_name_2;
        PyObject *tmp_source_name_12;
        PyObject *tmp_subscript_name_2;
        CHECK_OBJECT(par_ui);
        tmp_source_name_12 = par_ui;
        tmp_subscribed_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_12, const_str_plain_user_list);
        if (tmp_subscribed_name_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 642;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_index);
        tmp_subscript_name_2 = var_index;
        tmp_compexpr_left_6 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_2, tmp_subscript_name_2);
        Py_DECREF(tmp_subscribed_name_2);
        if (tmp_compexpr_left_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 642;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_6 = const_str_plain_1;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_6, tmp_compexpr_right_6);
        Py_DECREF(tmp_compexpr_left_6);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 642;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_5 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_5 == NUITKA_BOOL_TRUE) {
            goto branch_yes_5;
        } else {
            goto branch_no_5;
        }
        branch_yes_5:;
        {
            PyObject *tmp_called_instance_14;
            PyObject *tmp_call_result_7;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_14 = par_ui;
            frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 643;
            tmp_call_result_7 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_14, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_91494e46bf8c9b5ab9f0e29a33f308b8_tuple, 0));

            if (tmp_call_result_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 643;
                type_description_1 = "ooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_7);
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        branch_no_5:;
    }
    {
        PyObject *tmp_assign_source_3;
        PyObject *tmp_subscribed_name_3;
        PyObject *tmp_source_name_13;
        PyObject *tmp_subscript_name_3;
        CHECK_OBJECT(par_ui);
        tmp_source_name_13 = par_ui;
        tmp_subscribed_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_13, const_str_plain_msid_list);
        if (tmp_subscribed_name_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 645;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_index);
        tmp_subscript_name_3 = var_index;
        tmp_assign_source_3 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_3, tmp_subscript_name_3);
        Py_DECREF(tmp_subscribed_name_3);
        if (tmp_assign_source_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 645;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_msid == NULL);
        var_msid = tmp_assign_source_3;
    }
    {
        PyObject *tmp_assign_source_4;
        PyObject *tmp_called_instance_15;
        PyObject *tmp_source_name_14;
        CHECK_OBJECT(par_ui);
        tmp_source_name_14 = par_ui;
        tmp_called_instance_15 = LOOKUP_ATTRIBUTE(tmp_source_name_14, const_str_plain_new_pass_entry);
        if (tmp_called_instance_15 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 646;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 646;
        tmp_assign_source_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_15, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_15);
        if (tmp_assign_source_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 646;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_pw_u == NULL);
        var_pw_u = tmp_assign_source_4;
    }
    {
        PyObject *tmp_assign_source_5;
        PyObject *tmp_called_instance_16;
        PyObject *tmp_source_name_15;
        CHECK_OBJECT(par_ui);
        tmp_source_name_15 = par_ui;
        tmp_called_instance_16 = LOOKUP_ATTRIBUTE(tmp_source_name_15, const_str_plain_confirm_pass_entry);
        if (tmp_called_instance_16 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 647;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 647;
        tmp_assign_source_5 = CALL_METHOD_NO_ARGS(tmp_called_instance_16, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_16);
        if (tmp_assign_source_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 647;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_pw_u_confirm == NULL);
        var_pw_u_confirm = tmp_assign_source_5;
    }
    {
        PyObject *tmp_assign_source_6;
        PyObject *tmp_called_instance_17;
        PyObject *tmp_mvar_value_3;
        PyObject *tmp_args_element_name_5;
        PyObject *tmp_args_element_name_6;
        PyObject *tmp_args_element_name_7;
        tmp_mvar_value_3 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_3 == NULL)) {
            tmp_mvar_value_3 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_3 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
            exception_tb = NULL;

            exception_lineno = 648;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_17 = tmp_mvar_value_3;
        tmp_args_element_name_5 = const_str_digest_29fe972ddfd3c3ace7d88aee7a9cd77e;
        tmp_args_element_name_6 = const_str_empty;
        CHECK_OBJECT(var_pw_u);
        tmp_args_element_name_7 = var_pw_u;
        frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 648;
        {
            PyObject *call_args[] = {tmp_args_element_name_5, tmp_args_element_name_6, tmp_args_element_name_7};
            tmp_assign_source_6 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_17, const_str_plain_sub, call_args);
        }

        if (tmp_assign_source_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 648;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_pw_u_trim == NULL);
        var_pw_u_trim = tmp_assign_source_6;
    }
    {
        PyObject *tmp_assign_source_7;
        PyObject *tmp_called_instance_18;
        PyObject *tmp_mvar_value_4;
        PyObject *tmp_args_element_name_8;
        PyObject *tmp_args_element_name_9;
        PyObject *tmp_args_element_name_10;
        tmp_mvar_value_4 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_4 == NULL)) {
            tmp_mvar_value_4 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_4 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
            exception_tb = NULL;

            exception_lineno = 649;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_18 = tmp_mvar_value_4;
        tmp_args_element_name_8 = const_str_digest_2717a74e8094c62311bf53472f4de0ca;
        tmp_args_element_name_9 = const_str_empty;
        CHECK_OBJECT(var_pw_u_confirm);
        tmp_args_element_name_10 = var_pw_u_confirm;
        frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 649;
        {
            PyObject *call_args[] = {tmp_args_element_name_8, tmp_args_element_name_9, tmp_args_element_name_10};
            tmp_assign_source_7 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_18, const_str_plain_sub, call_args);
        }

        if (tmp_assign_source_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 649;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_pw_u_trim_confirm == NULL);
        var_pw_u_trim_confirm = tmp_assign_source_7;
    }
    {
        nuitka_bool tmp_condition_result_6;
        PyObject *tmp_compexpr_left_7;
        PyObject *tmp_compexpr_right_7;
        PyObject *tmp_len_arg_2;
        CHECK_OBJECT(var_pw_u_trim);
        tmp_len_arg_2 = var_pw_u_trim;
        tmp_compexpr_left_7 = BUILTIN_LEN(tmp_len_arg_2);
        if (tmp_compexpr_left_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 650;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_7 = const_int_pos_8;
        tmp_res = RICH_COMPARE_BOOL_LT_OBJECT_INT(tmp_compexpr_left_7, tmp_compexpr_right_7);
        Py_DECREF(tmp_compexpr_left_7);
        assert(!(tmp_res == -1));
        tmp_condition_result_6 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_6 == NUITKA_BOOL_TRUE) {
            goto branch_yes_6;
        } else {
            goto branch_no_6;
        }
        branch_yes_6:;
        {
            PyObject *tmp_called_instance_19;
            PyObject *tmp_call_result_8;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_19 = par_ui;
            frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 651;
            tmp_call_result_8 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_19, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_c26386993bfef303945d53604eada43a_tuple, 0));

            if (tmp_call_result_8 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 651;
                type_description_1 = "ooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_8);
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        goto branch_end_6;
        branch_no_6:;
        {
            nuitka_bool tmp_condition_result_7;
            PyObject *tmp_called_instance_20;
            PyObject *tmp_source_name_16;
            PyObject *tmp_call_result_9;
            PyObject *tmp_args_element_name_11;
            int tmp_truth_name_2;
            CHECK_OBJECT(par_ui);
            tmp_source_name_16 = par_ui;
            tmp_called_instance_20 = LOOKUP_ATTRIBUTE(tmp_source_name_16, const_str_plain_bad_pw);
            if (tmp_called_instance_20 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 653;
                type_description_1 = "ooooooooooooo";
                goto frame_exception_exit_1;
            }
            CHECK_OBJECT(var_pw_u_trim);
            tmp_args_element_name_11 = var_pw_u_trim;
            frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 653;
            {
                PyObject *call_args[] = {tmp_args_element_name_11};
                tmp_call_result_9 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_20, const_str_plain_has_key, call_args);
            }

            Py_DECREF(tmp_called_instance_20);
            if (tmp_call_result_9 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 653;
                type_description_1 = "ooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_truth_name_2 = CHECK_IF_TRUE(tmp_call_result_9);
            if (tmp_truth_name_2 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_call_result_9);

                exception_lineno = 653;
                type_description_1 = "ooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_7 = tmp_truth_name_2 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            Py_DECREF(tmp_call_result_9);
            if (tmp_condition_result_7 == NUITKA_BOOL_TRUE) {
                goto branch_yes_7;
            } else {
                goto branch_no_7;
            }
            branch_yes_7:;
            {
                PyObject *tmp_called_instance_21;
                PyObject *tmp_call_result_10;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_21 = par_ui;
                frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 654;
                tmp_call_result_10 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_21, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_12972f1cc00f1e6a86845e930725106f_tuple, 0));

                if (tmp_call_result_10 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 654;
                    type_description_1 = "ooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_10);
            }
            tmp_return_value = Py_None;
            Py_INCREF(tmp_return_value);
            goto frame_return_exit_1;
            goto branch_end_7;
            branch_no_7:;
            {
                nuitka_bool tmp_condition_result_8;
                PyObject *tmp_compexpr_left_8;
                PyObject *tmp_compexpr_right_8;
                CHECK_OBJECT(var_pw_u);
                tmp_compexpr_left_8 = var_pw_u;
                CHECK_OBJECT(var_pw_u_confirm);
                tmp_compexpr_right_8 = var_pw_u_confirm;
                tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_8, tmp_compexpr_right_8);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 656;
                    type_description_1 = "ooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_condition_result_8 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_8 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_8;
                } else {
                    goto branch_no_8;
                }
                branch_yes_8:;
                {
                    PyObject *tmp_called_instance_22;
                    PyObject *tmp_call_result_11;
                    CHECK_OBJECT(par_ui);
                    tmp_called_instance_22 = par_ui;
                    frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 657;
                    tmp_call_result_11 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_22, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_010eee5132cba85d8388107801ade416_tuple, 0));

                    if (tmp_call_result_11 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 657;
                        type_description_1 = "ooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_11);
                }
                tmp_return_value = Py_None;
                Py_INCREF(tmp_return_value);
                goto frame_return_exit_1;
                branch_no_8:;
            }
            branch_end_7:;
        }
        branch_end_6:;
    }
    {
        PyObject *tmp_called_instance_23;
        PyObject *tmp_call_result_12;
        CHECK_OBJECT(par_ui);
        tmp_called_instance_23 = par_ui;
        frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 662;
        tmp_call_result_12 = CALL_METHOD_NO_ARGS(tmp_called_instance_23, const_str_plain_start_spin);
        if (tmp_call_result_12 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 662;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_12);
    }
    {
        PyObject *tmp_called_instance_24;
        PyObject *tmp_source_name_17;
        PyObject *tmp_call_result_13;
        CHECK_OBJECT(par_ui);
        tmp_source_name_17 = par_ui;
        tmp_called_instance_24 = LOOKUP_ATTRIBUTE(tmp_source_name_17, const_str_plain_wait_instr);
        if (tmp_called_instance_24 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 663;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 663;
        tmp_call_result_13 = CALL_METHOD_NO_ARGS(tmp_called_instance_24, const_str_plain_show);
        Py_DECREF(tmp_called_instance_24);
        if (tmp_call_result_13 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 663;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_13);
    }
    {
        PyObject *tmp_assattr_name_2;
        PyObject *tmp_assattr_target_2;
        tmp_assattr_name_2 = Py_True;
        CHECK_OBJECT(par_ui);
        tmp_assattr_target_2 = par_ui;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_2, const_str_plain_op_inprogress, tmp_assattr_name_2);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 664;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
    }
    {
        PyObject *tmp_assign_source_8;
        PyObject *tmp_called_instance_25;
        PyObject *tmp_mvar_value_5;
        tmp_mvar_value_5 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_threading);

        if (unlikely(tmp_mvar_value_5 == NULL)) {
            tmp_mvar_value_5 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_threading);
        }

        if (tmp_mvar_value_5 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 661 ], 38, 0);
            exception_tb = NULL;

            exception_lineno = 668;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_25 = tmp_mvar_value_5;
        frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 668;
        tmp_assign_source_8 = CALL_METHOD_NO_ARGS(tmp_called_instance_25, const_str_plain_Event);
        if (tmp_assign_source_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 668;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_e == NULL);
        var_e = tmp_assign_source_8;
    }
    {
        PyObject *tmp_assign_source_9;
        PyObject *tmp_called_name_2;
        PyObject *tmp_source_name_18;
        PyObject *tmp_mvar_value_6;
        PyObject *tmp_kw_name_1;
        PyObject *tmp_dict_key_1;
        PyObject *tmp_dict_value_1;
        PyObject *tmp_source_name_19;
        PyObject *tmp_mvar_value_7;
        PyObject *tmp_dict_key_2;
        PyObject *tmp_dict_value_2;
        PyObject *tmp_tuple_element_1;
        tmp_mvar_value_6 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_threading);

        if (unlikely(tmp_mvar_value_6 == NULL)) {
            tmp_mvar_value_6 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_threading);
        }

        if (tmp_mvar_value_6 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 661 ], 38, 0);
            exception_tb = NULL;

            exception_lineno = 669;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_18 = tmp_mvar_value_6;
        tmp_called_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_18, const_str_plain_Thread);
        if (tmp_called_name_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 669;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_mvar_value_7 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_runsetup);

        if (unlikely(tmp_mvar_value_7 == NULL)) {
            tmp_mvar_value_7 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runsetup);
        }

        if (tmp_mvar_value_7 == NULL) {
            Py_DECREF(tmp_called_name_2);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 5095 ], 37, 0);
            exception_tb = NULL;

            exception_lineno = 669;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_19 = tmp_mvar_value_7;
        tmp_dict_value_1 = LOOKUP_ATTRIBUTE(tmp_source_name_19, const_str_plain_rt_setupUser);
        if (tmp_dict_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_2);

            exception_lineno = 669;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_dict_key_1 = const_str_plain_target;
        tmp_kw_name_1 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_kw_name_1, tmp_dict_key_1, tmp_dict_value_1);
        Py_DECREF(tmp_dict_value_1);
        assert(!(tmp_res != 0));
        CHECK_OBJECT(par_ui);
        tmp_tuple_element_1 = par_ui;
        tmp_dict_value_2 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_dict_value_2, 0, tmp_tuple_element_1);
        CHECK_OBJECT(var_index);
        tmp_tuple_element_1 = var_index;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_dict_value_2, 1, tmp_tuple_element_1);
        CHECK_OBJECT(var_e);
        tmp_tuple_element_1 = var_e;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_dict_value_2, 2, tmp_tuple_element_1);
        tmp_dict_key_2 = const_str_plain_args;
        tmp_res = PyDict_SetItem(tmp_kw_name_1, tmp_dict_key_2, tmp_dict_value_2);
        Py_DECREF(tmp_dict_value_2);
        assert(!(tmp_res != 0));
        frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 669;
        tmp_assign_source_9 = CALL_FUNCTION_WITH_KEYARGS(tmp_called_name_2, tmp_kw_name_1);
        Py_DECREF(tmp_called_name_2);
        Py_DECREF(tmp_kw_name_1);
        if (tmp_assign_source_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 669;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_t1 == NULL);
        var_t1 = tmp_assign_source_9;
    }
    {
        PyObject *tmp_called_instance_26;
        PyObject *tmp_call_result_14;
        CHECK_OBJECT(var_t1);
        tmp_called_instance_26 = var_t1;
        frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 670;
        tmp_call_result_14 = CALL_METHOD_NO_ARGS(tmp_called_instance_26, const_str_plain_start);
        if (tmp_call_result_14 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 670;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_14);
    }
    {
        PyObject *tmp_assign_source_10;
        PyObject *tmp_called_instance_27;
        PyObject *tmp_mvar_value_8;
        tmp_mvar_value_8 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_time);

        if (unlikely(tmp_mvar_value_8 == NULL)) {
            tmp_mvar_value_8 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_time);
        }

        if (tmp_mvar_value_8 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1164 ], 33, 0);
            exception_tb = NULL;

            exception_lineno = 671;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_27 = tmp_mvar_value_8;
        frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 671;
        tmp_assign_source_10 = CALL_METHOD_NO_ARGS(tmp_called_instance_27, const_str_plain_time);
        if (tmp_assign_source_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 671;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_start_time == NULL);
        var_start_time = tmp_assign_source_10;
    }
    {
        PyObject *tmp_assign_source_11;
        PyObject *tmp_called_name_3;
        PyObject *tmp_source_name_20;
        PyObject *tmp_mvar_value_9;
        PyObject *tmp_kw_name_2;
        PyObject *tmp_dict_key_3;
        PyObject *tmp_dict_value_3;
        PyObject *tmp_source_name_21;
        PyObject *tmp_mvar_value_10;
        PyObject *tmp_dict_key_4;
        PyObject *tmp_dict_value_4;
        PyObject *tmp_tuple_element_2;
        PyObject *tmp_list_element_1;
        PyObject *tmp_source_name_22;
        PyObject *tmp_mvar_value_11;
        tmp_mvar_value_9 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_threading);

        if (unlikely(tmp_mvar_value_9 == NULL)) {
            tmp_mvar_value_9 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_threading);
        }

        if (tmp_mvar_value_9 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 661 ], 38, 0);
            exception_tb = NULL;

            exception_lineno = 672;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_20 = tmp_mvar_value_9;
        tmp_called_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_20, const_str_plain_Thread);
        if (tmp_called_name_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 672;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_mvar_value_10 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_runthread);

        if (unlikely(tmp_mvar_value_10 == NULL)) {
            tmp_mvar_value_10 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runthread);
        }

        if (tmp_mvar_value_10 == NULL) {
            Py_DECREF(tmp_called_name_3);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1304 ], 38, 0);
            exception_tb = NULL;

            exception_lineno = 672;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_21 = tmp_mvar_value_10;
        tmp_dict_value_3 = LOOKUP_ATTRIBUTE(tmp_source_name_21, const_str_plain_timeout_track);
        if (tmp_dict_value_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_3);

            exception_lineno = 672;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_dict_key_3 = const_str_plain_target;
        tmp_kw_name_2 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_kw_name_2, tmp_dict_key_3, tmp_dict_value_3);
        Py_DECREF(tmp_dict_value_3);
        assert(!(tmp_res != 0));
        CHECK_OBJECT(par_ui);
        tmp_tuple_element_2 = par_ui;
        tmp_dict_value_4 = PyTuple_New(13);
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_dict_value_4, 0, tmp_tuple_element_2);
        tmp_tuple_element_2 = const_float_60_0;
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_dict_value_4, 1, tmp_tuple_element_2);
        CHECK_OBJECT(var_start_time);
        tmp_tuple_element_2 = var_start_time;
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_dict_value_4, 2, tmp_tuple_element_2);
        CHECK_OBJECT(var_t1);
        tmp_list_element_1 = var_t1;
        tmp_tuple_element_2 = PyList_New(1);
        Py_INCREF(tmp_list_element_1);
        PyList_SET_ITEM(tmp_tuple_element_2, 0, tmp_list_element_1);
        PyTuple_SET_ITEM(tmp_dict_value_4, 3, tmp_tuple_element_2);
        tmp_tuple_element_2 = Py_None;
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_dict_value_4, 4, tmp_tuple_element_2);
        CHECK_OBJECT(var_e);
        tmp_tuple_element_2 = var_e;
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_dict_value_4, 5, tmp_tuple_element_2);
        tmp_tuple_element_2 = Py_None;
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_dict_value_4, 6, tmp_tuple_element_2);
        tmp_tuple_element_2 = Py_None;
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_dict_value_4, 7, tmp_tuple_element_2);
        tmp_mvar_value_11 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_cleanop);

        if (unlikely(tmp_mvar_value_11 == NULL)) {
            tmp_mvar_value_11 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_cleanop);
        }

        if (tmp_mvar_value_11 == NULL) {
            Py_DECREF(tmp_called_name_3);
            Py_DECREF(tmp_kw_name_2);
            Py_DECREF(tmp_dict_value_4);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 5171 ], 36, 0);
            exception_tb = NULL;

            exception_lineno = 672;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_22 = tmp_mvar_value_11;
        tmp_tuple_element_2 = LOOKUP_ATTRIBUTE(tmp_source_name_22, const_str_plain_timeout_cleanup);
        if (tmp_tuple_element_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_3);
            Py_DECREF(tmp_kw_name_2);
            Py_DECREF(tmp_dict_value_4);

            exception_lineno = 672;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        PyTuple_SET_ITEM(tmp_dict_value_4, 8, tmp_tuple_element_2);
        tmp_tuple_element_2 = const_int_neg_1;
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_dict_value_4, 9, tmp_tuple_element_2);
        tmp_tuple_element_2 = const_int_neg_1;
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_dict_value_4, 10, tmp_tuple_element_2);
        tmp_tuple_element_2 = const_int_neg_1;
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_dict_value_4, 11, tmp_tuple_element_2);
        tmp_tuple_element_2 = const_int_neg_1;
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_dict_value_4, 12, tmp_tuple_element_2);
        tmp_dict_key_4 = const_str_plain_args;
        tmp_res = PyDict_SetItem(tmp_kw_name_2, tmp_dict_key_4, tmp_dict_value_4);
        Py_DECREF(tmp_dict_value_4);
        assert(!(tmp_res != 0));
        frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 672;
        tmp_assign_source_11 = CALL_FUNCTION_WITH_KEYARGS(tmp_called_name_3, tmp_kw_name_2);
        Py_DECREF(tmp_called_name_3);
        Py_DECREF(tmp_kw_name_2);
        if (tmp_assign_source_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 672;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_t2 == NULL);
        var_t2 = tmp_assign_source_11;
    }
    {
        PyObject *tmp_called_instance_28;
        PyObject *tmp_call_result_15;
        CHECK_OBJECT(var_t2);
        tmp_called_instance_28 = var_t2;
        frame_9552b6460145c0ce514f3e6d66039fe2->m_frame.f_lineno = 673;
        tmp_call_result_15 = CALL_METHOD_NO_ARGS(tmp_called_instance_28, const_str_plain_start);
        if (tmp_call_result_15 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 673;
            type_description_1 = "ooooooooooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_15);
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_9552b6460145c0ce514f3e6d66039fe2);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_9552b6460145c0ce514f3e6d66039fe2);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto try_return_handler_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_9552b6460145c0ce514f3e6d66039fe2);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_9552b6460145c0ce514f3e6d66039fe2, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_9552b6460145c0ce514f3e6d66039fe2->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_9552b6460145c0ce514f3e6d66039fe2, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_9552b6460145c0ce514f3e6d66039fe2,
        type_description_1,
        par_button,
        par_ui,
        var_pw_strip,
        var_index,
        var_e,
        var_pw_u_trim,
        var_t2,
        var_pw_u,
        var_pw_u_trim_confirm,
        var_pw_u_confirm,
        var_t1,
        var_start_time,
        var_msid
    );


    // Release cached frame.
    if (frame_9552b6460145c0ce514f3e6d66039fe2 == cache_frame_9552b6460145c0ce514f3e6d66039fe2) {
        Py_DECREF(frame_9552b6460145c0ce514f3e6d66039fe2);
    }
    cache_frame_9552b6460145c0ce514f3e6d66039fe2 = NULL;

    assertFrameObject(frame_9552b6460145c0ce514f3e6d66039fe2);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(runop$$$function_8_run_setupUser);
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    CHECK_OBJECT((PyObject *)var_pw_strip);
    Py_DECREF(var_pw_strip);
    var_pw_strip = NULL;

    Py_XDECREF(var_index);
    var_index = NULL;

    Py_XDECREF(var_e);
    var_e = NULL;

    Py_XDECREF(var_pw_u_trim);
    var_pw_u_trim = NULL;

    Py_XDECREF(var_t2);
    var_t2 = NULL;

    Py_XDECREF(var_pw_u);
    var_pw_u = NULL;

    Py_XDECREF(var_pw_u_trim_confirm);
    var_pw_u_trim_confirm = NULL;

    Py_XDECREF(var_pw_u_confirm);
    var_pw_u_confirm = NULL;

    Py_XDECREF(var_t1);
    var_t1 = NULL;

    Py_XDECREF(var_start_time);
    var_start_time = NULL;

    Py_XDECREF(var_msid);
    var_msid = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_pw_strip);
    var_pw_strip = NULL;

    Py_XDECREF(var_index);
    var_index = NULL;

    Py_XDECREF(var_e);
    var_e = NULL;

    Py_XDECREF(var_pw_u_trim);
    var_pw_u_trim = NULL;

    Py_XDECREF(var_t2);
    var_t2 = NULL;

    Py_XDECREF(var_pw_u);
    var_pw_u = NULL;

    Py_XDECREF(var_pw_u_trim_confirm);
    var_pw_u_trim_confirm = NULL;

    Py_XDECREF(var_pw_u_confirm);
    var_pw_u_confirm = NULL;

    Py_XDECREF(var_t1);
    var_t1 = NULL;

    Py_XDECREF(var_start_time);
    var_start_time = NULL;

    Py_XDECREF(var_msid);
    var_msid = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto function_exception_exit;
    // End of try:

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(runop$$$function_8_run_setupUser);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_button);
    Py_DECREF(par_button);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_button);
    Py_DECREF(par_button);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_runop$$$function_9_run_removeUser(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_button = python_pars[0];
    PyObject *par_ui = python_pars[1];
    PyObject *var_pw_strip = NULL;
    PyObject *var_index = NULL;
    PyObject *var_e = NULL;
    PyObject *var_pw = NULL;
    PyObject *var_t2 = NULL;
    PyObject *var_pw_trim = NULL;
    PyObject *var_drive = NULL;
    PyObject *var_t1 = NULL;
    PyObject *var_start_time = NULL;
    PyObject *var_msid = NULL;
    struct Nuitka_FrameObject *frame_632cb48e10126135028b190adf4cdebf;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    PyObject *tmp_return_value = NULL;
    bool tmp_result;
    static struct Nuitka_FrameObject *cache_frame_632cb48e10126135028b190adf4cdebf = NULL;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;

    // Actual function body.
    // Tried code:
    MAKE_OR_REUSE_FRAME(cache_frame_632cb48e10126135028b190adf4cdebf, codeobj_632cb48e10126135028b190adf4cdebf, module_runop, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
    frame_632cb48e10126135028b190adf4cdebf = cache_frame_632cb48e10126135028b190adf4cdebf;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_632cb48e10126135028b190adf4cdebf);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_632cb48e10126135028b190adf4cdebf) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_instance_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_call_result_1;
        PyObject *tmp_args_element_name_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_verify);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_verify);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 236 ], 35, 0);
            exception_tb = NULL;

            exception_lineno = 676;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_1 = tmp_mvar_value_1;
        CHECK_OBJECT(par_ui);
        tmp_args_element_name_1 = par_ui;
        frame_632cb48e10126135028b190adf4cdebf->m_frame.f_lineno = 676;
        {
            PyObject *call_args[] = {tmp_args_element_name_1};
            tmp_call_result_1 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_1, const_str_plain_licCheck, call_args);
        }

        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 676;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_1);
    }
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_called_name_1;
        PyObject *tmp_source_name_1;
        PyObject *tmp_mvar_value_2;
        PyObject *tmp_args_element_name_2;
        PyObject *tmp_args_element_name_3;
        PyObject *tmp_args_element_name_4;
        PyObject *tmp_called_instance_2;
        PyObject *tmp_source_name_2;
        tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_2 == NULL)) {
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_2 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
            exception_tb = NULL;

            exception_lineno = 677;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_1 = tmp_mvar_value_2;
        tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_sub);
        if (tmp_called_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 677;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_2 = const_str_digest_29fe972ddfd3c3ace7d88aee7a9cd77e;
        tmp_args_element_name_3 = const_str_empty;
        CHECK_OBJECT(par_ui);
        tmp_source_name_2 = par_ui;
        tmp_called_instance_2 = LOOKUP_ATTRIBUTE(tmp_source_name_2, const_str_plain_pass_entry);
        if (tmp_called_instance_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_1);

            exception_lineno = 677;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        frame_632cb48e10126135028b190adf4cdebf->m_frame.f_lineno = 677;
        tmp_args_element_name_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_2, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_2);
        if (tmp_args_element_name_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_1);

            exception_lineno = 677;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        frame_632cb48e10126135028b190adf4cdebf->m_frame.f_lineno = 677;
        {
            PyObject *call_args[] = {tmp_args_element_name_2, tmp_args_element_name_3, tmp_args_element_name_4};
            tmp_assign_source_1 = CALL_FUNCTION_WITH_ARGS3(tmp_called_name_1, call_args);
        }

        Py_DECREF(tmp_called_name_1);
        Py_DECREF(tmp_args_element_name_4);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 677;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        assert(var_pw_strip == NULL);
        var_pw_strip = tmp_assign_source_1;
    }
    {
        nuitka_bool tmp_condition_result_1;
        int tmp_and_left_truth_1;
        nuitka_bool tmp_and_left_value_1;
        nuitka_bool tmp_and_right_value_1;
        PyObject *tmp_compexpr_left_1;
        PyObject *tmp_compexpr_right_1;
        PyObject *tmp_called_instance_3;
        PyObject *tmp_source_name_3;
        PyObject *tmp_operand_name_1;
        PyObject *tmp_called_instance_4;
        PyObject *tmp_source_name_4;
        CHECK_OBJECT(par_ui);
        tmp_source_name_3 = par_ui;
        tmp_called_instance_3 = LOOKUP_ATTRIBUTE(tmp_source_name_3, const_str_plain_pass_entry);
        if (tmp_called_instance_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 678;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        frame_632cb48e10126135028b190adf4cdebf->m_frame.f_lineno = 678;
        tmp_compexpr_left_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_3, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_3);
        if (tmp_compexpr_left_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 678;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_1 = const_str_empty;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_1, tmp_compexpr_right_1);
        Py_DECREF(tmp_compexpr_left_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 678;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_1 = tmp_and_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_1 == 1) {
            goto and_right_1;
        } else {
            goto and_left_1;
        }
        and_right_1:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_4 = par_ui;
        tmp_called_instance_4 = LOOKUP_ATTRIBUTE(tmp_source_name_4, const_str_plain_check_pass_rd);
        if (tmp_called_instance_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 678;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        frame_632cb48e10126135028b190adf4cdebf->m_frame.f_lineno = 678;
        tmp_operand_name_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_4, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_4);
        if (tmp_operand_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 678;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_1);
        Py_DECREF(tmp_operand_name_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 678;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_1 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_condition_result_1 = tmp_and_right_value_1;
        goto and_end_1;
        and_left_1:;
        tmp_condition_result_1 = tmp_and_left_value_1;
        and_end_1:;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        {
            PyObject *tmp_called_instance_5;
            PyObject *tmp_call_result_2;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_5 = par_ui;
            frame_632cb48e10126135028b190adf4cdebf->m_frame.f_lineno = 679;
            tmp_call_result_2 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_5, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_8482c425481a7392528c91276c4d7ae3_tuple, 0));

            if (tmp_call_result_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 679;
                type_description_1 = "oooooooooNooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_2);
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        branch_no_1:;
    }
    {
        nuitka_bool tmp_condition_result_2;
        int tmp_and_left_truth_2;
        nuitka_bool tmp_and_left_value_2;
        nuitka_bool tmp_and_right_value_2;
        PyObject *tmp_compexpr_left_2;
        PyObject *tmp_compexpr_right_2;
        PyObject *tmp_operand_name_2;
        PyObject *tmp_called_instance_6;
        PyObject *tmp_source_name_5;
        CHECK_OBJECT(var_pw_strip);
        tmp_compexpr_left_2 = var_pw_strip;
        tmp_compexpr_right_2 = const_str_empty;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_2, tmp_compexpr_right_2);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 681;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_2 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_2 = tmp_and_left_value_2 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_2 == 1) {
            goto and_right_2;
        } else {
            goto and_left_2;
        }
        and_right_2:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_5 = par_ui;
        tmp_called_instance_6 = LOOKUP_ATTRIBUTE(tmp_source_name_5, const_str_plain_check_pass_rd);
        if (tmp_called_instance_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 681;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        frame_632cb48e10126135028b190adf4cdebf->m_frame.f_lineno = 681;
        tmp_operand_name_2 = CALL_METHOD_NO_ARGS(tmp_called_instance_6, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_6);
        if (tmp_operand_name_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 681;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_2);
        Py_DECREF(tmp_operand_name_2);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 681;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_2 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_condition_result_2 = tmp_and_right_value_2;
        goto and_end_2;
        and_left_2:;
        tmp_condition_result_2 = tmp_and_left_value_2;
        and_end_2:;
        if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
            goto branch_yes_2;
        } else {
            goto branch_no_2;
        }
        branch_yes_2:;
        {
            PyObject *tmp_called_instance_7;
            PyObject *tmp_call_result_3;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_7 = par_ui;
            frame_632cb48e10126135028b190adf4cdebf->m_frame.f_lineno = 682;
            tmp_call_result_3 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_7, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_84ba3144e8a4c8824551fdd8d0fe5bde_tuple, 0));

            if (tmp_call_result_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 682;
                type_description_1 = "oooooooooNooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_3);
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        branch_no_2:;
    }
    {
        nuitka_bool tmp_condition_result_3;
        int tmp_and_left_truth_3;
        nuitka_bool tmp_and_left_value_3;
        nuitka_bool tmp_and_right_value_3;
        PyObject *tmp_called_instance_8;
        PyObject *tmp_source_name_6;
        PyObject *tmp_call_result_4;
        int tmp_truth_name_1;
        PyObject *tmp_compexpr_left_3;
        PyObject *tmp_compexpr_right_3;
        PyObject *tmp_len_arg_1;
        PyObject *tmp_source_name_7;
        CHECK_OBJECT(par_ui);
        tmp_source_name_6 = par_ui;
        tmp_called_instance_8 = LOOKUP_ATTRIBUTE(tmp_source_name_6, const_str_plain_pass_sav);
        if (tmp_called_instance_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 684;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        frame_632cb48e10126135028b190adf4cdebf->m_frame.f_lineno = 684;
        tmp_call_result_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_8, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_8);
        if (tmp_call_result_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 684;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_1 = CHECK_IF_TRUE(tmp_call_result_4);
        if (tmp_truth_name_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_4);

            exception_lineno = 684;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_3 = tmp_truth_name_1 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_4);
        tmp_and_left_truth_3 = tmp_and_left_value_3 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_3 == 1) {
            goto and_right_3;
        } else {
            goto and_left_3;
        }
        and_right_3:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_7 = par_ui;
        tmp_len_arg_1 = LOOKUP_ATTRIBUTE(tmp_source_name_7, const_str_plain_drive_list);
        if (tmp_len_arg_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 684;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_left_3 = BUILTIN_LEN(tmp_len_arg_1);
        Py_DECREF(tmp_len_arg_1);
        if (tmp_compexpr_left_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 684;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_3 = const_int_0;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_3, tmp_compexpr_right_3);
        Py_DECREF(tmp_compexpr_left_3);
        assert(!(tmp_res == -1));
        tmp_and_right_value_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_condition_result_3 = tmp_and_right_value_3;
        goto and_end_3;
        and_left_3:;
        tmp_condition_result_3 = tmp_and_left_value_3;
        and_end_3:;
        if (tmp_condition_result_3 == NUITKA_BOOL_TRUE) {
            goto branch_yes_3;
        } else {
            goto branch_no_3;
        }
        branch_yes_3:;
        {
            PyObject *tmp_called_instance_9;
            PyObject *tmp_call_result_5;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_9 = par_ui;
            frame_632cb48e10126135028b190adf4cdebf->m_frame.f_lineno = 685;
            tmp_call_result_5 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_9, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_1a4b86fee576c2932467ec44f9732332_tuple, 0));

            if (tmp_call_result_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 685;
                type_description_1 = "oooooooooNooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_5);
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        branch_no_3:;
    }
    {
        PyObject *tmp_assign_source_2;
        PyObject *tmp_called_instance_10;
        PyObject *tmp_source_name_8;
        CHECK_OBJECT(par_ui);
        tmp_source_name_8 = par_ui;
        tmp_called_instance_10 = LOOKUP_ATTRIBUTE(tmp_source_name_8, const_str_plain_dev_select);
        if (tmp_called_instance_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 687;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        frame_632cb48e10126135028b190adf4cdebf->m_frame.f_lineno = 687;
        tmp_assign_source_2 = CALL_METHOD_NO_ARGS(tmp_called_instance_10, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_10);
        if (tmp_assign_source_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 687;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        assert(var_index == NULL);
        var_index = tmp_assign_source_2;
    }
    {
        PyObject *tmp_assattr_name_1;
        PyObject *tmp_subscribed_name_1;
        PyObject *tmp_source_name_9;
        PyObject *tmp_subscript_name_1;
        PyObject *tmp_assattr_target_1;
        CHECK_OBJECT(par_ui);
        tmp_source_name_9 = par_ui;
        tmp_subscribed_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_9, const_str_plain_devs_list);
        if (tmp_subscribed_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 688;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_index);
        tmp_subscript_name_1 = var_index;
        tmp_assattr_name_1 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_1, tmp_subscript_name_1);
        Py_DECREF(tmp_subscribed_name_1);
        if (tmp_assattr_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 688;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_ui);
        tmp_assattr_target_1 = par_ui;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, const_str_plain_devname, tmp_assattr_name_1);
        Py_DECREF(tmp_assattr_name_1);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 688;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
    }
    {
        nuitka_bool tmp_condition_result_4;
        PyObject *tmp_compexpr_left_4;
        PyObject *tmp_compexpr_right_4;
        PyObject *tmp_subscribed_name_2;
        PyObject *tmp_source_name_10;
        PyObject *tmp_subscript_name_2;
        CHECK_OBJECT(par_ui);
        tmp_source_name_10 = par_ui;
        tmp_subscribed_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_10, const_str_plain_user_list);
        if (tmp_subscribed_name_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 690;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_index);
        tmp_subscript_name_2 = var_index;
        tmp_compexpr_left_4 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_2, tmp_subscript_name_2);
        Py_DECREF(tmp_subscribed_name_2);
        if (tmp_compexpr_left_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 690;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_4 = const_str_plain_1;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_4, tmp_compexpr_right_4);
        Py_DECREF(tmp_compexpr_left_4);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 690;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_4 == NUITKA_BOOL_TRUE) {
            goto branch_yes_4;
        } else {
            goto branch_no_4;
        }
        branch_yes_4:;
        {
            PyObject *tmp_called_instance_11;
            PyObject *tmp_call_result_6;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_11 = par_ui;
            frame_632cb48e10126135028b190adf4cdebf->m_frame.f_lineno = 691;
            tmp_call_result_6 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_11, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_3975ae734220aa490879f90d9055ecdf_tuple, 0));

            if (tmp_call_result_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 691;
                type_description_1 = "oooooooooNooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_6);
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        branch_no_4:;
    }
    {
        PyObject *tmp_assign_source_3;
        PyObject *tmp_subscribed_name_3;
        PyObject *tmp_source_name_11;
        PyObject *tmp_subscript_name_3;
        CHECK_OBJECT(par_ui);
        tmp_source_name_11 = par_ui;
        tmp_subscribed_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_11, const_str_plain_msid_list);
        if (tmp_subscribed_name_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 707;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_index);
        tmp_subscript_name_3 = var_index;
        tmp_assign_source_3 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_3, tmp_subscript_name_3);
        Py_DECREF(tmp_subscribed_name_3);
        if (tmp_assign_source_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 707;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        assert(var_msid == NULL);
        var_msid = tmp_assign_source_3;
    }
    {
        PyObject *tmp_assign_source_4;
        PyObject *tmp_called_instance_12;
        PyObject *tmp_source_name_12;
        CHECK_OBJECT(par_ui);
        tmp_source_name_12 = par_ui;
        tmp_called_instance_12 = LOOKUP_ATTRIBUTE(tmp_source_name_12, const_str_plain_pass_entry);
        if (tmp_called_instance_12 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 708;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        frame_632cb48e10126135028b190adf4cdebf->m_frame.f_lineno = 708;
        tmp_assign_source_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_12, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_12);
        if (tmp_assign_source_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 708;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        assert(var_pw == NULL);
        var_pw = tmp_assign_source_4;
    }
    {
        PyObject *tmp_assign_source_5;
        PyObject *tmp_called_instance_13;
        PyObject *tmp_mvar_value_3;
        PyObject *tmp_args_element_name_5;
        PyObject *tmp_args_element_name_6;
        PyObject *tmp_args_element_name_7;
        tmp_mvar_value_3 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_3 == NULL)) {
            tmp_mvar_value_3 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_3 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
            exception_tb = NULL;

            exception_lineno = 709;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_13 = tmp_mvar_value_3;
        tmp_args_element_name_5 = const_str_digest_29fe972ddfd3c3ace7d88aee7a9cd77e;
        tmp_args_element_name_6 = const_str_empty;
        CHECK_OBJECT(var_pw);
        tmp_args_element_name_7 = var_pw;
        frame_632cb48e10126135028b190adf4cdebf->m_frame.f_lineno = 709;
        {
            PyObject *call_args[] = {tmp_args_element_name_5, tmp_args_element_name_6, tmp_args_element_name_7};
            tmp_assign_source_5 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_13, const_str_plain_sub, call_args);
        }

        if (tmp_assign_source_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 709;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        assert(var_pw_trim == NULL);
        var_pw_trim = tmp_assign_source_5;
    }
    {
        nuitka_bool tmp_condition_result_5;
        int tmp_and_left_truth_4;
        nuitka_bool tmp_and_left_value_4;
        nuitka_bool tmp_and_right_value_4;
        PyObject *tmp_compexpr_left_5;
        PyObject *tmp_compexpr_right_5;
        PyObject *tmp_left_name_1;
        PyObject *tmp_source_name_13;
        PyObject *tmp_right_name_1;
        PyObject *tmp_called_instance_14;
        PyObject *tmp_source_name_14;
        PyObject *tmp_call_result_7;
        int tmp_truth_name_2;
        CHECK_OBJECT(par_ui);
        tmp_source_name_13 = par_ui;
        tmp_left_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_13, const_str_plain_VERSION);
        if (tmp_left_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 712;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_right_name_1 = const_int_pos_2;
        tmp_compexpr_left_5 = BINARY_OPERATION_MOD_OBJECT_INT(tmp_left_name_1, tmp_right_name_1);
        Py_DECREF(tmp_left_name_1);
        if (tmp_compexpr_left_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 712;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_5 = const_int_pos_1;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_5, tmp_compexpr_right_5);
        Py_DECREF(tmp_compexpr_left_5);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 712;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_4 = tmp_and_left_value_4 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_4 == 1) {
            goto and_right_4;
        } else {
            goto and_left_4;
        }
        and_right_4:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_14 = par_ui;
        tmp_called_instance_14 = LOOKUP_ATTRIBUTE(tmp_source_name_14, const_str_plain_pass_sav);
        if (tmp_called_instance_14 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 712;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        frame_632cb48e10126135028b190adf4cdebf->m_frame.f_lineno = 712;
        tmp_call_result_7 = CALL_METHOD_NO_ARGS(tmp_called_instance_14, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_14);
        if (tmp_call_result_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 712;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_2 = CHECK_IF_TRUE(tmp_call_result_7);
        if (tmp_truth_name_2 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_7);

            exception_lineno = 712;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_4 = tmp_truth_name_2 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_7);
        tmp_condition_result_5 = tmp_and_right_value_4;
        goto and_end_4;
        and_left_4:;
        tmp_condition_result_5 = tmp_and_left_value_4;
        and_end_4:;
        if (tmp_condition_result_5 == NUITKA_BOOL_TRUE) {
            goto branch_yes_5;
        } else {
            goto branch_no_5;
        }
        branch_yes_5:;
        {
            PyObject *tmp_assign_source_6;
            PyObject *tmp_called_instance_15;
            PyObject *tmp_source_name_15;
            CHECK_OBJECT(par_ui);
            tmp_source_name_15 = par_ui;
            tmp_called_instance_15 = LOOKUP_ATTRIBUTE(tmp_source_name_15, const_str_plain_drive_menu);
            if (tmp_called_instance_15 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 713;
                type_description_1 = "oooooooooNooo";
                goto frame_exception_exit_1;
            }
            frame_632cb48e10126135028b190adf4cdebf->m_frame.f_lineno = 713;
            tmp_assign_source_6 = CALL_METHOD_NO_ARGS(tmp_called_instance_15, const_str_plain_get_active_text);
            Py_DECREF(tmp_called_instance_15);
            if (tmp_assign_source_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 713;
                type_description_1 = "oooooooooNooo";
                goto frame_exception_exit_1;
            }
            assert(var_drive == NULL);
            var_drive = tmp_assign_source_6;
        }
        {
            nuitka_bool tmp_condition_result_6;
            PyObject *tmp_compexpr_left_6;
            PyObject *tmp_compexpr_right_6;
            PyObject *tmp_source_name_16;
            CHECK_OBJECT(par_ui);
            tmp_source_name_16 = par_ui;
            tmp_compexpr_left_6 = LOOKUP_ATTRIBUTE(tmp_source_name_16, const_str_plain_DEV_OS);
            if (tmp_compexpr_left_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 715;
                type_description_1 = "oooooooooNooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_6 = const_str_plain_Windows;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_6, tmp_compexpr_right_6);
            Py_DECREF(tmp_compexpr_left_6);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 715;
                type_description_1 = "oooooooooNooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_6 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_6 == NUITKA_BOOL_TRUE) {
                goto branch_yes_6;
            } else {
                goto branch_no_6;
            }
            branch_yes_6:;
            {
                PyObject *tmp_assign_source_7;
                PyObject *tmp_left_name_2;
                PyObject *tmp_right_name_2;
                CHECK_OBJECT(var_drive);
                tmp_left_name_2 = var_drive;
                tmp_right_name_2 = const_str_chr_92;
                tmp_assign_source_7 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_2, tmp_right_name_2);
                if (tmp_assign_source_7 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 716;
                    type_description_1 = "oooooooooNooo";
                    goto frame_exception_exit_1;
                }
                {
                    PyObject *old = var_drive;
                    assert(old != NULL);
                    var_drive = tmp_assign_source_7;
                    Py_DECREF(old);
                }

            }
            branch_no_6:;
        }
        {
            nuitka_bool tmp_condition_result_7;
            PyObject *tmp_operand_name_3;
            PyObject *tmp_called_instance_16;
            PyObject *tmp_source_name_17;
            PyObject *tmp_mvar_value_4;
            PyObject *tmp_args_element_name_8;
            tmp_mvar_value_4 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

            if (unlikely(tmp_mvar_value_4 == NULL)) {
                tmp_mvar_value_4 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
            }

            if (tmp_mvar_value_4 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                exception_tb = NULL;

                exception_lineno = 717;
                type_description_1 = "oooooooooNooo";
                goto frame_exception_exit_1;
            }

            tmp_source_name_17 = tmp_mvar_value_4;
            tmp_called_instance_16 = LOOKUP_ATTRIBUTE(tmp_source_name_17, const_str_plain_path);
            if (tmp_called_instance_16 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 717;
                type_description_1 = "oooooooooNooo";
                goto frame_exception_exit_1;
            }
            CHECK_OBJECT(var_drive);
            tmp_args_element_name_8 = var_drive;
            frame_632cb48e10126135028b190adf4cdebf->m_frame.f_lineno = 717;
            {
                PyObject *call_args[] = {tmp_args_element_name_8};
                tmp_operand_name_3 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_16, const_str_plain_isdir, call_args);
            }

            Py_DECREF(tmp_called_instance_16);
            if (tmp_operand_name_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 717;
                type_description_1 = "oooooooooNooo";
                goto frame_exception_exit_1;
            }
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_3);
            Py_DECREF(tmp_operand_name_3);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 717;
                type_description_1 = "oooooooooNooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_7 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_7 == NUITKA_BOOL_TRUE) {
                goto branch_yes_7;
            } else {
                goto branch_no_7;
            }
            branch_yes_7:;
            {
                PyObject *tmp_called_instance_17;
                PyObject *tmp_call_result_8;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_17 = par_ui;
                frame_632cb48e10126135028b190adf4cdebf->m_frame.f_lineno = 718;
                tmp_call_result_8 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_17, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_7dce1312d265510c9f5fb49e99196289_tuple, 0));

                if (tmp_call_result_8 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 718;
                    type_description_1 = "oooooooooNooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_8);
            }
            tmp_return_value = Py_None;
            Py_INCREF(tmp_return_value);
            goto frame_return_exit_1;
            branch_no_7:;
        }
        branch_no_5:;
    }
    {
        PyObject *tmp_called_instance_18;
        PyObject *tmp_call_result_9;
        CHECK_OBJECT(par_ui);
        tmp_called_instance_18 = par_ui;
        frame_632cb48e10126135028b190adf4cdebf->m_frame.f_lineno = 727;
        tmp_call_result_9 = CALL_METHOD_NO_ARGS(tmp_called_instance_18, const_str_plain_start_spin);
        if (tmp_call_result_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 727;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_9);
    }
    {
        PyObject *tmp_called_instance_19;
        PyObject *tmp_source_name_18;
        PyObject *tmp_call_result_10;
        CHECK_OBJECT(par_ui);
        tmp_source_name_18 = par_ui;
        tmp_called_instance_19 = LOOKUP_ATTRIBUTE(tmp_source_name_18, const_str_plain_wait_instr);
        if (tmp_called_instance_19 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 728;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        frame_632cb48e10126135028b190adf4cdebf->m_frame.f_lineno = 728;
        tmp_call_result_10 = CALL_METHOD_NO_ARGS(tmp_called_instance_19, const_str_plain_show);
        Py_DECREF(tmp_called_instance_19);
        if (tmp_call_result_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 728;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_10);
    }
    {
        PyObject *tmp_assattr_name_2;
        PyObject *tmp_assattr_target_2;
        tmp_assattr_name_2 = Py_True;
        CHECK_OBJECT(par_ui);
        tmp_assattr_target_2 = par_ui;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_2, const_str_plain_op_inprogress, tmp_assattr_name_2);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 729;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
    }
    {
        PyObject *tmp_assign_source_8;
        PyObject *tmp_called_instance_20;
        PyObject *tmp_mvar_value_5;
        tmp_mvar_value_5 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_threading);

        if (unlikely(tmp_mvar_value_5 == NULL)) {
            tmp_mvar_value_5 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_threading);
        }

        if (tmp_mvar_value_5 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 661 ], 38, 0);
            exception_tb = NULL;

            exception_lineno = 733;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_20 = tmp_mvar_value_5;
        frame_632cb48e10126135028b190adf4cdebf->m_frame.f_lineno = 733;
        tmp_assign_source_8 = CALL_METHOD_NO_ARGS(tmp_called_instance_20, const_str_plain_Event);
        if (tmp_assign_source_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 733;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        assert(var_e == NULL);
        var_e = tmp_assign_source_8;
    }
    {
        PyObject *tmp_assign_source_9;
        PyObject *tmp_called_name_2;
        PyObject *tmp_source_name_19;
        PyObject *tmp_mvar_value_6;
        PyObject *tmp_kw_name_1;
        PyObject *tmp_dict_key_1;
        PyObject *tmp_dict_value_1;
        PyObject *tmp_source_name_20;
        PyObject *tmp_mvar_value_7;
        PyObject *tmp_dict_key_2;
        PyObject *tmp_dict_value_2;
        PyObject *tmp_tuple_element_1;
        tmp_mvar_value_6 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_threading);

        if (unlikely(tmp_mvar_value_6 == NULL)) {
            tmp_mvar_value_6 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_threading);
        }

        if (tmp_mvar_value_6 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 661 ], 38, 0);
            exception_tb = NULL;

            exception_lineno = 734;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_19 = tmp_mvar_value_6;
        tmp_called_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_19, const_str_plain_Thread);
        if (tmp_called_name_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 734;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_mvar_value_7 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_runsetup);

        if (unlikely(tmp_mvar_value_7 == NULL)) {
            tmp_mvar_value_7 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runsetup);
        }

        if (tmp_mvar_value_7 == NULL) {
            Py_DECREF(tmp_called_name_2);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 5095 ], 37, 0);
            exception_tb = NULL;

            exception_lineno = 734;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_20 = tmp_mvar_value_7;
        tmp_dict_value_1 = LOOKUP_ATTRIBUTE(tmp_source_name_20, const_str_plain_rt_removeUser);
        if (tmp_dict_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_2);

            exception_lineno = 734;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_dict_key_1 = const_str_plain_target;
        tmp_kw_name_1 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_kw_name_1, tmp_dict_key_1, tmp_dict_value_1);
        Py_DECREF(tmp_dict_value_1);
        assert(!(tmp_res != 0));
        CHECK_OBJECT(par_ui);
        tmp_tuple_element_1 = par_ui;
        tmp_dict_value_2 = PyTuple_New(3);
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_dict_value_2, 0, tmp_tuple_element_1);
        CHECK_OBJECT(var_index);
        tmp_tuple_element_1 = var_index;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_dict_value_2, 1, tmp_tuple_element_1);
        CHECK_OBJECT(var_e);
        tmp_tuple_element_1 = var_e;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_dict_value_2, 2, tmp_tuple_element_1);
        tmp_dict_key_2 = const_str_plain_args;
        tmp_res = PyDict_SetItem(tmp_kw_name_1, tmp_dict_key_2, tmp_dict_value_2);
        Py_DECREF(tmp_dict_value_2);
        assert(!(tmp_res != 0));
        frame_632cb48e10126135028b190adf4cdebf->m_frame.f_lineno = 734;
        tmp_assign_source_9 = CALL_FUNCTION_WITH_KEYARGS(tmp_called_name_2, tmp_kw_name_1);
        Py_DECREF(tmp_called_name_2);
        Py_DECREF(tmp_kw_name_1);
        if (tmp_assign_source_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 734;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        assert(var_t1 == NULL);
        var_t1 = tmp_assign_source_9;
    }
    {
        PyObject *tmp_called_instance_21;
        PyObject *tmp_call_result_11;
        CHECK_OBJECT(var_t1);
        tmp_called_instance_21 = var_t1;
        frame_632cb48e10126135028b190adf4cdebf->m_frame.f_lineno = 735;
        tmp_call_result_11 = CALL_METHOD_NO_ARGS(tmp_called_instance_21, const_str_plain_start);
        if (tmp_call_result_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 735;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_11);
    }
    {
        PyObject *tmp_assign_source_10;
        PyObject *tmp_called_instance_22;
        PyObject *tmp_mvar_value_8;
        tmp_mvar_value_8 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_time);

        if (unlikely(tmp_mvar_value_8 == NULL)) {
            tmp_mvar_value_8 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_time);
        }

        if (tmp_mvar_value_8 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1164 ], 33, 0);
            exception_tb = NULL;

            exception_lineno = 736;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_22 = tmp_mvar_value_8;
        frame_632cb48e10126135028b190adf4cdebf->m_frame.f_lineno = 736;
        tmp_assign_source_10 = CALL_METHOD_NO_ARGS(tmp_called_instance_22, const_str_plain_time);
        if (tmp_assign_source_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 736;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        assert(var_start_time == NULL);
        var_start_time = tmp_assign_source_10;
    }
    {
        PyObject *tmp_assign_source_11;
        PyObject *tmp_called_name_3;
        PyObject *tmp_source_name_21;
        PyObject *tmp_mvar_value_9;
        PyObject *tmp_kw_name_2;
        PyObject *tmp_dict_key_3;
        PyObject *tmp_dict_value_3;
        PyObject *tmp_source_name_22;
        PyObject *tmp_mvar_value_10;
        PyObject *tmp_dict_key_4;
        PyObject *tmp_dict_value_4;
        PyObject *tmp_tuple_element_2;
        PyObject *tmp_list_element_1;
        PyObject *tmp_source_name_23;
        PyObject *tmp_mvar_value_11;
        tmp_mvar_value_9 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_threading);

        if (unlikely(tmp_mvar_value_9 == NULL)) {
            tmp_mvar_value_9 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_threading);
        }

        if (tmp_mvar_value_9 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 661 ], 38, 0);
            exception_tb = NULL;

            exception_lineno = 737;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_21 = tmp_mvar_value_9;
        tmp_called_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_21, const_str_plain_Thread);
        if (tmp_called_name_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 737;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_mvar_value_10 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_runthread);

        if (unlikely(tmp_mvar_value_10 == NULL)) {
            tmp_mvar_value_10 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runthread);
        }

        if (tmp_mvar_value_10 == NULL) {
            Py_DECREF(tmp_called_name_3);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1304 ], 38, 0);
            exception_tb = NULL;

            exception_lineno = 737;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_22 = tmp_mvar_value_10;
        tmp_dict_value_3 = LOOKUP_ATTRIBUTE(tmp_source_name_22, const_str_plain_timeout_track);
        if (tmp_dict_value_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_3);

            exception_lineno = 737;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_dict_key_3 = const_str_plain_target;
        tmp_kw_name_2 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_kw_name_2, tmp_dict_key_3, tmp_dict_value_3);
        Py_DECREF(tmp_dict_value_3);
        assert(!(tmp_res != 0));
        CHECK_OBJECT(par_ui);
        tmp_tuple_element_2 = par_ui;
        tmp_dict_value_4 = PyTuple_New(13);
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_dict_value_4, 0, tmp_tuple_element_2);
        tmp_tuple_element_2 = const_float_60_0;
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_dict_value_4, 1, tmp_tuple_element_2);
        CHECK_OBJECT(var_start_time);
        tmp_tuple_element_2 = var_start_time;
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_dict_value_4, 2, tmp_tuple_element_2);
        CHECK_OBJECT(var_t1);
        tmp_list_element_1 = var_t1;
        tmp_tuple_element_2 = PyList_New(1);
        Py_INCREF(tmp_list_element_1);
        PyList_SET_ITEM(tmp_tuple_element_2, 0, tmp_list_element_1);
        PyTuple_SET_ITEM(tmp_dict_value_4, 3, tmp_tuple_element_2);
        tmp_tuple_element_2 = Py_None;
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_dict_value_4, 4, tmp_tuple_element_2);
        CHECK_OBJECT(var_e);
        tmp_tuple_element_2 = var_e;
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_dict_value_4, 5, tmp_tuple_element_2);
        tmp_tuple_element_2 = Py_None;
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_dict_value_4, 6, tmp_tuple_element_2);
        tmp_tuple_element_2 = Py_None;
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_dict_value_4, 7, tmp_tuple_element_2);
        tmp_mvar_value_11 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_cleanop);

        if (unlikely(tmp_mvar_value_11 == NULL)) {
            tmp_mvar_value_11 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_cleanop);
        }

        if (tmp_mvar_value_11 == NULL) {
            Py_DECREF(tmp_called_name_3);
            Py_DECREF(tmp_kw_name_2);
            Py_DECREF(tmp_dict_value_4);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 5171 ], 36, 0);
            exception_tb = NULL;

            exception_lineno = 737;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_23 = tmp_mvar_value_11;
        tmp_tuple_element_2 = LOOKUP_ATTRIBUTE(tmp_source_name_23, const_str_plain_timeout_cleanup);
        if (tmp_tuple_element_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_3);
            Py_DECREF(tmp_kw_name_2);
            Py_DECREF(tmp_dict_value_4);

            exception_lineno = 737;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        PyTuple_SET_ITEM(tmp_dict_value_4, 8, tmp_tuple_element_2);
        tmp_tuple_element_2 = const_int_neg_1;
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_dict_value_4, 9, tmp_tuple_element_2);
        tmp_tuple_element_2 = const_int_neg_1;
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_dict_value_4, 10, tmp_tuple_element_2);
        tmp_tuple_element_2 = const_int_neg_1;
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_dict_value_4, 11, tmp_tuple_element_2);
        tmp_tuple_element_2 = const_int_neg_1;
        Py_INCREF(tmp_tuple_element_2);
        PyTuple_SET_ITEM(tmp_dict_value_4, 12, tmp_tuple_element_2);
        tmp_dict_key_4 = const_str_plain_args;
        tmp_res = PyDict_SetItem(tmp_kw_name_2, tmp_dict_key_4, tmp_dict_value_4);
        Py_DECREF(tmp_dict_value_4);
        assert(!(tmp_res != 0));
        frame_632cb48e10126135028b190adf4cdebf->m_frame.f_lineno = 737;
        tmp_assign_source_11 = CALL_FUNCTION_WITH_KEYARGS(tmp_called_name_3, tmp_kw_name_2);
        Py_DECREF(tmp_called_name_3);
        Py_DECREF(tmp_kw_name_2);
        if (tmp_assign_source_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 737;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        assert(var_t2 == NULL);
        var_t2 = tmp_assign_source_11;
    }
    {
        PyObject *tmp_called_instance_23;
        PyObject *tmp_call_result_12;
        CHECK_OBJECT(var_t2);
        tmp_called_instance_23 = var_t2;
        frame_632cb48e10126135028b190adf4cdebf->m_frame.f_lineno = 738;
        tmp_call_result_12 = CALL_METHOD_NO_ARGS(tmp_called_instance_23, const_str_plain_start);
        if (tmp_call_result_12 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 738;
            type_description_1 = "oooooooooNooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_12);
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_632cb48e10126135028b190adf4cdebf);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_632cb48e10126135028b190adf4cdebf);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto try_return_handler_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_632cb48e10126135028b190adf4cdebf);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_632cb48e10126135028b190adf4cdebf, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_632cb48e10126135028b190adf4cdebf->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_632cb48e10126135028b190adf4cdebf, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_632cb48e10126135028b190adf4cdebf,
        type_description_1,
        par_button,
        par_ui,
        var_pw_strip,
        var_index,
        var_e,
        var_pw,
        var_t2,
        var_pw_trim,
        var_drive,
        NULL,
        var_t1,
        var_start_time,
        var_msid
    );


    // Release cached frame.
    if (frame_632cb48e10126135028b190adf4cdebf == cache_frame_632cb48e10126135028b190adf4cdebf) {
        Py_DECREF(frame_632cb48e10126135028b190adf4cdebf);
    }
    cache_frame_632cb48e10126135028b190adf4cdebf = NULL;

    assertFrameObject(frame_632cb48e10126135028b190adf4cdebf);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(runop$$$function_9_run_removeUser);
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    CHECK_OBJECT((PyObject *)var_pw_strip);
    Py_DECREF(var_pw_strip);
    var_pw_strip = NULL;

    Py_XDECREF(var_index);
    var_index = NULL;

    Py_XDECREF(var_e);
    var_e = NULL;

    Py_XDECREF(var_pw);
    var_pw = NULL;

    Py_XDECREF(var_t2);
    var_t2 = NULL;

    Py_XDECREF(var_pw_trim);
    var_pw_trim = NULL;

    Py_XDECREF(var_drive);
    var_drive = NULL;

    Py_XDECREF(var_t1);
    var_t1 = NULL;

    Py_XDECREF(var_start_time);
    var_start_time = NULL;

    Py_XDECREF(var_msid);
    var_msid = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_pw_strip);
    var_pw_strip = NULL;

    Py_XDECREF(var_index);
    var_index = NULL;

    Py_XDECREF(var_e);
    var_e = NULL;

    Py_XDECREF(var_pw);
    var_pw = NULL;

    Py_XDECREF(var_t2);
    var_t2 = NULL;

    Py_XDECREF(var_pw_trim);
    var_pw_trim = NULL;

    Py_XDECREF(var_drive);
    var_drive = NULL;

    Py_XDECREF(var_t1);
    var_t1 = NULL;

    Py_XDECREF(var_start_time);
    var_start_time = NULL;

    Py_XDECREF(var_msid);
    var_msid = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto function_exception_exit;
    // End of try:

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(runop$$$function_9_run_removeUser);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_button);
    Py_DECREF(par_button);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_button);
    Py_DECREF(par_button);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_runop$$$function_10_run_unlockPBA(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_button = python_pars[0];
    PyObject *par_ui = python_pars[1];
    PyObject *par_reboot = python_pars[2];
    PyObject *par_autounlock = python_pars[3];
    PyObject *par_msg = python_pars[4];
    PyObject *var_folder_list = NULL;
    PyObject *var_selected_list = NULL;
    PyObject *var_txt = NULL;
    PyObject *var_pw_strip = NULL;
    PyObject *var_list_mn = NULL;
    PyObject *var_t_m = NULL;
    PyObject *var_selected = NULL;
    PyObject *var_all_list = NULL;
    PyObject *var_m1 = NULL;
    PyObject *var_m2 = NULL;
    PyObject *var_drive_list = NULL;
    PyObject *var_type_a = NULL;
    PyObject *var_index = NULL;
    PyObject *var_f_list = NULL;
    PyObject *var_a = NULL;
    PyObject *var_d = NULL;
    PyObject *var_dev_a = NULL;
    PyObject *var_drive = NULL;
    PyObject *var_iter = NULL;
    PyObject *var_devs = NULL;
    PyObject *var_s = NULL;
    PyObject *var_list_sn = NULL;
    PyObject *var_txt2 = NULL;
    PyObject *tmp_for_loop_1__for_iterator = NULL;
    PyObject *tmp_for_loop_1__iter_value = NULL;
    PyObject *tmp_for_loop_2__for_iterator = NULL;
    PyObject *tmp_for_loop_2__iter_value = NULL;
    PyObject *tmp_for_loop_3__for_iterator = NULL;
    PyObject *tmp_for_loop_3__iter_value = NULL;
    struct Nuitka_FrameObject *frame_513ef25aeb41ef62c916ffbbda8f298b;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    PyObject *tmp_return_value = NULL;
    bool tmp_result;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;
    PyObject *exception_keeper_type_3;
    PyObject *exception_keeper_value_3;
    PyTracebackObject *exception_keeper_tb_3;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_3;
    static struct Nuitka_FrameObject *cache_frame_513ef25aeb41ef62c916ffbbda8f298b = NULL;
    PyObject *exception_keeper_type_4;
    PyObject *exception_keeper_value_4;
    PyTracebackObject *exception_keeper_tb_4;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_4;

    // Actual function body.
    // Tried code:
    MAKE_OR_REUSE_FRAME(cache_frame_513ef25aeb41ef62c916ffbbda8f298b, codeobj_513ef25aeb41ef62c916ffbbda8f298b, module_runop, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
    frame_513ef25aeb41ef62c916ffbbda8f298b = cache_frame_513ef25aeb41ef62c916ffbbda8f298b;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_513ef25aeb41ef62c916ffbbda8f298b);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_513ef25aeb41ef62c916ffbbda8f298b) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_instance_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_call_result_1;
        PyObject *tmp_args_element_name_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_verify);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_verify);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 236 ], 35, 0);
            exception_tb = NULL;

            exception_lineno = 741;
            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_1 = tmp_mvar_value_1;
        CHECK_OBJECT(par_ui);
        tmp_args_element_name_1 = par_ui;
        frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 741;
        {
            PyObject *call_args[] = {tmp_args_element_name_1};
            tmp_call_result_1 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_1, const_str_plain_licCheck, call_args);
        }

        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 741;
            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_1);
    }
    {
        nuitka_bool tmp_condition_result_1;
        int tmp_truth_name_1;
        CHECK_OBJECT(par_msg);
        tmp_truth_name_1 = CHECK_IF_TRUE(par_msg);
        if (tmp_truth_name_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 742;
            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_1 = tmp_truth_name_1 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        {
            PyObject *tmp_called_instance_2;
            PyObject *tmp_call_result_2;
            CHECK_OBJECT(par_msg);
            tmp_called_instance_2 = par_msg;
            frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 743;
            tmp_call_result_2 = CALL_METHOD_NO_ARGS(tmp_called_instance_2, const_str_plain_destroy);
            if (tmp_call_result_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 743;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_2);
        }
        branch_no_1:;
    }
    {
        PyObject *tmp_assign_source_1;
        tmp_assign_source_1 = PyList_New(0);
        assert(var_devs == NULL);
        var_devs = tmp_assign_source_1;
    }
    {
        PyObject *tmp_assign_source_2;
        tmp_assign_source_2 = PyList_New(0);
        assert(var_list_mn == NULL);
        var_list_mn = tmp_assign_source_2;
    }
    {
        PyObject *tmp_assign_source_3;
        tmp_assign_source_3 = PyList_New(0);
        assert(var_list_sn == NULL);
        var_list_sn = tmp_assign_source_3;
    }
    {
        nuitka_bool tmp_condition_result_2;
        PyObject *tmp_operand_name_1;
        CHECK_OBJECT(par_autounlock);
        tmp_operand_name_1 = par_autounlock;
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 748;
            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_2 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
            goto branch_yes_2;
        } else {
            goto branch_no_2;
        }
        branch_yes_2:;
        {
            PyObject *tmp_assign_source_4;
            PyObject *tmp_called_name_1;
            PyObject *tmp_source_name_1;
            PyObject *tmp_mvar_value_2;
            PyObject *tmp_args_element_name_2;
            PyObject *tmp_args_element_name_3;
            PyObject *tmp_args_element_name_4;
            PyObject *tmp_called_instance_3;
            PyObject *tmp_source_name_2;
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

            if (unlikely(tmp_mvar_value_2 == NULL)) {
                tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
            }

            if (tmp_mvar_value_2 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
                exception_tb = NULL;

                exception_lineno = 749;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }

            tmp_source_name_1 = tmp_mvar_value_2;
            tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_sub);
            if (tmp_called_name_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 749;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_args_element_name_2 = const_str_digest_29fe972ddfd3c3ace7d88aee7a9cd77e;
            tmp_args_element_name_3 = const_str_empty;
            CHECK_OBJECT(par_ui);
            tmp_source_name_2 = par_ui;
            tmp_called_instance_3 = LOOKUP_ATTRIBUTE(tmp_source_name_2, const_str_plain_pass_entry);
            if (tmp_called_instance_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_1);

                exception_lineno = 749;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 749;
            tmp_args_element_name_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_3, const_str_plain_get_text);
            Py_DECREF(tmp_called_instance_3);
            if (tmp_args_element_name_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_1);

                exception_lineno = 749;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 749;
            {
                PyObject *call_args[] = {tmp_args_element_name_2, tmp_args_element_name_3, tmp_args_element_name_4};
                tmp_assign_source_4 = CALL_FUNCTION_WITH_ARGS3(tmp_called_name_1, call_args);
            }

            Py_DECREF(tmp_called_name_1);
            Py_DECREF(tmp_args_element_name_4);
            if (tmp_assign_source_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 749;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            assert(var_pw_strip == NULL);
            var_pw_strip = tmp_assign_source_4;
        }
        {
            nuitka_bool tmp_condition_result_3;
            int tmp_and_left_truth_1;
            nuitka_bool tmp_and_left_value_1;
            nuitka_bool tmp_and_right_value_1;
            PyObject *tmp_compexpr_left_1;
            PyObject *tmp_compexpr_right_1;
            PyObject *tmp_called_instance_4;
            PyObject *tmp_source_name_3;
            PyObject *tmp_operand_name_2;
            int tmp_and_left_truth_2;
            PyObject *tmp_and_left_value_2;
            PyObject *tmp_and_right_value_2;
            int tmp_or_left_truth_1;
            PyObject *tmp_or_left_value_1;
            PyObject *tmp_or_right_value_1;
            PyObject *tmp_compexpr_left_2;
            PyObject *tmp_compexpr_right_2;
            PyObject *tmp_left_name_1;
            PyObject *tmp_source_name_4;
            PyObject *tmp_right_name_1;
            int tmp_and_left_truth_3;
            PyObject *tmp_and_left_value_3;
            PyObject *tmp_and_right_value_3;
            PyObject *tmp_compexpr_left_3;
            PyObject *tmp_compexpr_right_3;
            PyObject *tmp_source_name_5;
            PyObject *tmp_compexpr_left_4;
            PyObject *tmp_compexpr_right_4;
            PyObject *tmp_source_name_6;
            PyObject *tmp_called_instance_5;
            PyObject *tmp_source_name_7;
            CHECK_OBJECT(par_ui);
            tmp_source_name_3 = par_ui;
            tmp_called_instance_4 = LOOKUP_ATTRIBUTE(tmp_source_name_3, const_str_plain_pass_entry);
            if (tmp_called_instance_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 751;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 751;
            tmp_compexpr_left_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_4, const_str_plain_get_text);
            Py_DECREF(tmp_called_instance_4);
            if (tmp_compexpr_left_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 751;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_1 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_1, tmp_compexpr_right_1);
            Py_DECREF(tmp_compexpr_left_1);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 751;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_and_left_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_and_left_truth_1 = tmp_and_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
            if (tmp_and_left_truth_1 == 1) {
                goto and_right_1;
            } else {
                goto and_left_1;
            }
            and_right_1:;
            CHECK_OBJECT(par_ui);
            tmp_source_name_4 = par_ui;
            tmp_left_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_4, const_str_plain_VERSION);
            if (tmp_left_name_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 751;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_right_name_1 = const_int_pos_3;
            tmp_compexpr_left_2 = BINARY_OPERATION_MOD_OBJECT_INT(tmp_left_name_1, tmp_right_name_1);
            Py_DECREF(tmp_left_name_1);
            if (tmp_compexpr_left_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 751;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_2 = const_int_0;
            tmp_or_left_value_1 = RICH_COMPARE_EQ_OBJECT_OBJECT(tmp_compexpr_left_2, tmp_compexpr_right_2);
            Py_DECREF(tmp_compexpr_left_2);
            if (tmp_or_left_value_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 751;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_or_left_truth_1 = CHECK_IF_TRUE(tmp_or_left_value_1);
            if (tmp_or_left_truth_1 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_or_left_value_1);

                exception_lineno = 751;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            if (tmp_or_left_truth_1 == 1) {
                goto or_left_1;
            } else {
                goto or_right_1;
            }
            or_right_1:;
            Py_DECREF(tmp_or_left_value_1);
            CHECK_OBJECT(par_ui);
            tmp_source_name_5 = par_ui;
            tmp_compexpr_left_3 = LOOKUP_ATTRIBUTE(tmp_source_name_5, const_str_plain_VERSION);
            if (tmp_compexpr_left_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 751;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_3 = const_int_pos_1;
            tmp_and_left_value_3 = RICH_COMPARE_EQ_OBJECT_OBJECT(tmp_compexpr_left_3, tmp_compexpr_right_3);
            Py_DECREF(tmp_compexpr_left_3);
            if (tmp_and_left_value_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 751;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_and_left_truth_3 = CHECK_IF_TRUE(tmp_and_left_value_3);
            if (tmp_and_left_truth_3 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_and_left_value_3);

                exception_lineno = 751;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            if (tmp_and_left_truth_3 == 1) {
                goto and_right_3;
            } else {
                goto and_left_3;
            }
            and_right_3:;
            Py_DECREF(tmp_and_left_value_3);
            CHECK_OBJECT(par_ui);
            tmp_source_name_6 = par_ui;
            tmp_compexpr_left_4 = LOOKUP_ATTRIBUTE(tmp_source_name_6, const_str_plain_PBA_VERSION);
            if (tmp_compexpr_left_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 751;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_4 = const_int_pos_1;
            tmp_and_right_value_3 = RICH_COMPARE_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_4, tmp_compexpr_right_4);
            Py_DECREF(tmp_compexpr_left_4);
            if (tmp_and_right_value_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 751;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_or_right_value_1 = tmp_and_right_value_3;
            goto and_end_3;
            and_left_3:;
            tmp_or_right_value_1 = tmp_and_left_value_3;
            and_end_3:;
            tmp_and_left_value_2 = tmp_or_right_value_1;
            goto or_end_1;
            or_left_1:;
            tmp_and_left_value_2 = tmp_or_left_value_1;
            or_end_1:;
            tmp_and_left_truth_2 = CHECK_IF_TRUE(tmp_and_left_value_2);
            if (tmp_and_left_truth_2 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_and_left_value_2);

                exception_lineno = 751;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            if (tmp_and_left_truth_2 == 1) {
                goto and_right_2;
            } else {
                goto and_left_2;
            }
            and_right_2:;
            Py_DECREF(tmp_and_left_value_2);
            CHECK_OBJECT(par_ui);
            tmp_source_name_7 = par_ui;
            tmp_called_instance_5 = LOOKUP_ATTRIBUTE(tmp_source_name_7, const_str_plain_check_pass_rd);
            if (tmp_called_instance_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 751;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 751;
            tmp_and_right_value_2 = CALL_METHOD_NO_ARGS(tmp_called_instance_5, const_str_plain_get_active);
            Py_DECREF(tmp_called_instance_5);
            if (tmp_and_right_value_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 751;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_operand_name_2 = tmp_and_right_value_2;
            goto and_end_2;
            and_left_2:;
            tmp_operand_name_2 = tmp_and_left_value_2;
            and_end_2:;
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_2);
            Py_DECREF(tmp_operand_name_2);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 751;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_and_right_value_1 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_condition_result_3 = tmp_and_right_value_1;
            goto and_end_1;
            and_left_1:;
            tmp_condition_result_3 = tmp_and_left_value_1;
            and_end_1:;
            if (tmp_condition_result_3 == NUITKA_BOOL_TRUE) {
                goto branch_yes_3;
            } else {
                goto branch_no_3;
            }
            branch_yes_3:;
            {
                PyObject *tmp_called_instance_6;
                PyObject *tmp_call_result_3;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_6 = par_ui;
                frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 752;
                tmp_call_result_3 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_6, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_8482c425481a7392528c91276c4d7ae3_tuple, 0));

                if (tmp_call_result_3 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 752;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_3);
            }
            tmp_return_value = Py_None;
            Py_INCREF(tmp_return_value);
            goto frame_return_exit_1;
            branch_no_3:;
        }
        {
            nuitka_bool tmp_condition_result_4;
            int tmp_and_left_truth_4;
            nuitka_bool tmp_and_left_value_4;
            nuitka_bool tmp_and_right_value_4;
            PyObject *tmp_compexpr_left_5;
            PyObject *tmp_compexpr_right_5;
            PyObject *tmp_operand_name_3;
            int tmp_and_left_truth_5;
            PyObject *tmp_and_left_value_5;
            PyObject *tmp_and_right_value_5;
            int tmp_or_left_truth_2;
            PyObject *tmp_or_left_value_2;
            PyObject *tmp_or_right_value_2;
            PyObject *tmp_compexpr_left_6;
            PyObject *tmp_compexpr_right_6;
            PyObject *tmp_left_name_2;
            PyObject *tmp_source_name_8;
            PyObject *tmp_right_name_2;
            int tmp_and_left_truth_6;
            PyObject *tmp_and_left_value_6;
            PyObject *tmp_and_right_value_6;
            PyObject *tmp_compexpr_left_7;
            PyObject *tmp_compexpr_right_7;
            PyObject *tmp_source_name_9;
            PyObject *tmp_compexpr_left_8;
            PyObject *tmp_compexpr_right_8;
            PyObject *tmp_source_name_10;
            PyObject *tmp_called_instance_7;
            PyObject *tmp_source_name_11;
            CHECK_OBJECT(var_pw_strip);
            tmp_compexpr_left_5 = var_pw_strip;
            tmp_compexpr_right_5 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_5, tmp_compexpr_right_5);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 754;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_and_left_value_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_and_left_truth_4 = tmp_and_left_value_4 == NUITKA_BOOL_TRUE ? 1 : 0;
            if (tmp_and_left_truth_4 == 1) {
                goto and_right_4;
            } else {
                goto and_left_4;
            }
            and_right_4:;
            CHECK_OBJECT(par_ui);
            tmp_source_name_8 = par_ui;
            tmp_left_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_8, const_str_plain_VERSION);
            if (tmp_left_name_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 754;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_right_name_2 = const_int_pos_3;
            tmp_compexpr_left_6 = BINARY_OPERATION_MOD_OBJECT_INT(tmp_left_name_2, tmp_right_name_2);
            Py_DECREF(tmp_left_name_2);
            if (tmp_compexpr_left_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 754;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_6 = const_int_0;
            tmp_or_left_value_2 = RICH_COMPARE_EQ_OBJECT_OBJECT(tmp_compexpr_left_6, tmp_compexpr_right_6);
            Py_DECREF(tmp_compexpr_left_6);
            if (tmp_or_left_value_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 754;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_or_left_truth_2 = CHECK_IF_TRUE(tmp_or_left_value_2);
            if (tmp_or_left_truth_2 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_or_left_value_2);

                exception_lineno = 754;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            if (tmp_or_left_truth_2 == 1) {
                goto or_left_2;
            } else {
                goto or_right_2;
            }
            or_right_2:;
            Py_DECREF(tmp_or_left_value_2);
            CHECK_OBJECT(par_ui);
            tmp_source_name_9 = par_ui;
            tmp_compexpr_left_7 = LOOKUP_ATTRIBUTE(tmp_source_name_9, const_str_plain_VERSION);
            if (tmp_compexpr_left_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 754;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_7 = const_int_pos_1;
            tmp_and_left_value_6 = RICH_COMPARE_EQ_OBJECT_OBJECT(tmp_compexpr_left_7, tmp_compexpr_right_7);
            Py_DECREF(tmp_compexpr_left_7);
            if (tmp_and_left_value_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 754;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_and_left_truth_6 = CHECK_IF_TRUE(tmp_and_left_value_6);
            if (tmp_and_left_truth_6 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_and_left_value_6);

                exception_lineno = 754;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            if (tmp_and_left_truth_6 == 1) {
                goto and_right_6;
            } else {
                goto and_left_6;
            }
            and_right_6:;
            Py_DECREF(tmp_and_left_value_6);
            CHECK_OBJECT(par_ui);
            tmp_source_name_10 = par_ui;
            tmp_compexpr_left_8 = LOOKUP_ATTRIBUTE(tmp_source_name_10, const_str_plain_PBA_VERSION);
            if (tmp_compexpr_left_8 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 754;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_8 = const_int_pos_1;
            tmp_and_right_value_6 = RICH_COMPARE_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_8, tmp_compexpr_right_8);
            Py_DECREF(tmp_compexpr_left_8);
            if (tmp_and_right_value_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 754;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_or_right_value_2 = tmp_and_right_value_6;
            goto and_end_6;
            and_left_6:;
            tmp_or_right_value_2 = tmp_and_left_value_6;
            and_end_6:;
            tmp_and_left_value_5 = tmp_or_right_value_2;
            goto or_end_2;
            or_left_2:;
            tmp_and_left_value_5 = tmp_or_left_value_2;
            or_end_2:;
            tmp_and_left_truth_5 = CHECK_IF_TRUE(tmp_and_left_value_5);
            if (tmp_and_left_truth_5 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_and_left_value_5);

                exception_lineno = 754;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            if (tmp_and_left_truth_5 == 1) {
                goto and_right_5;
            } else {
                goto and_left_5;
            }
            and_right_5:;
            Py_DECREF(tmp_and_left_value_5);
            CHECK_OBJECT(par_ui);
            tmp_source_name_11 = par_ui;
            tmp_called_instance_7 = LOOKUP_ATTRIBUTE(tmp_source_name_11, const_str_plain_check_pass_rd);
            if (tmp_called_instance_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 754;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 754;
            tmp_and_right_value_5 = CALL_METHOD_NO_ARGS(tmp_called_instance_7, const_str_plain_get_active);
            Py_DECREF(tmp_called_instance_7);
            if (tmp_and_right_value_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 754;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_operand_name_3 = tmp_and_right_value_5;
            goto and_end_5;
            and_left_5:;
            tmp_operand_name_3 = tmp_and_left_value_5;
            and_end_5:;
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_3);
            Py_DECREF(tmp_operand_name_3);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 754;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_and_right_value_4 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_condition_result_4 = tmp_and_right_value_4;
            goto and_end_4;
            and_left_4:;
            tmp_condition_result_4 = tmp_and_left_value_4;
            and_end_4:;
            if (tmp_condition_result_4 == NUITKA_BOOL_TRUE) {
                goto branch_yes_4;
            } else {
                goto branch_no_4;
            }
            branch_yes_4:;
            {
                PyObject *tmp_called_instance_8;
                PyObject *tmp_call_result_4;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_8 = par_ui;
                frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 755;
                tmp_call_result_4 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_8, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_84ba3144e8a4c8824551fdd8d0fe5bde_tuple, 0));

                if (tmp_call_result_4 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 755;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_4);
            }
            tmp_return_value = Py_None;
            Py_INCREF(tmp_return_value);
            goto frame_return_exit_1;
            branch_no_4:;
        }
        {
            nuitka_bool tmp_condition_result_5;
            int tmp_and_left_truth_7;
            nuitka_bool tmp_and_left_value_7;
            nuitka_bool tmp_and_right_value_7;
            int tmp_or_left_truth_3;
            nuitka_bool tmp_or_left_value_3;
            nuitka_bool tmp_or_right_value_3;
            PyObject *tmp_compexpr_left_9;
            PyObject *tmp_compexpr_right_9;
            PyObject *tmp_left_name_3;
            PyObject *tmp_source_name_12;
            PyObject *tmp_right_name_3;
            int tmp_and_left_truth_8;
            nuitka_bool tmp_and_left_value_8;
            nuitka_bool tmp_and_right_value_8;
            PyObject *tmp_compexpr_left_10;
            PyObject *tmp_compexpr_right_10;
            PyObject *tmp_source_name_13;
            PyObject *tmp_compexpr_left_11;
            PyObject *tmp_compexpr_right_11;
            PyObject *tmp_source_name_14;
            int tmp_and_left_truth_9;
            nuitka_bool tmp_and_left_value_9;
            nuitka_bool tmp_and_right_value_9;
            PyObject *tmp_called_instance_9;
            PyObject *tmp_source_name_15;
            PyObject *tmp_call_result_5;
            int tmp_truth_name_2;
            PyObject *tmp_compexpr_left_12;
            PyObject *tmp_compexpr_right_12;
            PyObject *tmp_len_arg_1;
            PyObject *tmp_source_name_16;
            CHECK_OBJECT(par_ui);
            tmp_source_name_12 = par_ui;
            tmp_left_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_12, const_str_plain_VERSION);
            if (tmp_left_name_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 760;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_right_name_3 = const_int_pos_3;
            tmp_compexpr_left_9 = BINARY_OPERATION_MOD_OBJECT_INT(tmp_left_name_3, tmp_right_name_3);
            Py_DECREF(tmp_left_name_3);
            if (tmp_compexpr_left_9 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 760;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_9 = const_int_0;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_9, tmp_compexpr_right_9);
            Py_DECREF(tmp_compexpr_left_9);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 760;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_or_left_value_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_or_left_truth_3 = tmp_or_left_value_3 == NUITKA_BOOL_TRUE ? 1 : 0;
            if (tmp_or_left_truth_3 == 1) {
                goto or_left_3;
            } else {
                goto or_right_3;
            }
            or_right_3:;
            CHECK_OBJECT(par_ui);
            tmp_source_name_13 = par_ui;
            tmp_compexpr_left_10 = LOOKUP_ATTRIBUTE(tmp_source_name_13, const_str_plain_VERSION);
            if (tmp_compexpr_left_10 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 760;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_10 = const_int_pos_1;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_10, tmp_compexpr_right_10);
            Py_DECREF(tmp_compexpr_left_10);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 760;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_and_left_value_8 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_and_left_truth_8 = tmp_and_left_value_8 == NUITKA_BOOL_TRUE ? 1 : 0;
            if (tmp_and_left_truth_8 == 1) {
                goto and_right_8;
            } else {
                goto and_left_8;
            }
            and_right_8:;
            CHECK_OBJECT(par_ui);
            tmp_source_name_14 = par_ui;
            tmp_compexpr_left_11 = LOOKUP_ATTRIBUTE(tmp_source_name_14, const_str_plain_PBA_VERSION);
            if (tmp_compexpr_left_11 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 760;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_11 = const_int_pos_1;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_INT(tmp_compexpr_left_11, tmp_compexpr_right_11);
            Py_DECREF(tmp_compexpr_left_11);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 760;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_and_right_value_8 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_or_right_value_3 = tmp_and_right_value_8;
            goto and_end_8;
            and_left_8:;
            tmp_or_right_value_3 = tmp_and_left_value_8;
            and_end_8:;
            tmp_and_left_value_7 = tmp_or_right_value_3;
            goto or_end_3;
            or_left_3:;
            tmp_and_left_value_7 = tmp_or_left_value_3;
            or_end_3:;
            tmp_and_left_truth_7 = tmp_and_left_value_7 == NUITKA_BOOL_TRUE ? 1 : 0;
            if (tmp_and_left_truth_7 == 1) {
                goto and_right_7;
            } else {
                goto and_left_7;
            }
            and_right_7:;
            CHECK_OBJECT(par_ui);
            tmp_source_name_15 = par_ui;
            tmp_called_instance_9 = LOOKUP_ATTRIBUTE(tmp_source_name_15, const_str_plain_pass_sav);
            if (tmp_called_instance_9 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 760;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 760;
            tmp_call_result_5 = CALL_METHOD_NO_ARGS(tmp_called_instance_9, const_str_plain_get_active);
            Py_DECREF(tmp_called_instance_9);
            if (tmp_call_result_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 760;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_truth_name_2 = CHECK_IF_TRUE(tmp_call_result_5);
            if (tmp_truth_name_2 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_call_result_5);

                exception_lineno = 760;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_and_left_value_9 = tmp_truth_name_2 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            Py_DECREF(tmp_call_result_5);
            tmp_and_left_truth_9 = tmp_and_left_value_9 == NUITKA_BOOL_TRUE ? 1 : 0;
            if (tmp_and_left_truth_9 == 1) {
                goto and_right_9;
            } else {
                goto and_left_9;
            }
            and_right_9:;
            CHECK_OBJECT(par_ui);
            tmp_source_name_16 = par_ui;
            tmp_len_arg_1 = LOOKUP_ATTRIBUTE(tmp_source_name_16, const_str_plain_drive_list);
            if (tmp_len_arg_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 760;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_left_12 = BUILTIN_LEN(tmp_len_arg_1);
            Py_DECREF(tmp_len_arg_1);
            if (tmp_compexpr_left_12 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 760;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_12 = const_int_0;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_12, tmp_compexpr_right_12);
            Py_DECREF(tmp_compexpr_left_12);
            assert(!(tmp_res == -1));
            tmp_and_right_value_9 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_and_right_value_7 = tmp_and_right_value_9;
            goto and_end_9;
            and_left_9:;
            tmp_and_right_value_7 = tmp_and_left_value_9;
            and_end_9:;
            tmp_condition_result_5 = tmp_and_right_value_7;
            goto and_end_7;
            and_left_7:;
            tmp_condition_result_5 = tmp_and_left_value_7;
            and_end_7:;
            if (tmp_condition_result_5 == NUITKA_BOOL_TRUE) {
                goto branch_yes_5;
            } else {
                goto branch_no_5;
            }
            branch_yes_5:;
            {
                PyObject *tmp_called_instance_10;
                PyObject *tmp_call_result_6;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_10 = par_ui;
                frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 761;
                tmp_call_result_6 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_10, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_1a4b86fee576c2932467ec44f9732332_tuple, 0));

                if (tmp_call_result_6 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 761;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_6);
            }
            tmp_return_value = Py_None;
            Py_INCREF(tmp_return_value);
            goto frame_return_exit_1;
            branch_no_5:;
        }
        {
            nuitka_bool tmp_condition_result_6;
            int tmp_and_left_truth_10;
            nuitka_bool tmp_and_left_value_10;
            nuitka_bool tmp_and_right_value_10;
            int tmp_or_left_truth_4;
            nuitka_bool tmp_or_left_value_4;
            nuitka_bool tmp_or_right_value_4;
            PyObject *tmp_compexpr_left_13;
            PyObject *tmp_compexpr_right_13;
            PyObject *tmp_left_name_4;
            PyObject *tmp_source_name_17;
            PyObject *tmp_right_name_4;
            int tmp_and_left_truth_11;
            nuitka_bool tmp_and_left_value_11;
            nuitka_bool tmp_and_right_value_11;
            PyObject *tmp_compexpr_left_14;
            PyObject *tmp_compexpr_right_14;
            PyObject *tmp_source_name_18;
            PyObject *tmp_compexpr_left_15;
            PyObject *tmp_compexpr_right_15;
            PyObject *tmp_source_name_19;
            PyObject *tmp_called_instance_11;
            PyObject *tmp_source_name_20;
            PyObject *tmp_call_result_7;
            int tmp_truth_name_3;
            CHECK_OBJECT(par_ui);
            tmp_source_name_17 = par_ui;
            tmp_left_name_4 = LOOKUP_ATTRIBUTE(tmp_source_name_17, const_str_plain_VERSION);
            if (tmp_left_name_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 763;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_right_name_4 = const_int_pos_3;
            tmp_compexpr_left_13 = BINARY_OPERATION_MOD_OBJECT_INT(tmp_left_name_4, tmp_right_name_4);
            Py_DECREF(tmp_left_name_4);
            if (tmp_compexpr_left_13 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 763;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_13 = const_int_0;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_13, tmp_compexpr_right_13);
            Py_DECREF(tmp_compexpr_left_13);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 763;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_or_left_value_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_or_left_truth_4 = tmp_or_left_value_4 == NUITKA_BOOL_TRUE ? 1 : 0;
            if (tmp_or_left_truth_4 == 1) {
                goto or_left_4;
            } else {
                goto or_right_4;
            }
            or_right_4:;
            CHECK_OBJECT(par_ui);
            tmp_source_name_18 = par_ui;
            tmp_compexpr_left_14 = LOOKUP_ATTRIBUTE(tmp_source_name_18, const_str_plain_VERSION);
            if (tmp_compexpr_left_14 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 763;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_14 = const_int_pos_1;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_14, tmp_compexpr_right_14);
            Py_DECREF(tmp_compexpr_left_14);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 763;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_and_left_value_11 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_and_left_truth_11 = tmp_and_left_value_11 == NUITKA_BOOL_TRUE ? 1 : 0;
            if (tmp_and_left_truth_11 == 1) {
                goto and_right_11;
            } else {
                goto and_left_11;
            }
            and_right_11:;
            CHECK_OBJECT(par_ui);
            tmp_source_name_19 = par_ui;
            tmp_compexpr_left_15 = LOOKUP_ATTRIBUTE(tmp_source_name_19, const_str_plain_PBA_VERSION);
            if (tmp_compexpr_left_15 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 763;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_15 = const_int_pos_1;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_INT(tmp_compexpr_left_15, tmp_compexpr_right_15);
            Py_DECREF(tmp_compexpr_left_15);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 763;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_and_right_value_11 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_or_right_value_4 = tmp_and_right_value_11;
            goto and_end_11;
            and_left_11:;
            tmp_or_right_value_4 = tmp_and_left_value_11;
            and_end_11:;
            tmp_and_left_value_10 = tmp_or_right_value_4;
            goto or_end_4;
            or_left_4:;
            tmp_and_left_value_10 = tmp_or_left_value_4;
            or_end_4:;
            tmp_and_left_truth_10 = tmp_and_left_value_10 == NUITKA_BOOL_TRUE ? 1 : 0;
            if (tmp_and_left_truth_10 == 1) {
                goto and_right_10;
            } else {
                goto and_left_10;
            }
            and_right_10:;
            CHECK_OBJECT(par_ui);
            tmp_source_name_20 = par_ui;
            tmp_called_instance_11 = LOOKUP_ATTRIBUTE(tmp_source_name_20, const_str_plain_pass_sav);
            if (tmp_called_instance_11 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 763;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 763;
            tmp_call_result_7 = CALL_METHOD_NO_ARGS(tmp_called_instance_11, const_str_plain_get_active);
            Py_DECREF(tmp_called_instance_11);
            if (tmp_call_result_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 763;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_truth_name_3 = CHECK_IF_TRUE(tmp_call_result_7);
            if (tmp_truth_name_3 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_call_result_7);

                exception_lineno = 763;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_and_right_value_10 = tmp_truth_name_3 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            Py_DECREF(tmp_call_result_7);
            tmp_condition_result_6 = tmp_and_right_value_10;
            goto and_end_10;
            and_left_10:;
            tmp_condition_result_6 = tmp_and_left_value_10;
            and_end_10:;
            if (tmp_condition_result_6 == NUITKA_BOOL_TRUE) {
                goto branch_yes_6;
            } else {
                goto branch_no_6;
            }
            branch_yes_6:;
            {
                PyObject *tmp_assign_source_5;
                PyObject *tmp_called_instance_12;
                PyObject *tmp_source_name_21;
                CHECK_OBJECT(par_ui);
                tmp_source_name_21 = par_ui;
                tmp_called_instance_12 = LOOKUP_ATTRIBUTE(tmp_source_name_21, const_str_plain_drive_menu);
                if (tmp_called_instance_12 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 764;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 764;
                tmp_assign_source_5 = CALL_METHOD_NO_ARGS(tmp_called_instance_12, const_str_plain_get_active_text);
                Py_DECREF(tmp_called_instance_12);
                if (tmp_assign_source_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 764;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                assert(var_drive == NULL);
                var_drive = tmp_assign_source_5;
            }
            {
                nuitka_bool tmp_condition_result_7;
                PyObject *tmp_compexpr_left_16;
                PyObject *tmp_compexpr_right_16;
                PyObject *tmp_source_name_22;
                CHECK_OBJECT(par_ui);
                tmp_source_name_22 = par_ui;
                tmp_compexpr_left_16 = LOOKUP_ATTRIBUTE(tmp_source_name_22, const_str_plain_DEV_OS);
                if (tmp_compexpr_left_16 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 766;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                tmp_compexpr_right_16 = const_str_plain_Windows;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_16, tmp_compexpr_right_16);
                Py_DECREF(tmp_compexpr_left_16);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 766;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                tmp_condition_result_7 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_7 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_7;
                } else {
                    goto branch_no_7;
                }
                branch_yes_7:;
                {
                    PyObject *tmp_assign_source_6;
                    PyObject *tmp_left_name_5;
                    PyObject *tmp_right_name_5;
                    CHECK_OBJECT(var_drive);
                    tmp_left_name_5 = var_drive;
                    tmp_right_name_5 = const_str_chr_92;
                    tmp_assign_source_6 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_5, tmp_right_name_5);
                    if (tmp_assign_source_6 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 767;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    {
                        PyObject *old = var_drive;
                        assert(old != NULL);
                        var_drive = tmp_assign_source_6;
                        Py_DECREF(old);
                    }

                }
                branch_no_7:;
            }
            {
                nuitka_bool tmp_condition_result_8;
                PyObject *tmp_operand_name_4;
                PyObject *tmp_called_instance_13;
                PyObject *tmp_source_name_23;
                PyObject *tmp_mvar_value_3;
                PyObject *tmp_args_element_name_5;
                tmp_mvar_value_3 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                if (unlikely(tmp_mvar_value_3 == NULL)) {
                    tmp_mvar_value_3 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                }

                if (tmp_mvar_value_3 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                    exception_tb = NULL;

                    exception_lineno = 768;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }

                tmp_source_name_23 = tmp_mvar_value_3;
                tmp_called_instance_13 = LOOKUP_ATTRIBUTE(tmp_source_name_23, const_str_plain_path);
                if (tmp_called_instance_13 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 768;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                CHECK_OBJECT(var_drive);
                tmp_args_element_name_5 = var_drive;
                frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 768;
                {
                    PyObject *call_args[] = {tmp_args_element_name_5};
                    tmp_operand_name_4 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_13, const_str_plain_isdir, call_args);
                }

                Py_DECREF(tmp_called_instance_13);
                if (tmp_operand_name_4 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 768;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_4);
                Py_DECREF(tmp_operand_name_4);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 768;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                tmp_condition_result_8 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_8 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_8;
                } else {
                    goto branch_no_8;
                }
                branch_yes_8:;
                {
                    PyObject *tmp_called_instance_14;
                    PyObject *tmp_call_result_8;
                    CHECK_OBJECT(par_ui);
                    tmp_called_instance_14 = par_ui;
                    frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 769;
                    tmp_call_result_8 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_14, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_08b89d533a4fcdac93ba398e6f72b3d8_tuple, 0));

                    if (tmp_call_result_8 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 769;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_8);
                }
                tmp_return_value = Py_None;
                Py_INCREF(tmp_return_value);
                goto frame_return_exit_1;
                branch_no_8:;
            }
            branch_no_6:;
        }
        {
            PyObject *tmp_assign_source_7;
            tmp_assign_source_7 = PyList_New(0);
            assert(var_selected_list == NULL);
            var_selected_list = tmp_assign_source_7;
        }
        {
            nuitka_bool tmp_condition_result_9;
            PyObject *tmp_called_instance_15;
            PyObject *tmp_source_name_24;
            PyObject *tmp_call_result_9;
            int tmp_truth_name_4;
            CHECK_OBJECT(par_ui);
            tmp_source_name_24 = par_ui;
            tmp_called_instance_15 = LOOKUP_ATTRIBUTE(tmp_source_name_24, const_str_plain_toggleSingle_radio);
            if (tmp_called_instance_15 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 772;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 772;
            tmp_call_result_9 = CALL_METHOD_NO_ARGS(tmp_called_instance_15, const_str_plain_get_active);
            Py_DECREF(tmp_called_instance_15);
            if (tmp_call_result_9 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 772;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_truth_name_4 = CHECK_IF_TRUE(tmp_call_result_9);
            if (tmp_truth_name_4 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_call_result_9);

                exception_lineno = 772;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_9 = tmp_truth_name_4 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            Py_DECREF(tmp_call_result_9);
            if (tmp_condition_result_9 == NUITKA_BOOL_TRUE) {
                goto branch_yes_9;
            } else {
                goto branch_no_9;
            }
            branch_yes_9:;
            {
                PyObject *tmp_assign_source_8;
                PyObject *tmp_called_instance_16;
                PyObject *tmp_source_name_25;
                CHECK_OBJECT(par_ui);
                tmp_source_name_25 = par_ui;
                tmp_called_instance_16 = LOOKUP_ATTRIBUTE(tmp_source_name_25, const_str_plain_dev_select);
                if (tmp_called_instance_16 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 773;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 773;
                tmp_assign_source_8 = CALL_METHOD_NO_ARGS(tmp_called_instance_16, const_str_plain_get_active);
                Py_DECREF(tmp_called_instance_16);
                if (tmp_assign_source_8 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 773;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                assert(var_index == NULL);
                var_index = tmp_assign_source_8;
            }
            {
                PyObject *tmp_assign_source_9;
                PyObject *tmp_list_element_1;
                CHECK_OBJECT(var_index);
                tmp_list_element_1 = var_index;
                tmp_assign_source_9 = PyList_New(1);
                Py_INCREF(tmp_list_element_1);
                PyList_SET_ITEM(tmp_assign_source_9, 0, tmp_list_element_1);
                {
                    PyObject *old = var_selected_list;
                    assert(old != NULL);
                    var_selected_list = tmp_assign_source_9;
                    Py_DECREF(old);
                }

            }
            {
                PyObject *tmp_assign_source_10;
                PyObject *tmp_list_element_2;
                PyObject *tmp_called_instance_17;
                PyObject *tmp_source_name_26;
                CHECK_OBJECT(par_ui);
                tmp_source_name_26 = par_ui;
                tmp_called_instance_17 = LOOKUP_ATTRIBUTE(tmp_source_name_26, const_str_plain_dev_select);
                if (tmp_called_instance_17 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 775;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 775;
                tmp_list_element_2 = CALL_METHOD_NO_ARGS(tmp_called_instance_17, const_str_plain_get_active_text);
                Py_DECREF(tmp_called_instance_17);
                if (tmp_list_element_2 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 775;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                tmp_assign_source_10 = PyList_New(1);
                PyList_SET_ITEM(tmp_assign_source_10, 0, tmp_list_element_2);
                {
                    PyObject *old = var_devs;
                    assert(old != NULL);
                    var_devs = tmp_assign_source_10;
                    Py_DECREF(old);
                }

            }
            {
                PyObject *tmp_assign_source_11;
                PyObject *tmp_list_element_3;
                PyObject *tmp_called_instance_18;
                PyObject *tmp_source_name_27;
                CHECK_OBJECT(par_ui);
                tmp_source_name_27 = par_ui;
                tmp_called_instance_18 = LOOKUP_ATTRIBUTE(tmp_source_name_27, const_str_plain_dev_vendor);
                if (tmp_called_instance_18 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 776;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 776;
                tmp_list_element_3 = CALL_METHOD_NO_ARGS(tmp_called_instance_18, const_str_plain_get_text);
                Py_DECREF(tmp_called_instance_18);
                if (tmp_list_element_3 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 776;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                tmp_assign_source_11 = PyList_New(1);
                PyList_SET_ITEM(tmp_assign_source_11, 0, tmp_list_element_3);
                {
                    PyObject *old = var_list_mn;
                    assert(old != NULL);
                    var_list_mn = tmp_assign_source_11;
                    Py_DECREF(old);
                }

            }
            {
                PyObject *tmp_assign_source_12;
                PyObject *tmp_list_element_4;
                PyObject *tmp_called_instance_19;
                PyObject *tmp_source_name_28;
                CHECK_OBJECT(par_ui);
                tmp_source_name_28 = par_ui;
                tmp_called_instance_19 = LOOKUP_ATTRIBUTE(tmp_source_name_28, const_str_plain_dev_sn);
                if (tmp_called_instance_19 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 777;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 777;
                tmp_list_element_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_19, const_str_plain_get_text);
                Py_DECREF(tmp_called_instance_19);
                if (tmp_list_element_4 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 777;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                tmp_assign_source_12 = PyList_New(1);
                PyList_SET_ITEM(tmp_assign_source_12, 0, tmp_list_element_4);
                {
                    PyObject *old = var_list_sn;
                    assert(old != NULL);
                    var_list_sn = tmp_assign_source_12;
                    Py_DECREF(old);
                }

            }
            goto branch_end_9;
            branch_no_9:;
            {
                PyObject *tmp_assign_source_13;
                tmp_assign_source_13 = const_int_0;
                assert(var_index == NULL);
                Py_INCREF(tmp_assign_source_13);
                var_index = tmp_assign_source_13;
            }
            {
                PyObject *tmp_assign_source_14;
                PyObject *tmp_called_instance_20;
                PyObject *tmp_source_name_29;
                CHECK_OBJECT(par_ui);
                tmp_source_name_29 = par_ui;
                tmp_called_instance_20 = LOOKUP_ATTRIBUTE(tmp_source_name_29, const_str_plain_liststore);
                if (tmp_called_instance_20 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 780;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 780;
                tmp_assign_source_14 = CALL_METHOD_NO_ARGS(tmp_called_instance_20, const_str_plain_get_iter_first);
                Py_DECREF(tmp_called_instance_20);
                if (tmp_assign_source_14 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 780;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                assert(var_iter == NULL);
                var_iter = tmp_assign_source_14;
            }
            loop_start_1:;
            {
                nuitka_bool tmp_condition_result_10;
                PyObject *tmp_operand_name_5;
                PyObject *tmp_compexpr_left_17;
                PyObject *tmp_compexpr_right_17;
                CHECK_OBJECT(var_iter);
                tmp_compexpr_left_17 = var_iter;
                tmp_compexpr_right_17 = Py_None;
                tmp_operand_name_5 = RICH_COMPARE_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_17, tmp_compexpr_right_17);
                if (tmp_operand_name_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 781;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_5);
                Py_DECREF(tmp_operand_name_5);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 781;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                tmp_condition_result_10 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_10 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_10;
                } else {
                    goto branch_no_10;
                }
                branch_yes_10:;
                goto loop_end_1;
                branch_no_10:;
            }
            {
                PyObject *tmp_assign_source_15;
                PyObject *tmp_called_instance_21;
                PyObject *tmp_source_name_30;
                PyObject *tmp_args_element_name_6;
                PyObject *tmp_args_element_name_7;
                CHECK_OBJECT(par_ui);
                tmp_source_name_30 = par_ui;
                tmp_called_instance_21 = LOOKUP_ATTRIBUTE(tmp_source_name_30, const_str_plain_liststore);
                if (tmp_called_instance_21 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 782;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                CHECK_OBJECT(var_iter);
                tmp_args_element_name_6 = var_iter;
                tmp_args_element_name_7 = const_int_0;
                frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 782;
                {
                    PyObject *call_args[] = {tmp_args_element_name_6, tmp_args_element_name_7};
                    tmp_assign_source_15 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_21, const_str_plain_get_value, call_args);
                }

                Py_DECREF(tmp_called_instance_21);
                if (tmp_assign_source_15 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 782;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                {
                    PyObject *old = var_selected;
                    var_selected = tmp_assign_source_15;
                    Py_XDECREF(old);
                }

            }
            {
                nuitka_bool tmp_condition_result_11;
                int tmp_truth_name_5;
                CHECK_OBJECT(var_selected);
                tmp_truth_name_5 = CHECK_IF_TRUE(var_selected);
                if (tmp_truth_name_5 == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 783;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                tmp_condition_result_11 = tmp_truth_name_5 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_11 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_11;
                } else {
                    goto branch_no_11;
                }
                branch_yes_11:;
                {
                    nuitka_bool tmp_condition_result_12;
                    PyObject *tmp_compexpr_left_18;
                    PyObject *tmp_compexpr_right_18;
                    PyObject *tmp_called_instance_22;
                    PyObject *tmp_source_name_31;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_31 = par_ui;
                    tmp_called_instance_22 = LOOKUP_ATTRIBUTE(tmp_source_name_31, const_str_plain_auth_menu);
                    if (tmp_called_instance_22 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 784;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 784;
                    tmp_compexpr_left_18 = CALL_METHOD_NO_ARGS(tmp_called_instance_22, const_str_plain_get_active);
                    Py_DECREF(tmp_called_instance_22);
                    if (tmp_compexpr_left_18 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 784;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_compexpr_right_18 = const_int_0;
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_18, tmp_compexpr_right_18);
                    Py_DECREF(tmp_compexpr_left_18);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 784;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_condition_result_12 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_12 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_12;
                    } else {
                        goto branch_no_12;
                    }
                    branch_yes_12:;
                    {
                        PyObject *tmp_called_instance_23;
                        PyObject *tmp_call_result_10;
                        PyObject *tmp_args_element_name_8;
                        CHECK_OBJECT(var_selected_list);
                        tmp_called_instance_23 = var_selected_list;
                        CHECK_OBJECT(var_index);
                        tmp_args_element_name_8 = var_index;
                        frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 785;
                        {
                            PyObject *call_args[] = {tmp_args_element_name_8};
                            tmp_call_result_10 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_23, const_str_plain_append, call_args);
                        }

                        if (tmp_call_result_10 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 785;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        Py_DECREF(tmp_call_result_10);
                    }
                    {
                        PyObject *tmp_called_name_2;
                        PyObject *tmp_source_name_32;
                        PyObject *tmp_call_result_11;
                        PyObject *tmp_args_element_name_9;
                        PyObject *tmp_subscribed_name_1;
                        PyObject *tmp_source_name_33;
                        PyObject *tmp_subscript_name_1;
                        CHECK_OBJECT(var_devs);
                        tmp_source_name_32 = var_devs;
                        tmp_called_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_32, const_str_plain_append);
                        if (tmp_called_name_2 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 786;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_33 = par_ui;
                        tmp_subscribed_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_33, const_str_plain_devs_list);
                        if (tmp_subscribed_name_1 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_2);

                            exception_lineno = 786;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(var_index);
                        tmp_subscript_name_1 = var_index;
                        tmp_args_element_name_9 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_1, tmp_subscript_name_1);
                        Py_DECREF(tmp_subscribed_name_1);
                        if (tmp_args_element_name_9 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_2);

                            exception_lineno = 786;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 786;
                        tmp_call_result_11 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_2, tmp_args_element_name_9);
                        Py_DECREF(tmp_called_name_2);
                        Py_DECREF(tmp_args_element_name_9);
                        if (tmp_call_result_11 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 786;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        Py_DECREF(tmp_call_result_11);
                    }
                    {
                        PyObject *tmp_called_name_3;
                        PyObject *tmp_source_name_34;
                        PyObject *tmp_call_result_12;
                        PyObject *tmp_args_element_name_10;
                        PyObject *tmp_subscribed_name_2;
                        PyObject *tmp_source_name_35;
                        PyObject *tmp_subscript_name_2;
                        CHECK_OBJECT(var_list_mn);
                        tmp_source_name_34 = var_list_mn;
                        tmp_called_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_34, const_str_plain_append);
                        if (tmp_called_name_3 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 787;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_35 = par_ui;
                        tmp_subscribed_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_35, const_str_plain_vendor_list);
                        if (tmp_subscribed_name_2 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_3);

                            exception_lineno = 787;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(var_index);
                        tmp_subscript_name_2 = var_index;
                        tmp_args_element_name_10 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_2, tmp_subscript_name_2);
                        Py_DECREF(tmp_subscribed_name_2);
                        if (tmp_args_element_name_10 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_3);

                            exception_lineno = 787;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 787;
                        tmp_call_result_12 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_3, tmp_args_element_name_10);
                        Py_DECREF(tmp_called_name_3);
                        Py_DECREF(tmp_args_element_name_10);
                        if (tmp_call_result_12 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 787;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        Py_DECREF(tmp_call_result_12);
                    }
                    {
                        PyObject *tmp_called_name_4;
                        PyObject *tmp_source_name_36;
                        PyObject *tmp_call_result_13;
                        PyObject *tmp_args_element_name_11;
                        PyObject *tmp_subscribed_name_3;
                        PyObject *tmp_source_name_37;
                        PyObject *tmp_subscript_name_3;
                        CHECK_OBJECT(var_list_sn);
                        tmp_source_name_36 = var_list_sn;
                        tmp_called_name_4 = LOOKUP_ATTRIBUTE(tmp_source_name_36, const_str_plain_append);
                        if (tmp_called_name_4 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 788;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_37 = par_ui;
                        tmp_subscribed_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_37, const_str_plain_sn_list);
                        if (tmp_subscribed_name_3 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_4);

                            exception_lineno = 788;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(var_index);
                        tmp_subscript_name_3 = var_index;
                        tmp_args_element_name_11 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_3, tmp_subscript_name_3);
                        Py_DECREF(tmp_subscribed_name_3);
                        if (tmp_args_element_name_11 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_4);

                            exception_lineno = 788;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 788;
                        tmp_call_result_13 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_4, tmp_args_element_name_11);
                        Py_DECREF(tmp_called_name_4);
                        Py_DECREF(tmp_args_element_name_11);
                        if (tmp_call_result_13 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 788;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        Py_DECREF(tmp_call_result_13);
                    }
                    goto branch_end_12;
                    branch_no_12:;
                    {
                        PyObject *tmp_called_instance_24;
                        PyObject *tmp_call_result_14;
                        PyObject *tmp_args_element_name_12;
                        CHECK_OBJECT(var_selected_list);
                        tmp_called_instance_24 = var_selected_list;
                        CHECK_OBJECT(var_index);
                        tmp_args_element_name_12 = var_index;
                        frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 790;
                        {
                            PyObject *call_args[] = {tmp_args_element_name_12};
                            tmp_call_result_14 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_24, const_str_plain_append, call_args);
                        }

                        if (tmp_call_result_14 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 790;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        Py_DECREF(tmp_call_result_14);
                    }
                    {
                        PyObject *tmp_called_name_5;
                        PyObject *tmp_source_name_38;
                        PyObject *tmp_call_result_15;
                        PyObject *tmp_args_element_name_13;
                        PyObject *tmp_subscribed_name_4;
                        PyObject *tmp_source_name_39;
                        PyObject *tmp_subscript_name_4;
                        CHECK_OBJECT(var_devs);
                        tmp_source_name_38 = var_devs;
                        tmp_called_name_5 = LOOKUP_ATTRIBUTE(tmp_source_name_38, const_str_plain_append);
                        if (tmp_called_name_5 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 791;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_39 = par_ui;
                        tmp_subscribed_name_4 = LOOKUP_ATTRIBUTE(tmp_source_name_39, const_str_plain_devs_list);
                        if (tmp_subscribed_name_4 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_5);

                            exception_lineno = 791;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(var_index);
                        tmp_subscript_name_4 = var_index;
                        tmp_args_element_name_13 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_4, tmp_subscript_name_4);
                        Py_DECREF(tmp_subscribed_name_4);
                        if (tmp_args_element_name_13 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_5);

                            exception_lineno = 791;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 791;
                        tmp_call_result_15 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_5, tmp_args_element_name_13);
                        Py_DECREF(tmp_called_name_5);
                        Py_DECREF(tmp_args_element_name_13);
                        if (tmp_call_result_15 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 791;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        Py_DECREF(tmp_call_result_15);
                    }
                    {
                        PyObject *tmp_called_name_6;
                        PyObject *tmp_source_name_40;
                        PyObject *tmp_call_result_16;
                        PyObject *tmp_args_element_name_14;
                        PyObject *tmp_subscribed_name_5;
                        PyObject *tmp_source_name_41;
                        PyObject *tmp_subscript_name_5;
                        CHECK_OBJECT(var_list_mn);
                        tmp_source_name_40 = var_list_mn;
                        tmp_called_name_6 = LOOKUP_ATTRIBUTE(tmp_source_name_40, const_str_plain_append);
                        if (tmp_called_name_6 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 792;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_41 = par_ui;
                        tmp_subscribed_name_5 = LOOKUP_ATTRIBUTE(tmp_source_name_41, const_str_plain_vendor_list);
                        if (tmp_subscribed_name_5 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_6);

                            exception_lineno = 792;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(var_index);
                        tmp_subscript_name_5 = var_index;
                        tmp_args_element_name_14 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_5, tmp_subscript_name_5);
                        Py_DECREF(tmp_subscribed_name_5);
                        if (tmp_args_element_name_14 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_6);

                            exception_lineno = 792;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 792;
                        tmp_call_result_16 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_6, tmp_args_element_name_14);
                        Py_DECREF(tmp_called_name_6);
                        Py_DECREF(tmp_args_element_name_14);
                        if (tmp_call_result_16 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 792;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        Py_DECREF(tmp_call_result_16);
                    }
                    {
                        PyObject *tmp_called_name_7;
                        PyObject *tmp_source_name_42;
                        PyObject *tmp_call_result_17;
                        PyObject *tmp_args_element_name_15;
                        PyObject *tmp_subscribed_name_6;
                        PyObject *tmp_source_name_43;
                        PyObject *tmp_subscript_name_6;
                        CHECK_OBJECT(var_list_sn);
                        tmp_source_name_42 = var_list_sn;
                        tmp_called_name_7 = LOOKUP_ATTRIBUTE(tmp_source_name_42, const_str_plain_append);
                        if (tmp_called_name_7 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 793;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_43 = par_ui;
                        tmp_subscribed_name_6 = LOOKUP_ATTRIBUTE(tmp_source_name_43, const_str_plain_sn_list);
                        if (tmp_subscribed_name_6 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_7);

                            exception_lineno = 793;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(var_index);
                        tmp_subscript_name_6 = var_index;
                        tmp_args_element_name_15 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_6, tmp_subscript_name_6);
                        Py_DECREF(tmp_subscribed_name_6);
                        if (tmp_args_element_name_15 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_7);

                            exception_lineno = 793;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 793;
                        tmp_call_result_17 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_7, tmp_args_element_name_15);
                        Py_DECREF(tmp_called_name_7);
                        Py_DECREF(tmp_args_element_name_15);
                        if (tmp_call_result_17 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 793;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        Py_DECREF(tmp_call_result_17);
                    }
                    branch_end_12:;
                }
                branch_no_11:;
            }
            {
                PyObject *tmp_assign_source_16;
                PyObject *tmp_called_instance_25;
                PyObject *tmp_source_name_44;
                PyObject *tmp_args_element_name_16;
                CHECK_OBJECT(par_ui);
                tmp_source_name_44 = par_ui;
                tmp_called_instance_25 = LOOKUP_ATTRIBUTE(tmp_source_name_44, const_str_plain_liststore);
                if (tmp_called_instance_25 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 794;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                CHECK_OBJECT(var_iter);
                tmp_args_element_name_16 = var_iter;
                frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 794;
                {
                    PyObject *call_args[] = {tmp_args_element_name_16};
                    tmp_assign_source_16 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_25, const_str_plain_iter_next, call_args);
                }

                Py_DECREF(tmp_called_instance_25);
                if (tmp_assign_source_16 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 794;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                {
                    PyObject *old = var_iter;
                    assert(old != NULL);
                    var_iter = tmp_assign_source_16;
                    Py_DECREF(old);
                }

            }
            {
                PyObject *tmp_assign_source_17;
                PyObject *tmp_left_name_6;
                PyObject *tmp_right_name_6;
                CHECK_OBJECT(var_index);
                tmp_left_name_6 = var_index;
                tmp_right_name_6 = const_int_pos_1;
                tmp_assign_source_17 = BINARY_OPERATION_ADD_OBJECT_INT(tmp_left_name_6, tmp_right_name_6);
                assert(!(tmp_assign_source_17 == NULL));
                {
                    PyObject *old = var_index;
                    assert(old != NULL);
                    var_index = tmp_assign_source_17;
                    Py_DECREF(old);
                }

            }
            if (CONSIDER_THREADING() == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 781;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            goto loop_start_1;
            loop_end_1:;
            {
                nuitka_bool tmp_condition_result_13;
                PyObject *tmp_compexpr_left_19;
                PyObject *tmp_compexpr_right_19;
                PyObject *tmp_len_arg_2;
                CHECK_OBJECT(var_selected_list);
                tmp_len_arg_2 = var_selected_list;
                tmp_compexpr_left_19 = BUILTIN_LEN(tmp_len_arg_2);
                assert(!(tmp_compexpr_left_19 == NULL));
                tmp_compexpr_right_19 = const_int_0;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_19, tmp_compexpr_right_19);
                Py_DECREF(tmp_compexpr_left_19);
                assert(!(tmp_res == -1));
                tmp_condition_result_13 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_13 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_13;
                } else {
                    goto branch_no_13;
                }
                branch_yes_13:;
                {
                    PyObject *tmp_called_instance_26;
                    PyObject *tmp_call_result_18;
                    CHECK_OBJECT(par_ui);
                    tmp_called_instance_26 = par_ui;
                    frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 797;
                    tmp_call_result_18 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_26, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_1115ebe932d1b941d1eed30a47fde5a6_tuple, 0));

                    if (tmp_call_result_18 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 797;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_18);
                }
                tmp_return_value = Py_None;
                Py_INCREF(tmp_return_value);
                goto frame_return_exit_1;
                branch_no_13:;
            }
            branch_end_9:;
        }
        {
            nuitka_bool tmp_condition_result_14;
            int tmp_and_left_truth_12;
            nuitka_bool tmp_and_left_value_12;
            nuitka_bool tmp_and_right_value_12;
            int tmp_or_left_truth_5;
            nuitka_bool tmp_or_left_value_5;
            nuitka_bool tmp_or_right_value_5;
            PyObject *tmp_compexpr_left_20;
            PyObject *tmp_compexpr_right_20;
            PyObject *tmp_left_name_7;
            PyObject *tmp_source_name_45;
            PyObject *tmp_right_name_7;
            int tmp_and_left_truth_13;
            nuitka_bool tmp_and_left_value_13;
            nuitka_bool tmp_and_right_value_13;
            PyObject *tmp_compexpr_left_21;
            PyObject *tmp_compexpr_right_21;
            PyObject *tmp_source_name_46;
            PyObject *tmp_compexpr_left_22;
            PyObject *tmp_compexpr_right_22;
            PyObject *tmp_source_name_47;
            PyObject *tmp_called_instance_27;
            PyObject *tmp_source_name_48;
            PyObject *tmp_call_result_19;
            int tmp_truth_name_6;
            CHECK_OBJECT(par_ui);
            tmp_source_name_45 = par_ui;
            tmp_left_name_7 = LOOKUP_ATTRIBUTE(tmp_source_name_45, const_str_plain_VERSION);
            if (tmp_left_name_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 800;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_right_name_7 = const_int_pos_3;
            tmp_compexpr_left_20 = BINARY_OPERATION_MOD_OBJECT_INT(tmp_left_name_7, tmp_right_name_7);
            Py_DECREF(tmp_left_name_7);
            if (tmp_compexpr_left_20 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 800;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_20 = const_int_0;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_20, tmp_compexpr_right_20);
            Py_DECREF(tmp_compexpr_left_20);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 800;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_or_left_value_5 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_or_left_truth_5 = tmp_or_left_value_5 == NUITKA_BOOL_TRUE ? 1 : 0;
            if (tmp_or_left_truth_5 == 1) {
                goto or_left_5;
            } else {
                goto or_right_5;
            }
            or_right_5:;
            CHECK_OBJECT(par_ui);
            tmp_source_name_46 = par_ui;
            tmp_compexpr_left_21 = LOOKUP_ATTRIBUTE(tmp_source_name_46, const_str_plain_VERSION);
            if (tmp_compexpr_left_21 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 800;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_21 = const_int_pos_1;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_21, tmp_compexpr_right_21);
            Py_DECREF(tmp_compexpr_left_21);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 800;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_and_left_value_13 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_and_left_truth_13 = tmp_and_left_value_13 == NUITKA_BOOL_TRUE ? 1 : 0;
            if (tmp_and_left_truth_13 == 1) {
                goto and_right_13;
            } else {
                goto and_left_13;
            }
            and_right_13:;
            CHECK_OBJECT(par_ui);
            tmp_source_name_47 = par_ui;
            tmp_compexpr_left_22 = LOOKUP_ATTRIBUTE(tmp_source_name_47, const_str_plain_PBA_VERSION);
            if (tmp_compexpr_left_22 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 800;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_22 = const_int_pos_1;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_INT(tmp_compexpr_left_22, tmp_compexpr_right_22);
            Py_DECREF(tmp_compexpr_left_22);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 800;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_and_right_value_13 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_or_right_value_5 = tmp_and_right_value_13;
            goto and_end_13;
            and_left_13:;
            tmp_or_right_value_5 = tmp_and_left_value_13;
            and_end_13:;
            tmp_and_left_value_12 = tmp_or_right_value_5;
            goto or_end_5;
            or_left_5:;
            tmp_and_left_value_12 = tmp_or_left_value_5;
            or_end_5:;
            tmp_and_left_truth_12 = tmp_and_left_value_12 == NUITKA_BOOL_TRUE ? 1 : 0;
            if (tmp_and_left_truth_12 == 1) {
                goto and_right_12;
            } else {
                goto and_left_12;
            }
            and_right_12:;
            CHECK_OBJECT(par_ui);
            tmp_source_name_48 = par_ui;
            tmp_called_instance_27 = LOOKUP_ATTRIBUTE(tmp_source_name_48, const_str_plain_check_pass_rd);
            if (tmp_called_instance_27 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 800;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 800;
            tmp_call_result_19 = CALL_METHOD_NO_ARGS(tmp_called_instance_27, const_str_plain_get_active);
            Py_DECREF(tmp_called_instance_27);
            if (tmp_call_result_19 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 800;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_truth_name_6 = CHECK_IF_TRUE(tmp_call_result_19);
            if (tmp_truth_name_6 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_call_result_19);

                exception_lineno = 800;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_and_right_value_12 = tmp_truth_name_6 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            Py_DECREF(tmp_call_result_19);
            tmp_condition_result_14 = tmp_and_right_value_12;
            goto and_end_12;
            and_left_12:;
            tmp_condition_result_14 = tmp_and_left_value_12;
            and_end_12:;
            if (tmp_condition_result_14 == NUITKA_BOOL_TRUE) {
                goto branch_yes_14;
            } else {
                goto branch_no_14;
            }
            branch_yes_14:;
            {
                PyObject *tmp_assign_source_18;
                PyObject *tmp_called_name_8;
                PyObject *tmp_source_name_49;
                PyObject *tmp_mvar_value_4;
                PyObject *tmp_args_element_name_17;
                PyObject *tmp_called_instance_28;
                PyObject *tmp_source_name_50;
                PyObject *tmp_args_element_name_18;
                PyObject *tmp_args_element_name_19;
                PyObject *tmp_args_element_name_20;
                tmp_mvar_value_4 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_runprocess);

                if (unlikely(tmp_mvar_value_4 == NULL)) {
                    tmp_mvar_value_4 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runprocess);
                }

                if (tmp_mvar_value_4 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 5132 ], 39, 0);
                    exception_tb = NULL;

                    exception_lineno = 801;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }

                tmp_source_name_49 = tmp_mvar_value_4;
                tmp_called_name_8 = LOOKUP_ATTRIBUTE(tmp_source_name_49, const_str_plain_findUSB);
                if (tmp_called_name_8 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 801;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                CHECK_OBJECT(par_ui);
                tmp_source_name_50 = par_ui;
                tmp_called_instance_28 = LOOKUP_ATTRIBUTE(tmp_source_name_50, const_str_plain_auth_menu);
                if (tmp_called_instance_28 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_8);

                    exception_lineno = 801;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 801;
                tmp_args_element_name_17 = CALL_METHOD_NO_ARGS(tmp_called_instance_28, const_str_plain_get_active_text);
                Py_DECREF(tmp_called_instance_28);
                if (tmp_args_element_name_17 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_8);

                    exception_lineno = 801;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                CHECK_OBJECT(var_devs);
                tmp_args_element_name_18 = var_devs;
                CHECK_OBJECT(var_list_mn);
                tmp_args_element_name_19 = var_list_mn;
                CHECK_OBJECT(var_list_sn);
                tmp_args_element_name_20 = var_list_sn;
                frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 801;
                {
                    PyObject *call_args[] = {tmp_args_element_name_17, tmp_args_element_name_18, tmp_args_element_name_19, tmp_args_element_name_20};
                    tmp_assign_source_18 = CALL_FUNCTION_WITH_ARGS4(tmp_called_name_8, call_args);
                }

                Py_DECREF(tmp_called_name_8);
                Py_DECREF(tmp_args_element_name_17);
                if (tmp_assign_source_18 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 801;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                assert(var_f_list == NULL);
                var_f_list = tmp_assign_source_18;
            }
            {
                nuitka_bool tmp_condition_result_15;
                PyObject *tmp_compexpr_left_23;
                PyObject *tmp_compexpr_right_23;
                PyObject *tmp_len_arg_3;
                PyObject *tmp_subscribed_name_7;
                PyObject *tmp_subscript_name_7;
                CHECK_OBJECT(var_f_list);
                tmp_subscribed_name_7 = var_f_list;
                tmp_subscript_name_7 = const_int_pos_1;
                tmp_len_arg_3 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_7, tmp_subscript_name_7, 1);
                if (tmp_len_arg_3 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 802;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                tmp_compexpr_left_23 = BUILTIN_LEN(tmp_len_arg_3);
                Py_DECREF(tmp_len_arg_3);
                if (tmp_compexpr_left_23 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 802;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                tmp_compexpr_right_23 = const_int_0;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_23, tmp_compexpr_right_23);
                Py_DECREF(tmp_compexpr_left_23);
                assert(!(tmp_res == -1));
                tmp_condition_result_15 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_15 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_15;
                } else {
                    goto branch_no_15;
                }
                branch_yes_15:;
                {
                    PyObject *tmp_called_instance_29;
                    PyObject *tmp_call_result_20;
                    CHECK_OBJECT(par_ui);
                    tmp_called_instance_29 = par_ui;
                    frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 803;
                    tmp_call_result_20 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_29, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_65f1ca3cc21751516d4508974112f1bb_tuple, 0));

                    if (tmp_call_result_20 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 803;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_20);
                }
                tmp_return_value = Py_None;
                Py_INCREF(tmp_return_value);
                goto frame_return_exit_1;
                goto branch_end_15;
                branch_no_15:;
                {
                    nuitka_bool tmp_condition_result_16;
                    PyObject *tmp_compexpr_left_24;
                    PyObject *tmp_compexpr_right_24;
                    PyObject *tmp_len_arg_4;
                    PyObject *tmp_subscribed_name_8;
                    PyObject *tmp_subscript_name_8;
                    CHECK_OBJECT(var_f_list);
                    tmp_subscribed_name_8 = var_f_list;
                    tmp_subscript_name_8 = const_int_0;
                    tmp_len_arg_4 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_8, tmp_subscript_name_8, 0);
                    if (tmp_len_arg_4 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 805;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_compexpr_left_24 = BUILTIN_LEN(tmp_len_arg_4);
                    Py_DECREF(tmp_len_arg_4);
                    if (tmp_compexpr_left_24 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 805;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_compexpr_right_24 = const_int_0;
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_24, tmp_compexpr_right_24);
                    Py_DECREF(tmp_compexpr_left_24);
                    assert(!(tmp_res == -1));
                    tmp_condition_result_16 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_16 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_16;
                    } else {
                        goto branch_no_16;
                    }
                    branch_yes_16:;
                    {
                        PyObject *tmp_called_instance_30;
                        PyObject *tmp_call_result_21;
                        CHECK_OBJECT(par_ui);
                        tmp_called_instance_30 = par_ui;
                        frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 806;
                        tmp_call_result_21 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_30, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_dcd804658f8e9977f257a841a58a2840_tuple, 0));

                        if (tmp_call_result_21 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 806;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        Py_DECREF(tmp_call_result_21);
                    }
                    tmp_return_value = Py_None;
                    Py_INCREF(tmp_return_value);
                    goto frame_return_exit_1;
                    goto branch_end_16;
                    branch_no_16:;
                    {
                        nuitka_bool tmp_condition_result_17;
                        PyObject *tmp_compexpr_left_25;
                        PyObject *tmp_compexpr_right_25;
                        PyObject *tmp_subscribed_name_9;
                        PyObject *tmp_subscript_name_9;
                        CHECK_OBJECT(var_f_list);
                        tmp_subscribed_name_9 = var_f_list;
                        tmp_subscript_name_9 = const_int_pos_2;
                        tmp_compexpr_left_25 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_9, tmp_subscript_name_9, 2);
                        if (tmp_compexpr_left_25 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 808;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_compexpr_right_25 = const_str_empty;
                        tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_25, tmp_compexpr_right_25);
                        Py_DECREF(tmp_compexpr_left_25);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 808;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_condition_result_17 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_17 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_17;
                        } else {
                            goto branch_no_17;
                        }
                        branch_yes_17:;
                        {
                            nuitka_bool tmp_condition_result_18;
                            PyObject *tmp_compexpr_left_26;
                            PyObject *tmp_compexpr_right_26;
                            PyObject *tmp_called_instance_31;
                            PyObject *tmp_source_name_51;
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_51 = par_ui;
                            tmp_called_instance_31 = LOOKUP_ATTRIBUTE(tmp_source_name_51, const_str_plain_auth_menu);
                            if (tmp_called_instance_31 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 809;
                                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                                goto frame_exception_exit_1;
                            }
                            frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 809;
                            tmp_compexpr_left_26 = CALL_METHOD_NO_ARGS(tmp_called_instance_31, const_str_plain_get_active);
                            Py_DECREF(tmp_called_instance_31);
                            if (tmp_compexpr_left_26 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 809;
                                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_compexpr_right_26 = const_int_0;
                            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_26, tmp_compexpr_right_26);
                            Py_DECREF(tmp_compexpr_left_26);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 809;
                                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_condition_result_18 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            if (tmp_condition_result_18 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_18;
                            } else {
                                goto branch_no_18;
                            }
                            branch_yes_18:;
                            {
                                PyObject *tmp_called_name_9;
                                PyObject *tmp_source_name_52;
                                PyObject *tmp_call_result_22;
                                PyObject *tmp_args_element_name_21;
                                PyObject *tmp_left_name_8;
                                PyObject *tmp_left_name_9;
                                PyObject *tmp_right_name_8;
                                PyObject *tmp_subscribed_name_10;
                                PyObject *tmp_subscript_name_10;
                                PyObject *tmp_right_name_9;
                                CHECK_OBJECT(par_ui);
                                tmp_source_name_52 = par_ui;
                                tmp_called_name_9 = LOOKUP_ATTRIBUTE(tmp_source_name_52, const_str_plain_msg_err);
                                if (tmp_called_name_9 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 810;
                                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                                    goto frame_exception_exit_1;
                                }
                                tmp_left_name_9 = const_str_digest_1002dc717d1fdd81c2ea7f5f9f7ab4a3;
                                CHECK_OBJECT(var_f_list);
                                tmp_subscribed_name_10 = var_f_list;
                                tmp_subscript_name_10 = const_int_pos_2;
                                tmp_right_name_8 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_10, tmp_subscript_name_10, 2);
                                if (tmp_right_name_8 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                    Py_DECREF(tmp_called_name_9);

                                    exception_lineno = 810;
                                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                                    goto frame_exception_exit_1;
                                }
                                tmp_left_name_8 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_9, tmp_right_name_8);
                                Py_DECREF(tmp_right_name_8);
                                if (tmp_left_name_8 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                    Py_DECREF(tmp_called_name_9);

                                    exception_lineno = 810;
                                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                                    goto frame_exception_exit_1;
                                }
                                tmp_right_name_9 = const_str_dot;
                                tmp_args_element_name_21 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_8, tmp_right_name_9);
                                Py_DECREF(tmp_left_name_8);
                                if (tmp_args_element_name_21 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                    Py_DECREF(tmp_called_name_9);

                                    exception_lineno = 810;
                                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                                    goto frame_exception_exit_1;
                                }
                                frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 810;
                                tmp_call_result_22 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_9, tmp_args_element_name_21);
                                Py_DECREF(tmp_called_name_9);
                                Py_DECREF(tmp_args_element_name_21);
                                if (tmp_call_result_22 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 810;
                                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                                    goto frame_exception_exit_1;
                                }
                                Py_DECREF(tmp_call_result_22);
                            }
                            goto branch_end_18;
                            branch_no_18:;
                            {
                                PyObject *tmp_called_name_10;
                                PyObject *tmp_source_name_53;
                                PyObject *tmp_call_result_23;
                                PyObject *tmp_args_element_name_22;
                                PyObject *tmp_left_name_10;
                                PyObject *tmp_left_name_11;
                                PyObject *tmp_right_name_10;
                                PyObject *tmp_subscribed_name_11;
                                PyObject *tmp_subscript_name_11;
                                PyObject *tmp_right_name_11;
                                CHECK_OBJECT(par_ui);
                                tmp_source_name_53 = par_ui;
                                tmp_called_name_10 = LOOKUP_ATTRIBUTE(tmp_source_name_53, const_str_plain_msg_err);
                                if (tmp_called_name_10 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 812;
                                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                                    goto frame_exception_exit_1;
                                }
                                tmp_left_name_11 = const_str_digest_47e7b4a4005120dc05c79622c84885e4;
                                CHECK_OBJECT(var_f_list);
                                tmp_subscribed_name_11 = var_f_list;
                                tmp_subscript_name_11 = const_int_pos_2;
                                tmp_right_name_10 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_11, tmp_subscript_name_11, 2);
                                if (tmp_right_name_10 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                    Py_DECREF(tmp_called_name_10);

                                    exception_lineno = 812;
                                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                                    goto frame_exception_exit_1;
                                }
                                tmp_left_name_10 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_11, tmp_right_name_10);
                                Py_DECREF(tmp_right_name_10);
                                if (tmp_left_name_10 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                    Py_DECREF(tmp_called_name_10);

                                    exception_lineno = 812;
                                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                                    goto frame_exception_exit_1;
                                }
                                tmp_right_name_11 = const_str_dot;
                                tmp_args_element_name_22 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_10, tmp_right_name_11);
                                Py_DECREF(tmp_left_name_10);
                                if (tmp_args_element_name_22 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                    Py_DECREF(tmp_called_name_10);

                                    exception_lineno = 812;
                                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                                    goto frame_exception_exit_1;
                                }
                                frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 812;
                                tmp_call_result_23 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_10, tmp_args_element_name_22);
                                Py_DECREF(tmp_called_name_10);
                                Py_DECREF(tmp_args_element_name_22);
                                if (tmp_call_result_23 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 812;
                                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                                    goto frame_exception_exit_1;
                                }
                                Py_DECREF(tmp_call_result_23);
                            }
                            branch_end_18:;
                        }
                        tmp_return_value = Py_None;
                        Py_INCREF(tmp_return_value);
                        goto frame_return_exit_1;
                        branch_no_17:;
                    }
                    branch_end_16:;
                }
                branch_end_15:;
            }
            branch_no_14:;
        }
        {
            PyObject *tmp_assattr_name_1;
            PyObject *tmp_assattr_target_1;
            tmp_assattr_name_1 = const_str_plain_RW;
            CHECK_OBJECT(par_ui);
            tmp_assattr_target_1 = par_ui;
            tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, const_str_plain_LKATTR, tmp_assattr_name_1);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 814;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
        }
        {
            PyObject *tmp_called_instance_32;
            PyObject *tmp_call_result_24;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_32 = par_ui;
            frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 815;
            tmp_call_result_24 = CALL_METHOD_NO_ARGS(tmp_called_instance_32, const_str_plain_start_spin);
            if (tmp_call_result_24 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 815;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_24);
        }
        {
            nuitka_bool tmp_condition_result_19;
            PyObject *tmp_compexpr_left_27;
            PyObject *tmp_compexpr_right_27;
            PyObject *tmp_len_arg_5;
            CHECK_OBJECT(var_selected_list);
            tmp_len_arg_5 = var_selected_list;
            tmp_compexpr_left_27 = BUILTIN_LEN(tmp_len_arg_5);
            assert(!(tmp_compexpr_left_27 == NULL));
            tmp_compexpr_right_27 = const_int_pos_1;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_27, tmp_compexpr_right_27);
            Py_DECREF(tmp_compexpr_left_27);
            assert(!(tmp_res == -1));
            tmp_condition_result_19 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_19 == NUITKA_BOOL_TRUE) {
                goto branch_yes_19;
            } else {
                goto branch_no_19;
            }
            branch_yes_19:;
            {
                PyObject *tmp_called_instance_33;
                PyObject *tmp_source_name_54;
                PyObject *tmp_call_result_25;
                CHECK_OBJECT(par_ui);
                tmp_source_name_54 = par_ui;
                tmp_called_instance_33 = LOOKUP_ATTRIBUTE(tmp_source_name_54, const_str_plain_wait_instr);
                if (tmp_called_instance_33 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 817;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 817;
                tmp_call_result_25 = CALL_METHOD_NO_ARGS(tmp_called_instance_33, const_str_plain_show);
                Py_DECREF(tmp_called_instance_33);
                if (tmp_call_result_25 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 817;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_25);
            }
            goto branch_end_19;
            branch_no_19:;
            {
                PyObject *tmp_called_instance_34;
                PyObject *tmp_source_name_55;
                PyObject *tmp_call_result_26;
                CHECK_OBJECT(par_ui);
                tmp_source_name_55 = par_ui;
                tmp_called_instance_34 = LOOKUP_ATTRIBUTE(tmp_source_name_55, const_str_plain_multi_wait_instr);
                if (tmp_called_instance_34 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 819;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 819;
                tmp_call_result_26 = CALL_METHOD_NO_ARGS(tmp_called_instance_34, const_str_plain_show);
                Py_DECREF(tmp_called_instance_34);
                if (tmp_call_result_26 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 819;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_26);
            }
            branch_end_19:;
        }
        {
            PyObject *tmp_assattr_name_2;
            PyObject *tmp_assattr_target_2;
            tmp_assattr_name_2 = Py_True;
            CHECK_OBJECT(par_ui);
            tmp_assattr_target_2 = par_ui;
            tmp_result = SET_ATTRIBUTE(tmp_assattr_target_2, const_str_plain_op_inprogress, tmp_assattr_name_2);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 820;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
        }
        goto branch_end_2;
        branch_no_2:;
        {
            PyObject *tmp_assign_source_19;
            PyObject *tmp_source_name_56;
            CHECK_OBJECT(par_ui);
            tmp_source_name_56 = par_ui;
            tmp_assign_source_19 = LOOKUP_ATTRIBUTE(tmp_source_name_56, const_str_plain_locked_list);
            if (tmp_assign_source_19 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 822;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            assert(var_selected_list == NULL);
            var_selected_list = tmp_assign_source_19;
        }
        {
            PyObject *tmp_assign_source_20;
            tmp_assign_source_20 = PyList_New(0);
            assert(var_folder_list == NULL);
            var_folder_list = tmp_assign_source_20;
        }
        {
            nuitka_bool tmp_condition_result_20;
            PyObject *tmp_compexpr_left_28;
            PyObject *tmp_compexpr_right_28;
            PyObject *tmp_source_name_57;
            CHECK_OBJECT(par_ui);
            tmp_source_name_57 = par_ui;
            tmp_compexpr_left_28 = LOOKUP_ATTRIBUTE(tmp_source_name_57, const_str_plain_DEV_OS);
            if (tmp_compexpr_left_28 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 825;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_28 = const_str_plain_Windows;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_28, tmp_compexpr_right_28);
            Py_DECREF(tmp_compexpr_left_28);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 825;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_20 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_20 == NUITKA_BOOL_TRUE) {
                goto branch_yes_20;
            } else {
                goto branch_no_20;
            }
            branch_yes_20:;
            {
                PyObject *tmp_assign_source_21;
                PyObject *tmp_called_instance_35;
                PyObject *tmp_called_instance_36;
                PyObject *tmp_mvar_value_5;
                tmp_mvar_value_5 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                if (unlikely(tmp_mvar_value_5 == NULL)) {
                    tmp_mvar_value_5 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                }

                if (tmp_mvar_value_5 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                    exception_tb = NULL;

                    exception_lineno = 826;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }

                tmp_called_instance_36 = tmp_mvar_value_5;
                frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 826;
                tmp_called_instance_35 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_36, const_str_plain_popen, &PyTuple_GET_ITEM(const_tuple_str_digest_01a45f558eee63987d9de4cec604421c_tuple, 0));

                if (tmp_called_instance_35 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 826;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 826;
                tmp_assign_source_21 = CALL_METHOD_NO_ARGS(tmp_called_instance_35, const_str_plain_read);
                Py_DECREF(tmp_called_instance_35);
                if (tmp_assign_source_21 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 826;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                assert(var_txt == NULL);
                var_txt = tmp_assign_source_21;
            }
            {
                PyObject *tmp_assign_source_22;
                PyObject *tmp_called_instance_37;
                PyObject *tmp_mvar_value_6;
                PyObject *tmp_args_element_name_23;
                PyObject *tmp_args_element_name_24;
                tmp_mvar_value_6 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

                if (unlikely(tmp_mvar_value_6 == NULL)) {
                    tmp_mvar_value_6 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
                }

                if (tmp_mvar_value_6 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
                    exception_tb = NULL;

                    exception_lineno = 828;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }

                tmp_called_instance_37 = tmp_mvar_value_6;
                tmp_args_element_name_23 = const_str_digest_590ea466b8bab3d6fb94bf804def0403;
                CHECK_OBJECT(var_txt);
                tmp_args_element_name_24 = var_txt;
                frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 828;
                {
                    PyObject *call_args[] = {tmp_args_element_name_23, tmp_args_element_name_24};
                    tmp_assign_source_22 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_37, const_str_plain_findall, call_args);
                }

                if (tmp_assign_source_22 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 828;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                assert(var_drive_list == NULL);
                var_drive_list = tmp_assign_source_22;
            }
            {
                PyObject *tmp_assign_source_23;
                PyObject *tmp_iter_arg_1;
                CHECK_OBJECT(var_drive_list);
                tmp_iter_arg_1 = var_drive_list;
                tmp_assign_source_23 = MAKE_ITERATOR(tmp_iter_arg_1);
                if (tmp_assign_source_23 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 829;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                assert(tmp_for_loop_1__for_iterator == NULL);
                tmp_for_loop_1__for_iterator = tmp_assign_source_23;
            }
            // Tried code:
            loop_start_2:;
            {
                PyObject *tmp_next_source_1;
                PyObject *tmp_assign_source_24;
                CHECK_OBJECT(tmp_for_loop_1__for_iterator);
                tmp_next_source_1 = tmp_for_loop_1__for_iterator;
                tmp_assign_source_24 = ITERATOR_NEXT(tmp_next_source_1);
                if (tmp_assign_source_24 == NULL) {
                    if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                        goto loop_end_2;
                    } else {

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        exception_lineno = 829;
                        goto try_except_handler_2;
                    }
                }

                {
                    PyObject *old = tmp_for_loop_1__iter_value;
                    tmp_for_loop_1__iter_value = tmp_assign_source_24;
                    Py_XDECREF(old);
                }

            }
            {
                PyObject *tmp_assign_source_25;
                CHECK_OBJECT(tmp_for_loop_1__iter_value);
                tmp_assign_source_25 = tmp_for_loop_1__iter_value;
                {
                    PyObject *old = var_d;
                    var_d = tmp_assign_source_25;
                    Py_INCREF(var_d);
                    Py_XDECREF(old);
                }

            }
            {
                nuitka_bool tmp_condition_result_21;
                PyObject *tmp_called_name_11;
                PyObject *tmp_source_name_58;
                PyObject *tmp_source_name_59;
                PyObject *tmp_mvar_value_7;
                PyObject *tmp_call_result_27;
                PyObject *tmp_args_element_name_25;
                PyObject *tmp_left_name_12;
                PyObject *tmp_right_name_12;
                int tmp_truth_name_7;
                tmp_mvar_value_7 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                if (unlikely(tmp_mvar_value_7 == NULL)) {
                    tmp_mvar_value_7 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                }

                if (tmp_mvar_value_7 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                    exception_tb = NULL;

                    exception_lineno = 830;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto try_except_handler_2;
                }

                tmp_source_name_59 = tmp_mvar_value_7;
                tmp_source_name_58 = LOOKUP_ATTRIBUTE(tmp_source_name_59, const_str_plain_path);
                if (tmp_source_name_58 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 830;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto try_except_handler_2;
                }
                tmp_called_name_11 = LOOKUP_ATTRIBUTE(tmp_source_name_58, const_str_plain_isdir);
                Py_DECREF(tmp_source_name_58);
                if (tmp_called_name_11 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 830;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto try_except_handler_2;
                }
                tmp_left_name_12 = const_str_digest_77a6ab16243afd40b8bc4cc740d60dd4;
                CHECK_OBJECT(var_d);
                tmp_right_name_12 = var_d;
                tmp_args_element_name_25 = BINARY_OPERATION_MOD_STR_OBJECT(tmp_left_name_12, tmp_right_name_12);
                if (tmp_args_element_name_25 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_11);

                    exception_lineno = 830;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto try_except_handler_2;
                }
                frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 830;
                tmp_call_result_27 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_11, tmp_args_element_name_25);
                Py_DECREF(tmp_called_name_11);
                Py_DECREF(tmp_args_element_name_25);
                if (tmp_call_result_27 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 830;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto try_except_handler_2;
                }
                tmp_truth_name_7 = CHECK_IF_TRUE(tmp_call_result_27);
                if (tmp_truth_name_7 == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_call_result_27);

                    exception_lineno = 830;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto try_except_handler_2;
                }
                tmp_condition_result_21 = tmp_truth_name_7 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                Py_DECREF(tmp_call_result_27);
                if (tmp_condition_result_21 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_21;
                } else {
                    goto branch_no_21;
                }
                branch_yes_21:;
                {
                    PyObject *tmp_called_instance_38;
                    PyObject *tmp_call_result_28;
                    PyObject *tmp_args_element_name_26;
                    CHECK_OBJECT(var_folder_list);
                    tmp_called_instance_38 = var_folder_list;
                    CHECK_OBJECT(var_d);
                    tmp_args_element_name_26 = var_d;
                    frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 831;
                    {
                        PyObject *call_args[] = {tmp_args_element_name_26};
                        tmp_call_result_28 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_38, const_str_plain_append, call_args);
                    }

                    if (tmp_call_result_28 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 831;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto try_except_handler_2;
                    }
                    Py_DECREF(tmp_call_result_28);
                }
                branch_no_21:;
            }
            if (CONSIDER_THREADING() == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 829;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto try_except_handler_2;
            }
            goto loop_start_2;
            loop_end_2:;
            goto try_end_1;
            // Exception handler code:
            try_except_handler_2:;
            exception_keeper_type_1 = exception_type;
            exception_keeper_value_1 = exception_value;
            exception_keeper_tb_1 = exception_tb;
            exception_keeper_lineno_1 = exception_lineno;
            exception_type = NULL;
            exception_value = NULL;
            exception_tb = NULL;
            exception_lineno = 0;

            Py_XDECREF(tmp_for_loop_1__iter_value);
            tmp_for_loop_1__iter_value = NULL;

            CHECK_OBJECT((PyObject *)tmp_for_loop_1__for_iterator);
            Py_DECREF(tmp_for_loop_1__for_iterator);
            tmp_for_loop_1__for_iterator = NULL;

            // Re-raise.
            exception_type = exception_keeper_type_1;
            exception_value = exception_keeper_value_1;
            exception_tb = exception_keeper_tb_1;
            exception_lineno = exception_keeper_lineno_1;

            goto frame_exception_exit_1;
            // End of try:
            try_end_1:;
            Py_XDECREF(tmp_for_loop_1__iter_value);
            tmp_for_loop_1__iter_value = NULL;

            CHECK_OBJECT((PyObject *)tmp_for_loop_1__for_iterator);
            Py_DECREF(tmp_for_loop_1__for_iterator);
            tmp_for_loop_1__for_iterator = NULL;

            goto branch_end_20;
            branch_no_20:;
            {
                nuitka_bool tmp_condition_result_22;
                PyObject *tmp_compexpr_left_29;
                PyObject *tmp_compexpr_right_29;
                PyObject *tmp_source_name_60;
                CHECK_OBJECT(par_ui);
                tmp_source_name_60 = par_ui;
                tmp_compexpr_left_29 = LOOKUP_ATTRIBUTE(tmp_source_name_60, const_str_plain_DEV_OS);
                if (tmp_compexpr_left_29 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 832;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                tmp_compexpr_right_29 = const_str_plain_Linux;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_29, tmp_compexpr_right_29);
                Py_DECREF(tmp_compexpr_left_29);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 832;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                tmp_condition_result_22 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_22 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_22;
                } else {
                    goto branch_no_22;
                }
                branch_yes_22:;
                {
                    PyObject *tmp_assign_source_26;
                    PyObject *tmp_called_instance_39;
                    PyObject *tmp_called_name_12;
                    PyObject *tmp_source_name_61;
                    PyObject *tmp_mvar_value_8;
                    PyObject *tmp_args_element_name_27;
                    PyObject *tmp_left_name_13;
                    PyObject *tmp_source_name_62;
                    PyObject *tmp_right_name_13;
                    tmp_mvar_value_8 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                    if (unlikely(tmp_mvar_value_8 == NULL)) {
                        tmp_mvar_value_8 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                    }

                    if (tmp_mvar_value_8 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                        exception_tb = NULL;

                        exception_lineno = 833;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_source_name_61 = tmp_mvar_value_8;
                    tmp_called_name_12 = LOOKUP_ATTRIBUTE(tmp_source_name_61, const_str_plain_popen);
                    if (tmp_called_name_12 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 833;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_62 = par_ui;
                    tmp_left_name_13 = LOOKUP_ATTRIBUTE(tmp_source_name_62, const_str_plain_prefix);
                    if (tmp_left_name_13 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_12);

                        exception_lineno = 833;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_13 = const_str_plain_mount;
                    tmp_args_element_name_27 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_13, tmp_right_name_13);
                    Py_DECREF(tmp_left_name_13);
                    if (tmp_args_element_name_27 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_12);

                        exception_lineno = 833;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 833;
                    tmp_called_instance_39 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_12, tmp_args_element_name_27);
                    Py_DECREF(tmp_called_name_12);
                    Py_DECREF(tmp_args_element_name_27);
                    if (tmp_called_instance_39 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 833;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 833;
                    tmp_assign_source_26 = CALL_METHOD_NO_ARGS(tmp_called_instance_39, const_str_plain_read);
                    Py_DECREF(tmp_called_instance_39);
                    if (tmp_assign_source_26 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 833;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    assert(var_txt == NULL);
                    var_txt = tmp_assign_source_26;
                }
                {
                    PyObject *tmp_assign_source_27;
                    PyObject *tmp_called_instance_40;
                    PyObject *tmp_mvar_value_9;
                    PyObject *tmp_args_element_name_28;
                    PyObject *tmp_args_element_name_29;
                    tmp_mvar_value_9 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

                    if (unlikely(tmp_mvar_value_9 == NULL)) {
                        tmp_mvar_value_9 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
                    }

                    if (tmp_mvar_value_9 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
                        exception_tb = NULL;

                        exception_lineno = 835;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_called_instance_40 = tmp_mvar_value_9;
                    tmp_args_element_name_28 = const_str_digest_4fe5584a56124cd39e348d33297e43d5;
                    CHECK_OBJECT(var_txt);
                    tmp_args_element_name_29 = var_txt;
                    frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 835;
                    {
                        PyObject *call_args[] = {tmp_args_element_name_28, tmp_args_element_name_29};
                        tmp_assign_source_27 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_40, const_str_plain_findall, call_args);
                    }

                    if (tmp_assign_source_27 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 835;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    assert(var_drive_list == NULL);
                    var_drive_list = tmp_assign_source_27;
                }
                {
                    PyObject *tmp_assign_source_28;
                    PyObject *tmp_called_instance_41;
                    PyObject *tmp_called_name_13;
                    PyObject *tmp_source_name_63;
                    PyObject *tmp_mvar_value_10;
                    PyObject *tmp_args_element_name_30;
                    PyObject *tmp_left_name_14;
                    PyObject *tmp_source_name_64;
                    PyObject *tmp_right_name_14;
                    tmp_mvar_value_10 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                    if (unlikely(tmp_mvar_value_10 == NULL)) {
                        tmp_mvar_value_10 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                    }

                    if (tmp_mvar_value_10 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                        exception_tb = NULL;

                        exception_lineno = 836;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_source_name_63 = tmp_mvar_value_10;
                    tmp_called_name_13 = LOOKUP_ATTRIBUTE(tmp_source_name_63, const_str_plain_popen);
                    if (tmp_called_name_13 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 836;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_64 = par_ui;
                    tmp_left_name_14 = LOOKUP_ATTRIBUTE(tmp_source_name_64, const_str_plain_prefix);
                    if (tmp_left_name_14 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_13);

                        exception_lineno = 836;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_14 = const_str_plain_blkid;
                    tmp_args_element_name_30 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_14, tmp_right_name_14);
                    Py_DECREF(tmp_left_name_14);
                    if (tmp_args_element_name_30 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_13);

                        exception_lineno = 836;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 836;
                    tmp_called_instance_41 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_13, tmp_args_element_name_30);
                    Py_DECREF(tmp_called_name_13);
                    Py_DECREF(tmp_args_element_name_30);
                    if (tmp_called_instance_41 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 836;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 836;
                    tmp_assign_source_28 = CALL_METHOD_NO_ARGS(tmp_called_instance_41, const_str_plain_read);
                    Py_DECREF(tmp_called_instance_41);
                    if (tmp_assign_source_28 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 836;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    assert(var_txt2 == NULL);
                    var_txt2 = tmp_assign_source_28;
                }
                {
                    PyObject *tmp_assign_source_29;
                    PyObject *tmp_called_instance_42;
                    PyObject *tmp_mvar_value_11;
                    PyObject *tmp_args_element_name_31;
                    PyObject *tmp_args_element_name_32;
                    tmp_mvar_value_11 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

                    if (unlikely(tmp_mvar_value_11 == NULL)) {
                        tmp_mvar_value_11 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
                    }

                    if (tmp_mvar_value_11 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
                        exception_tb = NULL;

                        exception_lineno = 838;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_called_instance_42 = tmp_mvar_value_11;
                    tmp_args_element_name_31 = const_str_digest_abfdea41505156cc3bc828330a5d4fe3;
                    CHECK_OBJECT(var_txt2);
                    tmp_args_element_name_32 = var_txt2;
                    frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 838;
                    {
                        PyObject *call_args[] = {tmp_args_element_name_31, tmp_args_element_name_32};
                        tmp_assign_source_29 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_42, const_str_plain_findall, call_args);
                    }

                    if (tmp_assign_source_29 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 838;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    assert(var_all_list == NULL);
                    var_all_list = tmp_assign_source_29;
                }
                {
                    PyObject *tmp_assign_source_30;
                    PyObject *tmp_iter_arg_2;
                    CHECK_OBJECT(var_all_list);
                    tmp_iter_arg_2 = var_all_list;
                    tmp_assign_source_30 = MAKE_ITERATOR(tmp_iter_arg_2);
                    if (tmp_assign_source_30 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 841;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    assert(tmp_for_loop_2__for_iterator == NULL);
                    tmp_for_loop_2__for_iterator = tmp_assign_source_30;
                }
                // Tried code:
                loop_start_3:;
                {
                    PyObject *tmp_next_source_2;
                    PyObject *tmp_assign_source_31;
                    CHECK_OBJECT(tmp_for_loop_2__for_iterator);
                    tmp_next_source_2 = tmp_for_loop_2__for_iterator;
                    tmp_assign_source_31 = ITERATOR_NEXT(tmp_next_source_2);
                    if (tmp_assign_source_31 == NULL) {
                        if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                            goto loop_end_3;
                        } else {

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            exception_lineno = 841;
                            goto try_except_handler_3;
                        }
                    }

                    {
                        PyObject *old = tmp_for_loop_2__iter_value;
                        tmp_for_loop_2__iter_value = tmp_assign_source_31;
                        Py_XDECREF(old);
                    }

                }
                {
                    PyObject *tmp_assign_source_32;
                    CHECK_OBJECT(tmp_for_loop_2__iter_value);
                    tmp_assign_source_32 = tmp_for_loop_2__iter_value;
                    {
                        PyObject *old = var_a;
                        var_a = tmp_assign_source_32;
                        Py_INCREF(var_a);
                        Py_XDECREF(old);
                    }

                }
                {
                    PyObject *tmp_assign_source_33;
                    PyObject *tmp_called_instance_43;
                    PyObject *tmp_mvar_value_12;
                    PyObject *tmp_args_element_name_33;
                    PyObject *tmp_args_element_name_34;
                    tmp_mvar_value_12 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

                    if (unlikely(tmp_mvar_value_12 == NULL)) {
                        tmp_mvar_value_12 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
                    }

                    if (tmp_mvar_value_12 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
                        exception_tb = NULL;

                        exception_lineno = 842;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto try_except_handler_3;
                    }

                    tmp_called_instance_43 = tmp_mvar_value_12;
                    tmp_args_element_name_33 = const_str_digest_8576a4442af83c196fa53ef5aec4bcd7;
                    CHECK_OBJECT(var_a);
                    tmp_args_element_name_34 = var_a;
                    frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 842;
                    {
                        PyObject *call_args[] = {tmp_args_element_name_33, tmp_args_element_name_34};
                        tmp_assign_source_33 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_43, const_str_plain_search, call_args);
                    }

                    if (tmp_assign_source_33 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 842;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto try_except_handler_3;
                    }
                    {
                        PyObject *old = var_m1;
                        var_m1 = tmp_assign_source_33;
                        Py_XDECREF(old);
                    }

                }
                {
                    PyObject *tmp_assign_source_34;
                    PyObject *tmp_called_instance_44;
                    PyObject *tmp_mvar_value_13;
                    PyObject *tmp_args_element_name_35;
                    PyObject *tmp_args_element_name_36;
                    tmp_mvar_value_13 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

                    if (unlikely(tmp_mvar_value_13 == NULL)) {
                        tmp_mvar_value_13 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
                    }

                    if (tmp_mvar_value_13 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
                        exception_tb = NULL;

                        exception_lineno = 843;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto try_except_handler_3;
                    }

                    tmp_called_instance_44 = tmp_mvar_value_13;
                    tmp_args_element_name_35 = const_str_digest_e9d24bdc0652609f4256f35e99daf760;
                    CHECK_OBJECT(var_a);
                    tmp_args_element_name_36 = var_a;
                    frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 843;
                    {
                        PyObject *call_args[] = {tmp_args_element_name_35, tmp_args_element_name_36};
                        tmp_assign_source_34 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_44, const_str_plain_search, call_args);
                    }

                    if (tmp_assign_source_34 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 843;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto try_except_handler_3;
                    }
                    {
                        PyObject *old = var_m2;
                        var_m2 = tmp_assign_source_34;
                        Py_XDECREF(old);
                    }

                }
                {
                    nuitka_bool tmp_condition_result_23;
                    int tmp_truth_name_8;
                    CHECK_OBJECT(var_m2);
                    tmp_truth_name_8 = CHECK_IF_TRUE(var_m2);
                    if (tmp_truth_name_8 == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 844;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto try_except_handler_3;
                    }
                    tmp_condition_result_23 = tmp_truth_name_8 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_23 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_23;
                    } else {
                        goto branch_no_23;
                    }
                    branch_yes_23:;
                    {
                        PyObject *tmp_assign_source_35;
                        PyObject *tmp_called_instance_45;
                        CHECK_OBJECT(var_m1);
                        tmp_called_instance_45 = var_m1;
                        frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 845;
                        tmp_assign_source_35 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_45, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_int_0_tuple, 0));

                        if (tmp_assign_source_35 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 845;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto try_except_handler_3;
                        }
                        {
                            PyObject *old = var_dev_a;
                            var_dev_a = tmp_assign_source_35;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assign_source_36;
                        PyObject *tmp_called_instance_46;
                        CHECK_OBJECT(var_m2);
                        tmp_called_instance_46 = var_m2;
                        frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 846;
                        tmp_assign_source_36 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_46, const_str_plain_group, &PyTuple_GET_ITEM(const_tuple_int_pos_1_tuple, 0));

                        if (tmp_assign_source_36 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 846;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto try_except_handler_3;
                        }
                        {
                            PyObject *old = var_type_a;
                            var_type_a = tmp_assign_source_36;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        nuitka_bool tmp_condition_result_24;
                        PyObject *tmp_compexpr_left_30;
                        PyObject *tmp_compexpr_right_30;
                        CHECK_OBJECT(var_dev_a);
                        tmp_compexpr_left_30 = var_dev_a;
                        CHECK_OBJECT(var_drive_list);
                        tmp_compexpr_right_30 = var_drive_list;
                        tmp_res = PySequence_Contains(tmp_compexpr_right_30, tmp_compexpr_left_30);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 847;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto try_except_handler_3;
                        }
                        tmp_condition_result_24 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_24 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_24;
                        } else {
                            goto branch_no_24;
                        }
                        branch_yes_24:;
                        {
                            PyObject *tmp_assign_source_37;
                            PyObject *tmp_called_name_14;
                            PyObject *tmp_source_name_65;
                            PyObject *tmp_mvar_value_14;
                            PyObject *tmp_args_element_name_37;
                            PyObject *tmp_left_name_15;
                            PyObject *tmp_left_name_16;
                            PyObject *tmp_left_name_17;
                            PyObject *tmp_left_name_18;
                            PyObject *tmp_source_name_66;
                            PyObject *tmp_right_name_15;
                            PyObject *tmp_right_name_16;
                            PyObject *tmp_right_name_17;
                            PyObject *tmp_right_name_18;
                            tmp_mvar_value_14 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                            if (unlikely(tmp_mvar_value_14 == NULL)) {
                                tmp_mvar_value_14 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                            }

                            if (tmp_mvar_value_14 == NULL) {

                                exception_type = PyExc_NameError;
                                Py_INCREF(exception_type);
                                exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                                exception_tb = NULL;

                                exception_lineno = 849;
                                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                                goto try_except_handler_3;
                            }

                            tmp_source_name_65 = tmp_mvar_value_14;
                            tmp_called_name_14 = LOOKUP_ATTRIBUTE(tmp_source_name_65, const_str_plain_system);
                            if (tmp_called_name_14 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 849;
                                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                                goto try_except_handler_3;
                            }
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_66 = par_ui;
                            tmp_left_name_18 = LOOKUP_ATTRIBUTE(tmp_source_name_66, const_str_plain_prefix);
                            if (tmp_left_name_18 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_14);

                                exception_lineno = 849;
                                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                                goto try_except_handler_3;
                            }
                            tmp_right_name_15 = const_str_digest_f3d167b0dffa906401fa6c94639c194d;
                            tmp_left_name_17 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_18, tmp_right_name_15);
                            Py_DECREF(tmp_left_name_18);
                            if (tmp_left_name_17 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_14);

                                exception_lineno = 849;
                                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                                goto try_except_handler_3;
                            }
                            CHECK_OBJECT(var_type_a);
                            tmp_right_name_16 = var_type_a;
                            tmp_left_name_16 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_17, tmp_right_name_16);
                            Py_DECREF(tmp_left_name_17);
                            if (tmp_left_name_16 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_14);

                                exception_lineno = 849;
                                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                                goto try_except_handler_3;
                            }
                            tmp_right_name_17 = const_str_space;
                            tmp_left_name_15 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_16, tmp_right_name_17);
                            Py_DECREF(tmp_left_name_16);
                            if (tmp_left_name_15 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_14);

                                exception_lineno = 849;
                                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                                goto try_except_handler_3;
                            }
                            CHECK_OBJECT(var_dev_a);
                            tmp_right_name_18 = var_dev_a;
                            tmp_args_element_name_37 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_15, tmp_right_name_18);
                            Py_DECREF(tmp_left_name_15);
                            if (tmp_args_element_name_37 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_14);

                                exception_lineno = 849;
                                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                                goto try_except_handler_3;
                            }
                            frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 849;
                            tmp_assign_source_37 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_14, tmp_args_element_name_37);
                            Py_DECREF(tmp_called_name_14);
                            Py_DECREF(tmp_args_element_name_37);
                            if (tmp_assign_source_37 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 849;
                                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                                goto try_except_handler_3;
                            }
                            {
                                PyObject *old = var_s;
                                var_s = tmp_assign_source_37;
                                Py_XDECREF(old);
                            }

                        }
                        branch_no_24:;
                    }
                    branch_no_23:;
                }
                if (CONSIDER_THREADING() == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 841;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto try_except_handler_3;
                }
                goto loop_start_3;
                loop_end_3:;
                goto try_end_2;
                // Exception handler code:
                try_except_handler_3:;
                exception_keeper_type_2 = exception_type;
                exception_keeper_value_2 = exception_value;
                exception_keeper_tb_2 = exception_tb;
                exception_keeper_lineno_2 = exception_lineno;
                exception_type = NULL;
                exception_value = NULL;
                exception_tb = NULL;
                exception_lineno = 0;

                Py_XDECREF(tmp_for_loop_2__iter_value);
                tmp_for_loop_2__iter_value = NULL;

                CHECK_OBJECT((PyObject *)tmp_for_loop_2__for_iterator);
                Py_DECREF(tmp_for_loop_2__for_iterator);
                tmp_for_loop_2__for_iterator = NULL;

                // Re-raise.
                exception_type = exception_keeper_type_2;
                exception_value = exception_keeper_value_2;
                exception_tb = exception_keeper_tb_2;
                exception_lineno = exception_keeper_lineno_2;

                goto frame_exception_exit_1;
                // End of try:
                try_end_2:;
                Py_XDECREF(tmp_for_loop_2__iter_value);
                tmp_for_loop_2__iter_value = NULL;

                CHECK_OBJECT((PyObject *)tmp_for_loop_2__for_iterator);
                Py_DECREF(tmp_for_loop_2__for_iterator);
                tmp_for_loop_2__for_iterator = NULL;

                {
                    PyObject *tmp_assign_source_38;
                    PyObject *tmp_called_instance_47;
                    PyObject *tmp_called_name_15;
                    PyObject *tmp_source_name_67;
                    PyObject *tmp_mvar_value_15;
                    PyObject *tmp_args_element_name_38;
                    PyObject *tmp_left_name_19;
                    PyObject *tmp_source_name_68;
                    PyObject *tmp_right_name_19;
                    tmp_mvar_value_15 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                    if (unlikely(tmp_mvar_value_15 == NULL)) {
                        tmp_mvar_value_15 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                    }

                    if (tmp_mvar_value_15 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                        exception_tb = NULL;

                        exception_lineno = 851;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_source_name_67 = tmp_mvar_value_15;
                    tmp_called_name_15 = LOOKUP_ATTRIBUTE(tmp_source_name_67, const_str_plain_popen);
                    if (tmp_called_name_15 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 851;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_68 = par_ui;
                    tmp_left_name_19 = LOOKUP_ATTRIBUTE(tmp_source_name_68, const_str_plain_prefix);
                    if (tmp_left_name_19 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_15);

                        exception_lineno = 851;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_19 = const_str_plain_mount;
                    tmp_args_element_name_38 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_19, tmp_right_name_19);
                    Py_DECREF(tmp_left_name_19);
                    if (tmp_args_element_name_38 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_15);

                        exception_lineno = 851;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 851;
                    tmp_called_instance_47 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_15, tmp_args_element_name_38);
                    Py_DECREF(tmp_called_name_15);
                    Py_DECREF(tmp_args_element_name_38);
                    if (tmp_called_instance_47 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 851;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 851;
                    tmp_assign_source_38 = CALL_METHOD_NO_ARGS(tmp_called_instance_47, const_str_plain_read);
                    Py_DECREF(tmp_called_instance_47);
                    if (tmp_assign_source_38 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 851;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    {
                        PyObject *old = var_txt;
                        assert(old != NULL);
                        var_txt = tmp_assign_source_38;
                        Py_DECREF(old);
                    }

                }
                {
                    PyObject *tmp_assign_source_39;
                    PyObject *tmp_called_instance_48;
                    PyObject *tmp_mvar_value_16;
                    PyObject *tmp_args_element_name_39;
                    PyObject *tmp_args_element_name_40;
                    tmp_mvar_value_16 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

                    if (unlikely(tmp_mvar_value_16 == NULL)) {
                        tmp_mvar_value_16 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
                    }

                    if (tmp_mvar_value_16 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
                        exception_tb = NULL;

                        exception_lineno = 853;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_called_instance_48 = tmp_mvar_value_16;
                    tmp_args_element_name_39 = const_str_digest_4fe5584a56124cd39e348d33297e43d5;
                    CHECK_OBJECT(var_txt);
                    tmp_args_element_name_40 = var_txt;
                    frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 853;
                    {
                        PyObject *call_args[] = {tmp_args_element_name_39, tmp_args_element_name_40};
                        tmp_assign_source_39 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_48, const_str_plain_findall, call_args);
                    }

                    if (tmp_assign_source_39 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 853;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    {
                        PyObject *old = var_drive_list;
                        assert(old != NULL);
                        var_drive_list = tmp_assign_source_39;
                        Py_DECREF(old);
                    }

                }
                {
                    PyObject *tmp_assign_source_40;
                    PyObject *tmp_iter_arg_3;
                    CHECK_OBJECT(var_drive_list);
                    tmp_iter_arg_3 = var_drive_list;
                    tmp_assign_source_40 = MAKE_ITERATOR(tmp_iter_arg_3);
                    if (tmp_assign_source_40 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 854;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    assert(tmp_for_loop_3__for_iterator == NULL);
                    tmp_for_loop_3__for_iterator = tmp_assign_source_40;
                }
                // Tried code:
                loop_start_4:;
                {
                    PyObject *tmp_next_source_3;
                    PyObject *tmp_assign_source_41;
                    CHECK_OBJECT(tmp_for_loop_3__for_iterator);
                    tmp_next_source_3 = tmp_for_loop_3__for_iterator;
                    tmp_assign_source_41 = ITERATOR_NEXT(tmp_next_source_3);
                    if (tmp_assign_source_41 == NULL) {
                        if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                            goto loop_end_4;
                        } else {

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            exception_lineno = 854;
                            goto try_except_handler_4;
                        }
                    }

                    {
                        PyObject *old = tmp_for_loop_3__iter_value;
                        tmp_for_loop_3__iter_value = tmp_assign_source_41;
                        Py_XDECREF(old);
                    }

                }
                {
                    PyObject *tmp_assign_source_42;
                    CHECK_OBJECT(tmp_for_loop_3__iter_value);
                    tmp_assign_source_42 = tmp_for_loop_3__iter_value;
                    {
                        PyObject *old = var_d;
                        var_d = tmp_assign_source_42;
                        Py_INCREF(var_d);
                        Py_XDECREF(old);
                    }

                }
                {
                    nuitka_bool tmp_condition_result_25;
                    PyObject *tmp_called_name_16;
                    PyObject *tmp_source_name_69;
                    PyObject *tmp_source_name_70;
                    PyObject *tmp_mvar_value_17;
                    PyObject *tmp_call_result_29;
                    PyObject *tmp_args_element_name_41;
                    PyObject *tmp_left_name_20;
                    PyObject *tmp_right_name_20;
                    int tmp_truth_name_9;
                    tmp_mvar_value_17 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                    if (unlikely(tmp_mvar_value_17 == NULL)) {
                        tmp_mvar_value_17 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                    }

                    if (tmp_mvar_value_17 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                        exception_tb = NULL;

                        exception_lineno = 855;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto try_except_handler_4;
                    }

                    tmp_source_name_70 = tmp_mvar_value_17;
                    tmp_source_name_69 = LOOKUP_ATTRIBUTE(tmp_source_name_70, const_str_plain_path);
                    if (tmp_source_name_69 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 855;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto try_except_handler_4;
                    }
                    tmp_called_name_16 = LOOKUP_ATTRIBUTE(tmp_source_name_69, const_str_plain_isdir);
                    Py_DECREF(tmp_source_name_69);
                    if (tmp_called_name_16 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 855;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto try_except_handler_4;
                    }
                    tmp_left_name_20 = const_str_digest_dcce744a7f20ab5ff6ee33d33fd10c9e;
                    CHECK_OBJECT(var_d);
                    tmp_right_name_20 = var_d;
                    tmp_args_element_name_41 = BINARY_OPERATION_MOD_STR_OBJECT(tmp_left_name_20, tmp_right_name_20);
                    if (tmp_args_element_name_41 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_16);

                        exception_lineno = 855;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto try_except_handler_4;
                    }
                    frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 855;
                    tmp_call_result_29 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_16, tmp_args_element_name_41);
                    Py_DECREF(tmp_called_name_16);
                    Py_DECREF(tmp_args_element_name_41);
                    if (tmp_call_result_29 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 855;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto try_except_handler_4;
                    }
                    tmp_truth_name_9 = CHECK_IF_TRUE(tmp_call_result_29);
                    if (tmp_truth_name_9 == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_call_result_29);

                        exception_lineno = 855;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto try_except_handler_4;
                    }
                    tmp_condition_result_25 = tmp_truth_name_9 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    Py_DECREF(tmp_call_result_29);
                    if (tmp_condition_result_25 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_25;
                    } else {
                        goto branch_no_25;
                    }
                    branch_yes_25:;
                    {
                        PyObject *tmp_called_instance_49;
                        PyObject *tmp_call_result_30;
                        PyObject *tmp_args_element_name_42;
                        CHECK_OBJECT(var_folder_list);
                        tmp_called_instance_49 = var_folder_list;
                        CHECK_OBJECT(var_d);
                        tmp_args_element_name_42 = var_d;
                        frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 856;
                        {
                            PyObject *call_args[] = {tmp_args_element_name_42};
                            tmp_call_result_30 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_49, const_str_plain_append, call_args);
                        }

                        if (tmp_call_result_30 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 856;
                            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                            goto try_except_handler_4;
                        }
                        Py_DECREF(tmp_call_result_30);
                    }
                    branch_no_25:;
                }
                if (CONSIDER_THREADING() == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 854;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto try_except_handler_4;
                }
                goto loop_start_4;
                loop_end_4:;
                goto try_end_3;
                // Exception handler code:
                try_except_handler_4:;
                exception_keeper_type_3 = exception_type;
                exception_keeper_value_3 = exception_value;
                exception_keeper_tb_3 = exception_tb;
                exception_keeper_lineno_3 = exception_lineno;
                exception_type = NULL;
                exception_value = NULL;
                exception_tb = NULL;
                exception_lineno = 0;

                Py_XDECREF(tmp_for_loop_3__iter_value);
                tmp_for_loop_3__iter_value = NULL;

                CHECK_OBJECT((PyObject *)tmp_for_loop_3__for_iterator);
                Py_DECREF(tmp_for_loop_3__for_iterator);
                tmp_for_loop_3__for_iterator = NULL;

                // Re-raise.
                exception_type = exception_keeper_type_3;
                exception_value = exception_keeper_value_3;
                exception_tb = exception_keeper_tb_3;
                exception_lineno = exception_keeper_lineno_3;

                goto frame_exception_exit_1;
                // End of try:
                try_end_3:;
                Py_XDECREF(tmp_for_loop_3__iter_value);
                tmp_for_loop_3__iter_value = NULL;

                CHECK_OBJECT((PyObject *)tmp_for_loop_3__for_iterator);
                Py_DECREF(tmp_for_loop_3__for_iterator);
                tmp_for_loop_3__for_iterator = NULL;

                branch_no_22:;
            }
            branch_end_20:;
        }
        {
            nuitka_bool tmp_condition_result_26;
            PyObject *tmp_compexpr_left_31;
            PyObject *tmp_compexpr_right_31;
            PyObject *tmp_len_arg_6;
            if (var_drive_list == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "drive_list");
                exception_tb = NULL;

                exception_lineno = 857;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }

            tmp_len_arg_6 = var_drive_list;
            tmp_compexpr_left_31 = BUILTIN_LEN(tmp_len_arg_6);
            if (tmp_compexpr_left_31 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 857;
                type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_31 = const_int_0;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_31, tmp_compexpr_right_31);
            Py_DECREF(tmp_compexpr_left_31);
            assert(!(tmp_res == -1));
            tmp_condition_result_26 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_26 == NUITKA_BOOL_TRUE) {
                goto branch_yes_26;
            } else {
                goto branch_no_26;
            }
            branch_yes_26:;
            {
                PyObject *tmp_called_instance_50;
                PyObject *tmp_call_result_31;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_50 = par_ui;
                frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 858;
                tmp_call_result_31 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_50, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_d0bbbc8ecf5795d416fb4bb1a98af89c_tuple, 0));

                if (tmp_call_result_31 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 858;
                    type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_31);
            }
            tmp_return_value = Py_None;
            Py_INCREF(tmp_return_value);
            goto frame_return_exit_1;
            goto branch_end_26;
            branch_no_26:;
            {
                nuitka_bool tmp_condition_result_27;
                PyObject *tmp_compexpr_left_32;
                PyObject *tmp_compexpr_right_32;
                PyObject *tmp_len_arg_7;
                CHECK_OBJECT(var_folder_list);
                tmp_len_arg_7 = var_folder_list;
                tmp_compexpr_left_32 = BUILTIN_LEN(tmp_len_arg_7);
                assert(!(tmp_compexpr_left_32 == NULL));
                tmp_compexpr_right_32 = const_int_0;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_32, tmp_compexpr_right_32);
                Py_DECREF(tmp_compexpr_left_32);
                assert(!(tmp_res == -1));
                tmp_condition_result_27 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_27 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_27;
                } else {
                    goto branch_no_27;
                }
                branch_yes_27:;
                {
                    PyObject *tmp_called_instance_51;
                    PyObject *tmp_call_result_32;
                    CHECK_OBJECT(par_ui);
                    tmp_called_instance_51 = par_ui;
                    frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 862;
                    tmp_call_result_32 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_51, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_7b157eb583e5f192282fcaa00a676577_tuple, 0));

                    if (tmp_call_result_32 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 862;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_32);
                }
                tmp_return_value = Py_None;
                Py_INCREF(tmp_return_value);
                goto frame_return_exit_1;
                goto branch_end_27;
                branch_no_27:;
                {
                    PyObject *tmp_called_instance_52;
                    PyObject *tmp_call_result_33;
                    CHECK_OBJECT(par_ui);
                    tmp_called_instance_52 = par_ui;
                    frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 866;
                    tmp_call_result_33 = CALL_METHOD_NO_ARGS(tmp_called_instance_52, const_str_plain_start_spin);
                    if (tmp_call_result_33 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 866;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_33);
                }
                {
                    PyObject *tmp_called_instance_53;
                    PyObject *tmp_source_name_71;
                    PyObject *tmp_call_result_34;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_71 = par_ui;
                    tmp_called_instance_53 = LOOKUP_ATTRIBUTE(tmp_source_name_71, const_str_plain_wait_instr);
                    if (tmp_called_instance_53 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 867;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 867;
                    tmp_call_result_34 = CALL_METHOD_NO_ARGS(tmp_called_instance_53, const_str_plain_show);
                    Py_DECREF(tmp_called_instance_53);
                    if (tmp_call_result_34 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 867;
                        type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_34);
                }
                branch_end_27:;
            }
            branch_end_26:;
        }
        branch_end_2:;
    }
    {
        PyObject *tmp_assign_source_43;
        PyObject *tmp_called_name_17;
        PyObject *tmp_source_name_72;
        PyObject *tmp_mvar_value_18;
        PyObject *tmp_kw_name_1;
        PyObject *tmp_dict_key_1;
        PyObject *tmp_dict_value_1;
        PyObject *tmp_source_name_73;
        PyObject *tmp_mvar_value_19;
        PyObject *tmp_dict_key_2;
        PyObject *tmp_dict_value_2;
        PyObject *tmp_tuple_element_1;
        tmp_mvar_value_18 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_threading);

        if (unlikely(tmp_mvar_value_18 == NULL)) {
            tmp_mvar_value_18 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_threading);
        }

        if (tmp_mvar_value_18 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 661 ], 38, 0);
            exception_tb = NULL;

            exception_lineno = 871;
            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_72 = tmp_mvar_value_18;
        tmp_called_name_17 = LOOKUP_ATTRIBUTE(tmp_source_name_72, const_str_plain_Thread);
        if (tmp_called_name_17 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 871;
            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
            goto frame_exception_exit_1;
        }
        tmp_mvar_value_19 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_runthread);

        if (unlikely(tmp_mvar_value_19 == NULL)) {
            tmp_mvar_value_19 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runthread);
        }

        if (tmp_mvar_value_19 == NULL) {
            Py_DECREF(tmp_called_name_17);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1304 ], 38, 0);
            exception_tb = NULL;

            exception_lineno = 871;
            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_73 = tmp_mvar_value_19;
        tmp_dict_value_1 = LOOKUP_ATTRIBUTE(tmp_source_name_73, const_str_plain_rt_unlockPBA);
        if (tmp_dict_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_17);

            exception_lineno = 871;
            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
            goto frame_exception_exit_1;
        }
        tmp_dict_key_1 = const_str_plain_target;
        tmp_kw_name_1 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_kw_name_1, tmp_dict_key_1, tmp_dict_value_1);
        Py_DECREF(tmp_dict_value_1);
        assert(!(tmp_res != 0));
        CHECK_OBJECT(par_ui);
        tmp_tuple_element_1 = par_ui;
        tmp_dict_value_2 = PyTuple_New(4);
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_dict_value_2, 0, tmp_tuple_element_1);
        if (var_selected_list == NULL) {
            Py_DECREF(tmp_called_name_17);
            Py_DECREF(tmp_kw_name_1);
            Py_DECREF(tmp_dict_value_2);
            exception_type = PyExc_UnboundLocalError;
            Py_INCREF(exception_type);
            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "selected_list");
            exception_tb = NULL;

            exception_lineno = 871;
            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
            goto frame_exception_exit_1;
        }

        tmp_tuple_element_1 = var_selected_list;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_dict_value_2, 1, tmp_tuple_element_1);
        CHECK_OBJECT(par_reboot);
        tmp_tuple_element_1 = par_reboot;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_dict_value_2, 2, tmp_tuple_element_1);
        CHECK_OBJECT(par_autounlock);
        tmp_tuple_element_1 = par_autounlock;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_dict_value_2, 3, tmp_tuple_element_1);
        tmp_dict_key_2 = const_str_plain_args;
        tmp_res = PyDict_SetItem(tmp_kw_name_1, tmp_dict_key_2, tmp_dict_value_2);
        Py_DECREF(tmp_dict_value_2);
        assert(!(tmp_res != 0));
        frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 871;
        tmp_assign_source_43 = CALL_FUNCTION_WITH_KEYARGS(tmp_called_name_17, tmp_kw_name_1);
        Py_DECREF(tmp_called_name_17);
        Py_DECREF(tmp_kw_name_1);
        if (tmp_assign_source_43 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 871;
            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
            goto frame_exception_exit_1;
        }
        assert(var_t_m == NULL);
        var_t_m = tmp_assign_source_43;
    }
    {
        PyObject *tmp_called_instance_54;
        PyObject *tmp_call_result_35;
        CHECK_OBJECT(var_t_m);
        tmp_called_instance_54 = var_t_m;
        frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame.f_lineno = 872;
        tmp_call_result_35 = CALL_METHOD_NO_ARGS(tmp_called_instance_54, const_str_plain_start);
        if (tmp_call_result_35 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 872;
            type_description_1 = "oooooNooooooooooooooNNooNoooNoooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_35);
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_513ef25aeb41ef62c916ffbbda8f298b);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_513ef25aeb41ef62c916ffbbda8f298b);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto try_return_handler_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_513ef25aeb41ef62c916ffbbda8f298b);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_513ef25aeb41ef62c916ffbbda8f298b, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_513ef25aeb41ef62c916ffbbda8f298b->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_513ef25aeb41ef62c916ffbbda8f298b, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_513ef25aeb41ef62c916ffbbda8f298b,
        type_description_1,
        par_button,
        par_ui,
        par_reboot,
        par_autounlock,
        par_msg,
        NULL,
        var_folder_list,
        var_selected_list,
        var_txt,
        var_pw_strip,
        var_list_mn,
        var_t_m,
        var_selected,
        var_all_list,
        var_m1,
        var_m2,
        var_drive_list,
        var_type_a,
        var_index,
        var_f_list,
        NULL,
        NULL,
        var_a,
        var_d,
        NULL,
        var_dev_a,
        var_drive,
        var_iter,
        NULL,
        var_devs,
        var_s,
        var_list_sn,
        var_txt2
    );


    // Release cached frame.
    if (frame_513ef25aeb41ef62c916ffbbda8f298b == cache_frame_513ef25aeb41ef62c916ffbbda8f298b) {
        Py_DECREF(frame_513ef25aeb41ef62c916ffbbda8f298b);
    }
    cache_frame_513ef25aeb41ef62c916ffbbda8f298b = NULL;

    assertFrameObject(frame_513ef25aeb41ef62c916ffbbda8f298b);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(runop$$$function_10_run_unlockPBA);
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    Py_XDECREF(var_folder_list);
    var_folder_list = NULL;

    Py_XDECREF(var_selected_list);
    var_selected_list = NULL;

    Py_XDECREF(var_txt);
    var_txt = NULL;

    Py_XDECREF(var_pw_strip);
    var_pw_strip = NULL;

    Py_XDECREF(var_list_mn);
    var_list_mn = NULL;

    Py_XDECREF(var_t_m);
    var_t_m = NULL;

    Py_XDECREF(var_selected);
    var_selected = NULL;

    Py_XDECREF(var_all_list);
    var_all_list = NULL;

    Py_XDECREF(var_m1);
    var_m1 = NULL;

    Py_XDECREF(var_m2);
    var_m2 = NULL;

    Py_XDECREF(var_drive_list);
    var_drive_list = NULL;

    Py_XDECREF(var_type_a);
    var_type_a = NULL;

    Py_XDECREF(var_index);
    var_index = NULL;

    Py_XDECREF(var_f_list);
    var_f_list = NULL;

    Py_XDECREF(var_a);
    var_a = NULL;

    Py_XDECREF(var_d);
    var_d = NULL;

    Py_XDECREF(var_dev_a);
    var_dev_a = NULL;

    Py_XDECREF(var_drive);
    var_drive = NULL;

    Py_XDECREF(var_iter);
    var_iter = NULL;

    Py_XDECREF(var_devs);
    var_devs = NULL;

    Py_XDECREF(var_s);
    var_s = NULL;

    Py_XDECREF(var_list_sn);
    var_list_sn = NULL;

    Py_XDECREF(var_txt2);
    var_txt2 = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_4 = exception_type;
    exception_keeper_value_4 = exception_value;
    exception_keeper_tb_4 = exception_tb;
    exception_keeper_lineno_4 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_folder_list);
    var_folder_list = NULL;

    Py_XDECREF(var_selected_list);
    var_selected_list = NULL;

    Py_XDECREF(var_txt);
    var_txt = NULL;

    Py_XDECREF(var_pw_strip);
    var_pw_strip = NULL;

    Py_XDECREF(var_list_mn);
    var_list_mn = NULL;

    Py_XDECREF(var_t_m);
    var_t_m = NULL;

    Py_XDECREF(var_selected);
    var_selected = NULL;

    Py_XDECREF(var_all_list);
    var_all_list = NULL;

    Py_XDECREF(var_m1);
    var_m1 = NULL;

    Py_XDECREF(var_m2);
    var_m2 = NULL;

    Py_XDECREF(var_drive_list);
    var_drive_list = NULL;

    Py_XDECREF(var_type_a);
    var_type_a = NULL;

    Py_XDECREF(var_index);
    var_index = NULL;

    Py_XDECREF(var_f_list);
    var_f_list = NULL;

    Py_XDECREF(var_a);
    var_a = NULL;

    Py_XDECREF(var_d);
    var_d = NULL;

    Py_XDECREF(var_dev_a);
    var_dev_a = NULL;

    Py_XDECREF(var_drive);
    var_drive = NULL;

    Py_XDECREF(var_iter);
    var_iter = NULL;

    Py_XDECREF(var_devs);
    var_devs = NULL;

    Py_XDECREF(var_s);
    var_s = NULL;

    Py_XDECREF(var_list_sn);
    var_list_sn = NULL;

    Py_XDECREF(var_txt2);
    var_txt2 = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_4;
    exception_value = exception_keeper_value_4;
    exception_tb = exception_keeper_tb_4;
    exception_lineno = exception_keeper_lineno_4;

    goto function_exception_exit;
    // End of try:

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(runop$$$function_10_run_unlockPBA);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_autounlock);
    Py_DECREF(par_autounlock);
    CHECK_OBJECT(par_reboot);
    Py_DECREF(par_reboot);
    CHECK_OBJECT(par_msg);
    Py_DECREF(par_msg);
    CHECK_OBJECT(par_button);
    Py_DECREF(par_button);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_autounlock);
    Py_DECREF(par_autounlock);
    CHECK_OBJECT(par_reboot);
    Py_DECREF(par_reboot);
    CHECK_OBJECT(par_msg);
    Py_DECREF(par_msg);
    CHECK_OBJECT(par_button);
    Py_DECREF(par_button);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_runop$$$function_11_run_revertKeep(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_button = python_pars[0];
    PyObject *par_ui = python_pars[1];
    PyObject *var_pw_strip = NULL;
    PyObject *var_list_mn = NULL;
    PyObject *var_index = NULL;
    PyObject *var_selected = NULL;
    PyObject *var_t_m = NULL;
    PyObject *var_iter = NULL;
    PyObject *var_devs = NULL;
    PyObject *var_f_list = NULL;
    PyObject *var_selected_list = NULL;
    PyObject *var_list_sn = NULL;
    struct Nuitka_FrameObject *frame_653a72570e29d9caae1a16892ba5534f;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    PyObject *tmp_return_value = NULL;
    bool tmp_result;
    static struct Nuitka_FrameObject *cache_frame_653a72570e29d9caae1a16892ba5534f = NULL;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;

    // Actual function body.
    // Tried code:
    MAKE_OR_REUSE_FRAME(cache_frame_653a72570e29d9caae1a16892ba5534f, codeobj_653a72570e29d9caae1a16892ba5534f, module_runop, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
    frame_653a72570e29d9caae1a16892ba5534f = cache_frame_653a72570e29d9caae1a16892ba5534f;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_653a72570e29d9caae1a16892ba5534f);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_653a72570e29d9caae1a16892ba5534f) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_instance_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_call_result_1;
        PyObject *tmp_args_element_name_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_verify);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_verify);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 236 ], 35, 0);
            exception_tb = NULL;

            exception_lineno = 875;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_1 = tmp_mvar_value_1;
        CHECK_OBJECT(par_ui);
        tmp_args_element_name_1 = par_ui;
        frame_653a72570e29d9caae1a16892ba5534f->m_frame.f_lineno = 875;
        {
            PyObject *call_args[] = {tmp_args_element_name_1};
            tmp_call_result_1 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_1, const_str_plain_licCheck, call_args);
        }

        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 875;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_1);
    }
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_called_name_1;
        PyObject *tmp_source_name_1;
        PyObject *tmp_mvar_value_2;
        PyObject *tmp_args_element_name_2;
        PyObject *tmp_args_element_name_3;
        PyObject *tmp_args_element_name_4;
        PyObject *tmp_called_instance_2;
        PyObject *tmp_source_name_2;
        tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_2 == NULL)) {
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_2 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
            exception_tb = NULL;

            exception_lineno = 876;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_1 = tmp_mvar_value_2;
        tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_sub);
        if (tmp_called_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 876;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_2 = const_str_digest_29fe972ddfd3c3ace7d88aee7a9cd77e;
        tmp_args_element_name_3 = const_str_empty;
        CHECK_OBJECT(par_ui);
        tmp_source_name_2 = par_ui;
        tmp_called_instance_2 = LOOKUP_ATTRIBUTE(tmp_source_name_2, const_str_plain_pass_entry);
        if (tmp_called_instance_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_1);

            exception_lineno = 876;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        frame_653a72570e29d9caae1a16892ba5534f->m_frame.f_lineno = 876;
        tmp_args_element_name_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_2, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_2);
        if (tmp_args_element_name_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_1);

            exception_lineno = 876;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        frame_653a72570e29d9caae1a16892ba5534f->m_frame.f_lineno = 876;
        {
            PyObject *call_args[] = {tmp_args_element_name_2, tmp_args_element_name_3, tmp_args_element_name_4};
            tmp_assign_source_1 = CALL_FUNCTION_WITH_ARGS3(tmp_called_name_1, call_args);
        }

        Py_DECREF(tmp_called_name_1);
        Py_DECREF(tmp_args_element_name_4);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 876;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_pw_strip == NULL);
        var_pw_strip = tmp_assign_source_1;
    }
    {
        nuitka_bool tmp_condition_result_1;
        int tmp_and_left_truth_1;
        nuitka_bool tmp_and_left_value_1;
        nuitka_bool tmp_and_right_value_1;
        PyObject *tmp_compexpr_left_1;
        PyObject *tmp_compexpr_right_1;
        PyObject *tmp_called_instance_3;
        PyObject *tmp_source_name_3;
        PyObject *tmp_operand_name_1;
        int tmp_and_left_truth_2;
        PyObject *tmp_and_left_value_2;
        PyObject *tmp_and_right_value_2;
        int tmp_or_left_truth_1;
        PyObject *tmp_or_left_value_1;
        PyObject *tmp_or_right_value_1;
        PyObject *tmp_compexpr_left_2;
        PyObject *tmp_compexpr_right_2;
        PyObject *tmp_left_name_1;
        PyObject *tmp_source_name_4;
        PyObject *tmp_right_name_1;
        int tmp_and_left_truth_3;
        PyObject *tmp_and_left_value_3;
        PyObject *tmp_and_right_value_3;
        PyObject *tmp_compexpr_left_3;
        PyObject *tmp_compexpr_right_3;
        PyObject *tmp_source_name_5;
        PyObject *tmp_compexpr_left_4;
        PyObject *tmp_compexpr_right_4;
        PyObject *tmp_source_name_6;
        PyObject *tmp_called_instance_4;
        PyObject *tmp_source_name_7;
        CHECK_OBJECT(par_ui);
        tmp_source_name_3 = par_ui;
        tmp_called_instance_3 = LOOKUP_ATTRIBUTE(tmp_source_name_3, const_str_plain_pass_entry);
        if (tmp_called_instance_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 878;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        frame_653a72570e29d9caae1a16892ba5534f->m_frame.f_lineno = 878;
        tmp_compexpr_left_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_3, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_3);
        if (tmp_compexpr_left_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 878;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_1 = const_str_empty;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_1, tmp_compexpr_right_1);
        Py_DECREF(tmp_compexpr_left_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 878;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_1 = tmp_and_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_1 == 1) {
            goto and_right_1;
        } else {
            goto and_left_1;
        }
        and_right_1:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_4 = par_ui;
        tmp_left_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_4, const_str_plain_VERSION);
        if (tmp_left_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 878;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_right_name_1 = const_int_pos_3;
        tmp_compexpr_left_2 = BINARY_OPERATION_MOD_OBJECT_INT(tmp_left_name_1, tmp_right_name_1);
        Py_DECREF(tmp_left_name_1);
        if (tmp_compexpr_left_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 878;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_2 = const_int_0;
        tmp_or_left_value_1 = RICH_COMPARE_EQ_OBJECT_OBJECT(tmp_compexpr_left_2, tmp_compexpr_right_2);
        Py_DECREF(tmp_compexpr_left_2);
        if (tmp_or_left_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 878;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_left_truth_1 = CHECK_IF_TRUE(tmp_or_left_value_1);
        if (tmp_or_left_truth_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_or_left_value_1);

            exception_lineno = 878;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_or_left_truth_1 == 1) {
            goto or_left_1;
        } else {
            goto or_right_1;
        }
        or_right_1:;
        Py_DECREF(tmp_or_left_value_1);
        CHECK_OBJECT(par_ui);
        tmp_source_name_5 = par_ui;
        tmp_compexpr_left_3 = LOOKUP_ATTRIBUTE(tmp_source_name_5, const_str_plain_VERSION);
        if (tmp_compexpr_left_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 878;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_3 = const_int_pos_1;
        tmp_and_left_value_3 = RICH_COMPARE_EQ_OBJECT_OBJECT(tmp_compexpr_left_3, tmp_compexpr_right_3);
        Py_DECREF(tmp_compexpr_left_3);
        if (tmp_and_left_value_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 878;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_truth_3 = CHECK_IF_TRUE(tmp_and_left_value_3);
        if (tmp_and_left_truth_3 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_and_left_value_3);

            exception_lineno = 878;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_and_left_truth_3 == 1) {
            goto and_right_3;
        } else {
            goto and_left_3;
        }
        and_right_3:;
        Py_DECREF(tmp_and_left_value_3);
        CHECK_OBJECT(par_ui);
        tmp_source_name_6 = par_ui;
        tmp_compexpr_left_4 = LOOKUP_ATTRIBUTE(tmp_source_name_6, const_str_plain_PBA_VERSION);
        if (tmp_compexpr_left_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 878;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_4 = const_int_pos_1;
        tmp_and_right_value_3 = RICH_COMPARE_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_4, tmp_compexpr_right_4);
        Py_DECREF(tmp_compexpr_left_4);
        if (tmp_and_right_value_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 878;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_right_value_1 = tmp_and_right_value_3;
        goto and_end_3;
        and_left_3:;
        tmp_or_right_value_1 = tmp_and_left_value_3;
        and_end_3:;
        tmp_and_left_value_2 = tmp_or_right_value_1;
        goto or_end_1;
        or_left_1:;
        tmp_and_left_value_2 = tmp_or_left_value_1;
        or_end_1:;
        tmp_and_left_truth_2 = CHECK_IF_TRUE(tmp_and_left_value_2);
        if (tmp_and_left_truth_2 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_and_left_value_2);

            exception_lineno = 878;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_and_left_truth_2 == 1) {
            goto and_right_2;
        } else {
            goto and_left_2;
        }
        and_right_2:;
        Py_DECREF(tmp_and_left_value_2);
        CHECK_OBJECT(par_ui);
        tmp_source_name_7 = par_ui;
        tmp_called_instance_4 = LOOKUP_ATTRIBUTE(tmp_source_name_7, const_str_plain_check_pass_rd);
        if (tmp_called_instance_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 878;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        frame_653a72570e29d9caae1a16892ba5534f->m_frame.f_lineno = 878;
        tmp_and_right_value_2 = CALL_METHOD_NO_ARGS(tmp_called_instance_4, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_4);
        if (tmp_and_right_value_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 878;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_operand_name_1 = tmp_and_right_value_2;
        goto and_end_2;
        and_left_2:;
        tmp_operand_name_1 = tmp_and_left_value_2;
        and_end_2:;
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_1);
        Py_DECREF(tmp_operand_name_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 878;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_1 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_condition_result_1 = tmp_and_right_value_1;
        goto and_end_1;
        and_left_1:;
        tmp_condition_result_1 = tmp_and_left_value_1;
        and_end_1:;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        {
            PyObject *tmp_called_instance_5;
            PyObject *tmp_call_result_2;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_5 = par_ui;
            frame_653a72570e29d9caae1a16892ba5534f->m_frame.f_lineno = 879;
            tmp_call_result_2 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_5, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_8482c425481a7392528c91276c4d7ae3_tuple, 0));

            if (tmp_call_result_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 879;
                type_description_1 = "ooooNoooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_2);
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        branch_no_1:;
    }
    {
        nuitka_bool tmp_condition_result_2;
        int tmp_and_left_truth_4;
        nuitka_bool tmp_and_left_value_4;
        nuitka_bool tmp_and_right_value_4;
        PyObject *tmp_compexpr_left_5;
        PyObject *tmp_compexpr_right_5;
        PyObject *tmp_operand_name_2;
        int tmp_and_left_truth_5;
        PyObject *tmp_and_left_value_5;
        PyObject *tmp_and_right_value_5;
        int tmp_or_left_truth_2;
        PyObject *tmp_or_left_value_2;
        PyObject *tmp_or_right_value_2;
        PyObject *tmp_compexpr_left_6;
        PyObject *tmp_compexpr_right_6;
        PyObject *tmp_left_name_2;
        PyObject *tmp_source_name_8;
        PyObject *tmp_right_name_2;
        int tmp_and_left_truth_6;
        PyObject *tmp_and_left_value_6;
        PyObject *tmp_and_right_value_6;
        PyObject *tmp_compexpr_left_7;
        PyObject *tmp_compexpr_right_7;
        PyObject *tmp_source_name_9;
        PyObject *tmp_compexpr_left_8;
        PyObject *tmp_compexpr_right_8;
        PyObject *tmp_source_name_10;
        PyObject *tmp_called_instance_6;
        PyObject *tmp_source_name_11;
        CHECK_OBJECT(var_pw_strip);
        tmp_compexpr_left_5 = var_pw_strip;
        tmp_compexpr_right_5 = const_str_empty;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_5, tmp_compexpr_right_5);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 881;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_4 = tmp_and_left_value_4 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_4 == 1) {
            goto and_right_4;
        } else {
            goto and_left_4;
        }
        and_right_4:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_8 = par_ui;
        tmp_left_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_8, const_str_plain_VERSION);
        if (tmp_left_name_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 881;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_right_name_2 = const_int_pos_3;
        tmp_compexpr_left_6 = BINARY_OPERATION_MOD_OBJECT_INT(tmp_left_name_2, tmp_right_name_2);
        Py_DECREF(tmp_left_name_2);
        if (tmp_compexpr_left_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 881;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_6 = const_int_0;
        tmp_or_left_value_2 = RICH_COMPARE_EQ_OBJECT_OBJECT(tmp_compexpr_left_6, tmp_compexpr_right_6);
        Py_DECREF(tmp_compexpr_left_6);
        if (tmp_or_left_value_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 881;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_left_truth_2 = CHECK_IF_TRUE(tmp_or_left_value_2);
        if (tmp_or_left_truth_2 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_or_left_value_2);

            exception_lineno = 881;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_or_left_truth_2 == 1) {
            goto or_left_2;
        } else {
            goto or_right_2;
        }
        or_right_2:;
        Py_DECREF(tmp_or_left_value_2);
        CHECK_OBJECT(par_ui);
        tmp_source_name_9 = par_ui;
        tmp_compexpr_left_7 = LOOKUP_ATTRIBUTE(tmp_source_name_9, const_str_plain_VERSION);
        if (tmp_compexpr_left_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 881;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_7 = const_int_pos_1;
        tmp_and_left_value_6 = RICH_COMPARE_EQ_OBJECT_OBJECT(tmp_compexpr_left_7, tmp_compexpr_right_7);
        Py_DECREF(tmp_compexpr_left_7);
        if (tmp_and_left_value_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 881;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_truth_6 = CHECK_IF_TRUE(tmp_and_left_value_6);
        if (tmp_and_left_truth_6 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_and_left_value_6);

            exception_lineno = 881;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_and_left_truth_6 == 1) {
            goto and_right_6;
        } else {
            goto and_left_6;
        }
        and_right_6:;
        Py_DECREF(tmp_and_left_value_6);
        CHECK_OBJECT(par_ui);
        tmp_source_name_10 = par_ui;
        tmp_compexpr_left_8 = LOOKUP_ATTRIBUTE(tmp_source_name_10, const_str_plain_PBA_VERSION);
        if (tmp_compexpr_left_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 881;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_8 = const_int_pos_1;
        tmp_and_right_value_6 = RICH_COMPARE_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_8, tmp_compexpr_right_8);
        Py_DECREF(tmp_compexpr_left_8);
        if (tmp_and_right_value_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 881;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_right_value_2 = tmp_and_right_value_6;
        goto and_end_6;
        and_left_6:;
        tmp_or_right_value_2 = tmp_and_left_value_6;
        and_end_6:;
        tmp_and_left_value_5 = tmp_or_right_value_2;
        goto or_end_2;
        or_left_2:;
        tmp_and_left_value_5 = tmp_or_left_value_2;
        or_end_2:;
        tmp_and_left_truth_5 = CHECK_IF_TRUE(tmp_and_left_value_5);
        if (tmp_and_left_truth_5 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_and_left_value_5);

            exception_lineno = 881;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_and_left_truth_5 == 1) {
            goto and_right_5;
        } else {
            goto and_left_5;
        }
        and_right_5:;
        Py_DECREF(tmp_and_left_value_5);
        CHECK_OBJECT(par_ui);
        tmp_source_name_11 = par_ui;
        tmp_called_instance_6 = LOOKUP_ATTRIBUTE(tmp_source_name_11, const_str_plain_check_pass_rd);
        if (tmp_called_instance_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 881;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        frame_653a72570e29d9caae1a16892ba5534f->m_frame.f_lineno = 881;
        tmp_and_right_value_5 = CALL_METHOD_NO_ARGS(tmp_called_instance_6, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_6);
        if (tmp_and_right_value_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 881;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_operand_name_2 = tmp_and_right_value_5;
        goto and_end_5;
        and_left_5:;
        tmp_operand_name_2 = tmp_and_left_value_5;
        and_end_5:;
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_2);
        Py_DECREF(tmp_operand_name_2);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 881;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_4 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_condition_result_2 = tmp_and_right_value_4;
        goto and_end_4;
        and_left_4:;
        tmp_condition_result_2 = tmp_and_left_value_4;
        and_end_4:;
        if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
            goto branch_yes_2;
        } else {
            goto branch_no_2;
        }
        branch_yes_2:;
        {
            PyObject *tmp_called_instance_7;
            PyObject *tmp_call_result_3;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_7 = par_ui;
            frame_653a72570e29d9caae1a16892ba5534f->m_frame.f_lineno = 882;
            tmp_call_result_3 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_7, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_84ba3144e8a4c8824551fdd8d0fe5bde_tuple, 0));

            if (tmp_call_result_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 882;
                type_description_1 = "ooooNoooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_3);
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        branch_no_2:;
    }
    {
        PyObject *tmp_assign_source_2;
        tmp_assign_source_2 = PyList_New(0);
        assert(var_devs == NULL);
        var_devs = tmp_assign_source_2;
    }
    {
        PyObject *tmp_assign_source_3;
        tmp_assign_source_3 = PyList_New(0);
        assert(var_list_mn == NULL);
        var_list_mn = tmp_assign_source_3;
    }
    {
        PyObject *tmp_assign_source_4;
        tmp_assign_source_4 = PyList_New(0);
        assert(var_list_sn == NULL);
        var_list_sn = tmp_assign_source_4;
    }
    {
        nuitka_bool tmp_condition_result_3;
        PyObject *tmp_called_instance_8;
        PyObject *tmp_source_name_12;
        PyObject *tmp_call_result_4;
        int tmp_truth_name_1;
        CHECK_OBJECT(par_ui);
        tmp_source_name_12 = par_ui;
        tmp_called_instance_8 = LOOKUP_ATTRIBUTE(tmp_source_name_12, const_str_plain_toggleSingle_radio);
        if (tmp_called_instance_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 888;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        frame_653a72570e29d9caae1a16892ba5534f->m_frame.f_lineno = 888;
        tmp_call_result_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_8, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_8);
        if (tmp_call_result_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 888;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_1 = CHECK_IF_TRUE(tmp_call_result_4);
        if (tmp_truth_name_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_4);

            exception_lineno = 888;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_3 = tmp_truth_name_1 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_4);
        if (tmp_condition_result_3 == NUITKA_BOOL_TRUE) {
            goto branch_yes_3;
        } else {
            goto branch_no_3;
        }
        branch_yes_3:;
        {
            PyObject *tmp_assign_source_5;
            PyObject *tmp_called_instance_9;
            PyObject *tmp_source_name_13;
            CHECK_OBJECT(par_ui);
            tmp_source_name_13 = par_ui;
            tmp_called_instance_9 = LOOKUP_ATTRIBUTE(tmp_source_name_13, const_str_plain_dev_select);
            if (tmp_called_instance_9 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 889;
                type_description_1 = "ooooNoooooooo";
                goto frame_exception_exit_1;
            }
            frame_653a72570e29d9caae1a16892ba5534f->m_frame.f_lineno = 889;
            tmp_assign_source_5 = CALL_METHOD_NO_ARGS(tmp_called_instance_9, const_str_plain_get_active);
            Py_DECREF(tmp_called_instance_9);
            if (tmp_assign_source_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 889;
                type_description_1 = "ooooNoooooooo";
                goto frame_exception_exit_1;
            }
            assert(var_index == NULL);
            var_index = tmp_assign_source_5;
        }
        {
            PyObject *tmp_assign_source_6;
            PyObject *tmp_list_element_1;
            CHECK_OBJECT(var_index);
            tmp_list_element_1 = var_index;
            tmp_assign_source_6 = PyList_New(1);
            Py_INCREF(tmp_list_element_1);
            PyList_SET_ITEM(tmp_assign_source_6, 0, tmp_list_element_1);
            assert(var_selected_list == NULL);
            var_selected_list = tmp_assign_source_6;
        }
        {
            PyObject *tmp_assign_source_7;
            PyObject *tmp_list_element_2;
            PyObject *tmp_subscribed_name_1;
            PyObject *tmp_source_name_14;
            PyObject *tmp_subscript_name_1;
            CHECK_OBJECT(par_ui);
            tmp_source_name_14 = par_ui;
            tmp_subscribed_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_14, const_str_plain_devs_list);
            if (tmp_subscribed_name_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 891;
                type_description_1 = "ooooNoooooooo";
                goto frame_exception_exit_1;
            }
            CHECK_OBJECT(var_index);
            tmp_subscript_name_1 = var_index;
            tmp_list_element_2 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_1, tmp_subscript_name_1);
            Py_DECREF(tmp_subscribed_name_1);
            if (tmp_list_element_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 891;
                type_description_1 = "ooooNoooooooo";
                goto frame_exception_exit_1;
            }
            tmp_assign_source_7 = PyList_New(1);
            PyList_SET_ITEM(tmp_assign_source_7, 0, tmp_list_element_2);
            {
                PyObject *old = var_devs;
                assert(old != NULL);
                var_devs = tmp_assign_source_7;
                Py_DECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_8;
            PyObject *tmp_list_element_3;
            PyObject *tmp_subscribed_name_2;
            PyObject *tmp_source_name_15;
            PyObject *tmp_subscript_name_2;
            CHECK_OBJECT(par_ui);
            tmp_source_name_15 = par_ui;
            tmp_subscribed_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_15, const_str_plain_vendor_list);
            if (tmp_subscribed_name_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 892;
                type_description_1 = "ooooNoooooooo";
                goto frame_exception_exit_1;
            }
            CHECK_OBJECT(var_index);
            tmp_subscript_name_2 = var_index;
            tmp_list_element_3 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_2, tmp_subscript_name_2);
            Py_DECREF(tmp_subscribed_name_2);
            if (tmp_list_element_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 892;
                type_description_1 = "ooooNoooooooo";
                goto frame_exception_exit_1;
            }
            tmp_assign_source_8 = PyList_New(1);
            PyList_SET_ITEM(tmp_assign_source_8, 0, tmp_list_element_3);
            {
                PyObject *old = var_list_mn;
                assert(old != NULL);
                var_list_mn = tmp_assign_source_8;
                Py_DECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_9;
            PyObject *tmp_list_element_4;
            PyObject *tmp_subscribed_name_3;
            PyObject *tmp_source_name_16;
            PyObject *tmp_subscript_name_3;
            CHECK_OBJECT(par_ui);
            tmp_source_name_16 = par_ui;
            tmp_subscribed_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_16, const_str_plain_sn_list);
            if (tmp_subscribed_name_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 893;
                type_description_1 = "ooooNoooooooo";
                goto frame_exception_exit_1;
            }
            CHECK_OBJECT(var_index);
            tmp_subscript_name_3 = var_index;
            tmp_list_element_4 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_3, tmp_subscript_name_3);
            Py_DECREF(tmp_subscribed_name_3);
            if (tmp_list_element_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 893;
                type_description_1 = "ooooNoooooooo";
                goto frame_exception_exit_1;
            }
            tmp_assign_source_9 = PyList_New(1);
            PyList_SET_ITEM(tmp_assign_source_9, 0, tmp_list_element_4);
            {
                PyObject *old = var_list_sn;
                assert(old != NULL);
                var_list_sn = tmp_assign_source_9;
                Py_DECREF(old);
            }

        }
        goto branch_end_3;
        branch_no_3:;
        {
            PyObject *tmp_assign_source_10;
            tmp_assign_source_10 = const_int_0;
            assert(var_index == NULL);
            Py_INCREF(tmp_assign_source_10);
            var_index = tmp_assign_source_10;
        }
        {
            PyObject *tmp_assign_source_11;
            tmp_assign_source_11 = PyList_New(0);
            assert(var_selected_list == NULL);
            var_selected_list = tmp_assign_source_11;
        }
        {
            PyObject *tmp_assign_source_12;
            PyObject *tmp_called_instance_10;
            PyObject *tmp_source_name_17;
            CHECK_OBJECT(par_ui);
            tmp_source_name_17 = par_ui;
            tmp_called_instance_10 = LOOKUP_ATTRIBUTE(tmp_source_name_17, const_str_plain_liststore);
            if (tmp_called_instance_10 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 897;
                type_description_1 = "ooooNoooooooo";
                goto frame_exception_exit_1;
            }
            frame_653a72570e29d9caae1a16892ba5534f->m_frame.f_lineno = 897;
            tmp_assign_source_12 = CALL_METHOD_NO_ARGS(tmp_called_instance_10, const_str_plain_get_iter_first);
            Py_DECREF(tmp_called_instance_10);
            if (tmp_assign_source_12 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 897;
                type_description_1 = "ooooNoooooooo";
                goto frame_exception_exit_1;
            }
            assert(var_iter == NULL);
            var_iter = tmp_assign_source_12;
        }
        loop_start_1:;
        {
            nuitka_bool tmp_condition_result_4;
            PyObject *tmp_operand_name_3;
            PyObject *tmp_compexpr_left_9;
            PyObject *tmp_compexpr_right_9;
            CHECK_OBJECT(var_iter);
            tmp_compexpr_left_9 = var_iter;
            tmp_compexpr_right_9 = Py_None;
            tmp_operand_name_3 = RICH_COMPARE_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_9, tmp_compexpr_right_9);
            if (tmp_operand_name_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 898;
                type_description_1 = "ooooNoooooooo";
                goto frame_exception_exit_1;
            }
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_3);
            Py_DECREF(tmp_operand_name_3);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 898;
                type_description_1 = "ooooNoooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_4 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_4 == NUITKA_BOOL_TRUE) {
                goto branch_yes_4;
            } else {
                goto branch_no_4;
            }
            branch_yes_4:;
            goto loop_end_1;
            branch_no_4:;
        }
        {
            PyObject *tmp_assign_source_13;
            PyObject *tmp_called_instance_11;
            PyObject *tmp_source_name_18;
            PyObject *tmp_args_element_name_5;
            PyObject *tmp_args_element_name_6;
            CHECK_OBJECT(par_ui);
            tmp_source_name_18 = par_ui;
            tmp_called_instance_11 = LOOKUP_ATTRIBUTE(tmp_source_name_18, const_str_plain_liststore);
            if (tmp_called_instance_11 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 899;
                type_description_1 = "ooooNoooooooo";
                goto frame_exception_exit_1;
            }
            CHECK_OBJECT(var_iter);
            tmp_args_element_name_5 = var_iter;
            tmp_args_element_name_6 = const_int_0;
            frame_653a72570e29d9caae1a16892ba5534f->m_frame.f_lineno = 899;
            {
                PyObject *call_args[] = {tmp_args_element_name_5, tmp_args_element_name_6};
                tmp_assign_source_13 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_11, const_str_plain_get_value, call_args);
            }

            Py_DECREF(tmp_called_instance_11);
            if (tmp_assign_source_13 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 899;
                type_description_1 = "ooooNoooooooo";
                goto frame_exception_exit_1;
            }
            {
                PyObject *old = var_selected;
                var_selected = tmp_assign_source_13;
                Py_XDECREF(old);
            }

        }
        {
            nuitka_bool tmp_condition_result_5;
            int tmp_truth_name_2;
            CHECK_OBJECT(var_selected);
            tmp_truth_name_2 = CHECK_IF_TRUE(var_selected);
            if (tmp_truth_name_2 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 900;
                type_description_1 = "ooooNoooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_5 = tmp_truth_name_2 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_5 == NUITKA_BOOL_TRUE) {
                goto branch_yes_5;
            } else {
                goto branch_no_5;
            }
            branch_yes_5:;
            {
                PyObject *tmp_called_instance_12;
                PyObject *tmp_call_result_5;
                PyObject *tmp_args_element_name_7;
                CHECK_OBJECT(var_selected_list);
                tmp_called_instance_12 = var_selected_list;
                CHECK_OBJECT(var_index);
                tmp_args_element_name_7 = var_index;
                frame_653a72570e29d9caae1a16892ba5534f->m_frame.f_lineno = 901;
                {
                    PyObject *call_args[] = {tmp_args_element_name_7};
                    tmp_call_result_5 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_12, const_str_plain_append, call_args);
                }

                if (tmp_call_result_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 901;
                    type_description_1 = "ooooNoooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_5);
            }
            {
                PyObject *tmp_called_name_2;
                PyObject *tmp_source_name_19;
                PyObject *tmp_call_result_6;
                PyObject *tmp_args_element_name_8;
                PyObject *tmp_subscribed_name_4;
                PyObject *tmp_source_name_20;
                PyObject *tmp_subscript_name_4;
                CHECK_OBJECT(var_devs);
                tmp_source_name_19 = var_devs;
                tmp_called_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_19, const_str_plain_append);
                if (tmp_called_name_2 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 902;
                    type_description_1 = "ooooNoooooooo";
                    goto frame_exception_exit_1;
                }
                CHECK_OBJECT(par_ui);
                tmp_source_name_20 = par_ui;
                tmp_subscribed_name_4 = LOOKUP_ATTRIBUTE(tmp_source_name_20, const_str_plain_devs_list);
                if (tmp_subscribed_name_4 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_2);

                    exception_lineno = 902;
                    type_description_1 = "ooooNoooooooo";
                    goto frame_exception_exit_1;
                }
                CHECK_OBJECT(var_index);
                tmp_subscript_name_4 = var_index;
                tmp_args_element_name_8 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_4, tmp_subscript_name_4);
                Py_DECREF(tmp_subscribed_name_4);
                if (tmp_args_element_name_8 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_2);

                    exception_lineno = 902;
                    type_description_1 = "ooooNoooooooo";
                    goto frame_exception_exit_1;
                }
                frame_653a72570e29d9caae1a16892ba5534f->m_frame.f_lineno = 902;
                tmp_call_result_6 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_2, tmp_args_element_name_8);
                Py_DECREF(tmp_called_name_2);
                Py_DECREF(tmp_args_element_name_8);
                if (tmp_call_result_6 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 902;
                    type_description_1 = "ooooNoooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_6);
            }
            {
                PyObject *tmp_called_name_3;
                PyObject *tmp_source_name_21;
                PyObject *tmp_call_result_7;
                PyObject *tmp_args_element_name_9;
                PyObject *tmp_subscribed_name_5;
                PyObject *tmp_source_name_22;
                PyObject *tmp_subscript_name_5;
                CHECK_OBJECT(var_list_mn);
                tmp_source_name_21 = var_list_mn;
                tmp_called_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_21, const_str_plain_append);
                if (tmp_called_name_3 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 903;
                    type_description_1 = "ooooNoooooooo";
                    goto frame_exception_exit_1;
                }
                CHECK_OBJECT(par_ui);
                tmp_source_name_22 = par_ui;
                tmp_subscribed_name_5 = LOOKUP_ATTRIBUTE(tmp_source_name_22, const_str_plain_vendor_list);
                if (tmp_subscribed_name_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_3);

                    exception_lineno = 903;
                    type_description_1 = "ooooNoooooooo";
                    goto frame_exception_exit_1;
                }
                CHECK_OBJECT(var_index);
                tmp_subscript_name_5 = var_index;
                tmp_args_element_name_9 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_5, tmp_subscript_name_5);
                Py_DECREF(tmp_subscribed_name_5);
                if (tmp_args_element_name_9 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_3);

                    exception_lineno = 903;
                    type_description_1 = "ooooNoooooooo";
                    goto frame_exception_exit_1;
                }
                frame_653a72570e29d9caae1a16892ba5534f->m_frame.f_lineno = 903;
                tmp_call_result_7 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_3, tmp_args_element_name_9);
                Py_DECREF(tmp_called_name_3);
                Py_DECREF(tmp_args_element_name_9);
                if (tmp_call_result_7 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 903;
                    type_description_1 = "ooooNoooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_7);
            }
            {
                PyObject *tmp_called_name_4;
                PyObject *tmp_source_name_23;
                PyObject *tmp_call_result_8;
                PyObject *tmp_args_element_name_10;
                PyObject *tmp_subscribed_name_6;
                PyObject *tmp_source_name_24;
                PyObject *tmp_subscript_name_6;
                CHECK_OBJECT(var_list_sn);
                tmp_source_name_23 = var_list_sn;
                tmp_called_name_4 = LOOKUP_ATTRIBUTE(tmp_source_name_23, const_str_plain_append);
                if (tmp_called_name_4 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 904;
                    type_description_1 = "ooooNoooooooo";
                    goto frame_exception_exit_1;
                }
                CHECK_OBJECT(par_ui);
                tmp_source_name_24 = par_ui;
                tmp_subscribed_name_6 = LOOKUP_ATTRIBUTE(tmp_source_name_24, const_str_plain_sn_list);
                if (tmp_subscribed_name_6 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_4);

                    exception_lineno = 904;
                    type_description_1 = "ooooNoooooooo";
                    goto frame_exception_exit_1;
                }
                CHECK_OBJECT(var_index);
                tmp_subscript_name_6 = var_index;
                tmp_args_element_name_10 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_6, tmp_subscript_name_6);
                Py_DECREF(tmp_subscribed_name_6);
                if (tmp_args_element_name_10 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_4);

                    exception_lineno = 904;
                    type_description_1 = "ooooNoooooooo";
                    goto frame_exception_exit_1;
                }
                frame_653a72570e29d9caae1a16892ba5534f->m_frame.f_lineno = 904;
                tmp_call_result_8 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_4, tmp_args_element_name_10);
                Py_DECREF(tmp_called_name_4);
                Py_DECREF(tmp_args_element_name_10);
                if (tmp_call_result_8 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 904;
                    type_description_1 = "ooooNoooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_8);
            }
            branch_no_5:;
        }
        {
            PyObject *tmp_assign_source_14;
            PyObject *tmp_called_instance_13;
            PyObject *tmp_source_name_25;
            PyObject *tmp_args_element_name_11;
            CHECK_OBJECT(par_ui);
            tmp_source_name_25 = par_ui;
            tmp_called_instance_13 = LOOKUP_ATTRIBUTE(tmp_source_name_25, const_str_plain_liststore);
            if (tmp_called_instance_13 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 905;
                type_description_1 = "ooooNoooooooo";
                goto frame_exception_exit_1;
            }
            CHECK_OBJECT(var_iter);
            tmp_args_element_name_11 = var_iter;
            frame_653a72570e29d9caae1a16892ba5534f->m_frame.f_lineno = 905;
            {
                PyObject *call_args[] = {tmp_args_element_name_11};
                tmp_assign_source_14 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_13, const_str_plain_iter_next, call_args);
            }

            Py_DECREF(tmp_called_instance_13);
            if (tmp_assign_source_14 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 905;
                type_description_1 = "ooooNoooooooo";
                goto frame_exception_exit_1;
            }
            {
                PyObject *old = var_iter;
                assert(old != NULL);
                var_iter = tmp_assign_source_14;
                Py_DECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_15;
            PyObject *tmp_left_name_3;
            PyObject *tmp_right_name_3;
            CHECK_OBJECT(var_index);
            tmp_left_name_3 = var_index;
            tmp_right_name_3 = const_int_pos_1;
            tmp_assign_source_15 = BINARY_OPERATION_ADD_OBJECT_INT(tmp_left_name_3, tmp_right_name_3);
            assert(!(tmp_assign_source_15 == NULL));
            {
                PyObject *old = var_index;
                assert(old != NULL);
                var_index = tmp_assign_source_15;
                Py_DECREF(old);
            }

        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 898;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        goto loop_start_1;
        loop_end_1:;
        {
            nuitka_bool tmp_condition_result_6;
            PyObject *tmp_compexpr_left_10;
            PyObject *tmp_compexpr_right_10;
            PyObject *tmp_len_arg_1;
            CHECK_OBJECT(var_selected_list);
            tmp_len_arg_1 = var_selected_list;
            tmp_compexpr_left_10 = BUILTIN_LEN(tmp_len_arg_1);
            assert(!(tmp_compexpr_left_10 == NULL));
            tmp_compexpr_right_10 = const_int_0;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_10, tmp_compexpr_right_10);
            Py_DECREF(tmp_compexpr_left_10);
            assert(!(tmp_res == -1));
            tmp_condition_result_6 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_6 == NUITKA_BOOL_TRUE) {
                goto branch_yes_6;
            } else {
                goto branch_no_6;
            }
            branch_yes_6:;
            {
                PyObject *tmp_called_instance_14;
                PyObject *tmp_call_result_9;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_14 = par_ui;
                frame_653a72570e29d9caae1a16892ba5534f->m_frame.f_lineno = 908;
                tmp_call_result_9 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_14, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_1115ebe932d1b941d1eed30a47fde5a6_tuple, 0));

                if (tmp_call_result_9 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 908;
                    type_description_1 = "ooooNoooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_9);
            }
            tmp_return_value = Py_None;
            Py_INCREF(tmp_return_value);
            goto frame_return_exit_1;
            branch_no_6:;
        }
        branch_end_3:;
    }
    {
        nuitka_bool tmp_condition_result_7;
        int tmp_and_left_truth_7;
        nuitka_bool tmp_and_left_value_7;
        nuitka_bool tmp_and_right_value_7;
        int tmp_or_left_truth_3;
        nuitka_bool tmp_or_left_value_3;
        nuitka_bool tmp_or_right_value_3;
        PyObject *tmp_compexpr_left_11;
        PyObject *tmp_compexpr_right_11;
        PyObject *tmp_left_name_4;
        PyObject *tmp_source_name_26;
        PyObject *tmp_right_name_4;
        int tmp_and_left_truth_8;
        nuitka_bool tmp_and_left_value_8;
        nuitka_bool tmp_and_right_value_8;
        PyObject *tmp_compexpr_left_12;
        PyObject *tmp_compexpr_right_12;
        PyObject *tmp_source_name_27;
        PyObject *tmp_compexpr_left_13;
        PyObject *tmp_compexpr_right_13;
        PyObject *tmp_source_name_28;
        PyObject *tmp_called_instance_15;
        PyObject *tmp_source_name_29;
        PyObject *tmp_call_result_10;
        int tmp_truth_name_3;
        CHECK_OBJECT(par_ui);
        tmp_source_name_26 = par_ui;
        tmp_left_name_4 = LOOKUP_ATTRIBUTE(tmp_source_name_26, const_str_plain_VERSION);
        if (tmp_left_name_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 911;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_right_name_4 = const_int_pos_3;
        tmp_compexpr_left_11 = BINARY_OPERATION_MOD_OBJECT_INT(tmp_left_name_4, tmp_right_name_4);
        Py_DECREF(tmp_left_name_4);
        if (tmp_compexpr_left_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 911;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_11 = const_int_0;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_11, tmp_compexpr_right_11);
        Py_DECREF(tmp_compexpr_left_11);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 911;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_left_value_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_or_left_truth_3 = tmp_or_left_value_3 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_or_left_truth_3 == 1) {
            goto or_left_3;
        } else {
            goto or_right_3;
        }
        or_right_3:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_27 = par_ui;
        tmp_compexpr_left_12 = LOOKUP_ATTRIBUTE(tmp_source_name_27, const_str_plain_VERSION);
        if (tmp_compexpr_left_12 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 911;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_12 = const_int_pos_1;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_12, tmp_compexpr_right_12);
        Py_DECREF(tmp_compexpr_left_12);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 911;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_8 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_8 = tmp_and_left_value_8 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_8 == 1) {
            goto and_right_8;
        } else {
            goto and_left_8;
        }
        and_right_8:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_28 = par_ui;
        tmp_compexpr_left_13 = LOOKUP_ATTRIBUTE(tmp_source_name_28, const_str_plain_PBA_VERSION);
        if (tmp_compexpr_left_13 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 911;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_13 = const_int_pos_1;
        tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_INT(tmp_compexpr_left_13, tmp_compexpr_right_13);
        Py_DECREF(tmp_compexpr_left_13);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 911;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_8 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_or_right_value_3 = tmp_and_right_value_8;
        goto and_end_8;
        and_left_8:;
        tmp_or_right_value_3 = tmp_and_left_value_8;
        and_end_8:;
        tmp_and_left_value_7 = tmp_or_right_value_3;
        goto or_end_3;
        or_left_3:;
        tmp_and_left_value_7 = tmp_or_left_value_3;
        or_end_3:;
        tmp_and_left_truth_7 = tmp_and_left_value_7 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_7 == 1) {
            goto and_right_7;
        } else {
            goto and_left_7;
        }
        and_right_7:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_29 = par_ui;
        tmp_called_instance_15 = LOOKUP_ATTRIBUTE(tmp_source_name_29, const_str_plain_check_pass_rd);
        if (tmp_called_instance_15 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 911;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        frame_653a72570e29d9caae1a16892ba5534f->m_frame.f_lineno = 911;
        tmp_call_result_10 = CALL_METHOD_NO_ARGS(tmp_called_instance_15, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_15);
        if (tmp_call_result_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 911;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_3 = CHECK_IF_TRUE(tmp_call_result_10);
        if (tmp_truth_name_3 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_10);

            exception_lineno = 911;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_7 = tmp_truth_name_3 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_call_result_10);
        tmp_condition_result_7 = tmp_and_right_value_7;
        goto and_end_7;
        and_left_7:;
        tmp_condition_result_7 = tmp_and_left_value_7;
        and_end_7:;
        if (tmp_condition_result_7 == NUITKA_BOOL_TRUE) {
            goto branch_yes_7;
        } else {
            goto branch_no_7;
        }
        branch_yes_7:;
        {
            PyObject *tmp_assign_source_16;
            PyObject *tmp_called_instance_16;
            PyObject *tmp_mvar_value_3;
            PyObject *tmp_args_element_name_12;
            PyObject *tmp_args_element_name_13;
            PyObject *tmp_args_element_name_14;
            PyObject *tmp_args_element_name_15;
            tmp_mvar_value_3 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_runprocess);

            if (unlikely(tmp_mvar_value_3 == NULL)) {
                tmp_mvar_value_3 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runprocess);
            }

            if (tmp_mvar_value_3 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 5132 ], 39, 0);
                exception_tb = NULL;

                exception_lineno = 912;
                type_description_1 = "ooooNoooooooo";
                goto frame_exception_exit_1;
            }

            tmp_called_instance_16 = tmp_mvar_value_3;
            tmp_args_element_name_12 = const_str_plain_Admin;
            CHECK_OBJECT(var_devs);
            tmp_args_element_name_13 = var_devs;
            CHECK_OBJECT(var_list_mn);
            tmp_args_element_name_14 = var_list_mn;
            CHECK_OBJECT(var_list_sn);
            tmp_args_element_name_15 = var_list_sn;
            frame_653a72570e29d9caae1a16892ba5534f->m_frame.f_lineno = 912;
            {
                PyObject *call_args[] = {tmp_args_element_name_12, tmp_args_element_name_13, tmp_args_element_name_14, tmp_args_element_name_15};
                tmp_assign_source_16 = CALL_METHOD_WITH_ARGS4(tmp_called_instance_16, const_str_plain_findUSB, call_args);
            }

            if (tmp_assign_source_16 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 912;
                type_description_1 = "ooooNoooooooo";
                goto frame_exception_exit_1;
            }
            assert(var_f_list == NULL);
            var_f_list = tmp_assign_source_16;
        }
        {
            nuitka_bool tmp_condition_result_8;
            PyObject *tmp_compexpr_left_14;
            PyObject *tmp_compexpr_right_14;
            PyObject *tmp_len_arg_2;
            PyObject *tmp_subscribed_name_7;
            PyObject *tmp_subscript_name_7;
            CHECK_OBJECT(var_f_list);
            tmp_subscribed_name_7 = var_f_list;
            tmp_subscript_name_7 = const_int_pos_1;
            tmp_len_arg_2 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_7, tmp_subscript_name_7, 1);
            if (tmp_len_arg_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 913;
                type_description_1 = "ooooNoooooooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_left_14 = BUILTIN_LEN(tmp_len_arg_2);
            Py_DECREF(tmp_len_arg_2);
            if (tmp_compexpr_left_14 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 913;
                type_description_1 = "ooooNoooooooo";
                goto frame_exception_exit_1;
            }
            tmp_compexpr_right_14 = const_int_0;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_14, tmp_compexpr_right_14);
            Py_DECREF(tmp_compexpr_left_14);
            assert(!(tmp_res == -1));
            tmp_condition_result_8 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_8 == NUITKA_BOOL_TRUE) {
                goto branch_yes_8;
            } else {
                goto branch_no_8;
            }
            branch_yes_8:;
            {
                PyObject *tmp_called_instance_17;
                PyObject *tmp_call_result_11;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_17 = par_ui;
                frame_653a72570e29d9caae1a16892ba5534f->m_frame.f_lineno = 914;
                tmp_call_result_11 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_17, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_65f1ca3cc21751516d4508974112f1bb_tuple, 0));

                if (tmp_call_result_11 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 914;
                    type_description_1 = "ooooNoooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_11);
            }
            tmp_return_value = Py_None;
            Py_INCREF(tmp_return_value);
            goto frame_return_exit_1;
            goto branch_end_8;
            branch_no_8:;
            {
                nuitka_bool tmp_condition_result_9;
                PyObject *tmp_compexpr_left_15;
                PyObject *tmp_compexpr_right_15;
                PyObject *tmp_len_arg_3;
                PyObject *tmp_subscribed_name_8;
                PyObject *tmp_subscript_name_8;
                CHECK_OBJECT(var_f_list);
                tmp_subscribed_name_8 = var_f_list;
                tmp_subscript_name_8 = const_int_0;
                tmp_len_arg_3 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_8, tmp_subscript_name_8, 0);
                if (tmp_len_arg_3 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 916;
                    type_description_1 = "ooooNoooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_compexpr_left_15 = BUILTIN_LEN(tmp_len_arg_3);
                Py_DECREF(tmp_len_arg_3);
                if (tmp_compexpr_left_15 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 916;
                    type_description_1 = "ooooNoooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_compexpr_right_15 = const_int_0;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_15, tmp_compexpr_right_15);
                Py_DECREF(tmp_compexpr_left_15);
                assert(!(tmp_res == -1));
                tmp_condition_result_9 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_9 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_9;
                } else {
                    goto branch_no_9;
                }
                branch_yes_9:;
                {
                    PyObject *tmp_called_instance_18;
                    PyObject *tmp_call_result_12;
                    CHECK_OBJECT(par_ui);
                    tmp_called_instance_18 = par_ui;
                    frame_653a72570e29d9caae1a16892ba5534f->m_frame.f_lineno = 917;
                    tmp_call_result_12 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_18, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_dcd804658f8e9977f257a841a58a2840_tuple, 0));

                    if (tmp_call_result_12 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 917;
                        type_description_1 = "ooooNoooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_12);
                }
                tmp_return_value = Py_None;
                Py_INCREF(tmp_return_value);
                goto frame_return_exit_1;
                goto branch_end_9;
                branch_no_9:;
                {
                    nuitka_bool tmp_condition_result_10;
                    PyObject *tmp_compexpr_left_16;
                    PyObject *tmp_compexpr_right_16;
                    PyObject *tmp_subscribed_name_9;
                    PyObject *tmp_subscript_name_9;
                    CHECK_OBJECT(var_f_list);
                    tmp_subscribed_name_9 = var_f_list;
                    tmp_subscript_name_9 = const_int_pos_2;
                    tmp_compexpr_left_16 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_9, tmp_subscript_name_9, 2);
                    if (tmp_compexpr_left_16 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 919;
                        type_description_1 = "ooooNoooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_compexpr_right_16 = const_str_empty;
                    tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_16, tmp_compexpr_right_16);
                    Py_DECREF(tmp_compexpr_left_16);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 919;
                        type_description_1 = "ooooNoooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_condition_result_10 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_10 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_10;
                    } else {
                        goto branch_no_10;
                    }
                    branch_yes_10:;
                    {
                        PyObject *tmp_called_name_5;
                        PyObject *tmp_source_name_30;
                        PyObject *tmp_call_result_13;
                        PyObject *tmp_args_element_name_16;
                        PyObject *tmp_left_name_5;
                        PyObject *tmp_left_name_6;
                        PyObject *tmp_right_name_5;
                        PyObject *tmp_subscribed_name_10;
                        PyObject *tmp_subscript_name_10;
                        PyObject *tmp_right_name_6;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_30 = par_ui;
                        tmp_called_name_5 = LOOKUP_ATTRIBUTE(tmp_source_name_30, const_str_plain_msg_err);
                        if (tmp_called_name_5 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 920;
                            type_description_1 = "ooooNoooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_left_name_6 = const_str_digest_1002dc717d1fdd81c2ea7f5f9f7ab4a3;
                        CHECK_OBJECT(var_f_list);
                        tmp_subscribed_name_10 = var_f_list;
                        tmp_subscript_name_10 = const_int_pos_2;
                        tmp_right_name_5 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_10, tmp_subscript_name_10, 2);
                        if (tmp_right_name_5 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_5);

                            exception_lineno = 920;
                            type_description_1 = "ooooNoooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_left_name_5 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_6, tmp_right_name_5);
                        Py_DECREF(tmp_right_name_5);
                        if (tmp_left_name_5 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_5);

                            exception_lineno = 920;
                            type_description_1 = "ooooNoooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_6 = const_str_dot;
                        tmp_args_element_name_16 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_5, tmp_right_name_6);
                        Py_DECREF(tmp_left_name_5);
                        if (tmp_args_element_name_16 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_5);

                            exception_lineno = 920;
                            type_description_1 = "ooooNoooooooo";
                            goto frame_exception_exit_1;
                        }
                        frame_653a72570e29d9caae1a16892ba5534f->m_frame.f_lineno = 920;
                        tmp_call_result_13 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_5, tmp_args_element_name_16);
                        Py_DECREF(tmp_called_name_5);
                        Py_DECREF(tmp_args_element_name_16);
                        if (tmp_call_result_13 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 920;
                            type_description_1 = "ooooNoooooooo";
                            goto frame_exception_exit_1;
                        }
                        Py_DECREF(tmp_call_result_13);
                    }
                    tmp_return_value = Py_None;
                    Py_INCREF(tmp_return_value);
                    goto frame_return_exit_1;
                    branch_no_10:;
                }
                branch_end_9:;
            }
            branch_end_8:;
        }
        branch_no_7:;
    }
    {
        PyObject *tmp_called_instance_19;
        PyObject *tmp_call_result_14;
        CHECK_OBJECT(par_ui);
        tmp_called_instance_19 = par_ui;
        frame_653a72570e29d9caae1a16892ba5534f->m_frame.f_lineno = 931;
        tmp_call_result_14 = CALL_METHOD_NO_ARGS(tmp_called_instance_19, const_str_plain_start_spin);
        if (tmp_call_result_14 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 931;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_14);
    }
    {
        nuitka_bool tmp_condition_result_11;
        PyObject *tmp_compexpr_left_17;
        PyObject *tmp_compexpr_right_17;
        PyObject *tmp_len_arg_4;
        CHECK_OBJECT(var_selected_list);
        tmp_len_arg_4 = var_selected_list;
        tmp_compexpr_left_17 = BUILTIN_LEN(tmp_len_arg_4);
        assert(!(tmp_compexpr_left_17 == NULL));
        tmp_compexpr_right_17 = const_int_pos_1;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_17, tmp_compexpr_right_17);
        Py_DECREF(tmp_compexpr_left_17);
        assert(!(tmp_res == -1));
        tmp_condition_result_11 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_11 == NUITKA_BOOL_TRUE) {
            goto branch_yes_11;
        } else {
            goto branch_no_11;
        }
        branch_yes_11:;
        {
            PyObject *tmp_called_instance_20;
            PyObject *tmp_source_name_31;
            PyObject *tmp_call_result_15;
            CHECK_OBJECT(par_ui);
            tmp_source_name_31 = par_ui;
            tmp_called_instance_20 = LOOKUP_ATTRIBUTE(tmp_source_name_31, const_str_plain_wait_instr);
            if (tmp_called_instance_20 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 933;
                type_description_1 = "ooooNoooooooo";
                goto frame_exception_exit_1;
            }
            frame_653a72570e29d9caae1a16892ba5534f->m_frame.f_lineno = 933;
            tmp_call_result_15 = CALL_METHOD_NO_ARGS(tmp_called_instance_20, const_str_plain_show);
            Py_DECREF(tmp_called_instance_20);
            if (tmp_call_result_15 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 933;
                type_description_1 = "ooooNoooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_15);
        }
        goto branch_end_11;
        branch_no_11:;
        {
            PyObject *tmp_called_instance_21;
            PyObject *tmp_source_name_32;
            PyObject *tmp_call_result_16;
            CHECK_OBJECT(par_ui);
            tmp_source_name_32 = par_ui;
            tmp_called_instance_21 = LOOKUP_ATTRIBUTE(tmp_source_name_32, const_str_plain_multi_wait_instr);
            if (tmp_called_instance_21 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 935;
                type_description_1 = "ooooNoooooooo";
                goto frame_exception_exit_1;
            }
            frame_653a72570e29d9caae1a16892ba5534f->m_frame.f_lineno = 935;
            tmp_call_result_16 = CALL_METHOD_NO_ARGS(tmp_called_instance_21, const_str_plain_show);
            Py_DECREF(tmp_called_instance_21);
            if (tmp_call_result_16 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 935;
                type_description_1 = "ooooNoooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_16);
        }
        branch_end_11:;
    }
    {
        PyObject *tmp_assattr_name_1;
        PyObject *tmp_assattr_target_1;
        tmp_assattr_name_1 = Py_True;
        CHECK_OBJECT(par_ui);
        tmp_assattr_target_1 = par_ui;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, const_str_plain_op_inprogress, tmp_assattr_name_1);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 936;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
    }
    {
        PyObject *tmp_assign_source_17;
        PyObject *tmp_called_name_6;
        PyObject *tmp_source_name_33;
        PyObject *tmp_mvar_value_4;
        PyObject *tmp_kw_name_1;
        PyObject *tmp_dict_key_1;
        PyObject *tmp_dict_value_1;
        PyObject *tmp_source_name_34;
        PyObject *tmp_mvar_value_5;
        PyObject *tmp_dict_key_2;
        PyObject *tmp_dict_value_2;
        PyObject *tmp_tuple_element_1;
        tmp_mvar_value_4 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_threading);

        if (unlikely(tmp_mvar_value_4 == NULL)) {
            tmp_mvar_value_4 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_threading);
        }

        if (tmp_mvar_value_4 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 661 ], 38, 0);
            exception_tb = NULL;

            exception_lineno = 939;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_33 = tmp_mvar_value_4;
        tmp_called_name_6 = LOOKUP_ATTRIBUTE(tmp_source_name_33, const_str_plain_Thread);
        if (tmp_called_name_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 939;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_mvar_value_5 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_runthread);

        if (unlikely(tmp_mvar_value_5 == NULL)) {
            tmp_mvar_value_5 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runthread);
        }

        if (tmp_mvar_value_5 == NULL) {
            Py_DECREF(tmp_called_name_6);
            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1304 ], 38, 0);
            exception_tb = NULL;

            exception_lineno = 939;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_34 = tmp_mvar_value_5;
        tmp_dict_value_1 = LOOKUP_ATTRIBUTE(tmp_source_name_34, const_str_plain_rt_revertKeep);
        if (tmp_dict_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_6);

            exception_lineno = 939;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        tmp_dict_key_1 = const_str_plain_target;
        tmp_kw_name_1 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_kw_name_1, tmp_dict_key_1, tmp_dict_value_1);
        Py_DECREF(tmp_dict_value_1);
        assert(!(tmp_res != 0));
        CHECK_OBJECT(par_ui);
        tmp_tuple_element_1 = par_ui;
        tmp_dict_value_2 = PyTuple_New(2);
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_dict_value_2, 0, tmp_tuple_element_1);
        CHECK_OBJECT(var_selected_list);
        tmp_tuple_element_1 = var_selected_list;
        Py_INCREF(tmp_tuple_element_1);
        PyTuple_SET_ITEM(tmp_dict_value_2, 1, tmp_tuple_element_1);
        tmp_dict_key_2 = const_str_plain_args;
        tmp_res = PyDict_SetItem(tmp_kw_name_1, tmp_dict_key_2, tmp_dict_value_2);
        Py_DECREF(tmp_dict_value_2);
        assert(!(tmp_res != 0));
        frame_653a72570e29d9caae1a16892ba5534f->m_frame.f_lineno = 939;
        tmp_assign_source_17 = CALL_FUNCTION_WITH_KEYARGS(tmp_called_name_6, tmp_kw_name_1);
        Py_DECREF(tmp_called_name_6);
        Py_DECREF(tmp_kw_name_1);
        if (tmp_assign_source_17 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 939;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_t_m == NULL);
        var_t_m = tmp_assign_source_17;
    }
    {
        PyObject *tmp_called_instance_22;
        PyObject *tmp_call_result_17;
        CHECK_OBJECT(var_t_m);
        tmp_called_instance_22 = var_t_m;
        frame_653a72570e29d9caae1a16892ba5534f->m_frame.f_lineno = 940;
        tmp_call_result_17 = CALL_METHOD_NO_ARGS(tmp_called_instance_22, const_str_plain_start);
        if (tmp_call_result_17 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 940;
            type_description_1 = "ooooNoooooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_17);
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_653a72570e29d9caae1a16892ba5534f);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_653a72570e29d9caae1a16892ba5534f);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto try_return_handler_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_653a72570e29d9caae1a16892ba5534f);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_653a72570e29d9caae1a16892ba5534f, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_653a72570e29d9caae1a16892ba5534f->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_653a72570e29d9caae1a16892ba5534f, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_653a72570e29d9caae1a16892ba5534f,
        type_description_1,
        par_button,
        par_ui,
        var_pw_strip,
        var_list_mn,
        NULL,
        var_index,
        var_selected,
        var_t_m,
        var_iter,
        var_devs,
        var_f_list,
        var_selected_list,
        var_list_sn
    );


    // Release cached frame.
    if (frame_653a72570e29d9caae1a16892ba5534f == cache_frame_653a72570e29d9caae1a16892ba5534f) {
        Py_DECREF(frame_653a72570e29d9caae1a16892ba5534f);
    }
    cache_frame_653a72570e29d9caae1a16892ba5534f = NULL;

    assertFrameObject(frame_653a72570e29d9caae1a16892ba5534f);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(runop$$$function_11_run_revertKeep);
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    CHECK_OBJECT((PyObject *)var_pw_strip);
    Py_DECREF(var_pw_strip);
    var_pw_strip = NULL;

    Py_XDECREF(var_list_mn);
    var_list_mn = NULL;

    Py_XDECREF(var_index);
    var_index = NULL;

    Py_XDECREF(var_selected);
    var_selected = NULL;

    Py_XDECREF(var_t_m);
    var_t_m = NULL;

    Py_XDECREF(var_iter);
    var_iter = NULL;

    Py_XDECREF(var_devs);
    var_devs = NULL;

    Py_XDECREF(var_f_list);
    var_f_list = NULL;

    Py_XDECREF(var_selected_list);
    var_selected_list = NULL;

    Py_XDECREF(var_list_sn);
    var_list_sn = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_pw_strip);
    var_pw_strip = NULL;

    Py_XDECREF(var_list_mn);
    var_list_mn = NULL;

    Py_XDECREF(var_index);
    var_index = NULL;

    Py_XDECREF(var_selected);
    var_selected = NULL;

    Py_XDECREF(var_t_m);
    var_t_m = NULL;

    Py_XDECREF(var_iter);
    var_iter = NULL;

    Py_XDECREF(var_devs);
    var_devs = NULL;

    Py_XDECREF(var_f_list);
    var_f_list = NULL;

    Py_XDECREF(var_selected_list);
    var_selected_list = NULL;

    Py_XDECREF(var_list_sn);
    var_list_sn = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto function_exception_exit;
    // End of try:

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(runop$$$function_11_run_revertKeep);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_button);
    Py_DECREF(par_button);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_button);
    Py_DECREF(par_button);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_runop$$$function_12_run_revertErase(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_button = python_pars[0];
    PyObject *par_ui = python_pars[1];
    PyObject *var_list_d = NULL;
    PyObject *var_list_remove = NULL;
    PyObject *var_selected_list = NULL;
    PyObject *var_message = NULL;
    PyObject *var_pw_strip = NULL;
    PyObject *var_list_mn = NULL;
    PyObject *var_t_m = NULL;
    PyObject *var_res = NULL;
    PyObject *var_selected = NULL;
    PyObject *var_start = NULL;
    PyObject *var_resA = NULL;
    PyObject *var_orig_len = NULL;
    PyObject *var_index = NULL;
    PyObject *var_text_a = NULL;
    PyObject *var_y = NULL;
    PyObject *var_f_list = NULL;
    PyObject *var_m_na = NULL;
    PyObject *var_messageA = NULL;
    PyObject *var_iter = NULL;
    PyObject *var_devs = NULL;
    PyObject *var_txt_q = NULL;
    PyObject *var_drive_na = NULL;
    PyObject *var_x = NULL;
    PyObject *var_list_sn = NULL;
    PyObject *tmp_for_loop_1__for_iterator = NULL;
    PyObject *tmp_for_loop_1__iter_value = NULL;
    struct Nuitka_FrameObject *frame_3743f1e053a48b225c6d8ce44010ee9f;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    PyObject *tmp_return_value = NULL;
    bool tmp_result;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    static struct Nuitka_FrameObject *cache_frame_3743f1e053a48b225c6d8ce44010ee9f = NULL;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;

    // Actual function body.
    // Tried code:
    MAKE_OR_REUSE_FRAME(cache_frame_3743f1e053a48b225c6d8ce44010ee9f, codeobj_3743f1e053a48b225c6d8ce44010ee9f, module_runop, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
    frame_3743f1e053a48b225c6d8ce44010ee9f = cache_frame_3743f1e053a48b225c6d8ce44010ee9f;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_3743f1e053a48b225c6d8ce44010ee9f);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_3743f1e053a48b225c6d8ce44010ee9f) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_instance_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_call_result_1;
        PyObject *tmp_args_element_name_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_verify);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_verify);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 236 ], 35, 0);
            exception_tb = NULL;

            exception_lineno = 943;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_1 = tmp_mvar_value_1;
        CHECK_OBJECT(par_ui);
        tmp_args_element_name_1 = par_ui;
        frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 943;
        {
            PyObject *call_args[] = {tmp_args_element_name_1};
            tmp_call_result_1 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_1, const_str_plain_licCheck, call_args);
        }

        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 943;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_1);
    }
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_called_name_1;
        PyObject *tmp_source_name_1;
        PyObject *tmp_mvar_value_2;
        PyObject *tmp_args_element_name_2;
        PyObject *tmp_args_element_name_3;
        PyObject *tmp_args_element_name_4;
        PyObject *tmp_called_instance_2;
        PyObject *tmp_source_name_2;
        tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_2 == NULL)) {
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_2 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
            exception_tb = NULL;

            exception_lineno = 944;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_1 = tmp_mvar_value_2;
        tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_sub);
        if (tmp_called_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 944;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_2 = const_str_digest_29fe972ddfd3c3ace7d88aee7a9cd77e;
        tmp_args_element_name_3 = const_str_empty;
        CHECK_OBJECT(par_ui);
        tmp_source_name_2 = par_ui;
        tmp_called_instance_2 = LOOKUP_ATTRIBUTE(tmp_source_name_2, const_str_plain_pass_entry);
        if (tmp_called_instance_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_1);

            exception_lineno = 944;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 944;
        tmp_args_element_name_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_2, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_2);
        if (tmp_args_element_name_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_1);

            exception_lineno = 944;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 944;
        {
            PyObject *call_args[] = {tmp_args_element_name_2, tmp_args_element_name_3, tmp_args_element_name_4};
            tmp_assign_source_1 = CALL_FUNCTION_WITH_ARGS3(tmp_called_name_1, call_args);
        }

        Py_DECREF(tmp_called_name_1);
        Py_DECREF(tmp_args_element_name_4);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 944;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_pw_strip == NULL);
        var_pw_strip = tmp_assign_source_1;
    }
    {
        nuitka_bool tmp_condition_result_1;
        int tmp_and_left_truth_1;
        nuitka_bool tmp_and_left_value_1;
        nuitka_bool tmp_and_right_value_1;
        PyObject *tmp_compexpr_left_1;
        PyObject *tmp_compexpr_right_1;
        PyObject *tmp_called_instance_3;
        PyObject *tmp_source_name_3;
        PyObject *tmp_operand_name_1;
        int tmp_and_left_truth_2;
        PyObject *tmp_and_left_value_2;
        PyObject *tmp_and_right_value_2;
        int tmp_or_left_truth_1;
        PyObject *tmp_or_left_value_1;
        PyObject *tmp_or_right_value_1;
        PyObject *tmp_compexpr_left_2;
        PyObject *tmp_compexpr_right_2;
        PyObject *tmp_left_name_1;
        PyObject *tmp_source_name_4;
        PyObject *tmp_right_name_1;
        int tmp_and_left_truth_3;
        PyObject *tmp_and_left_value_3;
        PyObject *tmp_and_right_value_3;
        PyObject *tmp_compexpr_left_3;
        PyObject *tmp_compexpr_right_3;
        PyObject *tmp_source_name_5;
        PyObject *tmp_compexpr_left_4;
        PyObject *tmp_compexpr_right_4;
        PyObject *tmp_source_name_6;
        PyObject *tmp_called_instance_4;
        PyObject *tmp_source_name_7;
        CHECK_OBJECT(par_ui);
        tmp_source_name_3 = par_ui;
        tmp_called_instance_3 = LOOKUP_ATTRIBUTE(tmp_source_name_3, const_str_plain_pass_entry);
        if (tmp_called_instance_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 946;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 946;
        tmp_compexpr_left_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_3, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_3);
        if (tmp_compexpr_left_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 946;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_1 = const_str_empty;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_1, tmp_compexpr_right_1);
        Py_DECREF(tmp_compexpr_left_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 946;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_1 = tmp_and_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_1 == 1) {
            goto and_right_1;
        } else {
            goto and_left_1;
        }
        and_right_1:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_4 = par_ui;
        tmp_left_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_4, const_str_plain_VERSION);
        if (tmp_left_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 946;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        tmp_right_name_1 = const_int_pos_3;
        tmp_compexpr_left_2 = BINARY_OPERATION_MOD_OBJECT_INT(tmp_left_name_1, tmp_right_name_1);
        Py_DECREF(tmp_left_name_1);
        if (tmp_compexpr_left_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 946;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_2 = const_int_0;
        tmp_or_left_value_1 = RICH_COMPARE_EQ_OBJECT_OBJECT(tmp_compexpr_left_2, tmp_compexpr_right_2);
        Py_DECREF(tmp_compexpr_left_2);
        if (tmp_or_left_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 946;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_left_truth_1 = CHECK_IF_TRUE(tmp_or_left_value_1);
        if (tmp_or_left_truth_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_or_left_value_1);

            exception_lineno = 946;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_or_left_truth_1 == 1) {
            goto or_left_1;
        } else {
            goto or_right_1;
        }
        or_right_1:;
        Py_DECREF(tmp_or_left_value_1);
        CHECK_OBJECT(par_ui);
        tmp_source_name_5 = par_ui;
        tmp_compexpr_left_3 = LOOKUP_ATTRIBUTE(tmp_source_name_5, const_str_plain_VERSION);
        if (tmp_compexpr_left_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 946;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_3 = const_int_pos_1;
        tmp_and_left_value_3 = RICH_COMPARE_EQ_OBJECT_OBJECT(tmp_compexpr_left_3, tmp_compexpr_right_3);
        Py_DECREF(tmp_compexpr_left_3);
        if (tmp_and_left_value_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 946;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_truth_3 = CHECK_IF_TRUE(tmp_and_left_value_3);
        if (tmp_and_left_truth_3 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_and_left_value_3);

            exception_lineno = 946;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_and_left_truth_3 == 1) {
            goto and_right_3;
        } else {
            goto and_left_3;
        }
        and_right_3:;
        Py_DECREF(tmp_and_left_value_3);
        CHECK_OBJECT(par_ui);
        tmp_source_name_6 = par_ui;
        tmp_compexpr_left_4 = LOOKUP_ATTRIBUTE(tmp_source_name_6, const_str_plain_PBA_VERSION);
        if (tmp_compexpr_left_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 946;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_4 = const_int_pos_1;
        tmp_and_right_value_3 = RICH_COMPARE_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_4, tmp_compexpr_right_4);
        Py_DECREF(tmp_compexpr_left_4);
        if (tmp_and_right_value_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 946;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_right_value_1 = tmp_and_right_value_3;
        goto and_end_3;
        and_left_3:;
        tmp_or_right_value_1 = tmp_and_left_value_3;
        and_end_3:;
        tmp_and_left_value_2 = tmp_or_right_value_1;
        goto or_end_1;
        or_left_1:;
        tmp_and_left_value_2 = tmp_or_left_value_1;
        or_end_1:;
        tmp_and_left_truth_2 = CHECK_IF_TRUE(tmp_and_left_value_2);
        if (tmp_and_left_truth_2 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_and_left_value_2);

            exception_lineno = 946;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_and_left_truth_2 == 1) {
            goto and_right_2;
        } else {
            goto and_left_2;
        }
        and_right_2:;
        Py_DECREF(tmp_and_left_value_2);
        CHECK_OBJECT(par_ui);
        tmp_source_name_7 = par_ui;
        tmp_called_instance_4 = LOOKUP_ATTRIBUTE(tmp_source_name_7, const_str_plain_check_pass_rd);
        if (tmp_called_instance_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 946;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 946;
        tmp_and_right_value_2 = CALL_METHOD_NO_ARGS(tmp_called_instance_4, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_4);
        if (tmp_and_right_value_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 946;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        tmp_operand_name_1 = tmp_and_right_value_2;
        goto and_end_2;
        and_left_2:;
        tmp_operand_name_1 = tmp_and_left_value_2;
        and_end_2:;
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_1);
        Py_DECREF(tmp_operand_name_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 946;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_1 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_condition_result_1 = tmp_and_right_value_1;
        goto and_end_1;
        and_left_1:;
        tmp_condition_result_1 = tmp_and_left_value_1;
        and_end_1:;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        {
            PyObject *tmp_called_instance_5;
            PyObject *tmp_call_result_2;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_5 = par_ui;
            frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 947;
            tmp_call_result_2 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_5, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_8482c425481a7392528c91276c4d7ae3_tuple, 0));

            if (tmp_call_result_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 947;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_2);
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        branch_no_1:;
    }
    {
        nuitka_bool tmp_condition_result_2;
        int tmp_and_left_truth_4;
        nuitka_bool tmp_and_left_value_4;
        nuitka_bool tmp_and_right_value_4;
        PyObject *tmp_compexpr_left_5;
        PyObject *tmp_compexpr_right_5;
        PyObject *tmp_operand_name_2;
        int tmp_and_left_truth_5;
        PyObject *tmp_and_left_value_5;
        PyObject *tmp_and_right_value_5;
        int tmp_or_left_truth_2;
        PyObject *tmp_or_left_value_2;
        PyObject *tmp_or_right_value_2;
        PyObject *tmp_compexpr_left_6;
        PyObject *tmp_compexpr_right_6;
        PyObject *tmp_left_name_2;
        PyObject *tmp_source_name_8;
        PyObject *tmp_right_name_2;
        int tmp_and_left_truth_6;
        PyObject *tmp_and_left_value_6;
        PyObject *tmp_and_right_value_6;
        PyObject *tmp_compexpr_left_7;
        PyObject *tmp_compexpr_right_7;
        PyObject *tmp_source_name_9;
        PyObject *tmp_compexpr_left_8;
        PyObject *tmp_compexpr_right_8;
        PyObject *tmp_source_name_10;
        PyObject *tmp_called_instance_6;
        PyObject *tmp_source_name_11;
        CHECK_OBJECT(var_pw_strip);
        tmp_compexpr_left_5 = var_pw_strip;
        tmp_compexpr_right_5 = const_str_empty;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_5, tmp_compexpr_right_5);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 949;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_4 = tmp_and_left_value_4 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_4 == 1) {
            goto and_right_4;
        } else {
            goto and_left_4;
        }
        and_right_4:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_8 = par_ui;
        tmp_left_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_8, const_str_plain_VERSION);
        if (tmp_left_name_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 949;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        tmp_right_name_2 = const_int_pos_3;
        tmp_compexpr_left_6 = BINARY_OPERATION_MOD_OBJECT_INT(tmp_left_name_2, tmp_right_name_2);
        Py_DECREF(tmp_left_name_2);
        if (tmp_compexpr_left_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 949;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_6 = const_int_0;
        tmp_or_left_value_2 = RICH_COMPARE_EQ_OBJECT_OBJECT(tmp_compexpr_left_6, tmp_compexpr_right_6);
        Py_DECREF(tmp_compexpr_left_6);
        if (tmp_or_left_value_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 949;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_left_truth_2 = CHECK_IF_TRUE(tmp_or_left_value_2);
        if (tmp_or_left_truth_2 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_or_left_value_2);

            exception_lineno = 949;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_or_left_truth_2 == 1) {
            goto or_left_2;
        } else {
            goto or_right_2;
        }
        or_right_2:;
        Py_DECREF(tmp_or_left_value_2);
        CHECK_OBJECT(par_ui);
        tmp_source_name_9 = par_ui;
        tmp_compexpr_left_7 = LOOKUP_ATTRIBUTE(tmp_source_name_9, const_str_plain_VERSION);
        if (tmp_compexpr_left_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 949;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_7 = const_int_pos_1;
        tmp_and_left_value_6 = RICH_COMPARE_EQ_OBJECT_OBJECT(tmp_compexpr_left_7, tmp_compexpr_right_7);
        Py_DECREF(tmp_compexpr_left_7);
        if (tmp_and_left_value_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 949;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_truth_6 = CHECK_IF_TRUE(tmp_and_left_value_6);
        if (tmp_and_left_truth_6 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_and_left_value_6);

            exception_lineno = 949;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_and_left_truth_6 == 1) {
            goto and_right_6;
        } else {
            goto and_left_6;
        }
        and_right_6:;
        Py_DECREF(tmp_and_left_value_6);
        CHECK_OBJECT(par_ui);
        tmp_source_name_10 = par_ui;
        tmp_compexpr_left_8 = LOOKUP_ATTRIBUTE(tmp_source_name_10, const_str_plain_PBA_VERSION);
        if (tmp_compexpr_left_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 949;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_8 = const_int_pos_1;
        tmp_and_right_value_6 = RICH_COMPARE_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_8, tmp_compexpr_right_8);
        Py_DECREF(tmp_compexpr_left_8);
        if (tmp_and_right_value_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 949;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_right_value_2 = tmp_and_right_value_6;
        goto and_end_6;
        and_left_6:;
        tmp_or_right_value_2 = tmp_and_left_value_6;
        and_end_6:;
        tmp_and_left_value_5 = tmp_or_right_value_2;
        goto or_end_2;
        or_left_2:;
        tmp_and_left_value_5 = tmp_or_left_value_2;
        or_end_2:;
        tmp_and_left_truth_5 = CHECK_IF_TRUE(tmp_and_left_value_5);
        if (tmp_and_left_truth_5 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_and_left_value_5);

            exception_lineno = 949;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_and_left_truth_5 == 1) {
            goto and_right_5;
        } else {
            goto and_left_5;
        }
        and_right_5:;
        Py_DECREF(tmp_and_left_value_5);
        CHECK_OBJECT(par_ui);
        tmp_source_name_11 = par_ui;
        tmp_called_instance_6 = LOOKUP_ATTRIBUTE(tmp_source_name_11, const_str_plain_check_pass_rd);
        if (tmp_called_instance_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 949;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 949;
        tmp_and_right_value_5 = CALL_METHOD_NO_ARGS(tmp_called_instance_6, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_6);
        if (tmp_and_right_value_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 949;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        tmp_operand_name_2 = tmp_and_right_value_5;
        goto and_end_5;
        and_left_5:;
        tmp_operand_name_2 = tmp_and_left_value_5;
        and_end_5:;
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_2);
        Py_DECREF(tmp_operand_name_2);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 949;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_4 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_condition_result_2 = tmp_and_right_value_4;
        goto and_end_4;
        and_left_4:;
        tmp_condition_result_2 = tmp_and_left_value_4;
        and_end_4:;
        if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
            goto branch_yes_2;
        } else {
            goto branch_no_2;
        }
        branch_yes_2:;
        {
            PyObject *tmp_called_instance_7;
            PyObject *tmp_call_result_3;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_7 = par_ui;
            frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 950;
            tmp_call_result_3 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_7, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_84ba3144e8a4c8824551fdd8d0fe5bde_tuple, 0));

            if (tmp_call_result_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 950;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_3);
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        branch_no_2:;
    }
    {
        PyObject *tmp_assign_source_2;
        PyObject *tmp_called_instance_8;
        PyObject *tmp_source_name_12;
        CHECK_OBJECT(par_ui);
        tmp_source_name_12 = par_ui;
        tmp_called_instance_8 = LOOKUP_ATTRIBUTE(tmp_source_name_12, const_str_plain_revert_agree_entry);
        if (tmp_called_instance_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 953;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 953;
        tmp_assign_source_2 = CALL_METHOD_NO_ARGS(tmp_called_instance_8, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_8);
        if (tmp_assign_source_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 953;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_text_a == NULL);
        var_text_a = tmp_assign_source_2;
    }
    {
        nuitka_bool tmp_condition_result_3;
        PyObject *tmp_compexpr_left_9;
        PyObject *tmp_compexpr_right_9;
        PyObject *tmp_called_instance_9;
        CHECK_OBJECT(var_text_a);
        tmp_called_instance_9 = var_text_a;
        frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 954;
        tmp_compexpr_left_9 = CALL_METHOD_NO_ARGS(tmp_called_instance_9, const_str_plain_lower);
        if (tmp_compexpr_left_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 954;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_9 = const_str_digest_67ec4a322e8ee2a266d3fe7940db84de;
        tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_9, tmp_compexpr_right_9);
        Py_DECREF(tmp_compexpr_left_9);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 954;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_3 == NUITKA_BOOL_TRUE) {
            goto branch_yes_3;
        } else {
            goto branch_no_3;
        }
        branch_yes_3:;
        {
            PyObject *tmp_called_instance_10;
            PyObject *tmp_call_result_4;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_10 = par_ui;
            frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 955;
            tmp_call_result_4 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_10, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_d04f7c420b9d2a0d52b039f0bf7ceb57_tuple, 0));

            if (tmp_call_result_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 955;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_4);
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        branch_no_3:;
    }
    {
        nuitka_bool tmp_condition_result_4;
        PyObject *tmp_operand_name_3;
        PyObject *tmp_source_name_13;
        CHECK_OBJECT(par_ui);
        tmp_source_name_13 = par_ui;
        tmp_operand_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_13, const_str_plain_warned);
        if (tmp_operand_name_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 957;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_3);
        Py_DECREF(tmp_operand_name_3);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 957;
            type_description_1 = "oooooooooooooooooooNooooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_4 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_4 == NUITKA_BOOL_TRUE) {
            goto branch_yes_4;
        } else {
            goto branch_no_4;
        }
        branch_yes_4:;
        {
            PyObject *tmp_assign_source_3;
            PyObject *tmp_called_name_2;
            PyObject *tmp_source_name_14;
            PyObject *tmp_mvar_value_3;
            PyObject *tmp_kw_name_1;
            PyObject *tmp_dict_key_1;
            PyObject *tmp_dict_value_1;
            PyObject *tmp_source_name_15;
            PyObject *tmp_mvar_value_4;
            PyObject *tmp_dict_key_2;
            PyObject *tmp_dict_value_2;
            PyObject *tmp_source_name_16;
            PyObject *tmp_mvar_value_5;
            PyObject *tmp_dict_key_3;
            PyObject *tmp_dict_value_3;
            tmp_mvar_value_3 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

            if (unlikely(tmp_mvar_value_3 == NULL)) {
                tmp_mvar_value_3 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
            }

            if (tmp_mvar_value_3 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                exception_tb = NULL;

                exception_lineno = 958;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }

            tmp_source_name_14 = tmp_mvar_value_3;
            tmp_called_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_14, const_str_plain_MessageDialog);
            if (tmp_called_name_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 958;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }
            tmp_mvar_value_4 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

            if (unlikely(tmp_mvar_value_4 == NULL)) {
                tmp_mvar_value_4 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
            }

            if (tmp_mvar_value_4 == NULL) {
                Py_DECREF(tmp_called_name_2);
                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                exception_tb = NULL;

                exception_lineno = 958;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }

            tmp_source_name_15 = tmp_mvar_value_4;
            tmp_dict_value_1 = LOOKUP_ATTRIBUTE(tmp_source_name_15, const_str_plain_MESSAGE_WARNING);
            if (tmp_dict_value_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_2);

                exception_lineno = 958;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }
            tmp_dict_key_1 = const_str_plain_type;
            tmp_kw_name_1 = _PyDict_NewPresized( 3 );
            tmp_res = PyDict_SetItem(tmp_kw_name_1, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            assert(!(tmp_res != 0));
            tmp_mvar_value_5 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

            if (unlikely(tmp_mvar_value_5 == NULL)) {
                tmp_mvar_value_5 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
            }

            if (tmp_mvar_value_5 == NULL) {
                Py_DECREF(tmp_called_name_2);
                Py_DECREF(tmp_kw_name_1);
                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                exception_tb = NULL;

                exception_lineno = 958;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }

            tmp_source_name_16 = tmp_mvar_value_5;
            tmp_dict_value_2 = LOOKUP_ATTRIBUTE(tmp_source_name_16, const_str_plain_BUTTONS_YES_NO);
            if (tmp_dict_value_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_2);
                Py_DECREF(tmp_kw_name_1);

                exception_lineno = 958;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }
            tmp_dict_key_2 = const_str_plain_buttons;
            tmp_res = PyDict_SetItem(tmp_kw_name_1, tmp_dict_key_2, tmp_dict_value_2);
            Py_DECREF(tmp_dict_value_2);
            assert(!(tmp_res != 0));
            CHECK_OBJECT(par_ui);
            tmp_dict_value_3 = par_ui;
            tmp_dict_key_3 = const_str_plain_parent;
            tmp_res = PyDict_SetItem(tmp_kw_name_1, tmp_dict_key_3, tmp_dict_value_3);
            assert(!(tmp_res != 0));
            frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 958;
            tmp_assign_source_3 = CALL_FUNCTION_WITH_KEYARGS(tmp_called_name_2, tmp_kw_name_1);
            Py_DECREF(tmp_called_name_2);
            Py_DECREF(tmp_kw_name_1);
            if (tmp_assign_source_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 958;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }
            assert(var_message == NULL);
            var_message = tmp_assign_source_3;
        }
        {
            PyObject *tmp_called_instance_11;
            PyObject *tmp_call_result_5;
            CHECK_OBJECT(var_message);
            tmp_called_instance_11 = var_message;
            frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 959;
            tmp_call_result_5 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_11, const_str_plain_set_markup, &PyTuple_GET_ITEM(const_tuple_str_digest_f80a028cba6b0e71511c21bea4026d12_tuple, 0));

            if (tmp_call_result_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 959;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_5);
        }
        {
            PyObject *tmp_assign_source_4;
            PyObject *tmp_called_instance_12;
            CHECK_OBJECT(var_message);
            tmp_called_instance_12 = var_message;
            frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 961;
            tmp_assign_source_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_12, const_str_plain_run);
            if (tmp_assign_source_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 961;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }
            assert(var_res == NULL);
            var_res = tmp_assign_source_4;
        }
        {
            nuitka_bool tmp_condition_result_5;
            PyObject *tmp_compexpr_left_10;
            PyObject *tmp_compexpr_right_10;
            PyObject *tmp_source_name_17;
            PyObject *tmp_mvar_value_6;
            CHECK_OBJECT(var_res);
            tmp_compexpr_left_10 = var_res;
            tmp_mvar_value_6 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

            if (unlikely(tmp_mvar_value_6 == NULL)) {
                tmp_mvar_value_6 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
            }

            if (tmp_mvar_value_6 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                exception_tb = NULL;

                exception_lineno = 962;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }

            tmp_source_name_17 = tmp_mvar_value_6;
            tmp_compexpr_right_10 = LOOKUP_ATTRIBUTE(tmp_source_name_17, const_str_plain_RESPONSE_YES);
            if (tmp_compexpr_right_10 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 962;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_10, tmp_compexpr_right_10);
            Py_DECREF(tmp_compexpr_right_10);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 962;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_5 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_5 == NUITKA_BOOL_TRUE) {
                goto branch_yes_5;
            } else {
                goto branch_no_5;
            }
            branch_yes_5:;
            {
                PyObject *tmp_called_instance_13;
                PyObject *tmp_call_result_6;
                CHECK_OBJECT(var_message);
                tmp_called_instance_13 = var_message;
                frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 963;
                tmp_call_result_6 = CALL_METHOD_NO_ARGS(tmp_called_instance_13, const_str_plain_destroy);
                if (tmp_call_result_6 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 963;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_6);
            }
            {
                PyObject *tmp_assattr_name_1;
                PyObject *tmp_assattr_target_1;
                tmp_assattr_name_1 = Py_True;
                CHECK_OBJECT(par_ui);
                tmp_assattr_target_1 = par_ui;
                tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, const_str_plain_warned, tmp_assattr_name_1);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 964;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
            }
            {
                PyObject *tmp_assattr_name_2;
                PyObject *tmp_called_instance_14;
                PyObject *tmp_source_name_18;
                PyObject *tmp_assattr_target_2;
                CHECK_OBJECT(par_ui);
                tmp_source_name_18 = par_ui;
                tmp_called_instance_14 = LOOKUP_ATTRIBUTE(tmp_source_name_18, const_str_plain_pass_entry);
                if (tmp_called_instance_14 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 965;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 965;
                tmp_assattr_name_2 = CALL_METHOD_NO_ARGS(tmp_called_instance_14, const_str_plain_get_text);
                Py_DECREF(tmp_called_instance_14);
                if (tmp_assattr_name_2 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 965;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                CHECK_OBJECT(par_ui);
                tmp_assattr_target_2 = par_ui;
                tmp_result = SET_ATTRIBUTE(tmp_assattr_target_2, const_str_plain_orig, tmp_assattr_name_2);
                Py_DECREF(tmp_assattr_name_2);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 965;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
            }
            {
                PyObject *tmp_called_instance_15;
                PyObject *tmp_called_instance_16;
                PyObject *tmp_source_name_19;
                PyObject *tmp_call_result_7;
                CHECK_OBJECT(par_ui);
                tmp_source_name_19 = par_ui;
                tmp_called_instance_16 = LOOKUP_ATTRIBUTE(tmp_source_name_19, const_str_plain_pass_entry);
                if (tmp_called_instance_16 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 966;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 966;
                tmp_called_instance_15 = CALL_METHOD_NO_ARGS(tmp_called_instance_16, const_str_plain_get_buffer);
                Py_DECREF(tmp_called_instance_16);
                if (tmp_called_instance_15 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 966;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 966;
                tmp_call_result_7 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_15, const_str_plain_delete_text, &PyTuple_GET_ITEM(const_tuple_int_0_int_neg_1_tuple, 0));

                Py_DECREF(tmp_called_instance_15);
                if (tmp_call_result_7 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 966;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_7);
            }
            {
                PyObject *tmp_called_instance_17;
                PyObject *tmp_called_instance_18;
                PyObject *tmp_source_name_20;
                PyObject *tmp_call_result_8;
                CHECK_OBJECT(par_ui);
                tmp_source_name_20 = par_ui;
                tmp_called_instance_18 = LOOKUP_ATTRIBUTE(tmp_source_name_20, const_str_plain_revert_agree_entry);
                if (tmp_called_instance_18 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 967;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 967;
                tmp_called_instance_17 = CALL_METHOD_NO_ARGS(tmp_called_instance_18, const_str_plain_get_buffer);
                Py_DECREF(tmp_called_instance_18);
                if (tmp_called_instance_17 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 967;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 967;
                tmp_call_result_8 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_17, const_str_plain_delete_text, &PyTuple_GET_ITEM(const_tuple_int_0_int_neg_1_tuple, 0));

                Py_DECREF(tmp_called_instance_17);
                if (tmp_call_result_8 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 967;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_8);
            }
            {
                PyObject *tmp_called_instance_19;
                PyObject *tmp_source_name_21;
                PyObject *tmp_call_result_9;
                CHECK_OBJECT(par_ui);
                tmp_source_name_21 = par_ui;
                tmp_called_instance_19 = LOOKUP_ATTRIBUTE(tmp_source_name_21, const_str_plain_op_instr);
                if (tmp_called_instance_19 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 968;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 968;
                tmp_call_result_9 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_19, const_str_plain_set_text, &PyTuple_GET_ITEM(const_tuple_str_digest_f0e3325ab65f304147b959c8ff1750b4_tuple, 0));

                Py_DECREF(tmp_called_instance_19);
                if (tmp_call_result_9 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 968;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_9);
            }
            goto branch_end_5;
            branch_no_5:;
            {
                PyObject *tmp_called_instance_20;
                PyObject *tmp_call_result_10;
                CHECK_OBJECT(var_message);
                tmp_called_instance_20 = var_message;
                frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 974;
                tmp_call_result_10 = CALL_METHOD_NO_ARGS(tmp_called_instance_20, const_str_plain_destroy);
                if (tmp_call_result_10 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 974;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_10);
            }
            branch_end_5:;
        }
        goto branch_end_4;
        branch_no_4:;
        {
            PyObject *tmp_assattr_name_3;
            PyObject *tmp_assattr_target_3;
            tmp_assattr_name_3 = Py_False;
            CHECK_OBJECT(par_ui);
            tmp_assattr_target_3 = par_ui;
            tmp_result = SET_ATTRIBUTE(tmp_assattr_target_3, const_str_plain_warned, tmp_assattr_name_3);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 977;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }
        }
        {
            nuitka_bool tmp_condition_result_6;
            PyObject *tmp_compexpr_left_11;
            PyObject *tmp_compexpr_right_11;
            PyObject *tmp_source_name_22;
            PyObject *tmp_called_instance_21;
            PyObject *tmp_source_name_23;
            CHECK_OBJECT(par_ui);
            tmp_source_name_22 = par_ui;
            tmp_compexpr_left_11 = LOOKUP_ATTRIBUTE(tmp_source_name_22, const_str_plain_orig);
            if (tmp_compexpr_left_11 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 978;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }
            CHECK_OBJECT(par_ui);
            tmp_source_name_23 = par_ui;
            tmp_called_instance_21 = LOOKUP_ATTRIBUTE(tmp_source_name_23, const_str_plain_pass_entry);
            if (tmp_called_instance_21 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_compexpr_left_11);

                exception_lineno = 978;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }
            frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 978;
            tmp_compexpr_right_11 = CALL_METHOD_NO_ARGS(tmp_called_instance_21, const_str_plain_get_text);
            Py_DECREF(tmp_called_instance_21);
            if (tmp_compexpr_right_11 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_compexpr_left_11);

                exception_lineno = 978;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_11, tmp_compexpr_right_11);
            Py_DECREF(tmp_compexpr_left_11);
            Py_DECREF(tmp_compexpr_right_11);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 978;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_6 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_6 == NUITKA_BOOL_TRUE) {
                goto branch_yes_6;
            } else {
                goto branch_no_6;
            }
            branch_yes_6:;
            {
                PyObject *tmp_assattr_name_4;
                PyObject *tmp_assattr_target_4;
                tmp_assattr_name_4 = const_str_empty;
                CHECK_OBJECT(par_ui);
                tmp_assattr_target_4 = par_ui;
                tmp_result = SET_ATTRIBUTE(tmp_assattr_target_4, const_str_plain_orig, tmp_assattr_name_4);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 979;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
            }
            {
                PyObject *tmp_called_instance_22;
                PyObject *tmp_call_result_11;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_22 = par_ui;
                frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 980;
                tmp_call_result_11 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_22, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_d858c557a170fb41ae34105ea1eeedaa_tuple, 0));

                if (tmp_call_result_11 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 980;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_11);
            }
            tmp_return_value = Py_None;
            Py_INCREF(tmp_return_value);
            goto frame_return_exit_1;
            branch_no_6:;
        }
        {
            PyObject *tmp_assattr_name_5;
            PyObject *tmp_assattr_target_5;
            tmp_assattr_name_5 = const_str_empty;
            CHECK_OBJECT(par_ui);
            tmp_assattr_target_5 = par_ui;
            tmp_result = SET_ATTRIBUTE(tmp_assattr_target_5, const_str_plain_orig, tmp_assattr_name_5);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 982;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }
        }
        {
            PyObject *tmp_assign_source_5;
            PyObject *tmp_called_name_3;
            PyObject *tmp_source_name_24;
            PyObject *tmp_mvar_value_7;
            PyObject *tmp_kw_name_2;
            PyObject *tmp_dict_key_4;
            PyObject *tmp_dict_value_4;
            PyObject *tmp_source_name_25;
            PyObject *tmp_mvar_value_8;
            PyObject *tmp_dict_key_5;
            PyObject *tmp_dict_value_5;
            PyObject *tmp_source_name_26;
            PyObject *tmp_mvar_value_9;
            PyObject *tmp_dict_key_6;
            PyObject *tmp_dict_value_6;
            tmp_mvar_value_7 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

            if (unlikely(tmp_mvar_value_7 == NULL)) {
                tmp_mvar_value_7 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
            }

            if (tmp_mvar_value_7 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                exception_tb = NULL;

                exception_lineno = 983;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }

            tmp_source_name_24 = tmp_mvar_value_7;
            tmp_called_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_24, const_str_plain_MessageDialog);
            if (tmp_called_name_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 983;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }
            tmp_mvar_value_8 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

            if (unlikely(tmp_mvar_value_8 == NULL)) {
                tmp_mvar_value_8 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
            }

            if (tmp_mvar_value_8 == NULL) {
                Py_DECREF(tmp_called_name_3);
                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                exception_tb = NULL;

                exception_lineno = 983;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }

            tmp_source_name_25 = tmp_mvar_value_8;
            tmp_dict_value_4 = LOOKUP_ATTRIBUTE(tmp_source_name_25, const_str_plain_MESSAGE_WARNING);
            if (tmp_dict_value_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_3);

                exception_lineno = 983;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }
            tmp_dict_key_4 = const_str_plain_type;
            tmp_kw_name_2 = _PyDict_NewPresized( 3 );
            tmp_res = PyDict_SetItem(tmp_kw_name_2, tmp_dict_key_4, tmp_dict_value_4);
            Py_DECREF(tmp_dict_value_4);
            assert(!(tmp_res != 0));
            tmp_mvar_value_9 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

            if (unlikely(tmp_mvar_value_9 == NULL)) {
                tmp_mvar_value_9 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
            }

            if (tmp_mvar_value_9 == NULL) {
                Py_DECREF(tmp_called_name_3);
                Py_DECREF(tmp_kw_name_2);
                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                exception_tb = NULL;

                exception_lineno = 983;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }

            tmp_source_name_26 = tmp_mvar_value_9;
            tmp_dict_value_5 = LOOKUP_ATTRIBUTE(tmp_source_name_26, const_str_plain_BUTTONS_YES_NO);
            if (tmp_dict_value_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_3);
                Py_DECREF(tmp_kw_name_2);

                exception_lineno = 983;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }
            tmp_dict_key_5 = const_str_plain_buttons;
            tmp_res = PyDict_SetItem(tmp_kw_name_2, tmp_dict_key_5, tmp_dict_value_5);
            Py_DECREF(tmp_dict_value_5);
            assert(!(tmp_res != 0));
            CHECK_OBJECT(par_ui);
            tmp_dict_value_6 = par_ui;
            tmp_dict_key_6 = const_str_plain_parent;
            tmp_res = PyDict_SetItem(tmp_kw_name_2, tmp_dict_key_6, tmp_dict_value_6);
            assert(!(tmp_res != 0));
            frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 983;
            tmp_assign_source_5 = CALL_FUNCTION_WITH_KEYARGS(tmp_called_name_3, tmp_kw_name_2);
            Py_DECREF(tmp_called_name_3);
            Py_DECREF(tmp_kw_name_2);
            if (tmp_assign_source_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 983;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }
            assert(var_messageA == NULL);
            var_messageA = tmp_assign_source_5;
        }
        {
            PyObject *tmp_called_instance_23;
            PyObject *tmp_call_result_12;
            CHECK_OBJECT(var_messageA);
            tmp_called_instance_23 = var_messageA;
            frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 984;
            tmp_call_result_12 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_23, const_str_plain_set_markup, &PyTuple_GET_ITEM(const_tuple_str_digest_5ab5b3125e01181891d34e3d2dcc2424_tuple, 0));

            if (tmp_call_result_12 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 984;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_12);
        }
        {
            PyObject *tmp_assign_source_6;
            PyObject *tmp_called_instance_24;
            CHECK_OBJECT(var_messageA);
            tmp_called_instance_24 = var_messageA;
            frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 986;
            tmp_assign_source_6 = CALL_METHOD_NO_ARGS(tmp_called_instance_24, const_str_plain_run);
            if (tmp_assign_source_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 986;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }
            assert(var_resA == NULL);
            var_resA = tmp_assign_source_6;
        }
        {
            nuitka_bool tmp_condition_result_7;
            PyObject *tmp_compexpr_left_12;
            PyObject *tmp_compexpr_right_12;
            PyObject *tmp_source_name_27;
            PyObject *tmp_mvar_value_10;
            CHECK_OBJECT(var_resA);
            tmp_compexpr_left_12 = var_resA;
            tmp_mvar_value_10 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

            if (unlikely(tmp_mvar_value_10 == NULL)) {
                tmp_mvar_value_10 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
            }

            if (tmp_mvar_value_10 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                exception_tb = NULL;

                exception_lineno = 988;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }

            tmp_source_name_27 = tmp_mvar_value_10;
            tmp_compexpr_right_12 = LOOKUP_ATTRIBUTE(tmp_source_name_27, const_str_plain_RESPONSE_YES);
            if (tmp_compexpr_right_12 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 988;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_12, tmp_compexpr_right_12);
            Py_DECREF(tmp_compexpr_right_12);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 988;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_7 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_7 == NUITKA_BOOL_TRUE) {
                goto branch_yes_7;
            } else {
                goto branch_no_7;
            }
            branch_yes_7:;
            {
                PyObject *tmp_called_instance_25;
                PyObject *tmp_call_result_13;
                CHECK_OBJECT(var_messageA);
                tmp_called_instance_25 = var_messageA;
                frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 989;
                tmp_call_result_13 = CALL_METHOD_NO_ARGS(tmp_called_instance_25, const_str_plain_destroy);
                if (tmp_call_result_13 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 989;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_13);
            }
            {
                PyObject *tmp_assign_source_7;
                tmp_assign_source_7 = PyList_New(0);
                assert(var_devs == NULL);
                var_devs = tmp_assign_source_7;
            }
            {
                PyObject *tmp_assign_source_8;
                tmp_assign_source_8 = PyList_New(0);
                assert(var_list_mn == NULL);
                var_list_mn = tmp_assign_source_8;
            }
            {
                PyObject *tmp_assign_source_9;
                tmp_assign_source_9 = PyList_New(0);
                assert(var_list_sn == NULL);
                var_list_sn = tmp_assign_source_9;
            }
            {
                nuitka_bool tmp_condition_result_8;
                PyObject *tmp_called_instance_26;
                PyObject *tmp_source_name_28;
                PyObject *tmp_call_result_14;
                int tmp_truth_name_1;
                CHECK_OBJECT(par_ui);
                tmp_source_name_28 = par_ui;
                tmp_called_instance_26 = LOOKUP_ATTRIBUTE(tmp_source_name_28, const_str_plain_toggleSingle_radio);
                if (tmp_called_instance_26 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 996;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 996;
                tmp_call_result_14 = CALL_METHOD_NO_ARGS(tmp_called_instance_26, const_str_plain_get_active);
                Py_DECREF(tmp_called_instance_26);
                if (tmp_call_result_14 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 996;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_truth_name_1 = CHECK_IF_TRUE(tmp_call_result_14);
                if (tmp_truth_name_1 == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_call_result_14);

                    exception_lineno = 996;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_condition_result_8 = tmp_truth_name_1 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                Py_DECREF(tmp_call_result_14);
                if (tmp_condition_result_8 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_8;
                } else {
                    goto branch_no_8;
                }
                branch_yes_8:;
                {
                    PyObject *tmp_assign_source_10;
                    PyObject *tmp_called_instance_27;
                    PyObject *tmp_source_name_29;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_29 = par_ui;
                    tmp_called_instance_27 = LOOKUP_ATTRIBUTE(tmp_source_name_29, const_str_plain_dev_select);
                    if (tmp_called_instance_27 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 997;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 997;
                    tmp_assign_source_10 = CALL_METHOD_NO_ARGS(tmp_called_instance_27, const_str_plain_get_active);
                    Py_DECREF(tmp_called_instance_27);
                    if (tmp_assign_source_10 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 997;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    assert(var_index == NULL);
                    var_index = tmp_assign_source_10;
                }
                {
                    PyObject *tmp_assign_source_11;
                    PyObject *tmp_list_element_1;
                    CHECK_OBJECT(var_index);
                    tmp_list_element_1 = var_index;
                    tmp_assign_source_11 = PyList_New(1);
                    Py_INCREF(tmp_list_element_1);
                    PyList_SET_ITEM(tmp_assign_source_11, 0, tmp_list_element_1);
                    assert(var_selected_list == NULL);
                    var_selected_list = tmp_assign_source_11;
                }
                {
                    PyObject *tmp_assign_source_12;
                    PyObject *tmp_list_element_2;
                    PyObject *tmp_subscribed_name_1;
                    PyObject *tmp_source_name_30;
                    PyObject *tmp_subscript_name_1;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_30 = par_ui;
                    tmp_subscribed_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_30, const_str_plain_devs_list);
                    if (tmp_subscribed_name_1 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 999;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(var_index);
                    tmp_subscript_name_1 = var_index;
                    tmp_list_element_2 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_1, tmp_subscript_name_1);
                    Py_DECREF(tmp_subscribed_name_1);
                    if (tmp_list_element_2 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 999;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_assign_source_12 = PyList_New(1);
                    PyList_SET_ITEM(tmp_assign_source_12, 0, tmp_list_element_2);
                    {
                        PyObject *old = var_devs;
                        assert(old != NULL);
                        var_devs = tmp_assign_source_12;
                        Py_DECREF(old);
                    }

                }
                {
                    PyObject *tmp_assign_source_13;
                    PyObject *tmp_list_element_3;
                    PyObject *tmp_subscribed_name_2;
                    PyObject *tmp_source_name_31;
                    PyObject *tmp_subscript_name_2;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_31 = par_ui;
                    tmp_subscribed_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_31, const_str_plain_vendor_list);
                    if (tmp_subscribed_name_2 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1000;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(var_index);
                    tmp_subscript_name_2 = var_index;
                    tmp_list_element_3 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_2, tmp_subscript_name_2);
                    Py_DECREF(tmp_subscribed_name_2);
                    if (tmp_list_element_3 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1000;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_assign_source_13 = PyList_New(1);
                    PyList_SET_ITEM(tmp_assign_source_13, 0, tmp_list_element_3);
                    {
                        PyObject *old = var_list_mn;
                        assert(old != NULL);
                        var_list_mn = tmp_assign_source_13;
                        Py_DECREF(old);
                    }

                }
                {
                    PyObject *tmp_assign_source_14;
                    PyObject *tmp_list_element_4;
                    PyObject *tmp_subscribed_name_3;
                    PyObject *tmp_source_name_32;
                    PyObject *tmp_subscript_name_3;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_32 = par_ui;
                    tmp_subscribed_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_32, const_str_plain_sn_list);
                    if (tmp_subscribed_name_3 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1001;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(var_index);
                    tmp_subscript_name_3 = var_index;
                    tmp_list_element_4 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_3, tmp_subscript_name_3);
                    Py_DECREF(tmp_subscribed_name_3);
                    if (tmp_list_element_4 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1001;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_assign_source_14 = PyList_New(1);
                    PyList_SET_ITEM(tmp_assign_source_14, 0, tmp_list_element_4);
                    {
                        PyObject *old = var_list_sn;
                        assert(old != NULL);
                        var_list_sn = tmp_assign_source_14;
                        Py_DECREF(old);
                    }

                }
                goto branch_end_8;
                branch_no_8:;
                {
                    PyObject *tmp_assign_source_15;
                    tmp_assign_source_15 = const_int_0;
                    assert(var_index == NULL);
                    Py_INCREF(tmp_assign_source_15);
                    var_index = tmp_assign_source_15;
                }
                {
                    PyObject *tmp_assign_source_16;
                    tmp_assign_source_16 = PyList_New(0);
                    assert(var_selected_list == NULL);
                    var_selected_list = tmp_assign_source_16;
                }
                {
                    PyObject *tmp_assign_source_17;
                    PyObject *tmp_called_instance_28;
                    PyObject *tmp_source_name_33;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_33 = par_ui;
                    tmp_called_instance_28 = LOOKUP_ATTRIBUTE(tmp_source_name_33, const_str_plain_liststore);
                    if (tmp_called_instance_28 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1005;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1005;
                    tmp_assign_source_17 = CALL_METHOD_NO_ARGS(tmp_called_instance_28, const_str_plain_get_iter_first);
                    Py_DECREF(tmp_called_instance_28);
                    if (tmp_assign_source_17 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1005;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    assert(var_iter == NULL);
                    var_iter = tmp_assign_source_17;
                }
                loop_start_1:;
                {
                    nuitka_bool tmp_condition_result_9;
                    PyObject *tmp_operand_name_4;
                    PyObject *tmp_compexpr_left_13;
                    PyObject *tmp_compexpr_right_13;
                    CHECK_OBJECT(var_iter);
                    tmp_compexpr_left_13 = var_iter;
                    tmp_compexpr_right_13 = Py_None;
                    tmp_operand_name_4 = RICH_COMPARE_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_13, tmp_compexpr_right_13);
                    if (tmp_operand_name_4 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1006;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_res = CHECK_IF_TRUE(tmp_operand_name_4);
                    Py_DECREF(tmp_operand_name_4);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1006;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_condition_result_9 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_9 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_9;
                    } else {
                        goto branch_no_9;
                    }
                    branch_yes_9:;
                    goto loop_end_1;
                    branch_no_9:;
                }
                {
                    PyObject *tmp_assign_source_18;
                    PyObject *tmp_called_instance_29;
                    PyObject *tmp_source_name_34;
                    PyObject *tmp_args_element_name_5;
                    PyObject *tmp_args_element_name_6;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_34 = par_ui;
                    tmp_called_instance_29 = LOOKUP_ATTRIBUTE(tmp_source_name_34, const_str_plain_liststore);
                    if (tmp_called_instance_29 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1007;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(var_iter);
                    tmp_args_element_name_5 = var_iter;
                    tmp_args_element_name_6 = const_int_0;
                    frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1007;
                    {
                        PyObject *call_args[] = {tmp_args_element_name_5, tmp_args_element_name_6};
                        tmp_assign_source_18 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_29, const_str_plain_get_value, call_args);
                    }

                    Py_DECREF(tmp_called_instance_29);
                    if (tmp_assign_source_18 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1007;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    {
                        PyObject *old = var_selected;
                        var_selected = tmp_assign_source_18;
                        Py_XDECREF(old);
                    }

                }
                {
                    nuitka_bool tmp_condition_result_10;
                    int tmp_truth_name_2;
                    CHECK_OBJECT(var_selected);
                    tmp_truth_name_2 = CHECK_IF_TRUE(var_selected);
                    if (tmp_truth_name_2 == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1008;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_condition_result_10 = tmp_truth_name_2 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_10 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_10;
                    } else {
                        goto branch_no_10;
                    }
                    branch_yes_10:;
                    {
                        PyObject *tmp_called_instance_30;
                        PyObject *tmp_call_result_15;
                        PyObject *tmp_args_element_name_7;
                        CHECK_OBJECT(var_selected_list);
                        tmp_called_instance_30 = var_selected_list;
                        CHECK_OBJECT(var_index);
                        tmp_args_element_name_7 = var_index;
                        frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1009;
                        {
                            PyObject *call_args[] = {tmp_args_element_name_7};
                            tmp_call_result_15 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_30, const_str_plain_append, call_args);
                        }

                        if (tmp_call_result_15 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1009;
                            type_description_1 = "oooooooooooooooooooNooooooo";
                            goto frame_exception_exit_1;
                        }
                        Py_DECREF(tmp_call_result_15);
                    }
                    {
                        PyObject *tmp_called_name_4;
                        PyObject *tmp_source_name_35;
                        PyObject *tmp_call_result_16;
                        PyObject *tmp_args_element_name_8;
                        PyObject *tmp_subscribed_name_4;
                        PyObject *tmp_source_name_36;
                        PyObject *tmp_subscript_name_4;
                        CHECK_OBJECT(var_devs);
                        tmp_source_name_35 = var_devs;
                        tmp_called_name_4 = LOOKUP_ATTRIBUTE(tmp_source_name_35, const_str_plain_append);
                        if (tmp_called_name_4 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1010;
                            type_description_1 = "oooooooooooooooooooNooooooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_36 = par_ui;
                        tmp_subscribed_name_4 = LOOKUP_ATTRIBUTE(tmp_source_name_36, const_str_plain_devs_list);
                        if (tmp_subscribed_name_4 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_4);

                            exception_lineno = 1010;
                            type_description_1 = "oooooooooooooooooooNooooooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(var_index);
                        tmp_subscript_name_4 = var_index;
                        tmp_args_element_name_8 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_4, tmp_subscript_name_4);
                        Py_DECREF(tmp_subscribed_name_4);
                        if (tmp_args_element_name_8 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_4);

                            exception_lineno = 1010;
                            type_description_1 = "oooooooooooooooooooNooooooo";
                            goto frame_exception_exit_1;
                        }
                        frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1010;
                        tmp_call_result_16 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_4, tmp_args_element_name_8);
                        Py_DECREF(tmp_called_name_4);
                        Py_DECREF(tmp_args_element_name_8);
                        if (tmp_call_result_16 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1010;
                            type_description_1 = "oooooooooooooooooooNooooooo";
                            goto frame_exception_exit_1;
                        }
                        Py_DECREF(tmp_call_result_16);
                    }
                    {
                        PyObject *tmp_called_name_5;
                        PyObject *tmp_source_name_37;
                        PyObject *tmp_call_result_17;
                        PyObject *tmp_args_element_name_9;
                        PyObject *tmp_subscribed_name_5;
                        PyObject *tmp_source_name_38;
                        PyObject *tmp_subscript_name_5;
                        CHECK_OBJECT(var_list_mn);
                        tmp_source_name_37 = var_list_mn;
                        tmp_called_name_5 = LOOKUP_ATTRIBUTE(tmp_source_name_37, const_str_plain_append);
                        if (tmp_called_name_5 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1011;
                            type_description_1 = "oooooooooooooooooooNooooooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_38 = par_ui;
                        tmp_subscribed_name_5 = LOOKUP_ATTRIBUTE(tmp_source_name_38, const_str_plain_vendor_list);
                        if (tmp_subscribed_name_5 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_5);

                            exception_lineno = 1011;
                            type_description_1 = "oooooooooooooooooooNooooooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(var_index);
                        tmp_subscript_name_5 = var_index;
                        tmp_args_element_name_9 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_5, tmp_subscript_name_5);
                        Py_DECREF(tmp_subscribed_name_5);
                        if (tmp_args_element_name_9 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_5);

                            exception_lineno = 1011;
                            type_description_1 = "oooooooooooooooooooNooooooo";
                            goto frame_exception_exit_1;
                        }
                        frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1011;
                        tmp_call_result_17 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_5, tmp_args_element_name_9);
                        Py_DECREF(tmp_called_name_5);
                        Py_DECREF(tmp_args_element_name_9);
                        if (tmp_call_result_17 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1011;
                            type_description_1 = "oooooooooooooooooooNooooooo";
                            goto frame_exception_exit_1;
                        }
                        Py_DECREF(tmp_call_result_17);
                    }
                    {
                        PyObject *tmp_called_name_6;
                        PyObject *tmp_source_name_39;
                        PyObject *tmp_call_result_18;
                        PyObject *tmp_args_element_name_10;
                        PyObject *tmp_subscribed_name_6;
                        PyObject *tmp_source_name_40;
                        PyObject *tmp_subscript_name_6;
                        CHECK_OBJECT(var_list_sn);
                        tmp_source_name_39 = var_list_sn;
                        tmp_called_name_6 = LOOKUP_ATTRIBUTE(tmp_source_name_39, const_str_plain_append);
                        if (tmp_called_name_6 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1012;
                            type_description_1 = "oooooooooooooooooooNooooooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_40 = par_ui;
                        tmp_subscribed_name_6 = LOOKUP_ATTRIBUTE(tmp_source_name_40, const_str_plain_sn_list);
                        if (tmp_subscribed_name_6 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_6);

                            exception_lineno = 1012;
                            type_description_1 = "oooooooooooooooooooNooooooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(var_index);
                        tmp_subscript_name_6 = var_index;
                        tmp_args_element_name_10 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_6, tmp_subscript_name_6);
                        Py_DECREF(tmp_subscribed_name_6);
                        if (tmp_args_element_name_10 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_6);

                            exception_lineno = 1012;
                            type_description_1 = "oooooooooooooooooooNooooooo";
                            goto frame_exception_exit_1;
                        }
                        frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1012;
                        tmp_call_result_18 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_6, tmp_args_element_name_10);
                        Py_DECREF(tmp_called_name_6);
                        Py_DECREF(tmp_args_element_name_10);
                        if (tmp_call_result_18 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1012;
                            type_description_1 = "oooooooooooooooooooNooooooo";
                            goto frame_exception_exit_1;
                        }
                        Py_DECREF(tmp_call_result_18);
                    }
                    branch_no_10:;
                }
                {
                    PyObject *tmp_assign_source_19;
                    PyObject *tmp_called_instance_31;
                    PyObject *tmp_source_name_41;
                    PyObject *tmp_args_element_name_11;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_41 = par_ui;
                    tmp_called_instance_31 = LOOKUP_ATTRIBUTE(tmp_source_name_41, const_str_plain_liststore);
                    if (tmp_called_instance_31 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1013;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(var_iter);
                    tmp_args_element_name_11 = var_iter;
                    frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1013;
                    {
                        PyObject *call_args[] = {tmp_args_element_name_11};
                        tmp_assign_source_19 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_31, const_str_plain_iter_next, call_args);
                    }

                    Py_DECREF(tmp_called_instance_31);
                    if (tmp_assign_source_19 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1013;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    {
                        PyObject *old = var_iter;
                        assert(old != NULL);
                        var_iter = tmp_assign_source_19;
                        Py_DECREF(old);
                    }

                }
                {
                    PyObject *tmp_assign_source_20;
                    PyObject *tmp_left_name_3;
                    PyObject *tmp_right_name_3;
                    CHECK_OBJECT(var_index);
                    tmp_left_name_3 = var_index;
                    tmp_right_name_3 = const_int_pos_1;
                    tmp_assign_source_20 = BINARY_OPERATION_ADD_OBJECT_INT(tmp_left_name_3, tmp_right_name_3);
                    assert(!(tmp_assign_source_20 == NULL));
                    {
                        PyObject *old = var_index;
                        assert(old != NULL);
                        var_index = tmp_assign_source_20;
                        Py_DECREF(old);
                    }

                }
                if (CONSIDER_THREADING() == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1006;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                goto loop_start_1;
                loop_end_1:;
                {
                    nuitka_bool tmp_condition_result_11;
                    PyObject *tmp_compexpr_left_14;
                    PyObject *tmp_compexpr_right_14;
                    PyObject *tmp_len_arg_1;
                    CHECK_OBJECT(var_selected_list);
                    tmp_len_arg_1 = var_selected_list;
                    tmp_compexpr_left_14 = BUILTIN_LEN(tmp_len_arg_1);
                    assert(!(tmp_compexpr_left_14 == NULL));
                    tmp_compexpr_right_14 = const_int_0;
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_14, tmp_compexpr_right_14);
                    Py_DECREF(tmp_compexpr_left_14);
                    assert(!(tmp_res == -1));
                    tmp_condition_result_11 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_11 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_11;
                    } else {
                        goto branch_no_11;
                    }
                    branch_yes_11:;
                    {
                        PyObject *tmp_called_instance_32;
                        PyObject *tmp_call_result_19;
                        CHECK_OBJECT(par_ui);
                        tmp_called_instance_32 = par_ui;
                        frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1016;
                        tmp_call_result_19 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_32, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_1115ebe932d1b941d1eed30a47fde5a6_tuple, 0));

                        if (tmp_call_result_19 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1016;
                            type_description_1 = "oooooooooooooooooooNooooooo";
                            goto frame_exception_exit_1;
                        }
                        Py_DECREF(tmp_call_result_19);
                    }
                    tmp_return_value = Py_None;
                    Py_INCREF(tmp_return_value);
                    goto frame_return_exit_1;
                    branch_no_11:;
                }
                branch_end_8:;
            }
            {
                PyObject *tmp_assign_source_21;
                tmp_assign_source_21 = PyList_New(0);
                assert(var_list_remove == NULL);
                var_list_remove = tmp_assign_source_21;
            }
            {
                PyObject *tmp_assign_source_22;
                PyObject *tmp_len_arg_2;
                CHECK_OBJECT(var_selected_list);
                tmp_len_arg_2 = var_selected_list;
                tmp_assign_source_22 = BUILTIN_LEN(tmp_len_arg_2);
                assert(!(tmp_assign_source_22 == NULL));
                assert(var_orig_len == NULL);
                var_orig_len = tmp_assign_source_22;
            }
            {
                PyObject *tmp_assign_source_23;
                PyObject *tmp_iter_arg_1;
                PyObject *tmp_range_arg_1;
                PyObject *tmp_len_arg_3;
                CHECK_OBJECT(var_selected_list);
                tmp_len_arg_3 = var_selected_list;
                tmp_range_arg_1 = BUILTIN_LEN(tmp_len_arg_3);
                assert(!(tmp_range_arg_1 == NULL));
                tmp_iter_arg_1 = BUILTIN_RANGE(tmp_range_arg_1);
                Py_DECREF(tmp_range_arg_1);
                if (tmp_iter_arg_1 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1021;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_assign_source_23 = MAKE_ITERATOR(tmp_iter_arg_1);
                Py_DECREF(tmp_iter_arg_1);
                if (tmp_assign_source_23 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1021;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                assert(tmp_for_loop_1__for_iterator == NULL);
                tmp_for_loop_1__for_iterator = tmp_assign_source_23;
            }
            // Tried code:
            loop_start_2:;
            {
                PyObject *tmp_next_source_1;
                PyObject *tmp_assign_source_24;
                CHECK_OBJECT(tmp_for_loop_1__for_iterator);
                tmp_next_source_1 = tmp_for_loop_1__for_iterator;
                tmp_assign_source_24 = ITERATOR_NEXT(tmp_next_source_1);
                if (tmp_assign_source_24 == NULL) {
                    if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                        goto loop_end_2;
                    } else {

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        exception_lineno = 1021;
                        goto try_except_handler_2;
                    }
                }

                {
                    PyObject *old = tmp_for_loop_1__iter_value;
                    tmp_for_loop_1__iter_value = tmp_assign_source_24;
                    Py_XDECREF(old);
                }

            }
            {
                PyObject *tmp_assign_source_25;
                CHECK_OBJECT(tmp_for_loop_1__iter_value);
                tmp_assign_source_25 = tmp_for_loop_1__iter_value;
                {
                    PyObject *old = var_x;
                    var_x = tmp_assign_source_25;
                    Py_INCREF(var_x);
                    Py_XDECREF(old);
                }

            }
            {
                PyObject *tmp_assign_source_26;
                tmp_assign_source_26 = const_str_digest_faec9bdfd28e293a6c6ca23affd7d404;
                {
                    PyObject *old = var_drive_na;
                    var_drive_na = tmp_assign_source_26;
                    Py_INCREF(var_drive_na);
                    Py_XDECREF(old);
                }

            }
            {
                PyObject *tmp_called_name_7;
                PyObject *tmp_mvar_value_11;
                PyObject *tmp_call_result_20;
                PyObject *tmp_args_element_name_12;
                PyObject *tmp_subscribed_name_7;
                PyObject *tmp_subscript_name_7;
                tmp_mvar_value_11 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_prelock);

                if (unlikely(tmp_mvar_value_11 == NULL)) {
                    tmp_mvar_value_11 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_prelock);
                }

                if (tmp_mvar_value_11 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 5022 ], 36, 0);
                    exception_tb = NULL;

                    exception_lineno = 1023;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto try_except_handler_2;
                }

                tmp_called_name_7 = tmp_mvar_value_11;
                CHECK_OBJECT(var_selected_list);
                tmp_subscribed_name_7 = var_selected_list;
                CHECK_OBJECT(var_x);
                tmp_subscript_name_7 = var_x;
                tmp_args_element_name_12 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_7, tmp_subscript_name_7);
                if (tmp_args_element_name_12 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1023;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto try_except_handler_2;
                }
                frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1023;
                tmp_call_result_20 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_7, tmp_args_element_name_12);
                Py_DECREF(tmp_args_element_name_12);
                if (tmp_call_result_20 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1023;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto try_except_handler_2;
                }
                Py_DECREF(tmp_call_result_20);
            }
            {
                PyObject *tmp_assign_source_27;
                PyObject *tmp_called_instance_33;
                PyObject *tmp_called_name_8;
                PyObject *tmp_source_name_42;
                PyObject *tmp_mvar_value_12;
                PyObject *tmp_args_element_name_13;
                PyObject *tmp_left_name_4;
                PyObject *tmp_left_name_5;
                PyObject *tmp_source_name_43;
                PyObject *tmp_right_name_4;
                PyObject *tmp_right_name_5;
                PyObject *tmp_subscribed_name_8;
                PyObject *tmp_source_name_44;
                PyObject *tmp_subscript_name_8;
                PyObject *tmp_subscribed_name_9;
                PyObject *tmp_subscript_name_9;
                tmp_mvar_value_12 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

                if (unlikely(tmp_mvar_value_12 == NULL)) {
                    tmp_mvar_value_12 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                }

                if (tmp_mvar_value_12 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                    exception_tb = NULL;

                    exception_lineno = 1024;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto try_except_handler_2;
                }

                tmp_source_name_42 = tmp_mvar_value_12;
                tmp_called_name_8 = LOOKUP_ATTRIBUTE(tmp_source_name_42, const_str_plain_popen);
                if (tmp_called_name_8 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1024;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto try_except_handler_2;
                }
                CHECK_OBJECT(par_ui);
                tmp_source_name_43 = par_ui;
                tmp_left_name_5 = LOOKUP_ATTRIBUTE(tmp_source_name_43, const_str_plain_prefix);
                if (tmp_left_name_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_8);

                    exception_lineno = 1024;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto try_except_handler_2;
                }
                tmp_right_name_4 = const_str_digest_be268c849f1c37b6177304e3023d15bb;
                tmp_left_name_4 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_5, tmp_right_name_4);
                Py_DECREF(tmp_left_name_5);
                if (tmp_left_name_4 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_8);

                    exception_lineno = 1024;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto try_except_handler_2;
                }
                CHECK_OBJECT(par_ui);
                tmp_source_name_44 = par_ui;
                tmp_subscribed_name_8 = LOOKUP_ATTRIBUTE(tmp_source_name_44, const_str_plain_devs_list);
                if (tmp_subscribed_name_8 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_8);
                    Py_DECREF(tmp_left_name_4);

                    exception_lineno = 1024;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto try_except_handler_2;
                }
                CHECK_OBJECT(var_selected_list);
                tmp_subscribed_name_9 = var_selected_list;
                CHECK_OBJECT(var_x);
                tmp_subscript_name_9 = var_x;
                tmp_subscript_name_8 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_9, tmp_subscript_name_9);
                if (tmp_subscript_name_8 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_8);
                    Py_DECREF(tmp_left_name_4);
                    Py_DECREF(tmp_subscribed_name_8);

                    exception_lineno = 1024;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto try_except_handler_2;
                }
                tmp_right_name_5 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_8, tmp_subscript_name_8);
                Py_DECREF(tmp_subscribed_name_8);
                Py_DECREF(tmp_subscript_name_8);
                if (tmp_right_name_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_8);
                    Py_DECREF(tmp_left_name_4);

                    exception_lineno = 1024;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto try_except_handler_2;
                }
                tmp_args_element_name_13 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_4, tmp_right_name_5);
                Py_DECREF(tmp_left_name_4);
                Py_DECREF(tmp_right_name_5);
                if (tmp_args_element_name_13 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_8);

                    exception_lineno = 1024;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto try_except_handler_2;
                }
                frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1024;
                tmp_called_instance_33 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_8, tmp_args_element_name_13);
                Py_DECREF(tmp_called_name_8);
                Py_DECREF(tmp_args_element_name_13);
                if (tmp_called_instance_33 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1024;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto try_except_handler_2;
                }
                frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1024;
                tmp_assign_source_27 = CALL_METHOD_NO_ARGS(tmp_called_instance_33, const_str_plain_read);
                Py_DECREF(tmp_called_instance_33);
                if (tmp_assign_source_27 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1024;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto try_except_handler_2;
                }
                {
                    PyObject *old = var_txt_q;
                    var_txt_q = tmp_assign_source_27;
                    Py_XDECREF(old);
                }

            }
            {
                PyObject *tmp_called_name_9;
                PyObject *tmp_mvar_value_13;
                PyObject *tmp_call_result_21;
                PyObject *tmp_args_element_name_14;
                PyObject *tmp_subscribed_name_10;
                PyObject *tmp_subscript_name_10;
                tmp_mvar_value_13 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_postlock);

                if (unlikely(tmp_mvar_value_13 == NULL)) {
                    tmp_mvar_value_13 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_postlock);
                }

                if (tmp_mvar_value_13 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 5058 ], 37, 0);
                    exception_tb = NULL;

                    exception_lineno = 1025;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto try_except_handler_2;
                }

                tmp_called_name_9 = tmp_mvar_value_13;
                CHECK_OBJECT(var_selected_list);
                tmp_subscribed_name_10 = var_selected_list;
                CHECK_OBJECT(var_x);
                tmp_subscript_name_10 = var_x;
                tmp_args_element_name_14 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_10, tmp_subscript_name_10);
                if (tmp_args_element_name_14 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1025;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto try_except_handler_2;
                }
                frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1025;
                tmp_call_result_21 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_9, tmp_args_element_name_14);
                Py_DECREF(tmp_args_element_name_14);
                if (tmp_call_result_21 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1025;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto try_except_handler_2;
                }
                Py_DECREF(tmp_call_result_21);
            }
            {
                PyObject *tmp_assign_source_28;
                PyObject *tmp_called_instance_34;
                PyObject *tmp_mvar_value_14;
                PyObject *tmp_args_element_name_15;
                PyObject *tmp_args_element_name_16;
                tmp_mvar_value_14 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

                if (unlikely(tmp_mvar_value_14 == NULL)) {
                    tmp_mvar_value_14 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
                }

                if (tmp_mvar_value_14 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
                    exception_tb = NULL;

                    exception_lineno = 1026;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto try_except_handler_2;
                }

                tmp_called_instance_34 = tmp_mvar_value_14;
                CHECK_OBJECT(var_drive_na);
                tmp_args_element_name_15 = var_drive_na;
                CHECK_OBJECT(var_txt_q);
                tmp_args_element_name_16 = var_txt_q;
                frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1026;
                {
                    PyObject *call_args[] = {tmp_args_element_name_15, tmp_args_element_name_16};
                    tmp_assign_source_28 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_34, const_str_plain_search, call_args);
                }

                if (tmp_assign_source_28 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1026;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto try_except_handler_2;
                }
                {
                    PyObject *old = var_m_na;
                    var_m_na = tmp_assign_source_28;
                    Py_XDECREF(old);
                }

            }
            {
                nuitka_bool tmp_condition_result_12;
                int tmp_truth_name_3;
                CHECK_OBJECT(var_m_na);
                tmp_truth_name_3 = CHECK_IF_TRUE(var_m_na);
                if (tmp_truth_name_3 == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1027;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto try_except_handler_2;
                }
                tmp_condition_result_12 = tmp_truth_name_3 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_12 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_12;
                } else {
                    goto branch_no_12;
                }
                branch_yes_12:;
                {
                    PyObject *tmp_called_instance_35;
                    PyObject *tmp_call_result_22;
                    PyObject *tmp_args_element_name_17;
                    CHECK_OBJECT(var_list_remove);
                    tmp_called_instance_35 = var_list_remove;
                    CHECK_OBJECT(var_x);
                    tmp_args_element_name_17 = var_x;
                    frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1028;
                    {
                        PyObject *call_args[] = {tmp_args_element_name_17};
                        tmp_call_result_22 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_35, const_str_plain_append, call_args);
                    }

                    if (tmp_call_result_22 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1028;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto try_except_handler_2;
                    }
                    Py_DECREF(tmp_call_result_22);
                }
                branch_no_12:;
            }
            if (CONSIDER_THREADING() == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1021;
                type_description_1 = "oooooooooooooooooooNooooooo";
                goto try_except_handler_2;
            }
            goto loop_start_2;
            loop_end_2:;
            goto try_end_1;
            // Exception handler code:
            try_except_handler_2:;
            exception_keeper_type_1 = exception_type;
            exception_keeper_value_1 = exception_value;
            exception_keeper_tb_1 = exception_tb;
            exception_keeper_lineno_1 = exception_lineno;
            exception_type = NULL;
            exception_value = NULL;
            exception_tb = NULL;
            exception_lineno = 0;

            Py_XDECREF(tmp_for_loop_1__iter_value);
            tmp_for_loop_1__iter_value = NULL;

            CHECK_OBJECT((PyObject *)tmp_for_loop_1__for_iterator);
            Py_DECREF(tmp_for_loop_1__for_iterator);
            tmp_for_loop_1__for_iterator = NULL;

            // Re-raise.
            exception_type = exception_keeper_type_1;
            exception_value = exception_keeper_value_1;
            exception_tb = exception_keeper_tb_1;
            exception_lineno = exception_keeper_lineno_1;

            goto frame_exception_exit_1;
            // End of try:
            try_end_1:;
            Py_XDECREF(tmp_for_loop_1__iter_value);
            tmp_for_loop_1__iter_value = NULL;

            CHECK_OBJECT((PyObject *)tmp_for_loop_1__for_iterator);
            Py_DECREF(tmp_for_loop_1__for_iterator);
            tmp_for_loop_1__for_iterator = NULL;

            {
                nuitka_bool tmp_condition_result_13;
                PyObject *tmp_compexpr_left_15;
                PyObject *tmp_compexpr_right_15;
                PyObject *tmp_len_arg_4;
                CHECK_OBJECT(var_list_remove);
                tmp_len_arg_4 = var_list_remove;
                tmp_compexpr_left_15 = BUILTIN_LEN(tmp_len_arg_4);
                assert(!(tmp_compexpr_left_15 == NULL));
                tmp_compexpr_right_15 = const_int_0;
                tmp_res = RICH_COMPARE_BOOL_GT_OBJECT_INT(tmp_compexpr_left_15, tmp_compexpr_right_15);
                Py_DECREF(tmp_compexpr_left_15);
                assert(!(tmp_res == -1));
                tmp_condition_result_13 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_13 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_13;
                } else {
                    goto branch_no_13;
                }
                branch_yes_13:;
                {
                    PyObject *tmp_assign_source_29;
                    tmp_assign_source_29 = Py_True;
                    assert(var_start == NULL);
                    Py_INCREF(tmp_assign_source_29);
                    var_start = tmp_assign_source_29;
                }
                {
                    PyObject *tmp_assign_source_30;
                    tmp_assign_source_30 = const_str_empty;
                    assert(var_list_d == NULL);
                    Py_INCREF(tmp_assign_source_30);
                    var_list_d = tmp_assign_source_30;
                }
                {
                    PyObject *tmp_assign_source_31;
                    PyObject *tmp_left_name_6;
                    PyObject *tmp_len_arg_5;
                    PyObject *tmp_right_name_6;
                    CHECK_OBJECT(var_list_remove);
                    tmp_len_arg_5 = var_list_remove;
                    tmp_left_name_6 = BUILTIN_LEN(tmp_len_arg_5);
                    assert(!(tmp_left_name_6 == NULL));
                    tmp_right_name_6 = const_int_pos_1;
                    tmp_assign_source_31 = BINARY_OPERATION_SUB_OBJECT_INT(tmp_left_name_6, tmp_right_name_6);
                    Py_DECREF(tmp_left_name_6);
                    assert(!(tmp_assign_source_31 == NULL));
                    assert(var_y == NULL);
                    var_y = tmp_assign_source_31;
                }
                loop_start_3:;
                {
                    nuitka_bool tmp_condition_result_14;
                    PyObject *tmp_operand_name_5;
                    PyObject *tmp_compexpr_left_16;
                    PyObject *tmp_compexpr_right_16;
                    CHECK_OBJECT(var_y);
                    tmp_compexpr_left_16 = var_y;
                    tmp_compexpr_right_16 = const_int_0;
                    tmp_operand_name_5 = RICH_COMPARE_GTE_OBJECT_OBJECT(tmp_compexpr_left_16, tmp_compexpr_right_16);
                    if (tmp_operand_name_5 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1033;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_res = CHECK_IF_TRUE(tmp_operand_name_5);
                    Py_DECREF(tmp_operand_name_5);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1033;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_condition_result_14 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_14 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_14;
                    } else {
                        goto branch_no_14;
                    }
                    branch_yes_14:;
                    goto loop_end_3;
                    branch_no_14:;
                }
                {
                    nuitka_bool tmp_condition_result_15;
                    PyObject *tmp_operand_name_6;
                    if (var_start == NULL) {

                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start");
                        exception_tb = NULL;

                        exception_lineno = 1034;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_operand_name_6 = var_start;
                    tmp_res = CHECK_IF_TRUE(tmp_operand_name_6);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1034;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_condition_result_15 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_15 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_15;
                    } else {
                        goto branch_no_15;
                    }
                    branch_yes_15:;
                    {
                        PyObject *tmp_assign_source_32;
                        PyObject *tmp_left_name_7;
                        PyObject *tmp_right_name_7;
                        CHECK_OBJECT(var_list_d);
                        tmp_left_name_7 = var_list_d;
                        tmp_right_name_7 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                        tmp_assign_source_32 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_7, tmp_right_name_7);
                        if (tmp_assign_source_32 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1035;
                            type_description_1 = "oooooooooooooooooooNooooooo";
                            goto frame_exception_exit_1;
                        }
                        {
                            PyObject *old = var_list_d;
                            assert(old != NULL);
                            var_list_d = tmp_assign_source_32;
                            Py_DECREF(old);
                        }

                    }
                    goto branch_end_15;
                    branch_no_15:;
                    {
                        PyObject *tmp_assign_source_33;
                        tmp_assign_source_33 = Py_False;
                        {
                            PyObject *old = var_start;
                            var_start = tmp_assign_source_33;
                            Py_INCREF(var_start);
                            Py_XDECREF(old);
                        }

                    }
                    branch_end_15:;
                }
                {
                    PyObject *tmp_assign_source_34;
                    PyObject *tmp_left_name_8;
                    PyObject *tmp_right_name_8;
                    PyObject *tmp_subscribed_name_11;
                    PyObject *tmp_subscript_name_11;
                    PyObject *tmp_subscribed_name_12;
                    PyObject *tmp_subscript_name_12;
                    if (var_list_d == NULL) {

                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_d");
                        exception_tb = NULL;

                        exception_lineno = 1038;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_left_name_8 = var_list_d;
                    CHECK_OBJECT(var_devs);
                    tmp_subscribed_name_11 = var_devs;
                    CHECK_OBJECT(var_list_remove);
                    tmp_subscribed_name_12 = var_list_remove;
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_12 = var_y;
                    tmp_subscript_name_11 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_12, tmp_subscript_name_12);
                    if (tmp_subscript_name_11 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1038;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_8 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_11, tmp_subscript_name_11);
                    Py_DECREF(tmp_subscript_name_11);
                    if (tmp_right_name_8 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1038;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_assign_source_34 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_8, tmp_right_name_8);
                    Py_DECREF(tmp_right_name_8);
                    if (tmp_assign_source_34 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1038;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    {
                        PyObject *old = var_list_d;
                        var_list_d = tmp_assign_source_34;
                        Py_XDECREF(old);
                    }

                }
                {
                    PyObject *tmp_called_name_10;
                    PyObject *tmp_source_name_45;
                    PyObject *tmp_call_result_23;
                    PyObject *tmp_args_element_name_18;
                    PyObject *tmp_subscribed_name_13;
                    PyObject *tmp_subscript_name_13;
                    CHECK_OBJECT(var_selected_list);
                    tmp_source_name_45 = var_selected_list;
                    tmp_called_name_10 = LOOKUP_ATTRIBUTE(tmp_source_name_45, const_str_plain_pop);
                    if (tmp_called_name_10 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1039;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(var_list_remove);
                    tmp_subscribed_name_13 = var_list_remove;
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_13 = var_y;
                    tmp_args_element_name_18 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_13, tmp_subscript_name_13);
                    if (tmp_args_element_name_18 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_10);

                        exception_lineno = 1039;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1039;
                    tmp_call_result_23 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_10, tmp_args_element_name_18);
                    Py_DECREF(tmp_called_name_10);
                    Py_DECREF(tmp_args_element_name_18);
                    if (tmp_call_result_23 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1039;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_23);
                }
                {
                    PyObject *tmp_called_name_11;
                    PyObject *tmp_source_name_46;
                    PyObject *tmp_call_result_24;
                    PyObject *tmp_args_element_name_19;
                    PyObject *tmp_subscribed_name_14;
                    PyObject *tmp_subscript_name_14;
                    CHECK_OBJECT(var_devs);
                    tmp_source_name_46 = var_devs;
                    tmp_called_name_11 = LOOKUP_ATTRIBUTE(tmp_source_name_46, const_str_plain_pop);
                    if (tmp_called_name_11 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1040;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(var_list_remove);
                    tmp_subscribed_name_14 = var_list_remove;
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_14 = var_y;
                    tmp_args_element_name_19 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_14, tmp_subscript_name_14);
                    if (tmp_args_element_name_19 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_11);

                        exception_lineno = 1040;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1040;
                    tmp_call_result_24 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_11, tmp_args_element_name_19);
                    Py_DECREF(tmp_called_name_11);
                    Py_DECREF(tmp_args_element_name_19);
                    if (tmp_call_result_24 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1040;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_24);
                }
                {
                    PyObject *tmp_called_name_12;
                    PyObject *tmp_source_name_47;
                    PyObject *tmp_call_result_25;
                    PyObject *tmp_args_element_name_20;
                    PyObject *tmp_subscribed_name_15;
                    PyObject *tmp_subscript_name_15;
                    CHECK_OBJECT(var_list_mn);
                    tmp_source_name_47 = var_list_mn;
                    tmp_called_name_12 = LOOKUP_ATTRIBUTE(tmp_source_name_47, const_str_plain_pop);
                    if (tmp_called_name_12 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1041;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(var_list_remove);
                    tmp_subscribed_name_15 = var_list_remove;
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_15 = var_y;
                    tmp_args_element_name_20 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_15, tmp_subscript_name_15);
                    if (tmp_args_element_name_20 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_12);

                        exception_lineno = 1041;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1041;
                    tmp_call_result_25 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_12, tmp_args_element_name_20);
                    Py_DECREF(tmp_called_name_12);
                    Py_DECREF(tmp_args_element_name_20);
                    if (tmp_call_result_25 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1041;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_25);
                }
                {
                    PyObject *tmp_called_name_13;
                    PyObject *tmp_source_name_48;
                    PyObject *tmp_call_result_26;
                    PyObject *tmp_args_element_name_21;
                    PyObject *tmp_subscribed_name_16;
                    PyObject *tmp_subscript_name_16;
                    CHECK_OBJECT(var_list_sn);
                    tmp_source_name_48 = var_list_sn;
                    tmp_called_name_13 = LOOKUP_ATTRIBUTE(tmp_source_name_48, const_str_plain_pop);
                    if (tmp_called_name_13 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1042;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(var_list_remove);
                    tmp_subscribed_name_16 = var_list_remove;
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_16 = var_y;
                    tmp_args_element_name_21 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_16, tmp_subscript_name_16);
                    if (tmp_args_element_name_21 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_13);

                        exception_lineno = 1042;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1042;
                    tmp_call_result_26 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_13, tmp_args_element_name_21);
                    Py_DECREF(tmp_called_name_13);
                    Py_DECREF(tmp_args_element_name_21);
                    if (tmp_call_result_26 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1042;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_26);
                }
                {
                    PyObject *tmp_assign_source_35;
                    PyObject *tmp_left_name_9;
                    PyObject *tmp_right_name_9;
                    CHECK_OBJECT(var_y);
                    tmp_left_name_9 = var_y;
                    tmp_right_name_9 = const_int_pos_1;
                    tmp_assign_source_35 = BINARY_OPERATION_SUB_OBJECT_INT(tmp_left_name_9, tmp_right_name_9);
                    if (tmp_assign_source_35 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1043;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    {
                        PyObject *old = var_y;
                        assert(old != NULL);
                        var_y = tmp_assign_source_35;
                        Py_DECREF(old);
                    }

                }
                if (CONSIDER_THREADING() == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1033;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                goto loop_start_3;
                loop_end_3:;
                {
                    PyObject *tmp_called_name_14;
                    PyObject *tmp_source_name_49;
                    PyObject *tmp_call_result_27;
                    PyObject *tmp_args_element_name_22;
                    PyObject *tmp_left_name_10;
                    PyObject *tmp_left_name_11;
                    PyObject *tmp_right_name_10;
                    PyObject *tmp_right_name_11;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_49 = par_ui;
                    tmp_called_name_14 = LOOKUP_ATTRIBUTE(tmp_source_name_49, const_str_plain_msg_err);
                    if (tmp_called_name_14 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1044;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_left_name_11 = const_str_digest_72bac1bf76269b2bc2d042815fc9682b;
                    CHECK_OBJECT(var_list_d);
                    tmp_right_name_10 = var_list_d;
                    tmp_left_name_10 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_11, tmp_right_name_10);
                    if (tmp_left_name_10 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_14);

                        exception_lineno = 1044;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_11 = const_str_digest_b9fd857691f375c6ace933a89e09e6f0;
                    tmp_args_element_name_22 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_10, tmp_right_name_11);
                    Py_DECREF(tmp_left_name_10);
                    if (tmp_args_element_name_22 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_14);

                        exception_lineno = 1044;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1044;
                    tmp_call_result_27 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_14, tmp_args_element_name_22);
                    Py_DECREF(tmp_called_name_14);
                    Py_DECREF(tmp_args_element_name_22);
                    if (tmp_call_result_27 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1044;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_27);
                }
                branch_no_13:;
            }
            {
                nuitka_bool tmp_condition_result_16;
                PyObject *tmp_compexpr_left_17;
                PyObject *tmp_compexpr_right_17;
                PyObject *tmp_len_arg_6;
                CHECK_OBJECT(var_selected_list);
                tmp_len_arg_6 = var_selected_list;
                tmp_compexpr_left_17 = BUILTIN_LEN(tmp_len_arg_6);
                assert(!(tmp_compexpr_left_17 == NULL));
                tmp_compexpr_right_17 = const_int_0;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_17, tmp_compexpr_right_17);
                Py_DECREF(tmp_compexpr_left_17);
                assert(!(tmp_res == -1));
                tmp_condition_result_16 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_16 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_16;
                } else {
                    goto branch_no_16;
                }
                branch_yes_16:;
                tmp_return_value = Py_None;
                Py_INCREF(tmp_return_value);
                goto frame_return_exit_1;
                branch_no_16:;
            }
            {
                nuitka_bool tmp_condition_result_17;
                int tmp_and_left_truth_7;
                nuitka_bool tmp_and_left_value_7;
                nuitka_bool tmp_and_right_value_7;
                int tmp_or_left_truth_3;
                nuitka_bool tmp_or_left_value_3;
                nuitka_bool tmp_or_right_value_3;
                PyObject *tmp_compexpr_left_18;
                PyObject *tmp_compexpr_right_18;
                PyObject *tmp_left_name_12;
                PyObject *tmp_source_name_50;
                PyObject *tmp_right_name_12;
                int tmp_and_left_truth_8;
                nuitka_bool tmp_and_left_value_8;
                nuitka_bool tmp_and_right_value_8;
                PyObject *tmp_compexpr_left_19;
                PyObject *tmp_compexpr_right_19;
                PyObject *tmp_source_name_51;
                PyObject *tmp_compexpr_left_20;
                PyObject *tmp_compexpr_right_20;
                PyObject *tmp_source_name_52;
                PyObject *tmp_called_instance_36;
                PyObject *tmp_source_name_53;
                PyObject *tmp_call_result_28;
                int tmp_truth_name_4;
                CHECK_OBJECT(par_ui);
                tmp_source_name_50 = par_ui;
                tmp_left_name_12 = LOOKUP_ATTRIBUTE(tmp_source_name_50, const_str_plain_VERSION);
                if (tmp_left_name_12 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1049;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_right_name_12 = const_int_pos_3;
                tmp_compexpr_left_18 = BINARY_OPERATION_MOD_OBJECT_INT(tmp_left_name_12, tmp_right_name_12);
                Py_DECREF(tmp_left_name_12);
                if (tmp_compexpr_left_18 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1049;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_compexpr_right_18 = const_int_0;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_18, tmp_compexpr_right_18);
                Py_DECREF(tmp_compexpr_left_18);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1049;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_or_left_value_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                tmp_or_left_truth_3 = tmp_or_left_value_3 == NUITKA_BOOL_TRUE ? 1 : 0;
                if (tmp_or_left_truth_3 == 1) {
                    goto or_left_3;
                } else {
                    goto or_right_3;
                }
                or_right_3:;
                CHECK_OBJECT(par_ui);
                tmp_source_name_51 = par_ui;
                tmp_compexpr_left_19 = LOOKUP_ATTRIBUTE(tmp_source_name_51, const_str_plain_VERSION);
                if (tmp_compexpr_left_19 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1049;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_compexpr_right_19 = const_int_pos_1;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_19, tmp_compexpr_right_19);
                Py_DECREF(tmp_compexpr_left_19);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1049;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_and_left_value_8 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                tmp_and_left_truth_8 = tmp_and_left_value_8 == NUITKA_BOOL_TRUE ? 1 : 0;
                if (tmp_and_left_truth_8 == 1) {
                    goto and_right_8;
                } else {
                    goto and_left_8;
                }
                and_right_8:;
                CHECK_OBJECT(par_ui);
                tmp_source_name_52 = par_ui;
                tmp_compexpr_left_20 = LOOKUP_ATTRIBUTE(tmp_source_name_52, const_str_plain_PBA_VERSION);
                if (tmp_compexpr_left_20 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1049;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_compexpr_right_20 = const_int_pos_1;
                tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_INT(tmp_compexpr_left_20, tmp_compexpr_right_20);
                Py_DECREF(tmp_compexpr_left_20);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1049;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_and_right_value_8 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                tmp_or_right_value_3 = tmp_and_right_value_8;
                goto and_end_8;
                and_left_8:;
                tmp_or_right_value_3 = tmp_and_left_value_8;
                and_end_8:;
                tmp_and_left_value_7 = tmp_or_right_value_3;
                goto or_end_3;
                or_left_3:;
                tmp_and_left_value_7 = tmp_or_left_value_3;
                or_end_3:;
                tmp_and_left_truth_7 = tmp_and_left_value_7 == NUITKA_BOOL_TRUE ? 1 : 0;
                if (tmp_and_left_truth_7 == 1) {
                    goto and_right_7;
                } else {
                    goto and_left_7;
                }
                and_right_7:;
                CHECK_OBJECT(par_ui);
                tmp_source_name_53 = par_ui;
                tmp_called_instance_36 = LOOKUP_ATTRIBUTE(tmp_source_name_53, const_str_plain_check_pass_rd);
                if (tmp_called_instance_36 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1049;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1049;
                tmp_call_result_28 = CALL_METHOD_NO_ARGS(tmp_called_instance_36, const_str_plain_get_active);
                Py_DECREF(tmp_called_instance_36);
                if (tmp_call_result_28 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1049;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_truth_name_4 = CHECK_IF_TRUE(tmp_call_result_28);
                if (tmp_truth_name_4 == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_call_result_28);

                    exception_lineno = 1049;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_and_right_value_7 = tmp_truth_name_4 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                Py_DECREF(tmp_call_result_28);
                tmp_condition_result_17 = tmp_and_right_value_7;
                goto and_end_7;
                and_left_7:;
                tmp_condition_result_17 = tmp_and_left_value_7;
                and_end_7:;
                if (tmp_condition_result_17 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_17;
                } else {
                    goto branch_no_17;
                }
                branch_yes_17:;
                {
                    PyObject *tmp_assign_source_36;
                    PyObject *tmp_called_instance_37;
                    PyObject *tmp_mvar_value_15;
                    PyObject *tmp_args_element_name_23;
                    PyObject *tmp_args_element_name_24;
                    PyObject *tmp_args_element_name_25;
                    PyObject *tmp_args_element_name_26;
                    tmp_mvar_value_15 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_runprocess);

                    if (unlikely(tmp_mvar_value_15 == NULL)) {
                        tmp_mvar_value_15 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runprocess);
                    }

                    if (tmp_mvar_value_15 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 5132 ], 39, 0);
                        exception_tb = NULL;

                        exception_lineno = 1050;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_called_instance_37 = tmp_mvar_value_15;
                    tmp_args_element_name_23 = const_str_plain_Admin;
                    CHECK_OBJECT(var_devs);
                    tmp_args_element_name_24 = var_devs;
                    CHECK_OBJECT(var_list_mn);
                    tmp_args_element_name_25 = var_list_mn;
                    CHECK_OBJECT(var_list_sn);
                    tmp_args_element_name_26 = var_list_sn;
                    frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1050;
                    {
                        PyObject *call_args[] = {tmp_args_element_name_23, tmp_args_element_name_24, tmp_args_element_name_25, tmp_args_element_name_26};
                        tmp_assign_source_36 = CALL_METHOD_WITH_ARGS4(tmp_called_instance_37, const_str_plain_findUSB, call_args);
                    }

                    if (tmp_assign_source_36 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1050;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    assert(var_f_list == NULL);
                    var_f_list = tmp_assign_source_36;
                }
                {
                    nuitka_bool tmp_condition_result_18;
                    PyObject *tmp_compexpr_left_21;
                    PyObject *tmp_compexpr_right_21;
                    PyObject *tmp_len_arg_7;
                    PyObject *tmp_subscribed_name_17;
                    PyObject *tmp_subscript_name_17;
                    CHECK_OBJECT(var_f_list);
                    tmp_subscribed_name_17 = var_f_list;
                    tmp_subscript_name_17 = const_int_pos_1;
                    tmp_len_arg_7 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_17, tmp_subscript_name_17, 1);
                    if (tmp_len_arg_7 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1051;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_compexpr_left_21 = BUILTIN_LEN(tmp_len_arg_7);
                    Py_DECREF(tmp_len_arg_7);
                    if (tmp_compexpr_left_21 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1051;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_compexpr_right_21 = const_int_0;
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_21, tmp_compexpr_right_21);
                    Py_DECREF(tmp_compexpr_left_21);
                    assert(!(tmp_res == -1));
                    tmp_condition_result_18 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_18 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_18;
                    } else {
                        goto branch_no_18;
                    }
                    branch_yes_18:;
                    {
                        PyObject *tmp_called_instance_38;
                        PyObject *tmp_call_result_29;
                        CHECK_OBJECT(par_ui);
                        tmp_called_instance_38 = par_ui;
                        frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1052;
                        tmp_call_result_29 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_38, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_65f1ca3cc21751516d4508974112f1bb_tuple, 0));

                        if (tmp_call_result_29 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1052;
                            type_description_1 = "oooooooooooooooooooNooooooo";
                            goto frame_exception_exit_1;
                        }
                        Py_DECREF(tmp_call_result_29);
                    }
                    tmp_return_value = Py_None;
                    Py_INCREF(tmp_return_value);
                    goto frame_return_exit_1;
                    goto branch_end_18;
                    branch_no_18:;
                    {
                        nuitka_bool tmp_condition_result_19;
                        PyObject *tmp_compexpr_left_22;
                        PyObject *tmp_compexpr_right_22;
                        PyObject *tmp_len_arg_8;
                        PyObject *tmp_subscribed_name_18;
                        PyObject *tmp_subscript_name_18;
                        CHECK_OBJECT(var_f_list);
                        tmp_subscribed_name_18 = var_f_list;
                        tmp_subscript_name_18 = const_int_0;
                        tmp_len_arg_8 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_18, tmp_subscript_name_18, 0);
                        if (tmp_len_arg_8 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1054;
                            type_description_1 = "oooooooooooooooooooNooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_compexpr_left_22 = BUILTIN_LEN(tmp_len_arg_8);
                        Py_DECREF(tmp_len_arg_8);
                        if (tmp_compexpr_left_22 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1054;
                            type_description_1 = "oooooooooooooooooooNooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_compexpr_right_22 = const_int_0;
                        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_22, tmp_compexpr_right_22);
                        Py_DECREF(tmp_compexpr_left_22);
                        assert(!(tmp_res == -1));
                        tmp_condition_result_19 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_19 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_19;
                        } else {
                            goto branch_no_19;
                        }
                        branch_yes_19:;
                        {
                            PyObject *tmp_called_instance_39;
                            PyObject *tmp_call_result_30;
                            CHECK_OBJECT(par_ui);
                            tmp_called_instance_39 = par_ui;
                            frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1055;
                            tmp_call_result_30 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_39, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_dcd804658f8e9977f257a841a58a2840_tuple, 0));

                            if (tmp_call_result_30 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 1055;
                                type_description_1 = "oooooooooooooooooooNooooooo";
                                goto frame_exception_exit_1;
                            }
                            Py_DECREF(tmp_call_result_30);
                        }
                        tmp_return_value = Py_None;
                        Py_INCREF(tmp_return_value);
                        goto frame_return_exit_1;
                        goto branch_end_19;
                        branch_no_19:;
                        {
                            nuitka_bool tmp_condition_result_20;
                            PyObject *tmp_compexpr_left_23;
                            PyObject *tmp_compexpr_right_23;
                            PyObject *tmp_subscribed_name_19;
                            PyObject *tmp_subscript_name_19;
                            CHECK_OBJECT(var_f_list);
                            tmp_subscribed_name_19 = var_f_list;
                            tmp_subscript_name_19 = const_int_pos_2;
                            tmp_compexpr_left_23 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_19, tmp_subscript_name_19, 2);
                            if (tmp_compexpr_left_23 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 1057;
                                type_description_1 = "oooooooooooooooooooNooooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_compexpr_right_23 = const_str_empty;
                            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_23, tmp_compexpr_right_23);
                            Py_DECREF(tmp_compexpr_left_23);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 1057;
                                type_description_1 = "oooooooooooooooooooNooooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_condition_result_20 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            if (tmp_condition_result_20 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_20;
                            } else {
                                goto branch_no_20;
                            }
                            branch_yes_20:;
                            {
                                PyObject *tmp_called_name_15;
                                PyObject *tmp_source_name_54;
                                PyObject *tmp_call_result_31;
                                PyObject *tmp_args_element_name_27;
                                PyObject *tmp_left_name_13;
                                PyObject *tmp_left_name_14;
                                PyObject *tmp_right_name_13;
                                PyObject *tmp_subscribed_name_20;
                                PyObject *tmp_subscript_name_20;
                                PyObject *tmp_right_name_14;
                                CHECK_OBJECT(par_ui);
                                tmp_source_name_54 = par_ui;
                                tmp_called_name_15 = LOOKUP_ATTRIBUTE(tmp_source_name_54, const_str_plain_msg_err);
                                if (tmp_called_name_15 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 1058;
                                    type_description_1 = "oooooooooooooooooooNooooooo";
                                    goto frame_exception_exit_1;
                                }
                                tmp_left_name_14 = const_str_digest_1002dc717d1fdd81c2ea7f5f9f7ab4a3;
                                CHECK_OBJECT(var_f_list);
                                tmp_subscribed_name_20 = var_f_list;
                                tmp_subscript_name_20 = const_int_pos_2;
                                tmp_right_name_13 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_20, tmp_subscript_name_20, 2);
                                if (tmp_right_name_13 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                    Py_DECREF(tmp_called_name_15);

                                    exception_lineno = 1058;
                                    type_description_1 = "oooooooooooooooooooNooooooo";
                                    goto frame_exception_exit_1;
                                }
                                tmp_left_name_13 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_14, tmp_right_name_13);
                                Py_DECREF(tmp_right_name_13);
                                if (tmp_left_name_13 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                    Py_DECREF(tmp_called_name_15);

                                    exception_lineno = 1058;
                                    type_description_1 = "oooooooooooooooooooNooooooo";
                                    goto frame_exception_exit_1;
                                }
                                tmp_right_name_14 = const_str_dot;
                                tmp_args_element_name_27 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_13, tmp_right_name_14);
                                Py_DECREF(tmp_left_name_13);
                                if (tmp_args_element_name_27 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                    Py_DECREF(tmp_called_name_15);

                                    exception_lineno = 1058;
                                    type_description_1 = "oooooooooooooooooooNooooooo";
                                    goto frame_exception_exit_1;
                                }
                                frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1058;
                                tmp_call_result_31 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_15, tmp_args_element_name_27);
                                Py_DECREF(tmp_called_name_15);
                                Py_DECREF(tmp_args_element_name_27);
                                if (tmp_call_result_31 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 1058;
                                    type_description_1 = "oooooooooooooooooooNooooooo";
                                    goto frame_exception_exit_1;
                                }
                                Py_DECREF(tmp_call_result_31);
                            }
                            tmp_return_value = Py_None;
                            Py_INCREF(tmp_return_value);
                            goto frame_return_exit_1;
                            branch_no_20:;
                        }
                        branch_end_19:;
                    }
                    branch_end_18:;
                }
                branch_no_17:;
            }
            {
                PyObject *tmp_called_instance_40;
                PyObject *tmp_call_result_32;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_40 = par_ui;
                frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1060;
                tmp_call_result_32 = CALL_METHOD_NO_ARGS(tmp_called_instance_40, const_str_plain_start_spin);
                if (tmp_call_result_32 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1060;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_32);
            }
            {
                nuitka_bool tmp_condition_result_21;
                PyObject *tmp_compexpr_left_24;
                PyObject *tmp_compexpr_right_24;
                PyObject *tmp_len_arg_9;
                CHECK_OBJECT(var_selected_list);
                tmp_len_arg_9 = var_selected_list;
                tmp_compexpr_left_24 = BUILTIN_LEN(tmp_len_arg_9);
                assert(!(tmp_compexpr_left_24 == NULL));
                tmp_compexpr_right_24 = const_int_pos_1;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_24, tmp_compexpr_right_24);
                Py_DECREF(tmp_compexpr_left_24);
                assert(!(tmp_res == -1));
                tmp_condition_result_21 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_21 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_21;
                } else {
                    goto branch_no_21;
                }
                branch_yes_21:;
                {
                    PyObject *tmp_called_instance_41;
                    PyObject *tmp_source_name_55;
                    PyObject *tmp_call_result_33;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_55 = par_ui;
                    tmp_called_instance_41 = LOOKUP_ATTRIBUTE(tmp_source_name_55, const_str_plain_wait_instr);
                    if (tmp_called_instance_41 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1062;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1062;
                    tmp_call_result_33 = CALL_METHOD_NO_ARGS(tmp_called_instance_41, const_str_plain_show);
                    Py_DECREF(tmp_called_instance_41);
                    if (tmp_call_result_33 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1062;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_33);
                }
                goto branch_end_21;
                branch_no_21:;
                {
                    PyObject *tmp_called_instance_42;
                    PyObject *tmp_source_name_56;
                    PyObject *tmp_call_result_34;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_56 = par_ui;
                    tmp_called_instance_42 = LOOKUP_ATTRIBUTE(tmp_source_name_56, const_str_plain_multi_wait_instr);
                    if (tmp_called_instance_42 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1064;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1064;
                    tmp_call_result_34 = CALL_METHOD_NO_ARGS(tmp_called_instance_42, const_str_plain_show);
                    Py_DECREF(tmp_called_instance_42);
                    if (tmp_call_result_34 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1064;
                        type_description_1 = "oooooooooooooooooooNooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_34);
                }
                branch_end_21:;
            }
            {
                PyObject *tmp_assattr_name_6;
                PyObject *tmp_assattr_target_6;
                tmp_assattr_name_6 = Py_True;
                CHECK_OBJECT(par_ui);
                tmp_assattr_target_6 = par_ui;
                tmp_result = SET_ATTRIBUTE(tmp_assattr_target_6, const_str_plain_op_inprogress, tmp_assattr_name_6);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1065;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
            }
            {
                PyObject *tmp_assign_source_37;
                PyObject *tmp_called_name_16;
                PyObject *tmp_source_name_57;
                PyObject *tmp_mvar_value_16;
                PyObject *tmp_kw_name_3;
                PyObject *tmp_dict_key_7;
                PyObject *tmp_dict_value_7;
                PyObject *tmp_source_name_58;
                PyObject *tmp_mvar_value_17;
                PyObject *tmp_dict_key_8;
                PyObject *tmp_dict_value_8;
                PyObject *tmp_tuple_element_1;
                tmp_mvar_value_16 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_threading);

                if (unlikely(tmp_mvar_value_16 == NULL)) {
                    tmp_mvar_value_16 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_threading);
                }

                if (tmp_mvar_value_16 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 661 ], 38, 0);
                    exception_tb = NULL;

                    exception_lineno = 1069;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_source_name_57 = tmp_mvar_value_16;
                tmp_called_name_16 = LOOKUP_ATTRIBUTE(tmp_source_name_57, const_str_plain_Thread);
                if (tmp_called_name_16 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1069;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_mvar_value_17 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_runthread);

                if (unlikely(tmp_mvar_value_17 == NULL)) {
                    tmp_mvar_value_17 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runthread);
                }

                if (tmp_mvar_value_17 == NULL) {
                    Py_DECREF(tmp_called_name_16);
                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 1304 ], 38, 0);
                    exception_tb = NULL;

                    exception_lineno = 1069;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_source_name_58 = tmp_mvar_value_17;
                tmp_dict_value_7 = LOOKUP_ATTRIBUTE(tmp_source_name_58, const_str_plain_rt_revertErase);
                if (tmp_dict_value_7 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_16);

                    exception_lineno = 1069;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_dict_key_7 = const_str_plain_target;
                tmp_kw_name_3 = _PyDict_NewPresized( 2 );
                tmp_res = PyDict_SetItem(tmp_kw_name_3, tmp_dict_key_7, tmp_dict_value_7);
                Py_DECREF(tmp_dict_value_7);
                assert(!(tmp_res != 0));
                CHECK_OBJECT(par_ui);
                tmp_tuple_element_1 = par_ui;
                tmp_dict_value_8 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_1);
                PyTuple_SET_ITEM(tmp_dict_value_8, 0, tmp_tuple_element_1);
                CHECK_OBJECT(var_selected_list);
                tmp_tuple_element_1 = var_selected_list;
                Py_INCREF(tmp_tuple_element_1);
                PyTuple_SET_ITEM(tmp_dict_value_8, 1, tmp_tuple_element_1);
                tmp_dict_key_8 = const_str_plain_args;
                tmp_res = PyDict_SetItem(tmp_kw_name_3, tmp_dict_key_8, tmp_dict_value_8);
                Py_DECREF(tmp_dict_value_8);
                assert(!(tmp_res != 0));
                frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1069;
                tmp_assign_source_37 = CALL_FUNCTION_WITH_KEYARGS(tmp_called_name_16, tmp_kw_name_3);
                Py_DECREF(tmp_called_name_16);
                Py_DECREF(tmp_kw_name_3);
                if (tmp_assign_source_37 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1069;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                assert(var_t_m == NULL);
                var_t_m = tmp_assign_source_37;
            }
            {
                PyObject *tmp_called_instance_43;
                PyObject *tmp_call_result_35;
                CHECK_OBJECT(var_t_m);
                tmp_called_instance_43 = var_t_m;
                frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1070;
                tmp_call_result_35 = CALL_METHOD_NO_ARGS(tmp_called_instance_43, const_str_plain_start);
                if (tmp_call_result_35 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1070;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_35);
            }
            goto branch_end_7;
            branch_no_7:;
            {
                PyObject *tmp_called_instance_44;
                PyObject *tmp_call_result_36;
                CHECK_OBJECT(var_messageA);
                tmp_called_instance_44 = var_messageA;
                frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame.f_lineno = 1072;
                tmp_call_result_36 = CALL_METHOD_NO_ARGS(tmp_called_instance_44, const_str_plain_destroy);
                if (tmp_call_result_36 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1072;
                    type_description_1 = "oooooooooooooooooooNooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_36);
            }
            branch_end_7:;
        }
        branch_end_4:;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_3743f1e053a48b225c6d8ce44010ee9f);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_3743f1e053a48b225c6d8ce44010ee9f);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto try_return_handler_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_3743f1e053a48b225c6d8ce44010ee9f);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_3743f1e053a48b225c6d8ce44010ee9f, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_3743f1e053a48b225c6d8ce44010ee9f->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_3743f1e053a48b225c6d8ce44010ee9f, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_3743f1e053a48b225c6d8ce44010ee9f,
        type_description_1,
        par_button,
        par_ui,
        var_list_d,
        var_list_remove,
        var_selected_list,
        var_message,
        var_pw_strip,
        var_list_mn,
        var_t_m,
        var_res,
        var_selected,
        var_start,
        var_resA,
        var_orig_len,
        var_index,
        var_text_a,
        var_y,
        var_f_list,
        var_m_na,
        NULL,
        var_messageA,
        var_iter,
        var_devs,
        var_txt_q,
        var_drive_na,
        var_x,
        var_list_sn
    );


    // Release cached frame.
    if (frame_3743f1e053a48b225c6d8ce44010ee9f == cache_frame_3743f1e053a48b225c6d8ce44010ee9f) {
        Py_DECREF(frame_3743f1e053a48b225c6d8ce44010ee9f);
    }
    cache_frame_3743f1e053a48b225c6d8ce44010ee9f = NULL;

    assertFrameObject(frame_3743f1e053a48b225c6d8ce44010ee9f);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(runop$$$function_12_run_revertErase);
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    Py_XDECREF(var_list_d);
    var_list_d = NULL;

    Py_XDECREF(var_list_remove);
    var_list_remove = NULL;

    Py_XDECREF(var_selected_list);
    var_selected_list = NULL;

    Py_XDECREF(var_message);
    var_message = NULL;

    CHECK_OBJECT((PyObject *)var_pw_strip);
    Py_DECREF(var_pw_strip);
    var_pw_strip = NULL;

    Py_XDECREF(var_list_mn);
    var_list_mn = NULL;

    Py_XDECREF(var_t_m);
    var_t_m = NULL;

    Py_XDECREF(var_res);
    var_res = NULL;

    Py_XDECREF(var_selected);
    var_selected = NULL;

    Py_XDECREF(var_start);
    var_start = NULL;

    Py_XDECREF(var_resA);
    var_resA = NULL;

    Py_XDECREF(var_orig_len);
    var_orig_len = NULL;

    Py_XDECREF(var_index);
    var_index = NULL;

    Py_XDECREF(var_text_a);
    var_text_a = NULL;

    Py_XDECREF(var_y);
    var_y = NULL;

    Py_XDECREF(var_f_list);
    var_f_list = NULL;

    Py_XDECREF(var_m_na);
    var_m_na = NULL;

    Py_XDECREF(var_messageA);
    var_messageA = NULL;

    Py_XDECREF(var_iter);
    var_iter = NULL;

    Py_XDECREF(var_devs);
    var_devs = NULL;

    Py_XDECREF(var_txt_q);
    var_txt_q = NULL;

    Py_XDECREF(var_drive_na);
    var_drive_na = NULL;

    Py_XDECREF(var_x);
    var_x = NULL;

    Py_XDECREF(var_list_sn);
    var_list_sn = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_2 = exception_type;
    exception_keeper_value_2 = exception_value;
    exception_keeper_tb_2 = exception_tb;
    exception_keeper_lineno_2 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_list_d);
    var_list_d = NULL;

    Py_XDECREF(var_list_remove);
    var_list_remove = NULL;

    Py_XDECREF(var_selected_list);
    var_selected_list = NULL;

    Py_XDECREF(var_message);
    var_message = NULL;

    Py_XDECREF(var_pw_strip);
    var_pw_strip = NULL;

    Py_XDECREF(var_list_mn);
    var_list_mn = NULL;

    Py_XDECREF(var_t_m);
    var_t_m = NULL;

    Py_XDECREF(var_res);
    var_res = NULL;

    Py_XDECREF(var_selected);
    var_selected = NULL;

    Py_XDECREF(var_start);
    var_start = NULL;

    Py_XDECREF(var_resA);
    var_resA = NULL;

    Py_XDECREF(var_orig_len);
    var_orig_len = NULL;

    Py_XDECREF(var_index);
    var_index = NULL;

    Py_XDECREF(var_text_a);
    var_text_a = NULL;

    Py_XDECREF(var_y);
    var_y = NULL;

    Py_XDECREF(var_f_list);
    var_f_list = NULL;

    Py_XDECREF(var_m_na);
    var_m_na = NULL;

    Py_XDECREF(var_messageA);
    var_messageA = NULL;

    Py_XDECREF(var_iter);
    var_iter = NULL;

    Py_XDECREF(var_devs);
    var_devs = NULL;

    Py_XDECREF(var_txt_q);
    var_txt_q = NULL;

    Py_XDECREF(var_drive_na);
    var_drive_na = NULL;

    Py_XDECREF(var_x);
    var_x = NULL;

    Py_XDECREF(var_list_sn);
    var_list_sn = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_2;
    exception_value = exception_keeper_value_2;
    exception_tb = exception_keeper_tb_2;
    exception_lineno = exception_keeper_lineno_2;

    goto function_exception_exit;
    // End of try:

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(runop$$$function_12_run_revertErase);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_button);
    Py_DECREF(par_button);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_button);
    Py_DECREF(par_button);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_runop$$$function_13_run_revertPSID(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_button = python_pars[0];
    PyObject *par_ui = python_pars[1];
    PyObject *var_psid = NULL;
    PyObject *var_index = NULL;
    PyObject *var_e = NULL;
    PyObject *var_res = NULL;
    PyObject *var_t1 = NULL;
    PyObject *var_t2 = NULL;
    PyObject *var_text_a = NULL;
    PyObject *var_txt_q = NULL;
    PyObject *var_m_na = NULL;
    PyObject *var_message = NULL;
    PyObject *var_txt = NULL;
    PyObject *var_start_time = NULL;
    struct Nuitka_FrameObject *frame_db6589d790491bc2804e02d20d69c89f;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    PyObject *tmp_return_value = NULL;
    bool tmp_result;
    static struct Nuitka_FrameObject *cache_frame_db6589d790491bc2804e02d20d69c89f = NULL;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;

    // Actual function body.
    // Tried code:
    MAKE_OR_REUSE_FRAME(cache_frame_db6589d790491bc2804e02d20d69c89f, codeobj_db6589d790491bc2804e02d20d69c89f, module_runop, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
    frame_db6589d790491bc2804e02d20d69c89f = cache_frame_db6589d790491bc2804e02d20d69c89f;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_db6589d790491bc2804e02d20d69c89f);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_db6589d790491bc2804e02d20d69c89f) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_instance_1;
        PyObject *tmp_mvar_value_1;
        PyObject *tmp_call_result_1;
        PyObject *tmp_args_element_name_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_verify);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_verify);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 236 ], 35, 0);
            exception_tb = NULL;

            exception_lineno = 1075;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_1 = tmp_mvar_value_1;
        CHECK_OBJECT(par_ui);
        tmp_args_element_name_1 = par_ui;
        frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1075;
        {
            PyObject *call_args[] = {tmp_args_element_name_1};
            tmp_call_result_1 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_1, const_str_plain_licCheck, call_args);
        }

        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1075;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_1);
    }
    {
        nuitka_bool tmp_condition_result_1;
        PyObject *tmp_compexpr_left_1;
        PyObject *tmp_compexpr_right_1;
        PyObject *tmp_called_instance_2;
        PyObject *tmp_source_name_1;
        CHECK_OBJECT(par_ui);
        tmp_source_name_1 = par_ui;
        tmp_called_instance_2 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_revert_psid_entry);
        if (tmp_called_instance_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1076;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1076;
        tmp_compexpr_left_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_2, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_2);
        if (tmp_compexpr_left_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1076;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_1 = const_str_empty;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_1, tmp_compexpr_right_1);
        Py_DECREF(tmp_compexpr_left_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1076;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        {
            PyObject *tmp_called_instance_3;
            PyObject *tmp_call_result_2;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_3 = par_ui;
            frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1077;
            tmp_call_result_2 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_3, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_1c944aaa92f306386270edce9e2f666d_tuple, 0));

            if (tmp_call_result_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1077;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_2);
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        branch_no_1:;
    }
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_called_instance_4;
        PyObject *tmp_source_name_2;
        CHECK_OBJECT(par_ui);
        tmp_source_name_2 = par_ui;
        tmp_called_instance_4 = LOOKUP_ATTRIBUTE(tmp_source_name_2, const_str_plain_revert_agree_entry);
        if (tmp_called_instance_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1079;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1079;
        tmp_assign_source_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_4, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_4);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1079;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        assert(var_text_a == NULL);
        var_text_a = tmp_assign_source_1;
    }
    {
        nuitka_bool tmp_condition_result_2;
        PyObject *tmp_compexpr_left_2;
        PyObject *tmp_compexpr_right_2;
        PyObject *tmp_called_instance_5;
        CHECK_OBJECT(var_text_a);
        tmp_called_instance_5 = var_text_a;
        frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1080;
        tmp_compexpr_left_2 = CALL_METHOD_NO_ARGS(tmp_called_instance_5, const_str_plain_lower);
        if (tmp_compexpr_left_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1080;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_2 = const_str_digest_67ec4a322e8ee2a266d3fe7940db84de;
        tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_2, tmp_compexpr_right_2);
        Py_DECREF(tmp_compexpr_left_2);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1080;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_2 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
            goto branch_yes_2;
        } else {
            goto branch_no_2;
        }
        branch_yes_2:;
        {
            PyObject *tmp_called_instance_6;
            PyObject *tmp_call_result_3;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_6 = par_ui;
            frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1081;
            tmp_call_result_3 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_6, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_d04f7c420b9d2a0d52b039f0bf7ceb57_tuple, 0));

            if (tmp_call_result_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1081;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_3);
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        branch_no_2:;
    }
    {
        PyObject *tmp_assign_source_2;
        PyObject *tmp_called_instance_7;
        PyObject *tmp_source_name_3;
        CHECK_OBJECT(par_ui);
        tmp_source_name_3 = par_ui;
        tmp_called_instance_7 = LOOKUP_ATTRIBUTE(tmp_source_name_3, const_str_plain_revert_psid_entry);
        if (tmp_called_instance_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1084;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1084;
        tmp_assign_source_2 = CALL_METHOD_NO_ARGS(tmp_called_instance_7, const_str_plain_get_text);
        Py_DECREF(tmp_called_instance_7);
        if (tmp_assign_source_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1084;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        assert(var_txt == NULL);
        var_txt = tmp_assign_source_2;
    }
    {
        PyObject *tmp_assign_source_3;
        PyObject *tmp_called_instance_8;
        CHECK_OBJECT(var_txt);
        tmp_called_instance_8 = var_txt;
        frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1085;
        tmp_assign_source_3 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_8, const_str_plain_strip, &PyTuple_GET_ITEM(const_tuple_str_digest_f5c2308578fc76966634f23eb2c3fab8_tuple, 0));

        if (tmp_assign_source_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1085;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        assert(var_psid == NULL);
        var_psid = tmp_assign_source_3;
    }
    {
        nuitka_bool tmp_condition_result_3;
        PyObject *tmp_compexpr_left_3;
        PyObject *tmp_compexpr_right_3;
        PyObject *tmp_len_arg_1;
        CHECK_OBJECT(var_psid);
        tmp_len_arg_1 = var_psid;
        tmp_compexpr_left_3 = BUILTIN_LEN(tmp_len_arg_1);
        if (tmp_compexpr_left_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1087;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_3 = const_int_pos_32;
        tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_INT(tmp_compexpr_left_3, tmp_compexpr_right_3);
        Py_DECREF(tmp_compexpr_left_3);
        assert(!(tmp_res == -1));
        tmp_condition_result_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_3 == NUITKA_BOOL_TRUE) {
            goto branch_yes_3;
        } else {
            goto branch_no_3;
        }
        branch_yes_3:;
        {
            PyObject *tmp_called_instance_9;
            PyObject *tmp_call_result_4;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_9 = par_ui;
            frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1088;
            tmp_call_result_4 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_9, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_a6f62406cc1944d3794fca7a3f1b23ec_tuple, 0));

            if (tmp_call_result_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1088;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_4);
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        branch_no_3:;
    }
    {
        PyObject *tmp_assign_source_4;
        PyObject *tmp_called_instance_10;
        PyObject *tmp_source_name_4;
        CHECK_OBJECT(par_ui);
        tmp_source_name_4 = par_ui;
        tmp_called_instance_10 = LOOKUP_ATTRIBUTE(tmp_source_name_4, const_str_plain_dev_select);
        if (tmp_called_instance_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1092;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1092;
        tmp_assign_source_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_10, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_10);
        if (tmp_assign_source_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1092;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        assert(var_index == NULL);
        var_index = tmp_assign_source_4;
    }
    {
        PyObject *tmp_assattr_name_1;
        PyObject *tmp_subscribed_name_1;
        PyObject *tmp_source_name_5;
        PyObject *tmp_subscript_name_1;
        PyObject *tmp_assattr_target_1;
        CHECK_OBJECT(par_ui);
        tmp_source_name_5 = par_ui;
        tmp_subscribed_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_5, const_str_plain_devs_list);
        if (tmp_subscribed_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1093;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_index);
        tmp_subscript_name_1 = var_index;
        tmp_assattr_name_1 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_1, tmp_subscript_name_1);
        Py_DECREF(tmp_subscribed_name_1);
        if (tmp_assattr_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1093;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_ui);
        tmp_assattr_target_1 = par_ui;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, const_str_plain_devname, tmp_assattr_name_1);
        Py_DECREF(tmp_assattr_name_1);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1093;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
    }
    {
        PyObject *tmp_called_name_1;
        PyObject *tmp_mvar_value_2;
        PyObject *tmp_call_result_5;
        PyObject *tmp_args_element_name_2;
        tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_prelock);

        if (unlikely(tmp_mvar_value_2 == NULL)) {
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_prelock);
        }

        if (tmp_mvar_value_2 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 5022 ], 36, 0);
            exception_tb = NULL;

            exception_lineno = 1096;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_1 = tmp_mvar_value_2;
        CHECK_OBJECT(var_index);
        tmp_args_element_name_2 = var_index;
        frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1096;
        tmp_call_result_5 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_1, tmp_args_element_name_2);
        if (tmp_call_result_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1096;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_5);
    }
    {
        PyObject *tmp_assign_source_5;
        PyObject *tmp_called_instance_11;
        PyObject *tmp_called_name_2;
        PyObject *tmp_source_name_6;
        PyObject *tmp_mvar_value_3;
        PyObject *tmp_args_element_name_3;
        PyObject *tmp_left_name_1;
        PyObject *tmp_left_name_2;
        PyObject *tmp_source_name_7;
        PyObject *tmp_right_name_1;
        PyObject *tmp_right_name_2;
        PyObject *tmp_source_name_8;
        tmp_mvar_value_3 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os);

        if (unlikely(tmp_mvar_value_3 == NULL)) {
            tmp_mvar_value_3 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
        }

        if (tmp_mvar_value_3 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
            exception_tb = NULL;

            exception_lineno = 1097;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }

        tmp_source_name_6 = tmp_mvar_value_3;
        tmp_called_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_6, const_str_plain_popen);
        if (tmp_called_name_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1097;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_ui);
        tmp_source_name_7 = par_ui;
        tmp_left_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_7, const_str_plain_prefix);
        if (tmp_left_name_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_2);

            exception_lineno = 1097;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_right_name_1 = const_str_digest_be268c849f1c37b6177304e3023d15bb;
        tmp_left_name_1 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_2, tmp_right_name_1);
        Py_DECREF(tmp_left_name_2);
        if (tmp_left_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_2);

            exception_lineno = 1097;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_ui);
        tmp_source_name_8 = par_ui;
        tmp_right_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_8, const_str_plain_devname);
        if (tmp_right_name_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_2);
            Py_DECREF(tmp_left_name_1);

            exception_lineno = 1097;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_name_3 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_1, tmp_right_name_2);
        Py_DECREF(tmp_left_name_1);
        Py_DECREF(tmp_right_name_2);
        if (tmp_args_element_name_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_name_2);

            exception_lineno = 1097;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1097;
        tmp_called_instance_11 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_2, tmp_args_element_name_3);
        Py_DECREF(tmp_called_name_2);
        Py_DECREF(tmp_args_element_name_3);
        if (tmp_called_instance_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1097;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1097;
        tmp_assign_source_5 = CALL_METHOD_NO_ARGS(tmp_called_instance_11, const_str_plain_read);
        Py_DECREF(tmp_called_instance_11);
        if (tmp_assign_source_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1097;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        assert(var_txt_q == NULL);
        var_txt_q = tmp_assign_source_5;
    }
    {
        PyObject *tmp_called_name_3;
        PyObject *tmp_mvar_value_4;
        PyObject *tmp_call_result_6;
        PyObject *tmp_args_element_name_4;
        tmp_mvar_value_4 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_postlock);

        if (unlikely(tmp_mvar_value_4 == NULL)) {
            tmp_mvar_value_4 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_postlock);
        }

        if (tmp_mvar_value_4 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 5058 ], 37, 0);
            exception_tb = NULL;

            exception_lineno = 1098;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }

        tmp_called_name_3 = tmp_mvar_value_4;
        CHECK_OBJECT(var_index);
        tmp_args_element_name_4 = var_index;
        frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1098;
        tmp_call_result_6 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_3, tmp_args_element_name_4);
        if (tmp_call_result_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1098;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_6);
    }
    {
        PyObject *tmp_assign_source_6;
        PyObject *tmp_called_instance_12;
        PyObject *tmp_mvar_value_5;
        PyObject *tmp_args_element_name_5;
        PyObject *tmp_args_element_name_6;
        tmp_mvar_value_5 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re);

        if (unlikely(tmp_mvar_value_5 == NULL)) {
            tmp_mvar_value_5 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_re);
        }

        if (tmp_mvar_value_5 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 699 ], 31, 0);
            exception_tb = NULL;

            exception_lineno = 1099;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_12 = tmp_mvar_value_5;
        tmp_args_element_name_5 = const_str_digest_faec9bdfd28e293a6c6ca23affd7d404;
        CHECK_OBJECT(var_txt_q);
        tmp_args_element_name_6 = var_txt_q;
        frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1099;
        {
            PyObject *call_args[] = {tmp_args_element_name_5, tmp_args_element_name_6};
            tmp_assign_source_6 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_12, const_str_plain_search, call_args);
        }

        if (tmp_assign_source_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1099;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        assert(var_m_na == NULL);
        var_m_na = tmp_assign_source_6;
    }
    {
        nuitka_bool tmp_condition_result_4;
        int tmp_truth_name_1;
        CHECK_OBJECT(var_m_na);
        tmp_truth_name_1 = CHECK_IF_TRUE(var_m_na);
        if (tmp_truth_name_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1100;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_4 = tmp_truth_name_1 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_4 == NUITKA_BOOL_TRUE) {
            goto branch_yes_4;
        } else {
            goto branch_no_4;
        }
        branch_yes_4:;
        {
            PyObject *tmp_called_instance_13;
            PyObject *tmp_call_result_7;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_13 = par_ui;
            frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1101;
            tmp_call_result_7 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_13, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_9c9050705c516c0ecbe3d2260b2ac30e_tuple, 0));

            if (tmp_call_result_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1101;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_7);
        }
        tmp_return_value = Py_None;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
        branch_no_4:;
    }
    {
        nuitka_bool tmp_condition_result_5;
        PyObject *tmp_operand_name_1;
        PyObject *tmp_source_name_9;
        CHECK_OBJECT(par_ui);
        tmp_source_name_9 = par_ui;
        tmp_operand_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_9, const_str_plain_warned);
        if (tmp_operand_name_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1104;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_res = CHECK_IF_TRUE(tmp_operand_name_1);
        Py_DECREF(tmp_operand_name_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1104;
            type_description_1 = "oooooooooooNooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_5 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_5 == NUITKA_BOOL_TRUE) {
            goto branch_yes_5;
        } else {
            goto branch_no_5;
        }
        branch_yes_5:;
        {
            PyObject *tmp_assign_source_7;
            PyObject *tmp_called_name_4;
            PyObject *tmp_source_name_10;
            PyObject *tmp_mvar_value_6;
            PyObject *tmp_kw_name_1;
            PyObject *tmp_dict_key_1;
            PyObject *tmp_dict_value_1;
            PyObject *tmp_source_name_11;
            PyObject *tmp_mvar_value_7;
            PyObject *tmp_dict_key_2;
            PyObject *tmp_dict_value_2;
            PyObject *tmp_source_name_12;
            PyObject *tmp_mvar_value_8;
            PyObject *tmp_dict_key_3;
            PyObject *tmp_dict_value_3;
            tmp_mvar_value_6 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

            if (unlikely(tmp_mvar_value_6 == NULL)) {
                tmp_mvar_value_6 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
            }

            if (tmp_mvar_value_6 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                exception_tb = NULL;

                exception_lineno = 1105;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }

            tmp_source_name_10 = tmp_mvar_value_6;
            tmp_called_name_4 = LOOKUP_ATTRIBUTE(tmp_source_name_10, const_str_plain_MessageDialog);
            if (tmp_called_name_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1105;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }
            tmp_mvar_value_7 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

            if (unlikely(tmp_mvar_value_7 == NULL)) {
                tmp_mvar_value_7 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
            }

            if (tmp_mvar_value_7 == NULL) {
                Py_DECREF(tmp_called_name_4);
                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                exception_tb = NULL;

                exception_lineno = 1105;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }

            tmp_source_name_11 = tmp_mvar_value_7;
            tmp_dict_value_1 = LOOKUP_ATTRIBUTE(tmp_source_name_11, const_str_plain_MESSAGE_WARNING);
            if (tmp_dict_value_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_4);

                exception_lineno = 1105;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }
            tmp_dict_key_1 = const_str_plain_type;
            tmp_kw_name_1 = _PyDict_NewPresized( 3 );
            tmp_res = PyDict_SetItem(tmp_kw_name_1, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            assert(!(tmp_res != 0));
            tmp_mvar_value_8 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

            if (unlikely(tmp_mvar_value_8 == NULL)) {
                tmp_mvar_value_8 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
            }

            if (tmp_mvar_value_8 == NULL) {
                Py_DECREF(tmp_called_name_4);
                Py_DECREF(tmp_kw_name_1);
                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                exception_tb = NULL;

                exception_lineno = 1105;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }

            tmp_source_name_12 = tmp_mvar_value_8;
            tmp_dict_value_2 = LOOKUP_ATTRIBUTE(tmp_source_name_12, const_str_plain_BUTTONS_YES_NO);
            if (tmp_dict_value_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_4);
                Py_DECREF(tmp_kw_name_1);

                exception_lineno = 1105;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }
            tmp_dict_key_2 = const_str_plain_buttons;
            tmp_res = PyDict_SetItem(tmp_kw_name_1, tmp_dict_key_2, tmp_dict_value_2);
            Py_DECREF(tmp_dict_value_2);
            assert(!(tmp_res != 0));
            CHECK_OBJECT(par_ui);
            tmp_dict_value_3 = par_ui;
            tmp_dict_key_3 = const_str_plain_parent;
            tmp_res = PyDict_SetItem(tmp_kw_name_1, tmp_dict_key_3, tmp_dict_value_3);
            assert(!(tmp_res != 0));
            frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1105;
            tmp_assign_source_7 = CALL_FUNCTION_WITH_KEYARGS(tmp_called_name_4, tmp_kw_name_1);
            Py_DECREF(tmp_called_name_4);
            Py_DECREF(tmp_kw_name_1);
            if (tmp_assign_source_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1105;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }
            assert(var_message == NULL);
            var_message = tmp_assign_source_7;
        }
        {
            PyObject *tmp_called_name_5;
            PyObject *tmp_source_name_13;
            PyObject *tmp_call_result_8;
            PyObject *tmp_args_element_name_7;
            PyObject *tmp_left_name_3;
            PyObject *tmp_left_name_4;
            PyObject *tmp_right_name_3;
            PyObject *tmp_source_name_14;
            PyObject *tmp_right_name_4;
            CHECK_OBJECT(var_message);
            tmp_source_name_13 = var_message;
            tmp_called_name_5 = LOOKUP_ATTRIBUTE(tmp_source_name_13, const_str_plain_set_markup);
            if (tmp_called_name_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1106;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }
            tmp_left_name_4 = const_str_digest_f4b7409799ba9a8f206c49ee6bc18bb9;
            CHECK_OBJECT(par_ui);
            tmp_source_name_14 = par_ui;
            tmp_right_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_14, const_str_plain_devname);
            if (tmp_right_name_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_5);

                exception_lineno = 1106;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }
            tmp_left_name_3 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_4, tmp_right_name_3);
            Py_DECREF(tmp_right_name_3);
            if (tmp_left_name_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_5);

                exception_lineno = 1106;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }
            tmp_right_name_4 = const_str_digest_1718bd04689643446339ebf62f809ce5;
            tmp_args_element_name_7 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_3, tmp_right_name_4);
            Py_DECREF(tmp_left_name_3);
            if (tmp_args_element_name_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_5);

                exception_lineno = 1106;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }
            frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1106;
            tmp_call_result_8 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_5, tmp_args_element_name_7);
            Py_DECREF(tmp_called_name_5);
            Py_DECREF(tmp_args_element_name_7);
            if (tmp_call_result_8 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1106;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_8);
        }
        {
            PyObject *tmp_assign_source_8;
            PyObject *tmp_called_instance_14;
            CHECK_OBJECT(var_message);
            tmp_called_instance_14 = var_message;
            frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1108;
            tmp_assign_source_8 = CALL_METHOD_NO_ARGS(tmp_called_instance_14, const_str_plain_run);
            if (tmp_assign_source_8 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1108;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }
            assert(var_res == NULL);
            var_res = tmp_assign_source_8;
        }
        {
            nuitka_bool tmp_condition_result_6;
            PyObject *tmp_compexpr_left_4;
            PyObject *tmp_compexpr_right_4;
            PyObject *tmp_source_name_15;
            PyObject *tmp_mvar_value_9;
            CHECK_OBJECT(var_res);
            tmp_compexpr_left_4 = var_res;
            tmp_mvar_value_9 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

            if (unlikely(tmp_mvar_value_9 == NULL)) {
                tmp_mvar_value_9 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
            }

            if (tmp_mvar_value_9 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                exception_tb = NULL;

                exception_lineno = 1109;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }

            tmp_source_name_15 = tmp_mvar_value_9;
            tmp_compexpr_right_4 = LOOKUP_ATTRIBUTE(tmp_source_name_15, const_str_plain_RESPONSE_YES);
            if (tmp_compexpr_right_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1109;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_4, tmp_compexpr_right_4);
            Py_DECREF(tmp_compexpr_right_4);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1109;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_6 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_6 == NUITKA_BOOL_TRUE) {
                goto branch_yes_6;
            } else {
                goto branch_no_6;
            }
            branch_yes_6:;
            {
                PyObject *tmp_called_instance_15;
                PyObject *tmp_call_result_9;
                CHECK_OBJECT(var_message);
                tmp_called_instance_15 = var_message;
                frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1110;
                tmp_call_result_9 = CALL_METHOD_NO_ARGS(tmp_called_instance_15, const_str_plain_destroy);
                if (tmp_call_result_9 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1110;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_9);
            }
            {
                PyObject *tmp_assattr_name_2;
                PyObject *tmp_assattr_target_2;
                tmp_assattr_name_2 = Py_True;
                CHECK_OBJECT(par_ui);
                tmp_assattr_target_2 = par_ui;
                tmp_result = SET_ATTRIBUTE(tmp_assattr_target_2, const_str_plain_warned, tmp_assattr_name_2);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1111;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
            }
            {
                PyObject *tmp_assattr_name_3;
                PyObject *tmp_assattr_target_3;
                CHECK_OBJECT(var_psid);
                tmp_assattr_name_3 = var_psid;
                CHECK_OBJECT(par_ui);
                tmp_assattr_target_3 = par_ui;
                tmp_result = SET_ATTRIBUTE(tmp_assattr_target_3, const_str_plain_orig, tmp_assattr_name_3);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1112;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
            }
            {
                PyObject *tmp_called_instance_16;
                PyObject *tmp_called_instance_17;
                PyObject *tmp_source_name_16;
                PyObject *tmp_call_result_10;
                CHECK_OBJECT(par_ui);
                tmp_source_name_16 = par_ui;
                tmp_called_instance_17 = LOOKUP_ATTRIBUTE(tmp_source_name_16, const_str_plain_revert_psid_entry);
                if (tmp_called_instance_17 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1113;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1113;
                tmp_called_instance_16 = CALL_METHOD_NO_ARGS(tmp_called_instance_17, const_str_plain_get_buffer);
                Py_DECREF(tmp_called_instance_17);
                if (tmp_called_instance_16 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1113;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1113;
                tmp_call_result_10 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_16, const_str_plain_delete_text, &PyTuple_GET_ITEM(const_tuple_int_0_int_neg_1_tuple, 0));

                Py_DECREF(tmp_called_instance_16);
                if (tmp_call_result_10 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1113;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_10);
            }
            {
                PyObject *tmp_called_instance_18;
                PyObject *tmp_called_instance_19;
                PyObject *tmp_source_name_17;
                PyObject *tmp_call_result_11;
                CHECK_OBJECT(par_ui);
                tmp_source_name_17 = par_ui;
                tmp_called_instance_19 = LOOKUP_ATTRIBUTE(tmp_source_name_17, const_str_plain_revert_agree_entry);
                if (tmp_called_instance_19 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1114;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1114;
                tmp_called_instance_18 = CALL_METHOD_NO_ARGS(tmp_called_instance_19, const_str_plain_get_buffer);
                Py_DECREF(tmp_called_instance_19);
                if (tmp_called_instance_18 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1114;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1114;
                tmp_call_result_11 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_18, const_str_plain_delete_text, &PyTuple_GET_ITEM(const_tuple_int_0_int_neg_1_tuple, 0));

                Py_DECREF(tmp_called_instance_18);
                if (tmp_call_result_11 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1114;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_11);
            }
            {
                PyObject *tmp_called_name_6;
                PyObject *tmp_source_name_18;
                PyObject *tmp_source_name_19;
                PyObject *tmp_call_result_12;
                PyObject *tmp_args_element_name_8;
                PyObject *tmp_left_name_5;
                PyObject *tmp_left_name_6;
                PyObject *tmp_right_name_5;
                PyObject *tmp_source_name_20;
                PyObject *tmp_right_name_6;
                CHECK_OBJECT(par_ui);
                tmp_source_name_19 = par_ui;
                tmp_source_name_18 = LOOKUP_ATTRIBUTE(tmp_source_name_19, const_str_plain_op_instr);
                if (tmp_source_name_18 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1115;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                tmp_called_name_6 = LOOKUP_ATTRIBUTE(tmp_source_name_18, const_str_plain_set_text);
                Py_DECREF(tmp_source_name_18);
                if (tmp_called_name_6 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1115;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                tmp_left_name_6 = const_str_digest_d2a9407cb7f5e25c64de1d66a6ecf057;
                CHECK_OBJECT(par_ui);
                tmp_source_name_20 = par_ui;
                tmp_right_name_5 = LOOKUP_ATTRIBUTE(tmp_source_name_20, const_str_plain_devname);
                if (tmp_right_name_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_6);

                    exception_lineno = 1115;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                tmp_left_name_5 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_6, tmp_right_name_5);
                Py_DECREF(tmp_right_name_5);
                if (tmp_left_name_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_6);

                    exception_lineno = 1115;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                tmp_right_name_6 = const_str_digest_5b16678c3d18e424d61d91f7cb6d380c;
                tmp_args_element_name_8 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_5, tmp_right_name_6);
                Py_DECREF(tmp_left_name_5);
                if (tmp_args_element_name_8 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_6);

                    exception_lineno = 1115;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1115;
                tmp_call_result_12 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_6, tmp_args_element_name_8);
                Py_DECREF(tmp_called_name_6);
                Py_DECREF(tmp_args_element_name_8);
                if (tmp_call_result_12 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1115;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_12);
            }
            goto branch_end_6;
            branch_no_6:;
            {
                PyObject *tmp_called_instance_20;
                PyObject *tmp_call_result_13;
                CHECK_OBJECT(var_message);
                tmp_called_instance_20 = var_message;
                frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1117;
                tmp_call_result_13 = CALL_METHOD_NO_ARGS(tmp_called_instance_20, const_str_plain_destroy);
                if (tmp_call_result_13 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1117;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_13);
            }
            branch_end_6:;
        }
        goto branch_end_5;
        branch_no_5:;
        {
            PyObject *tmp_assattr_name_4;
            PyObject *tmp_assattr_target_4;
            tmp_assattr_name_4 = Py_False;
            CHECK_OBJECT(par_ui);
            tmp_assattr_target_4 = par_ui;
            tmp_result = SET_ATTRIBUTE(tmp_assattr_target_4, const_str_plain_warned, tmp_assattr_name_4);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1119;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }
        }
        {
            nuitka_bool tmp_condition_result_7;
            PyObject *tmp_compexpr_left_5;
            PyObject *tmp_compexpr_right_5;
            PyObject *tmp_source_name_21;
            CHECK_OBJECT(par_ui);
            tmp_source_name_21 = par_ui;
            tmp_compexpr_left_5 = LOOKUP_ATTRIBUTE(tmp_source_name_21, const_str_plain_orig);
            if (tmp_compexpr_left_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1120;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }
            CHECK_OBJECT(var_psid);
            tmp_compexpr_right_5 = var_psid;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_5, tmp_compexpr_right_5);
            Py_DECREF(tmp_compexpr_left_5);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1120;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_7 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_7 == NUITKA_BOOL_TRUE) {
                goto branch_yes_7;
            } else {
                goto branch_no_7;
            }
            branch_yes_7:;
            {
                PyObject *tmp_assattr_name_5;
                PyObject *tmp_assattr_target_5;
                tmp_assattr_name_5 = const_str_empty;
                CHECK_OBJECT(par_ui);
                tmp_assattr_target_5 = par_ui;
                tmp_result = SET_ATTRIBUTE(tmp_assattr_target_5, const_str_plain_orig, tmp_assattr_name_5);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1121;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
            }
            {
                PyObject *tmp_called_instance_21;
                PyObject *tmp_call_result_14;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_21 = par_ui;
                frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1122;
                tmp_call_result_14 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_21, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_b3aaeddaf4696821b84a51cc9a3bb621_tuple, 0));

                if (tmp_call_result_14 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1122;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_14);
            }
            tmp_return_value = Py_None;
            Py_INCREF(tmp_return_value);
            goto frame_return_exit_1;
            branch_no_7:;
        }
        {
            PyObject *tmp_assattr_name_6;
            PyObject *tmp_assattr_target_6;
            tmp_assattr_name_6 = const_str_empty;
            CHECK_OBJECT(par_ui);
            tmp_assattr_target_6 = par_ui;
            tmp_result = SET_ATTRIBUTE(tmp_assattr_target_6, const_str_plain_orig, tmp_assattr_name_6);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1124;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }
        }
        {
            PyObject *tmp_assign_source_9;
            PyObject *tmp_called_name_7;
            PyObject *tmp_source_name_22;
            PyObject *tmp_mvar_value_10;
            PyObject *tmp_kw_name_2;
            PyObject *tmp_dict_key_4;
            PyObject *tmp_dict_value_4;
            PyObject *tmp_source_name_23;
            PyObject *tmp_mvar_value_11;
            PyObject *tmp_dict_key_5;
            PyObject *tmp_dict_value_5;
            PyObject *tmp_source_name_24;
            PyObject *tmp_mvar_value_12;
            PyObject *tmp_dict_key_6;
            PyObject *tmp_dict_value_6;
            tmp_mvar_value_10 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

            if (unlikely(tmp_mvar_value_10 == NULL)) {
                tmp_mvar_value_10 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
            }

            if (tmp_mvar_value_10 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                exception_tb = NULL;

                exception_lineno = 1125;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }

            tmp_source_name_22 = tmp_mvar_value_10;
            tmp_called_name_7 = LOOKUP_ATTRIBUTE(tmp_source_name_22, const_str_plain_MessageDialog);
            if (tmp_called_name_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1125;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }
            tmp_mvar_value_11 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

            if (unlikely(tmp_mvar_value_11 == NULL)) {
                tmp_mvar_value_11 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
            }

            if (tmp_mvar_value_11 == NULL) {
                Py_DECREF(tmp_called_name_7);
                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                exception_tb = NULL;

                exception_lineno = 1125;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }

            tmp_source_name_23 = tmp_mvar_value_11;
            tmp_dict_value_4 = LOOKUP_ATTRIBUTE(tmp_source_name_23, const_str_plain_MESSAGE_WARNING);
            if (tmp_dict_value_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_7);

                exception_lineno = 1125;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }
            tmp_dict_key_4 = const_str_plain_type;
            tmp_kw_name_2 = _PyDict_NewPresized( 3 );
            tmp_res = PyDict_SetItem(tmp_kw_name_2, tmp_dict_key_4, tmp_dict_value_4);
            Py_DECREF(tmp_dict_value_4);
            assert(!(tmp_res != 0));
            tmp_mvar_value_12 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

            if (unlikely(tmp_mvar_value_12 == NULL)) {
                tmp_mvar_value_12 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
            }

            if (tmp_mvar_value_12 == NULL) {
                Py_DECREF(tmp_called_name_7);
                Py_DECREF(tmp_kw_name_2);
                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                exception_tb = NULL;

                exception_lineno = 1125;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }

            tmp_source_name_24 = tmp_mvar_value_12;
            tmp_dict_value_5 = LOOKUP_ATTRIBUTE(tmp_source_name_24, const_str_plain_BUTTONS_YES_NO);
            if (tmp_dict_value_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_7);
                Py_DECREF(tmp_kw_name_2);

                exception_lineno = 1125;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }
            tmp_dict_key_5 = const_str_plain_buttons;
            tmp_res = PyDict_SetItem(tmp_kw_name_2, tmp_dict_key_5, tmp_dict_value_5);
            Py_DECREF(tmp_dict_value_5);
            assert(!(tmp_res != 0));
            CHECK_OBJECT(par_ui);
            tmp_dict_value_6 = par_ui;
            tmp_dict_key_6 = const_str_plain_parent;
            tmp_res = PyDict_SetItem(tmp_kw_name_2, tmp_dict_key_6, tmp_dict_value_6);
            assert(!(tmp_res != 0));
            frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1125;
            tmp_assign_source_9 = CALL_FUNCTION_WITH_KEYARGS(tmp_called_name_7, tmp_kw_name_2);
            Py_DECREF(tmp_called_name_7);
            Py_DECREF(tmp_kw_name_2);
            if (tmp_assign_source_9 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1125;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }
            assert(var_message == NULL);
            var_message = tmp_assign_source_9;
        }
        {
            PyObject *tmp_called_instance_22;
            PyObject *tmp_call_result_15;
            CHECK_OBJECT(var_message);
            tmp_called_instance_22 = var_message;
            frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1126;
            tmp_call_result_15 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_22, const_str_plain_set_markup, &PyTuple_GET_ITEM(const_tuple_str_digest_5af8014053f531f53e7788b48885948b_tuple, 0));

            if (tmp_call_result_15 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1126;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_15);
        }
        {
            PyObject *tmp_assign_source_10;
            PyObject *tmp_called_instance_23;
            CHECK_OBJECT(var_message);
            tmp_called_instance_23 = var_message;
            frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1128;
            tmp_assign_source_10 = CALL_METHOD_NO_ARGS(tmp_called_instance_23, const_str_plain_run);
            if (tmp_assign_source_10 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1128;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }
            assert(var_res == NULL);
            var_res = tmp_assign_source_10;
        }
        {
            nuitka_bool tmp_condition_result_8;
            PyObject *tmp_compexpr_left_6;
            PyObject *tmp_compexpr_right_6;
            PyObject *tmp_source_name_25;
            PyObject *tmp_mvar_value_13;
            CHECK_OBJECT(var_res);
            tmp_compexpr_left_6 = var_res;
            tmp_mvar_value_13 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk);

            if (unlikely(tmp_mvar_value_13 == NULL)) {
                tmp_mvar_value_13 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_gtk);
            }

            if (tmp_mvar_value_13 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 316 ], 32, 0);
                exception_tb = NULL;

                exception_lineno = 1129;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }

            tmp_source_name_25 = tmp_mvar_value_13;
            tmp_compexpr_right_6 = LOOKUP_ATTRIBUTE(tmp_source_name_25, const_str_plain_RESPONSE_YES);
            if (tmp_compexpr_right_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1129;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_6, tmp_compexpr_right_6);
            Py_DECREF(tmp_compexpr_right_6);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1129;
                type_description_1 = "oooooooooooNooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_8 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_8 == NUITKA_BOOL_TRUE) {
                goto branch_yes_8;
            } else {
                goto branch_no_8;
            }
            branch_yes_8:;
            {
                PyObject *tmp_called_instance_24;
                PyObject *tmp_call_result_16;
                CHECK_OBJECT(var_message);
                tmp_called_instance_24 = var_message;
                frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1130;
                tmp_call_result_16 = CALL_METHOD_NO_ARGS(tmp_called_instance_24, const_str_plain_destroy);
                if (tmp_call_result_16 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1130;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_16);
            }
            {
                PyObject *tmp_called_instance_25;
                PyObject *tmp_call_result_17;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_25 = par_ui;
                frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1132;
                tmp_call_result_17 = CALL_METHOD_NO_ARGS(tmp_called_instance_25, const_str_plain_start_spin);
                if (tmp_call_result_17 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1132;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_17);
            }
            {
                PyObject *tmp_called_instance_26;
                PyObject *tmp_source_name_26;
                PyObject *tmp_call_result_18;
                CHECK_OBJECT(par_ui);
                tmp_source_name_26 = par_ui;
                tmp_called_instance_26 = LOOKUP_ATTRIBUTE(tmp_source_name_26, const_str_plain_wait_instr);
                if (tmp_called_instance_26 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1133;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1133;
                tmp_call_result_18 = CALL_METHOD_NO_ARGS(tmp_called_instance_26, const_str_plain_show);
                Py_DECREF(tmp_called_instance_26);
                if (tmp_call_result_18 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1133;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_18);
            }
            {
                PyObject *tmp_assattr_name_7;
                PyObject *tmp_assattr_target_7;
                tmp_assattr_name_7 = Py_True;
                CHECK_OBJECT(par_ui);
                tmp_assattr_target_7 = par_ui;
                tmp_result = SET_ATTRIBUTE(tmp_assattr_target_7, const_str_plain_op_inprogress, tmp_assattr_name_7);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1134;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
            }
            {
                PyObject *tmp_assign_source_11;
                PyObject *tmp_called_instance_27;
                PyObject *tmp_mvar_value_14;
                tmp_mvar_value_14 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_threading);

                if (unlikely(tmp_mvar_value_14 == NULL)) {
                    tmp_mvar_value_14 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_threading);
                }

                if (tmp_mvar_value_14 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 661 ], 38, 0);
                    exception_tb = NULL;

                    exception_lineno = 1139;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }

                tmp_called_instance_27 = tmp_mvar_value_14;
                frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1139;
                tmp_assign_source_11 = CALL_METHOD_NO_ARGS(tmp_called_instance_27, const_str_plain_Event);
                if (tmp_assign_source_11 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1139;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                assert(var_e == NULL);
                var_e = tmp_assign_source_11;
            }
            {
                PyObject *tmp_assign_source_12;
                PyObject *tmp_called_name_8;
                PyObject *tmp_source_name_27;
                PyObject *tmp_mvar_value_15;
                PyObject *tmp_kw_name_3;
                PyObject *tmp_dict_key_7;
                PyObject *tmp_dict_value_7;
                PyObject *tmp_source_name_28;
                PyObject *tmp_mvar_value_16;
                PyObject *tmp_dict_key_8;
                PyObject *tmp_dict_value_8;
                PyObject *tmp_tuple_element_1;
                tmp_mvar_value_15 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_threading);

                if (unlikely(tmp_mvar_value_15 == NULL)) {
                    tmp_mvar_value_15 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_threading);
                }

                if (tmp_mvar_value_15 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 661 ], 38, 0);
                    exception_tb = NULL;

                    exception_lineno = 1140;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }

                tmp_source_name_27 = tmp_mvar_value_15;
                tmp_called_name_8 = LOOKUP_ATTRIBUTE(tmp_source_name_27, const_str_plain_Thread);
                if (tmp_called_name_8 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1140;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                tmp_mvar_value_16 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_runthread);

                if (unlikely(tmp_mvar_value_16 == NULL)) {
                    tmp_mvar_value_16 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runthread);
                }

                if (tmp_mvar_value_16 == NULL) {
                    Py_DECREF(tmp_called_name_8);
                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 1304 ], 38, 0);
                    exception_tb = NULL;

                    exception_lineno = 1140;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }

                tmp_source_name_28 = tmp_mvar_value_16;
                tmp_dict_value_7 = LOOKUP_ATTRIBUTE(tmp_source_name_28, const_str_plain_rt_revertPSID);
                if (tmp_dict_value_7 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_8);

                    exception_lineno = 1140;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                tmp_dict_key_7 = const_str_plain_target;
                tmp_kw_name_3 = _PyDict_NewPresized( 2 );
                tmp_res = PyDict_SetItem(tmp_kw_name_3, tmp_dict_key_7, tmp_dict_value_7);
                Py_DECREF(tmp_dict_value_7);
                assert(!(tmp_res != 0));
                CHECK_OBJECT(par_ui);
                tmp_tuple_element_1 = par_ui;
                tmp_dict_value_8 = PyTuple_New(2);
                Py_INCREF(tmp_tuple_element_1);
                PyTuple_SET_ITEM(tmp_dict_value_8, 0, tmp_tuple_element_1);
                CHECK_OBJECT(var_psid);
                tmp_tuple_element_1 = var_psid;
                Py_INCREF(tmp_tuple_element_1);
                PyTuple_SET_ITEM(tmp_dict_value_8, 1, tmp_tuple_element_1);
                tmp_dict_key_8 = const_str_plain_args;
                tmp_res = PyDict_SetItem(tmp_kw_name_3, tmp_dict_key_8, tmp_dict_value_8);
                Py_DECREF(tmp_dict_value_8);
                assert(!(tmp_res != 0));
                frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1140;
                tmp_assign_source_12 = CALL_FUNCTION_WITH_KEYARGS(tmp_called_name_8, tmp_kw_name_3);
                Py_DECREF(tmp_called_name_8);
                Py_DECREF(tmp_kw_name_3);
                if (tmp_assign_source_12 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1140;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                assert(var_t1 == NULL);
                var_t1 = tmp_assign_source_12;
            }
            {
                PyObject *tmp_called_instance_28;
                PyObject *tmp_call_result_19;
                CHECK_OBJECT(var_t1);
                tmp_called_instance_28 = var_t1;
                frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1141;
                tmp_call_result_19 = CALL_METHOD_NO_ARGS(tmp_called_instance_28, const_str_plain_start);
                if (tmp_call_result_19 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1141;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_19);
            }
            {
                PyObject *tmp_assign_source_13;
                PyObject *tmp_called_instance_29;
                PyObject *tmp_mvar_value_17;
                tmp_mvar_value_17 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_time);

                if (unlikely(tmp_mvar_value_17 == NULL)) {
                    tmp_mvar_value_17 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_time);
                }

                if (tmp_mvar_value_17 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 1164 ], 33, 0);
                    exception_tb = NULL;

                    exception_lineno = 1142;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }

                tmp_called_instance_29 = tmp_mvar_value_17;
                frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1142;
                tmp_assign_source_13 = CALL_METHOD_NO_ARGS(tmp_called_instance_29, const_str_plain_time);
                if (tmp_assign_source_13 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1142;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                assert(var_start_time == NULL);
                var_start_time = tmp_assign_source_13;
            }
            {
                PyObject *tmp_assign_source_14;
                PyObject *tmp_called_name_9;
                PyObject *tmp_source_name_29;
                PyObject *tmp_mvar_value_18;
                PyObject *tmp_kw_name_4;
                PyObject *tmp_dict_key_9;
                PyObject *tmp_dict_value_9;
                PyObject *tmp_source_name_30;
                PyObject *tmp_mvar_value_19;
                PyObject *tmp_dict_key_10;
                PyObject *tmp_dict_value_10;
                PyObject *tmp_tuple_element_2;
                PyObject *tmp_list_element_1;
                PyObject *tmp_source_name_31;
                PyObject *tmp_mvar_value_20;
                tmp_mvar_value_18 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_threading);

                if (unlikely(tmp_mvar_value_18 == NULL)) {
                    tmp_mvar_value_18 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_threading);
                }

                if (tmp_mvar_value_18 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 661 ], 38, 0);
                    exception_tb = NULL;

                    exception_lineno = 1143;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }

                tmp_source_name_29 = tmp_mvar_value_18;
                tmp_called_name_9 = LOOKUP_ATTRIBUTE(tmp_source_name_29, const_str_plain_Thread);
                if (tmp_called_name_9 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1143;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                tmp_mvar_value_19 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_runthread);

                if (unlikely(tmp_mvar_value_19 == NULL)) {
                    tmp_mvar_value_19 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runthread);
                }

                if (tmp_mvar_value_19 == NULL) {
                    Py_DECREF(tmp_called_name_9);
                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 1304 ], 38, 0);
                    exception_tb = NULL;

                    exception_lineno = 1143;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }

                tmp_source_name_30 = tmp_mvar_value_19;
                tmp_dict_value_9 = LOOKUP_ATTRIBUTE(tmp_source_name_30, const_str_plain_timeout_track);
                if (tmp_dict_value_9 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_9);

                    exception_lineno = 1143;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                tmp_dict_key_9 = const_str_plain_target;
                tmp_kw_name_4 = _PyDict_NewPresized( 2 );
                tmp_res = PyDict_SetItem(tmp_kw_name_4, tmp_dict_key_9, tmp_dict_value_9);
                Py_DECREF(tmp_dict_value_9);
                assert(!(tmp_res != 0));
                CHECK_OBJECT(par_ui);
                tmp_tuple_element_2 = par_ui;
                tmp_dict_value_10 = PyTuple_New(13);
                Py_INCREF(tmp_tuple_element_2);
                PyTuple_SET_ITEM(tmp_dict_value_10, 0, tmp_tuple_element_2);
                tmp_tuple_element_2 = const_float_60_0;
                Py_INCREF(tmp_tuple_element_2);
                PyTuple_SET_ITEM(tmp_dict_value_10, 1, tmp_tuple_element_2);
                CHECK_OBJECT(var_start_time);
                tmp_tuple_element_2 = var_start_time;
                Py_INCREF(tmp_tuple_element_2);
                PyTuple_SET_ITEM(tmp_dict_value_10, 2, tmp_tuple_element_2);
                CHECK_OBJECT(var_t1);
                tmp_list_element_1 = var_t1;
                tmp_tuple_element_2 = PyList_New(1);
                Py_INCREF(tmp_list_element_1);
                PyList_SET_ITEM(tmp_tuple_element_2, 0, tmp_list_element_1);
                PyTuple_SET_ITEM(tmp_dict_value_10, 3, tmp_tuple_element_2);
                tmp_tuple_element_2 = Py_None;
                Py_INCREF(tmp_tuple_element_2);
                PyTuple_SET_ITEM(tmp_dict_value_10, 4, tmp_tuple_element_2);
                CHECK_OBJECT(var_e);
                tmp_tuple_element_2 = var_e;
                Py_INCREF(tmp_tuple_element_2);
                PyTuple_SET_ITEM(tmp_dict_value_10, 5, tmp_tuple_element_2);
                tmp_tuple_element_2 = Py_None;
                Py_INCREF(tmp_tuple_element_2);
                PyTuple_SET_ITEM(tmp_dict_value_10, 6, tmp_tuple_element_2);
                tmp_tuple_element_2 = Py_None;
                Py_INCREF(tmp_tuple_element_2);
                PyTuple_SET_ITEM(tmp_dict_value_10, 7, tmp_tuple_element_2);
                tmp_mvar_value_20 = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain_cleanop);

                if (unlikely(tmp_mvar_value_20 == NULL)) {
                    tmp_mvar_value_20 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_cleanop);
                }

                if (tmp_mvar_value_20 == NULL) {
                    Py_DECREF(tmp_called_name_9);
                    Py_DECREF(tmp_kw_name_4);
                    Py_DECREF(tmp_dict_value_10);
                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 5171 ], 36, 0);
                    exception_tb = NULL;

                    exception_lineno = 1143;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }

                tmp_source_name_31 = tmp_mvar_value_20;
                tmp_tuple_element_2 = LOOKUP_ATTRIBUTE(tmp_source_name_31, const_str_plain_timeout_cleanup);
                if (tmp_tuple_element_2 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_9);
                    Py_DECREF(tmp_kw_name_4);
                    Py_DECREF(tmp_dict_value_10);

                    exception_lineno = 1143;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                PyTuple_SET_ITEM(tmp_dict_value_10, 8, tmp_tuple_element_2);
                tmp_tuple_element_2 = const_int_neg_1;
                Py_INCREF(tmp_tuple_element_2);
                PyTuple_SET_ITEM(tmp_dict_value_10, 9, tmp_tuple_element_2);
                tmp_tuple_element_2 = const_int_neg_1;
                Py_INCREF(tmp_tuple_element_2);
                PyTuple_SET_ITEM(tmp_dict_value_10, 10, tmp_tuple_element_2);
                tmp_tuple_element_2 = const_int_neg_1;
                Py_INCREF(tmp_tuple_element_2);
                PyTuple_SET_ITEM(tmp_dict_value_10, 11, tmp_tuple_element_2);
                tmp_tuple_element_2 = const_int_neg_1;
                Py_INCREF(tmp_tuple_element_2);
                PyTuple_SET_ITEM(tmp_dict_value_10, 12, tmp_tuple_element_2);
                tmp_dict_key_10 = const_str_plain_args;
                tmp_res = PyDict_SetItem(tmp_kw_name_4, tmp_dict_key_10, tmp_dict_value_10);
                Py_DECREF(tmp_dict_value_10);
                assert(!(tmp_res != 0));
                frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1143;
                tmp_assign_source_14 = CALL_FUNCTION_WITH_KEYARGS(tmp_called_name_9, tmp_kw_name_4);
                Py_DECREF(tmp_called_name_9);
                Py_DECREF(tmp_kw_name_4);
                if (tmp_assign_source_14 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1143;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                assert(var_t2 == NULL);
                var_t2 = tmp_assign_source_14;
            }
            {
                PyObject *tmp_called_instance_30;
                PyObject *tmp_call_result_20;
                CHECK_OBJECT(var_t2);
                tmp_called_instance_30 = var_t2;
                frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1144;
                tmp_call_result_20 = CALL_METHOD_NO_ARGS(tmp_called_instance_30, const_str_plain_start);
                if (tmp_call_result_20 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1144;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_20);
            }
            goto branch_end_8;
            branch_no_8:;
            {
                PyObject *tmp_called_instance_31;
                PyObject *tmp_call_result_21;
                CHECK_OBJECT(var_message);
                tmp_called_instance_31 = var_message;
                frame_db6589d790491bc2804e02d20d69c89f->m_frame.f_lineno = 1146;
                tmp_call_result_21 = CALL_METHOD_NO_ARGS(tmp_called_instance_31, const_str_plain_destroy);
                if (tmp_call_result_21 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1146;
                    type_description_1 = "oooooooooooNooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_21);
            }
            branch_end_8:;
        }
        branch_end_5:;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_db6589d790491bc2804e02d20d69c89f);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_db6589d790491bc2804e02d20d69c89f);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto try_return_handler_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_db6589d790491bc2804e02d20d69c89f);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_db6589d790491bc2804e02d20d69c89f, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_db6589d790491bc2804e02d20d69c89f->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_db6589d790491bc2804e02d20d69c89f, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_db6589d790491bc2804e02d20d69c89f,
        type_description_1,
        par_button,
        par_ui,
        var_psid,
        var_index,
        var_e,
        var_res,
        var_t1,
        var_t2,
        var_text_a,
        var_txt_q,
        var_m_na,
        NULL,
        var_message,
        var_txt,
        var_start_time
    );


    // Release cached frame.
    if (frame_db6589d790491bc2804e02d20d69c89f == cache_frame_db6589d790491bc2804e02d20d69c89f) {
        Py_DECREF(frame_db6589d790491bc2804e02d20d69c89f);
    }
    cache_frame_db6589d790491bc2804e02d20d69c89f = NULL;

    assertFrameObject(frame_db6589d790491bc2804e02d20d69c89f);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(runop$$$function_13_run_revertPSID);
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    Py_XDECREF(var_psid);
    var_psid = NULL;

    Py_XDECREF(var_index);
    var_index = NULL;

    Py_XDECREF(var_e);
    var_e = NULL;

    Py_XDECREF(var_res);
    var_res = NULL;

    Py_XDECREF(var_t1);
    var_t1 = NULL;

    Py_XDECREF(var_t2);
    var_t2 = NULL;

    Py_XDECREF(var_text_a);
    var_text_a = NULL;

    Py_XDECREF(var_txt_q);
    var_txt_q = NULL;

    Py_XDECREF(var_m_na);
    var_m_na = NULL;

    Py_XDECREF(var_message);
    var_message = NULL;

    Py_XDECREF(var_txt);
    var_txt = NULL;

    Py_XDECREF(var_start_time);
    var_start_time = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_psid);
    var_psid = NULL;

    Py_XDECREF(var_index);
    var_index = NULL;

    Py_XDECREF(var_e);
    var_e = NULL;

    Py_XDECREF(var_res);
    var_res = NULL;

    Py_XDECREF(var_t1);
    var_t1 = NULL;

    Py_XDECREF(var_t2);
    var_t2 = NULL;

    Py_XDECREF(var_text_a);
    var_text_a = NULL;

    Py_XDECREF(var_txt_q);
    var_txt_q = NULL;

    Py_XDECREF(var_m_na);
    var_m_na = NULL;

    Py_XDECREF(var_message);
    var_message = NULL;

    Py_XDECREF(var_txt);
    var_txt = NULL;

    Py_XDECREF(var_start_time);
    var_start_time = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto function_exception_exit;
    // End of try:

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(runop$$$function_13_run_revertPSID);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_button);
    Py_DECREF(par_button);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_button);
    Py_DECREF(par_button);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}



static PyObject *MAKE_FUNCTION_runop$$$function_10_run_unlockPBA() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_runop$$$function_10_run_unlockPBA,
        const_str_plain_run_unlockPBA,
#if PYTHON_VERSION >= 300
        NULL,
#endif
        codeobj_513ef25aeb41ef62c916ffbbda8f298b,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_runop,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_runop$$$function_11_run_revertKeep() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_runop$$$function_11_run_revertKeep,
        const_str_plain_run_revertKeep,
#if PYTHON_VERSION >= 300
        NULL,
#endif
        codeobj_653a72570e29d9caae1a16892ba5534f,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_runop,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_runop$$$function_12_run_revertErase() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_runop$$$function_12_run_revertErase,
        const_str_plain_run_revertErase,
#if PYTHON_VERSION >= 300
        NULL,
#endif
        codeobj_3743f1e053a48b225c6d8ce44010ee9f,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_runop,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_runop$$$function_13_run_revertPSID() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_runop$$$function_13_run_revertPSID,
        const_str_plain_run_revertPSID,
#if PYTHON_VERSION >= 300
        NULL,
#endif
        codeobj_db6589d790491bc2804e02d20d69c89f,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_runop,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_runop$$$function_1_define_lock_t() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_runop$$$function_1_define_lock_t,
        const_str_plain_define_lock_t,
#if PYTHON_VERSION >= 300
        NULL,
#endif
        codeobj_202dde20e662fcfb2393dae265ecfc13,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_runop,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_runop$$$function_2_prelock() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_runop$$$function_2_prelock,
        const_str_plain_prelock,
#if PYTHON_VERSION >= 300
        NULL,
#endif
        codeobj_705013ccf0aff03db3579727c9abd5af,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_runop,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_runop$$$function_3_postlock() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_runop$$$function_3_postlock,
        const_str_plain_postlock,
#if PYTHON_VERSION >= 300
        NULL,
#endif
        codeobj_1c5dbddc2d72f1eff832ed4eca1b5899,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_runop,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_runop$$$function_4_run_setupFull() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_runop$$$function_4_run_setupFull,
        const_str_plain_run_setupFull,
#if PYTHON_VERSION >= 300
        NULL,
#endif
        codeobj_6b526a20a2c31b45221ec586b02b4694,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_runop,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_runop$$$function_5_run_pbaWrite() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_runop$$$function_5_run_pbaWrite,
        const_str_plain_run_pbaWrite,
#if PYTHON_VERSION >= 300
        NULL,
#endif
        codeobj_94b94040b10849e982615a25a2e7e439,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_runop,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_runop$$$function_6_run_changePW() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_runop$$$function_6_run_changePW,
        const_str_plain_run_changePW,
#if PYTHON_VERSION >= 300
        NULL,
#endif
        codeobj_1d9f736b66df80facf100f38971740c7,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_runop,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_runop$$$function_7_run_setupUSB() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_runop$$$function_7_run_setupUSB,
        const_str_plain_run_setupUSB,
#if PYTHON_VERSION >= 300
        NULL,
#endif
        codeobj_120e6cbb634311d08ade47582d57e262,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_runop,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_runop$$$function_8_run_setupUser() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_runop$$$function_8_run_setupUser,
        const_str_plain_run_setupUser,
#if PYTHON_VERSION >= 300
        NULL,
#endif
        codeobj_9552b6460145c0ce514f3e6d66039fe2,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_runop,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_runop$$$function_9_run_removeUser() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_runop$$$function_9_run_removeUser,
        const_str_plain_run_removeUser,
#if PYTHON_VERSION >= 300
        NULL,
#endif
        codeobj_632cb48e10126135028b190adf4cdebf,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_runop,
        NULL,
        0
    );

    return (PyObject *)result;
}



#if PYTHON_VERSION >= 300
static struct PyModuleDef mdef_runop =
{
    PyModuleDef_HEAD_INIT,
    NULL,                /* m_name, filled later */
    NULL,                /* m_doc */
    -1,                  /* m_size */
    NULL,                /* m_methods */
    NULL,                /* m_reload */
    NULL,                /* m_traverse */
    NULL,                /* m_clear */
    NULL,                /* m_free */
  };
#endif

extern PyObject *const_str_plain___compiled__;

extern PyObject *const_str_plain___package__;
extern PyObject *const_str_empty;

#if PYTHON_VERSION >= 300
extern PyObject *const_str_dot;
extern PyObject *const_str_plain___loader__;
#endif

#if PYTHON_VERSION >= 340
extern PyObject *const_str_plain___spec__;
extern PyObject *const_str_plain__initializing;
extern PyObject *const_str_plain_submodule_search_locations;
#endif

extern void _initCompiledCellType();
extern void _initCompiledGeneratorType();
extern void _initCompiledFunctionType();
extern void _initCompiledMethodType();
extern void _initCompiledFrameType();
#if PYTHON_VERSION >= 350
extern void _initCompiledCoroutineTypes();
#endif
#if PYTHON_VERSION >= 360
extern void _initCompiledAsyncgenTypes();
#endif

extern PyTypeObject Nuitka_Loader_Type;

#ifdef _NUITKA_PLUGIN_DILL_ENABLED
// Provide a way to create find a function via its C code and create it back
// in another process, useful for multiprocessing extensions like dill

function_impl_code functable_runop[] = {
    impl_runop$$$function_1_define_lock_t,
    impl_runop$$$function_2_prelock,
    impl_runop$$$function_3_postlock,
    impl_runop$$$function_4_run_setupFull,
    impl_runop$$$function_5_run_pbaWrite,
    impl_runop$$$function_6_run_changePW,
    impl_runop$$$function_7_run_setupUSB,
    impl_runop$$$function_8_run_setupUser,
    impl_runop$$$function_9_run_removeUser,
    impl_runop$$$function_10_run_unlockPBA,
    impl_runop$$$function_11_run_revertKeep,
    impl_runop$$$function_12_run_revertErase,
    impl_runop$$$function_13_run_revertPSID,
    NULL
};

static char const *_reduce_compiled_function_argnames[] = {
    "func",
    NULL
};

static PyObject *_reduce_compiled_function(PyObject *self, PyObject *args, PyObject *kwds) {
    PyObject *func;

    if (!PyArg_ParseTupleAndKeywords(args, kwds, "O:reduce_compiled_function", (char **)_reduce_compiled_function_argnames, &func, NULL)) {
        return NULL;
    }

    if (Nuitka_Function_Check(func) == false) {
        PyErr_Format(PyExc_TypeError, "not a compiled function");
        return NULL;
    }

    struct Nuitka_FunctionObject *function = (struct Nuitka_FunctionObject *)func;

    function_impl_code *current = functable_runop;
    int offset = 0;

    while (*current != NULL) {
        if (*current == function->m_c_code) {
            break;
        }

        current += 1;
        offset += 1;
    }

    if (*current == NULL) {
        PyErr_Format(PyExc_TypeError, "Cannot find compiled function in module.");
        return NULL;
    }

    PyObject *code_object_desc = PyTuple_New(6);
    PyTuple_SET_ITEM0(code_object_desc, 0, function->m_code_object->co_filename);
    PyTuple_SET_ITEM0(code_object_desc, 1, function->m_code_object->co_name);
    PyTuple_SET_ITEM(code_object_desc, 2, PyLong_FromLong(function->m_code_object->co_firstlineno));
    PyTuple_SET_ITEM0(code_object_desc, 3, function->m_code_object->co_varnames);
    PyTuple_SET_ITEM(code_object_desc, 4, PyLong_FromLong(function->m_code_object->co_argcount));
    PyTuple_SET_ITEM(code_object_desc, 5, PyLong_FromLong(function->m_code_object->co_flags));

    CHECK_OBJECT_DEEP(code_object_desc);

    PyObject *result = PyTuple_New(4);
    PyTuple_SET_ITEM(result, 0, PyLong_FromLong(offset));
    PyTuple_SET_ITEM(result, 1, code_object_desc);
    PyTuple_SET_ITEM0(result, 2, function->m_defaults);
    PyTuple_SET_ITEM0(result, 3, function->m_doc != NULL ? function->m_doc : Py_None);

    CHECK_OBJECT_DEEP(result);

    return result;
}

static PyMethodDef _method_def_reduce_compiled_function = {"reduce_compiled_function", (PyCFunction)_reduce_compiled_function,
                                                           METH_VARARGS | METH_KEYWORDS, NULL};

static char const *_create_compiled_function_argnames[] = {
    "func",
    "code_object_desc",
    "defaults",
    "doc",
    NULL
};


static PyObject *_create_compiled_function(PyObject *self, PyObject *args, PyObject *kwds) {
    CHECK_OBJECT_DEEP(args);

    PyObject *func;
    PyObject *code_object_desc;
    PyObject *defaults;
    PyObject *doc;

    if (!PyArg_ParseTupleAndKeywords(args, kwds, "OOOO:create_compiled_function", (char **)_create_compiled_function_argnames, &func, &code_object_desc, &defaults, &doc, NULL)) {
        return NULL;
    }

    int offset = PyLong_AsLong(func);

    if (offset == -1 && ERROR_OCCURRED()) {
        return NULL;
    }

    if (offset > sizeof(functable_runop) || offset < 0) {
        PyErr_Format(PyExc_TypeError, "Wrong offset for compiled function.");
        return NULL;
    }

    PyObject *filename = PyTuple_GET_ITEM(code_object_desc, 0);
    PyObject *function_name = PyTuple_GET_ITEM(code_object_desc, 1);
    PyObject *line = PyTuple_GET_ITEM(code_object_desc, 2);
    int line_int = PyLong_AsLong(line);
    assert(!ERROR_OCCURRED());

    PyObject *argnames = PyTuple_GET_ITEM(code_object_desc, 3);
    PyObject *arg_count = PyTuple_GET_ITEM(code_object_desc, 4);
    int arg_count_int = PyLong_AsLong(arg_count);
    assert(!ERROR_OCCURRED());
    PyObject *flags = PyTuple_GET_ITEM(code_object_desc, 5);
    int flags_int = PyLong_AsLong(flags);
    assert(!ERROR_OCCURRED());

    PyCodeObject *code_object = MAKE_CODEOBJECT(
        filename,
        line_int,
        flags_int,
        function_name,
        argnames,
        arg_count_int,
        0, // TODO: Missing kw_only_count
        0 // TODO: Missing pos_only_count
    );

    // TODO: More stuff needed for Python3, best to re-order arguments of MAKE_CODEOBJECT.
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        functable_runop[offset],
        code_object->co_name,
#if PYTHON_VERSION >= 300
        NULL, // TODO: Not transferring qualname yet
#endif
        code_object,
        defaults,
#if PYTHON_VERSION >= 300
        NULL, // kwdefaults are done on the outside currently
        NULL, // TODO: Not transferring annotations
#endif
        module_runop,
        doc,
        0
    );

    return (PyObject *)result;
}

static PyMethodDef _method_def_create_compiled_function = {
    "create_compiled_function",
    (PyCFunction)_create_compiled_function,
    METH_VARARGS | METH_KEYWORDS, NULL
};


#endif

// Internal entry point for module code.
PyObject *modulecode_runop(char const *module_full_name) {
#if defined(_NUITKA_EXE) || PYTHON_VERSION >= 300
    static bool _init_done = false;

    // Modules might be imported repeatedly, which is to be ignored.
    if (_init_done) {
        return module_runop;
    } else {
        _init_done = true;
    }
#endif

#ifdef _NUITKA_MODULE
    // In case of a stand alone extension module, need to call initialization
    // the init here because that's the first and only time we are going to get
    // called here.

    // May have to activate constants blob.
#if defined(_NUITKA_CONSTANTS_FROM_RESOURCE)
    loadConstantsResource();
#endif

    // Initialize the constant values used.
    _initBuiltinModule();
    createGlobalConstants();

    /* Initialize the compiled types of Nuitka. */
    _initCompiledCellType();
    _initCompiledGeneratorType();
    _initCompiledFunctionType();
    _initCompiledMethodType();
    _initCompiledFrameType();
#if PYTHON_VERSION >= 350
    _initCompiledCoroutineTypes();
#endif
#if PYTHON_VERSION >= 360
    _initCompiledAsyncgenTypes();
#endif

#if PYTHON_VERSION < 300
    _initSlotCompare();
#endif
#if PYTHON_VERSION >= 270
    _initSlotIternext();
#endif

    patchBuiltinModule();
    patchTypeComparison();

    // Enable meta path based loader if not already done.
#ifdef _NUITKA_TRACE
    PRINT_STRING("runop: Calling setupMetaPathBasedLoader().\n");
#endif
    setupMetaPathBasedLoader();

#if PYTHON_VERSION >= 300
    patchInspectModule();
#endif

#endif

    /* The constants only used by this module are created now. */
#ifdef _NUITKA_TRACE
    PRINT_STRING("runop: Calling createModuleConstants().\n");
#endif
    createModuleConstants();

    /* The code objects used by this module are created now. */
#ifdef _NUITKA_TRACE
    PRINT_STRING("runop: Calling createModuleCodeObjects().\n");
#endif
    createModuleCodeObjects();

    // PRINT_STRING("in initrunop\n");

    // Create the module object first. There are no methods initially, all are
    // added dynamically in actual code only.  Also no "__doc__" is initially
    // set at this time, as it could not contain NUL characters this way, they
    // are instead set in early module code.  No "self" for modules, we have no
    // use for it.
#if PYTHON_VERSION < 300
    module_runop = Py_InitModule4(
        module_full_name,        // Module Name
        NULL,                    // No methods initially, all are added
                                 // dynamically in actual module code only.
        NULL,                    // No "__doc__" is initially set, as it could
                                 // not contain NUL this way, added early in
                                 // actual code.
        NULL,                    // No self for modules, we don't use it.
        PYTHON_API_VERSION
    );
#else
    mdef_runop.m_name = module_full_name;
    module_runop = PyModule_Create(&mdef_runop);
#endif

    moduledict_runop = MODULE_DICT(module_runop);

#ifdef _NUITKA_PLUGIN_DILL_ENABLED
    {
        PyObject *function_tables = PyObject_GetAttrString((PyObject *)builtin_module, "compiled_function_tables");
        if (function_tables == NULL)
        {
            DROP_ERROR_OCCURRED();
            function_tables = PyDict_New();
        }
        PyObject_SetAttrString((PyObject *)builtin_module, "compiled_function_tables", function_tables);
        PyObject *funcs = PyTuple_New(2);
        PyTuple_SetItem(funcs, 0, PyCFunction_New(&_method_def_reduce_compiled_function, NULL));
        PyTuple_SetItem(funcs, 1, PyCFunction_New(&_method_def_create_compiled_function, NULL));
        PyDict_SetItemString(function_tables, module_full_name, funcs);
    }
#endif

    // Set "__compiled__" to what version information we have.
    UPDATE_STRING_DICT0(
        moduledict_runop,
        (Nuitka_StringObject *)const_str_plain___compiled__,
        Nuitka_dunder_compiled_value
    );

    // Update "__package__" value to what it ought to be.
    {
#if 0
        UPDATE_STRING_DICT0(
            moduledict_runop,
            (Nuitka_StringObject *)const_str_plain___package__,
            const_str_empty
        );
#elif 0
        PyObject *module_name = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain___name__);

        UPDATE_STRING_DICT0(
            moduledict_runop,
            (Nuitka_StringObject *)const_str_plain___package__,
            module_name
        );
#else

#if PYTHON_VERSION < 300
        PyObject *module_name = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain___name__);
        char const *module_name_cstr = PyString_AS_STRING(module_name);

        char const *last_dot = strrchr(module_name_cstr, '.');

        if (last_dot != NULL)
        {
            UPDATE_STRING_DICT1(
                moduledict_runop,
                (Nuitka_StringObject *)const_str_plain___package__,
                PyString_FromStringAndSize(module_name_cstr, last_dot - module_name_cstr)
            );
        }
#else
        PyObject *module_name = GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain___name__);
        Py_ssize_t dot_index = PyUnicode_Find(module_name, const_str_dot, 0, PyUnicode_GetLength(module_name), -1);

        if (dot_index != -1)
        {
            UPDATE_STRING_DICT1(
                moduledict_runop,
                (Nuitka_StringObject *)const_str_plain___package__,
                PyUnicode_Substring(module_name, 0, dot_index)
            );
        }
#endif
#endif
    }

    CHECK_OBJECT(module_runop);

// Seems to work for Python2.7 out of the box, but for Python3, the module
// doesn't automatically enter "sys.modules", so do it manually.
#if PYTHON_VERSION >= 300
    {
        int r = PyDict_SetItemString(PyImport_GetModuleDict(), module_full_name, module_runop);
        assert(r != -1);
    }
#endif

    // For deep importing of a module we need to have "__builtins__", so we set
    // it ourselves in the same way than CPython does. Note: This must be done
    // before the frame object is allocated, or else it may fail.

    if (GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain___builtins__) == NULL)
    {
        PyObject *value = (PyObject *)builtin_module;

        // Check if main module, not a dict then but the module itself.
#if !defined(_NUITKA_EXE) || !0
        value = PyModule_GetDict(value);
#endif

        UPDATE_STRING_DICT0(moduledict_runop, (Nuitka_StringObject *)const_str_plain___builtins__, value);
    }

#if PYTHON_VERSION >= 300
    UPDATE_STRING_DICT0(moduledict_runop, (Nuitka_StringObject *)const_str_plain___loader__, (PyObject *)&Nuitka_Loader_Type);
#endif

#if PYTHON_VERSION >= 340
// Set the "__spec__" value

#if 0
    // Main modules just get "None" as spec.
    UPDATE_STRING_DICT0(moduledict_runop, (Nuitka_StringObject *)const_str_plain___spec__, Py_None);
#else
    // Other modules get a "ModuleSpec" from the standard mechanism.
    {
        PyObject *bootstrap_module = PyImport_ImportModule("importlib._bootstrap");
        CHECK_OBJECT(bootstrap_module);
        PyObject *module_spec_class = PyObject_GetAttrString(bootstrap_module, "ModuleSpec");
        Py_DECREF(bootstrap_module);

        PyObject *args[] = {
            GET_STRING_DICT_VALUE(moduledict_runop, (Nuitka_StringObject *)const_str_plain___name__),
            (PyObject *)&Nuitka_Loader_Type
        };

        PyObject *spec_value = CALL_FUNCTION_WITH_ARGS2(
            module_spec_class,
            args
        );
        Py_DECREF(module_spec_class);

        // We can assume this to never fail, or else we are in trouble anyway.
        CHECK_OBJECT(spec_value);

// For packages set the submodule search locations as well, even if to empty
// list, so investigating code will consider it a package.
#if 0
        SET_ATTRIBUTE(spec_value, const_str_plain_submodule_search_locations, PyList_New(0));
#endif

// Mark the execution in the "__spec__" value.
        SET_ATTRIBUTE(spec_value, const_str_plain__initializing, Py_True);

        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain___spec__, spec_value);
    }
#endif
#endif

    // Temp variables if any
    PyObject *tmp_import_from_1__module = NULL;
    struct Nuitka_FrameObject *frame_0fb064299bb8fa1fd3c1c2d5b1d2573e;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;

    // Module code.
    {
        PyObject *tmp_assign_source_1;
        tmp_assign_source_1 = Py_None;
        UPDATE_STRING_DICT0(moduledict_runop, (Nuitka_StringObject *)const_str_plain___doc__, tmp_assign_source_1);
    }
    {
        PyObject *tmp_assign_source_2;
        tmp_assign_source_2 = module_filename_obj;
        UPDATE_STRING_DICT0(moduledict_runop, (Nuitka_StringObject *)const_str_plain___file__, tmp_assign_source_2);
    }
    // Frame without reuse.
    frame_0fb064299bb8fa1fd3c1c2d5b1d2573e = MAKE_MODULE_FRAME(codeobj_0fb064299bb8fa1fd3c1c2d5b1d2573e, module_runop);

    // Push the new frame as the currently active one, and we should be exclusively
    // owning it.
    pushFrameStack(frame_0fb064299bb8fa1fd3c1c2d5b1d2573e);
    assert(Py_REFCNT(frame_0fb064299bb8fa1fd3c1c2d5b1d2573e) == 2);

    // Framed code:
    {
        PyObject *tmp_assign_source_3;
        PyObject *tmp_name_name_1;
        PyObject *tmp_globals_name_1;
        PyObject *tmp_locals_name_1;
        PyObject *tmp_fromlist_name_1;
        tmp_name_name_1 = const_str_plain_ctypes;
        tmp_globals_name_1 = (PyObject *)moduledict_runop;
        tmp_locals_name_1 = Py_None;
        tmp_fromlist_name_1 = Py_None;
        frame_0fb064299bb8fa1fd3c1c2d5b1d2573e->m_frame.f_lineno = 1;
        tmp_assign_source_3 = IMPORT_MODULE4(tmp_name_name_1, tmp_globals_name_1, tmp_locals_name_1, tmp_fromlist_name_1);
        if (tmp_assign_source_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_ctypes, tmp_assign_source_3);
    }
    {
        PyObject *tmp_assign_source_4;
        PyObject *tmp_name_name_2;
        PyObject *tmp_globals_name_2;
        PyObject *tmp_locals_name_2;
        PyObject *tmp_fromlist_name_2;
        tmp_name_name_2 = const_str_plain_cleanop;
        tmp_globals_name_2 = (PyObject *)moduledict_runop;
        tmp_locals_name_2 = Py_None;
        tmp_fromlist_name_2 = Py_None;
        frame_0fb064299bb8fa1fd3c1c2d5b1d2573e->m_frame.f_lineno = 2;
        tmp_assign_source_4 = IMPORT_MODULE4(tmp_name_name_2, tmp_globals_name_2, tmp_locals_name_2, tmp_fromlist_name_2);
        if (tmp_assign_source_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_cleanop, tmp_assign_source_4);
    }
    {
        PyObject *tmp_assign_source_5;
        PyObject *tmp_name_name_3;
        PyObject *tmp_globals_name_3;
        PyObject *tmp_locals_name_3;
        PyObject *tmp_fromlist_name_3;
        tmp_name_name_3 = const_str_plain_datetime;
        tmp_globals_name_3 = (PyObject *)moduledict_runop;
        tmp_locals_name_3 = Py_None;
        tmp_fromlist_name_3 = Py_None;
        frame_0fb064299bb8fa1fd3c1c2d5b1d2573e->m_frame.f_lineno = 3;
        tmp_assign_source_5 = IMPORT_MODULE4(tmp_name_name_3, tmp_globals_name_3, tmp_locals_name_3, tmp_fromlist_name_3);
        assert(!(tmp_assign_source_5 == NULL));
        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_datetime, tmp_assign_source_5);
    }
    {
        PyObject *tmp_assign_source_6;
        PyObject *tmp_name_name_4;
        PyObject *tmp_globals_name_4;
        PyObject *tmp_locals_name_4;
        PyObject *tmp_fromlist_name_4;
        tmp_name_name_4 = const_str_plain_dialogs;
        tmp_globals_name_4 = (PyObject *)moduledict_runop;
        tmp_locals_name_4 = Py_None;
        tmp_fromlist_name_4 = Py_None;
        frame_0fb064299bb8fa1fd3c1c2d5b1d2573e->m_frame.f_lineno = 4;
        tmp_assign_source_6 = IMPORT_MODULE4(tmp_name_name_4, tmp_globals_name_4, tmp_locals_name_4, tmp_fromlist_name_4);
        if (tmp_assign_source_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 4;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_dialogs, tmp_assign_source_6);
    }
    {
        PyObject *tmp_assign_source_7;
        PyObject *tmp_name_name_5;
        PyObject *tmp_globals_name_5;
        PyObject *tmp_locals_name_5;
        PyObject *tmp_fromlist_name_5;
        tmp_name_name_5 = const_str_plain_gobject;
        tmp_globals_name_5 = (PyObject *)moduledict_runop;
        tmp_locals_name_5 = Py_None;
        tmp_fromlist_name_5 = Py_None;
        frame_0fb064299bb8fa1fd3c1c2d5b1d2573e->m_frame.f_lineno = 5;
        tmp_assign_source_7 = IMPORT_MODULE4(tmp_name_name_5, tmp_globals_name_5, tmp_locals_name_5, tmp_fromlist_name_5);
        if (tmp_assign_source_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 5;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gobject, tmp_assign_source_7);
    }
    {
        PyObject *tmp_assign_source_8;
        PyObject *tmp_name_name_6;
        PyObject *tmp_globals_name_6;
        PyObject *tmp_locals_name_6;
        PyObject *tmp_fromlist_name_6;
        tmp_name_name_6 = const_str_plain_gtk;
        tmp_globals_name_6 = (PyObject *)moduledict_runop;
        tmp_locals_name_6 = Py_None;
        tmp_fromlist_name_6 = Py_None;
        frame_0fb064299bb8fa1fd3c1c2d5b1d2573e->m_frame.f_lineno = 6;
        tmp_assign_source_8 = IMPORT_MODULE4(tmp_name_name_6, tmp_globals_name_6, tmp_locals_name_6, tmp_fromlist_name_6);
        if (tmp_assign_source_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 6;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_gtk, tmp_assign_source_8);
    }
    {
        PyObject *tmp_assign_source_9;
        PyObject *tmp_name_name_7;
        PyObject *tmp_globals_name_7;
        PyObject *tmp_locals_name_7;
        PyObject *tmp_fromlist_name_7;
        tmp_name_name_7 = const_str_plain_lockhash;
        tmp_globals_name_7 = (PyObject *)moduledict_runop;
        tmp_locals_name_7 = Py_None;
        tmp_fromlist_name_7 = Py_None;
        frame_0fb064299bb8fa1fd3c1c2d5b1d2573e->m_frame.f_lineno = 7;
        tmp_assign_source_9 = IMPORT_MODULE4(tmp_name_name_7, tmp_globals_name_7, tmp_locals_name_7, tmp_fromlist_name_7);
        if (tmp_assign_source_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 7;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_lockhash, tmp_assign_source_9);
    }
    {
        PyObject *tmp_assign_source_10;
        PyObject *tmp_name_name_8;
        PyObject *tmp_globals_name_8;
        PyObject *tmp_locals_name_8;
        PyObject *tmp_fromlist_name_8;
        tmp_name_name_8 = const_str_plain_os;
        tmp_globals_name_8 = (PyObject *)moduledict_runop;
        tmp_locals_name_8 = Py_None;
        tmp_fromlist_name_8 = Py_None;
        frame_0fb064299bb8fa1fd3c1c2d5b1d2573e->m_frame.f_lineno = 8;
        tmp_assign_source_10 = IMPORT_MODULE4(tmp_name_name_8, tmp_globals_name_8, tmp_locals_name_8, tmp_fromlist_name_8);
        if (tmp_assign_source_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 8;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_os, tmp_assign_source_10);
    }
    {
        PyObject *tmp_assign_source_11;
        PyObject *tmp_name_name_9;
        PyObject *tmp_globals_name_9;
        PyObject *tmp_locals_name_9;
        PyObject *tmp_fromlist_name_9;
        tmp_name_name_9 = const_str_plain_platform;
        tmp_globals_name_9 = (PyObject *)moduledict_runop;
        tmp_locals_name_9 = Py_None;
        tmp_fromlist_name_9 = Py_None;
        frame_0fb064299bb8fa1fd3c1c2d5b1d2573e->m_frame.f_lineno = 9;
        tmp_assign_source_11 = IMPORT_MODULE4(tmp_name_name_9, tmp_globals_name_9, tmp_locals_name_9, tmp_fromlist_name_9);
        if (tmp_assign_source_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 9;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_platform, tmp_assign_source_11);
    }
    {
        PyObject *tmp_assign_source_12;
        PyObject *tmp_name_name_10;
        PyObject *tmp_globals_name_10;
        PyObject *tmp_locals_name_10;
        PyObject *tmp_fromlist_name_10;
        tmp_name_name_10 = const_str_plain_re;
        tmp_globals_name_10 = (PyObject *)moduledict_runop;
        tmp_locals_name_10 = Py_None;
        tmp_fromlist_name_10 = Py_None;
        frame_0fb064299bb8fa1fd3c1c2d5b1d2573e->m_frame.f_lineno = 10;
        tmp_assign_source_12 = IMPORT_MODULE4(tmp_name_name_10, tmp_globals_name_10, tmp_locals_name_10, tmp_fromlist_name_10);
        if (tmp_assign_source_12 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 10;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_re, tmp_assign_source_12);
    }
    {
        PyObject *tmp_assign_source_13;
        PyObject *tmp_name_name_11;
        PyObject *tmp_globals_name_11;
        PyObject *tmp_locals_name_11;
        PyObject *tmp_fromlist_name_11;
        tmp_name_name_11 = const_str_plain_runprocess;
        tmp_globals_name_11 = (PyObject *)moduledict_runop;
        tmp_locals_name_11 = Py_None;
        tmp_fromlist_name_11 = Py_None;
        frame_0fb064299bb8fa1fd3c1c2d5b1d2573e->m_frame.f_lineno = 11;
        tmp_assign_source_13 = IMPORT_MODULE4(tmp_name_name_11, tmp_globals_name_11, tmp_locals_name_11, tmp_fromlist_name_11);
        if (tmp_assign_source_13 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 11;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_runprocess, tmp_assign_source_13);
    }
    {
        PyObject *tmp_assign_source_14;
        PyObject *tmp_name_name_12;
        PyObject *tmp_globals_name_12;
        PyObject *tmp_locals_name_12;
        PyObject *tmp_fromlist_name_12;
        tmp_name_name_12 = const_str_plain_runscan;
        tmp_globals_name_12 = (PyObject *)moduledict_runop;
        tmp_locals_name_12 = Py_None;
        tmp_fromlist_name_12 = Py_None;
        frame_0fb064299bb8fa1fd3c1c2d5b1d2573e->m_frame.f_lineno = 12;
        tmp_assign_source_14 = IMPORT_MODULE4(tmp_name_name_12, tmp_globals_name_12, tmp_locals_name_12, tmp_fromlist_name_12);
        if (tmp_assign_source_14 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 12;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_runscan, tmp_assign_source_14);
    }
    {
        PyObject *tmp_assign_source_15;
        PyObject *tmp_name_name_13;
        PyObject *tmp_globals_name_13;
        PyObject *tmp_locals_name_13;
        PyObject *tmp_fromlist_name_13;
        tmp_name_name_13 = const_str_plain_runsetup;
        tmp_globals_name_13 = (PyObject *)moduledict_runop;
        tmp_locals_name_13 = Py_None;
        tmp_fromlist_name_13 = Py_None;
        frame_0fb064299bb8fa1fd3c1c2d5b1d2573e->m_frame.f_lineno = 13;
        tmp_assign_source_15 = IMPORT_MODULE4(tmp_name_name_13, tmp_globals_name_13, tmp_locals_name_13, tmp_fromlist_name_13);
        if (tmp_assign_source_15 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 13;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_runsetup, tmp_assign_source_15);
    }
    {
        PyObject *tmp_assign_source_16;
        PyObject *tmp_name_name_14;
        PyObject *tmp_globals_name_14;
        PyObject *tmp_locals_name_14;
        PyObject *tmp_fromlist_name_14;
        tmp_name_name_14 = const_str_plain_runthread;
        tmp_globals_name_14 = (PyObject *)moduledict_runop;
        tmp_locals_name_14 = Py_None;
        tmp_fromlist_name_14 = Py_None;
        frame_0fb064299bb8fa1fd3c1c2d5b1d2573e->m_frame.f_lineno = 14;
        tmp_assign_source_16 = IMPORT_MODULE4(tmp_name_name_14, tmp_globals_name_14, tmp_locals_name_14, tmp_fromlist_name_14);
        if (tmp_assign_source_16 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 14;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_runthread, tmp_assign_source_16);
    }
    {
        PyObject *tmp_assign_source_17;
        PyObject *tmp_name_name_15;
        PyObject *tmp_globals_name_15;
        PyObject *tmp_locals_name_15;
        PyObject *tmp_fromlist_name_15;
        tmp_name_name_15 = const_str_plain_string;
        tmp_globals_name_15 = (PyObject *)moduledict_runop;
        tmp_locals_name_15 = Py_None;
        tmp_fromlist_name_15 = Py_None;
        frame_0fb064299bb8fa1fd3c1c2d5b1d2573e->m_frame.f_lineno = 15;
        tmp_assign_source_17 = IMPORT_MODULE4(tmp_name_name_15, tmp_globals_name_15, tmp_locals_name_15, tmp_fromlist_name_15);
        if (tmp_assign_source_17 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 15;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_string, tmp_assign_source_17);
    }
    {
        PyObject *tmp_assign_source_18;
        PyObject *tmp_name_name_16;
        PyObject *tmp_globals_name_16;
        PyObject *tmp_locals_name_16;
        PyObject *tmp_fromlist_name_16;
        tmp_name_name_16 = const_str_plain_subprocess;
        tmp_globals_name_16 = (PyObject *)moduledict_runop;
        tmp_locals_name_16 = Py_None;
        tmp_fromlist_name_16 = Py_None;
        frame_0fb064299bb8fa1fd3c1c2d5b1d2573e->m_frame.f_lineno = 16;
        tmp_assign_source_18 = IMPORT_MODULE4(tmp_name_name_16, tmp_globals_name_16, tmp_locals_name_16, tmp_fromlist_name_16);
        if (tmp_assign_source_18 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 16;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_subprocess, tmp_assign_source_18);
    }
    {
        PyObject *tmp_assign_source_19;
        PyObject *tmp_name_name_17;
        PyObject *tmp_globals_name_17;
        PyObject *tmp_locals_name_17;
        PyObject *tmp_fromlist_name_17;
        tmp_name_name_17 = const_str_plain_sys;
        tmp_globals_name_17 = (PyObject *)moduledict_runop;
        tmp_locals_name_17 = Py_None;
        tmp_fromlist_name_17 = Py_None;
        frame_0fb064299bb8fa1fd3c1c2d5b1d2573e->m_frame.f_lineno = 17;
        tmp_assign_source_19 = IMPORT_MODULE4(tmp_name_name_17, tmp_globals_name_17, tmp_locals_name_17, tmp_fromlist_name_17);
        assert(!(tmp_assign_source_19 == NULL));
        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_sys, tmp_assign_source_19);
    }
    {
        PyObject *tmp_assign_source_20;
        PyObject *tmp_name_name_18;
        PyObject *tmp_globals_name_18;
        PyObject *tmp_locals_name_18;
        PyObject *tmp_fromlist_name_18;
        tmp_name_name_18 = const_str_plain_threading;
        tmp_globals_name_18 = (PyObject *)moduledict_runop;
        tmp_locals_name_18 = Py_None;
        tmp_fromlist_name_18 = Py_None;
        frame_0fb064299bb8fa1fd3c1c2d5b1d2573e->m_frame.f_lineno = 18;
        tmp_assign_source_20 = IMPORT_MODULE4(tmp_name_name_18, tmp_globals_name_18, tmp_locals_name_18, tmp_fromlist_name_18);
        if (tmp_assign_source_20 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_threading, tmp_assign_source_20);
    }
    {
        PyObject *tmp_assign_source_21;
        PyObject *tmp_name_name_19;
        PyObject *tmp_globals_name_19;
        PyObject *tmp_locals_name_19;
        PyObject *tmp_fromlist_name_19;
        tmp_name_name_19 = const_str_plain_time;
        tmp_globals_name_19 = (PyObject *)moduledict_runop;
        tmp_locals_name_19 = Py_None;
        tmp_fromlist_name_19 = Py_None;
        frame_0fb064299bb8fa1fd3c1c2d5b1d2573e->m_frame.f_lineno = 19;
        tmp_assign_source_21 = IMPORT_MODULE4(tmp_name_name_19, tmp_globals_name_19, tmp_locals_name_19, tmp_fromlist_name_19);
        assert(!(tmp_assign_source_21 == NULL));
        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_time, tmp_assign_source_21);
    }
    {
        PyObject *tmp_assign_source_22;
        PyObject *tmp_name_name_20;
        PyObject *tmp_globals_name_20;
        PyObject *tmp_locals_name_20;
        PyObject *tmp_fromlist_name_20;
        tmp_name_name_20 = const_str_plain_verify;
        tmp_globals_name_20 = (PyObject *)moduledict_runop;
        tmp_locals_name_20 = Py_None;
        tmp_fromlist_name_20 = Py_None;
        frame_0fb064299bb8fa1fd3c1c2d5b1d2573e->m_frame.f_lineno = 20;
        tmp_assign_source_22 = IMPORT_MODULE4(tmp_name_name_20, tmp_globals_name_20, tmp_locals_name_20, tmp_fromlist_name_20);
        if (tmp_assign_source_22 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 20;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_verify, tmp_assign_source_22);
    }
    {
        PyObject *tmp_assign_source_23;
        PyObject *tmp_name_name_21;
        PyObject *tmp_globals_name_21;
        PyObject *tmp_locals_name_21;
        PyObject *tmp_fromlist_name_21;
        tmp_name_name_21 = const_str_plain_multiprocessing;
        tmp_globals_name_21 = (PyObject *)moduledict_runop;
        tmp_locals_name_21 = Py_None;
        tmp_fromlist_name_21 = const_tuple_e055380a4005427167c60a836c173afa_tuple;
        frame_0fb064299bb8fa1fd3c1c2d5b1d2573e->m_frame.f_lineno = 22;
        tmp_assign_source_23 = IMPORT_MODULE4(tmp_name_name_21, tmp_globals_name_21, tmp_locals_name_21, tmp_fromlist_name_21);
        if (tmp_assign_source_23 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 22;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_1__module == NULL);
        tmp_import_from_1__module = tmp_assign_source_23;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_24;
        PyObject *tmp_import_name_from_1;
        CHECK_OBJECT(tmp_import_from_1__module);
        tmp_import_name_from_1 = tmp_import_from_1__module;
        tmp_assign_source_24 = IMPORT_NAME(tmp_import_name_from_1, const_str_plain_Process);
        if (tmp_assign_source_24 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 22;

            goto try_except_handler_1;
        }
        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_Process, tmp_assign_source_24);
    }
    {
        PyObject *tmp_assign_source_25;
        PyObject *tmp_import_name_from_2;
        CHECK_OBJECT(tmp_import_from_1__module);
        tmp_import_name_from_2 = tmp_import_from_1__module;
        tmp_assign_source_25 = IMPORT_NAME(tmp_import_name_from_2, const_str_plain_Value);
        if (tmp_assign_source_25 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 22;

            goto try_except_handler_1;
        }
        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_Value, tmp_assign_source_25);
    }
    {
        PyObject *tmp_assign_source_26;
        PyObject *tmp_import_name_from_3;
        CHECK_OBJECT(tmp_import_from_1__module);
        tmp_import_name_from_3 = tmp_import_from_1__module;
        tmp_assign_source_26 = IMPORT_NAME(tmp_import_name_from_3, const_str_plain_Array);
        if (tmp_assign_source_26 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 22;

            goto try_except_handler_1;
        }
        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_Array, tmp_assign_source_26);
    }
    {
        PyObject *tmp_assign_source_27;
        PyObject *tmp_import_name_from_4;
        CHECK_OBJECT(tmp_import_from_1__module);
        tmp_import_name_from_4 = tmp_import_from_1__module;
        tmp_assign_source_27 = IMPORT_NAME(tmp_import_name_from_4, const_str_plain_Event);
        if (tmp_assign_source_27 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 22;

            goto try_except_handler_1;
        }
        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_Event, tmp_assign_source_27);
    }
    goto try_end_1;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT((PyObject *)tmp_import_from_1__module);
    Py_DECREF(tmp_import_from_1__module);
    tmp_import_from_1__module = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto frame_exception_exit_1;
    // End of try:
    try_end_1:;

    // Restore frame exception if necessary.
#if 0
    RESTORE_FRAME_EXCEPTION(frame_0fb064299bb8fa1fd3c1c2d5b1d2573e);
#endif
    popFrameStack();

    assertFrameObject(frame_0fb064299bb8fa1fd3c1c2d5b1d2573e);

    goto frame_no_exception_1;

    frame_exception_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_0fb064299bb8fa1fd3c1c2d5b1d2573e);
#endif

    if ( exception_tb == NULL )
    {
        exception_tb = MAKE_TRACEBACK(frame_0fb064299bb8fa1fd3c1c2d5b1d2573e, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_0fb064299bb8fa1fd3c1c2d5b1d2573e->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_0fb064299bb8fa1fd3c1c2d5b1d2573e, exception_lineno);
    }

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto module_exception_exit;

    frame_no_exception_1:;
    CHECK_OBJECT((PyObject *)tmp_import_from_1__module);
    Py_DECREF(tmp_import_from_1__module);
    tmp_import_from_1__module = NULL;

    {
        PyObject *tmp_assign_source_28;
        tmp_assign_source_28 = MAKE_FUNCTION_runop$$$function_1_define_lock_t();



        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_define_lock_t, tmp_assign_source_28);
    }
    {
        PyObject *tmp_assign_source_29;
        tmp_assign_source_29 = MAKE_FUNCTION_runop$$$function_2_prelock();



        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_prelock, tmp_assign_source_29);
    }
    {
        PyObject *tmp_assign_source_30;
        tmp_assign_source_30 = MAKE_FUNCTION_runop$$$function_3_postlock();



        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_postlock, tmp_assign_source_30);
    }
    {
        PyObject *tmp_assign_source_31;
        tmp_assign_source_31 = MAKE_FUNCTION_runop$$$function_4_run_setupFull();



        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_run_setupFull, tmp_assign_source_31);
    }
    {
        PyObject *tmp_assign_source_32;
        tmp_assign_source_32 = MAKE_FUNCTION_runop$$$function_5_run_pbaWrite();



        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_run_pbaWrite, tmp_assign_source_32);
    }
    {
        PyObject *tmp_assign_source_33;
        tmp_assign_source_33 = MAKE_FUNCTION_runop$$$function_6_run_changePW();



        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_run_changePW, tmp_assign_source_33);
    }
    {
        PyObject *tmp_assign_source_34;
        tmp_assign_source_34 = MAKE_FUNCTION_runop$$$function_7_run_setupUSB();



        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_run_setupUSB, tmp_assign_source_34);
    }
    {
        PyObject *tmp_assign_source_35;
        tmp_assign_source_35 = MAKE_FUNCTION_runop$$$function_8_run_setupUser();



        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_run_setupUser, tmp_assign_source_35);
    }
    {
        PyObject *tmp_assign_source_36;
        tmp_assign_source_36 = MAKE_FUNCTION_runop$$$function_9_run_removeUser();



        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_run_removeUser, tmp_assign_source_36);
    }
    {
        PyObject *tmp_assign_source_37;
        tmp_assign_source_37 = MAKE_FUNCTION_runop$$$function_10_run_unlockPBA();



        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_run_unlockPBA, tmp_assign_source_37);
    }
    {
        PyObject *tmp_assign_source_38;
        tmp_assign_source_38 = MAKE_FUNCTION_runop$$$function_11_run_revertKeep();



        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_run_revertKeep, tmp_assign_source_38);
    }
    {
        PyObject *tmp_assign_source_39;
        tmp_assign_source_39 = MAKE_FUNCTION_runop$$$function_12_run_revertErase();



        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_run_revertErase, tmp_assign_source_39);
    }
    {
        PyObject *tmp_assign_source_40;
        tmp_assign_source_40 = MAKE_FUNCTION_runop$$$function_13_run_revertPSID();



        UPDATE_STRING_DICT1(moduledict_runop, (Nuitka_StringObject *)const_str_plain_run_revertPSID, tmp_assign_source_40);
    }

    return module_runop;
    module_exception_exit:
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);
    return NULL;
}
