/* Generated code for Python module 'cleanop'
 * created by Nuitka version 0.6.6
 *
 * This code is in part copyright 2019 Kay Hayen.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "nuitka/prelude.h"

#include "__helpers.h"

/* The "_module_cleanop" is a Python object pointer of module type.
 *
 * Note: For full compatibility with CPython, every module variable access
 * needs to go through it except for cases where the module cannot possibly
 * have changed in the mean time.
 */

PyObject *module_cleanop;
PyDictObject *moduledict_cleanop;

/* The declarations of module constants used, if any. */
extern PyObject *const_str_plain_op_inprogress;
extern PyObject *const_str_plain_run_scan;
static PyObject *const_str_plain_elapsed_time;
static PyObject *const_str_digest_d6f4bb381952f457ada9f751d4a228b9;
extern PyObject *const_str_digest_f9aa9f1d756280254529dbc306087548;
extern PyObject *const_str_plain_postlock;
static PyObject *const_str_digest_fcb3f707055a45843f9f5f984a177a66;
extern PyObject *const_str_plain_query;
extern PyObject *const_str_plain_background;
static PyObject *const_str_plain_start_;
static PyObject *const_str_digest_a82b49df7b111b42d5f7e78ab780cafa;
extern PyObject *const_str_plain_stdout;
extern PyObject *const_str_plain_selected_list;
static PyObject *const_str_plain_revertKeep_cleanup;
extern PyObject *const_str_plain_None;
static PyObject *const_str_digest_2d5ab67f28a1f8ea7de7b4da8d17a7c2;
extern PyObject *const_str_plain_sort;
static PyObject *const_str_digest_a32c9aea5488fae5e5152e79a8ba3473;
static PyObject *const_tuple_list_02be30ce96f2e63d8ca972f37079a88b_list_tuple;
extern PyObject *const_str_plain_read;
extern PyObject *const_str_plain_updatePBA_prompt;
static PyObject *const_str_digest_aa7e9e6438114f65ac68a6e9c39689a4;
extern PyObject *const_str_plain_ui;
static PyObject *const_str_plain_Unlocked;
extern PyObject *const_str_plain_platform;
static PyObject *const_str_digest_1ca43a76406b1a1f0549319504d044c1;
static PyObject *const_str_digest_23a1042e713f9c373e043d78fc7c713f;
static PyObject *const_str_digest_8da2f7ce80b0ea01448ac4bbab6c01ae;
extern PyObject *const_str_plain___doc__;
extern PyObject *const_str_plain_runop;
extern PyObject *const_str_plain_mbr_setup_list;
static PyObject *const_str_digest_a453153347baafa6689efd2042ec2cf4;
static PyObject *const_str_digest_557fe80a6c273179b39f6cacbcbc5fdc;
extern PyObject *const_str_plain_Yes;
extern PyObject *const_tuple_empty;
extern PyObject *const_str_plain_False;
static PyObject *const_str_plain_val;
extern PyObject *const_str_plain_remove;
static PyObject *const_str_digest_6e421109da96e88ffd6f7dda75ee3511;
static PyObject *const_str_digest_2cc4d4227aa28fb660d89af2bdd2b9b5;
extern PyObject *const_str_plain_stop_spin;
extern PyObject *const_str_plain_close;
extern PyObject *const_str_plain_msg_ok;
static PyObject *const_str_digest_038a28107205f832c6bf850b3119b5af;
extern PyObject *const_str_plain_process;
static PyObject *const_str_digest_6c563c0332df6661a8e4db7513182d71;
static PyObject *const_str_digest_65e9196bd4c730b537e5cdf8fe311777;
extern PyObject *const_tuple_float_0_0_tuple;
static PyObject *const_str_digest_f0a3507ff41f02a09d68be404e8d9765;
extern PyObject *const_str_plain_e;
extern PyObject *const_str_plain_ulocked_list;
extern PyObject *const_str_plain_AUTHORITY_LOCKED_OUT;
static PyObject *const_str_digest_efc2689cbd23a0681199447103d7c70b;
extern PyObject *const_str_plain_check_box_pass;
extern PyObject *const_str_plain_value;
static PyObject *const_tuple_str_plain_rescan_tuple;
extern PyObject *const_str_plain_write;
extern PyObject *const_str_plain___exit__;
extern PyObject *const_str_plain_popen;
static PyObject *const_list_int_pos_4_list;
static PyObject *const_str_digest_5353e2b669106da20faee7c2688c2ea6;
static PyObject *const_str_digest_7e915908b47db79e283f64f488992d60;
extern PyObject *const_int_neg_1;
extern PyObject *const_str_plain_timeout_cleanup;
static PyObject *const_str_digest_ed4dd40ce7a801d6a9039029873747bc;
static PyObject *const_str_digest_2d85cb53b7a3787dd8780d68a265e952;
extern PyObject *const_str_chr_0;
extern PyObject *const_str_plain_auth_menu;
static PyObject *const_tuple_none_false_tuple;
extern PyObject *const_str_plain_devs_list;
extern PyObject *const_int_pos_10;
static PyObject *const_str_plain_set;
static PyObject *const_str_digest_a02329ab09aa85c0ab8749a60da6e42f;
static PyObject *const_str_digest_6f9d3b8c1c22c69a4d23112bae2b5acb;
extern PyObject *const_str_plain_strip;
extern PyObject *const_str_plain_os;
static PyObject *const_str_digest_125b3813ff8713f84b003abaa68a076c;
static PyObject *const_tuple_str_digest_2d85cb53b7a3787dd8780d68a265e952_tuple;
static PyObject *const_str_plain_val3;
extern PyObject *const_str_plain_No;
extern PyObject *const_str_plain_pba_list;
extern PyObject *const_str_plain_reboot;
static PyObject *const_str_digest_b2383d6443e1a32507015f287d7df566;
extern PyObject *const_str_plain_process_list;
extern PyObject *const_str_plain_system;
extern PyObject *const_str_plain_retrylimit_list;
static PyObject *const_str_plain_rescan;
extern PyObject *const_int_pos_6;
extern PyObject *const_str_plain_op_instr;
extern PyObject *const_int_pos_4;
extern PyObject *const_int_pos_5;
extern PyObject *const_int_pos_2;
extern PyObject *const_int_pos_3;
extern PyObject *const_int_pos_1;
static PyObject *const_str_digest_c3a808c666d31607a746944e8f28505d;
static PyObject *const_str_plain_curr_time;
static PyObject *const_str_digest_6645dde3aeb8c0147c4c2fab3ea7a829;
static PyObject *const_str_digest_b75d8e285183aa38c94d170a4b772c60;
extern PyObject *const_str_plain_Windows;
static PyObject *const_tuple_b057254a56fb0b1d4f9c1e034c856b26_tuple;
extern PyObject *const_str_plain_dev_pbaVer;
static PyObject *const_list_int_pos_2_list;
extern PyObject *const_str_plain_setupuser_list;
extern PyObject *const_str_plain___file__;
static PyObject *const_str_plain_op_procs;
static PyObject *const_str_digest_62298f9949ee2e40c47e630d66965330;
extern PyObject *const_str_plain_admin_aol_list;
extern PyObject *const_tuple_str_chr_0_tuple;
static PyObject *const_tuple_str_digest_578f01a785338ee119f135fe28f487e9_tuple;
extern PyObject *const_str_plain_subprocess;
static PyObject *const_str_plain_is_alive;
extern PyObject *const_str_plain_returnToMain;
extern PyObject *const_str_plain_start_time;
extern PyObject *const_str_plain_dialogs;
static PyObject *const_str_digest_ff25997455ef1a74549578818e8cf049;
extern PyObject *const_tuple_str_digest_ae3b8b33bbb4f0816fc34e114de2f069_tuple;
extern PyObject *const_str_plain_lockstatus_list;
static PyObject *const_list_int_pos_2_int_pos_3_list;
extern PyObject *const_str_dot;
extern PyObject *const_str_plain_unlock_prompt;
extern PyObject *const_str_plain_scan_ip;
extern PyObject *const_str_plain_pbawrite_ip;
extern PyObject *const_str_plain_join;
extern PyObject *const_str_plain_time;
static PyObject *const_str_plain_unlockPBA_cleanup;
extern PyObject *const_str_plain_pop;
extern PyObject *const_float_0_0;
static PyObject *const_tuple_fa0bed1132a2f20380dbb0f629cc7064_tuple;
extern PyObject *const_str_plain_box_newpass;
extern PyObject *const_str_plain_path;
static PyObject *const_str_digest_d52b7941c22e05e1a2d1a9d72b327962;
static PyObject *const_str_plain_changePW_cleanup;
extern PyObject *const_str_plain_setupstatus_list;
extern PyObject *const_str_plain_prelock;
static PyObject *const_str_digest_bfaeee4b2080205943b3a96f2ea90ee4;
extern PyObject *const_str_plain_changePW_prompt;
extern PyObject *const_str_plain_locked_list;
extern PyObject *const_str_plain_show;
static PyObject *const_str_plain_revertErase_cleanup;
static PyObject *const_str_digest_2c7100a85050fc19fdf6026752d133e3;
static PyObject *const_str_plain_remount;
extern PyObject *const_str_plain___enter__;
static PyObject *const_tuple_str_plain_mountvol_tuple;
static PyObject *const_str_plain_op_proc;
static PyObject *const_str_digest_f43d78fd2132499a8ac05b8e498eede9;
extern PyObject *const_str_plain_isfile;
extern PyObject *const_str_plain_sn_list;
static PyObject *const_str_digest_77c0f42e61e4b539f097f95cbb5f3c21;
extern PyObject *const_str_plain__;
extern PyObject *const_str_digest_ae3b8b33bbb4f0816fc34e114de2f069;
static PyObject *const_str_digest_aadcc3538cf4a9c922f17fa4943aeb37;
static PyObject *const_str_plain_is_set;
static PyObject *const_int_neg_2;
static PyObject *const_str_digest_520a2c177e6589b85d829c7715981134;
extern PyObject *const_str_plain_diskpart;
extern PyObject *const_str_plain_get_active;
extern PyObject *const_str_plain___debug__;
extern PyObject *const_str_plain_dev_select;
static PyObject *const_str_digest_17f0a196c7aed21ea7fe8c53b1410953;
static PyObject *const_tuple_34550c78ae782f8a29621d43cbcfcd2d_tuple;
static PyObject *const_str_plain_setupFull_cleanup;
extern PyObject *const_str_plain_DEV_OS;
static PyObject *const_str_digest_4b25adc675d90cc54c79030b05db6a07;
static PyObject *const_str_digest_053fa4c75a0b51308e17bf327161a305;
extern PyObject *const_str_plain_w;
static PyObject *const_str_plain_p;
extern PyObject *const_str_plain_setup_prompt1;
extern PyObject *const_str_plain_r;
static PyObject *const_str_plain_pbaWrite_cleanup;
extern PyObject *const_str_plain_mv_list;
static PyObject *const_str_plain_datawrite;
static PyObject *const_str_digest_69e4e75d2afc83af7308e8948081a154;
static PyObject *const_tuple_none_true_tuple;
extern PyObject *const_str_plain_devnull;
extern PyObject *const_str_plain_cancel_button;
static PyObject *const_str_plain_mountvol;
static PyObject *const_tuple_f56716d0f86411d290d035753790ced4_tuple;
extern PyObject *const_str_plain_box_newpass_confirm;
extern PyObject *const_str_plain_runscan;
static PyObject *const_tuple_4fb0a39c5131dee3a88c6f3831c05524_tuple;
extern PyObject *const_str_plain_NOT_AUTHORIZED;
extern PyObject *const_str_plain_set_text;
static PyObject *const_str_digest_4d2a6bf0324633e3f769615ed2fe8ec5;
extern PyObject *const_str_plain_revert_keep_prompt;
static PyObject *const_str_plain_max_time;
extern PyObject *const_str_plain_devname;
extern PyObject *const_str_plain_vendor_list;
static PyObject *const_tuple_str_digest_17f0a196c7aed21ea7fe8c53b1410953_tuple;
extern PyObject *const_int_0;
static PyObject *const_str_digest_ad94a125aa57f8e470b62993b0b50b73;
static PyObject *const_str_plain_val2;
static PyObject *const_str_plain_status_list;
static PyObject *const_str_plain_val4;
static PyObject *const_str_digest_ad2a73532bdfb5deb2b05b9bbc157496;
extern PyObject *const_str_plain_user_aol_list;
static PyObject *const_tuple_cfebab76fad2210d4170c742ce93f75a_tuple;
extern PyObject *const_tuple_none_none_none_tuple;
static PyObject *const_tuple_b077c9ec52372b5767acb19cb2e903ad_tuple;
extern PyObject *const_str_plain_setup_next;
static PyObject *const_str_digest_988469b196e452a23f29bba1dfcc46c1;
extern PyObject *const_str_empty;
static PyObject *const_list_02be30ce96f2e63d8ca972f37079a88b_list;
extern PyObject *const_str_plain_call;
static PyObject *const_str_digest_8e9bcfdd45060137ba638f543f425301;
static PyObject *const_str_digest_321286e6d2e61a53029fdc47a4469cb5;
extern PyObject *const_str_plain_revert_erase_prompt;
static PyObject *const_str_digest_578f01a785338ee119f135fe28f487e9;
extern PyObject *const_str_plain_append;
static PyObject *const_str_digest_e27e627be45460611dec1277001c6006;
extern PyObject *const_str_plain_updateDevs;
extern PyObject *const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
static PyObject *const_str_plain_terminate;
static PyObject *const_str_digest_21cdd10f62cd6949a9d1866524676a91;
extern PyObject *const_str_plain_msg_err;
static PyObject *const_str_plain_res_list;
extern PyObject *const_str_plain_pass_dir;
static PyObject *module_filename_obj;

/* Indicator if this modules private constants were created yet. */
static bool constants_created = false;

/* Function to create module private constants. */
static void createModuleConstants(void) {
    const_str_plain_elapsed_time = UNSTREAM_STRING(&constant_bin[ 14122 ], 12, 1);
    const_str_digest_d6f4bb381952f457ada9f751d4a228b9 = UNSTREAM_STRING(&constant_bin[ 14134 ], 31, 0);
    const_str_digest_fcb3f707055a45843f9f5f984a177a66 = UNSTREAM_STRING(&constant_bin[ 14165 ], 19, 0);
    const_str_plain_start_ = UNSTREAM_STRING(&constant_bin[ 1210 ], 6, 1);
    const_str_digest_a82b49df7b111b42d5f7e78ab780cafa = UNSTREAM_STRING(&constant_bin[ 14184 ], 26, 0);
    const_str_plain_revertKeep_cleanup = UNSTREAM_STRING(&constant_bin[ 14210 ], 18, 1);
    const_str_digest_2d5ab67f28a1f8ea7de7b4da8d17a7c2 = UNSTREAM_STRING(&constant_bin[ 14228 ], 28, 0);
    const_str_digest_a32c9aea5488fae5e5152e79a8ba3473 = UNSTREAM_STRING(&constant_bin[ 14256 ], 30, 0);
    const_tuple_list_02be30ce96f2e63d8ca972f37079a88b_list_tuple = PyTuple_New(1);
    const_list_02be30ce96f2e63d8ca972f37079a88b_list = PyList_New(3);
    PyList_SET_ITEM(const_list_02be30ce96f2e63d8ca972f37079a88b_list, 0, const_str_plain_diskpart); Py_INCREF(const_str_plain_diskpart);
    const_str_digest_6e421109da96e88ffd6f7dda75ee3511 = UNSTREAM_STRING(&constant_bin[ 14286 ], 2, 0);
    PyList_SET_ITEM(const_list_02be30ce96f2e63d8ca972f37079a88b_list, 1, const_str_digest_6e421109da96e88ffd6f7dda75ee3511); Py_INCREF(const_str_digest_6e421109da96e88ffd6f7dda75ee3511);
    const_str_digest_2d85cb53b7a3787dd8780d68a265e952 = UNSTREAM_STRING(&constant_bin[ 14288 ], 10, 0);
    PyList_SET_ITEM(const_list_02be30ce96f2e63d8ca972f37079a88b_list, 2, const_str_digest_2d85cb53b7a3787dd8780d68a265e952); Py_INCREF(const_str_digest_2d85cb53b7a3787dd8780d68a265e952);
    PyTuple_SET_ITEM(const_tuple_list_02be30ce96f2e63d8ca972f37079a88b_list_tuple, 0, const_list_02be30ce96f2e63d8ca972f37079a88b_list); Py_INCREF(const_list_02be30ce96f2e63d8ca972f37079a88b_list);
    const_str_digest_aa7e9e6438114f65ac68a6e9c39689a4 = UNSTREAM_STRING(&constant_bin[ 14298 ], 46, 0);
    const_str_plain_Unlocked = UNSTREAM_STRING(&constant_bin[ 14344 ], 8, 1);
    const_str_digest_1ca43a76406b1a1f0549319504d044c1 = UNSTREAM_STRING(&constant_bin[ 14352 ], 39, 0);
    const_str_digest_23a1042e713f9c373e043d78fc7c713f = UNSTREAM_STRING(&constant_bin[ 14391 ], 17, 0);
    const_str_digest_8da2f7ce80b0ea01448ac4bbab6c01ae = UNSTREAM_STRING(&constant_bin[ 14408 ], 54, 0);
    const_str_digest_a453153347baafa6689efd2042ec2cf4 = UNSTREAM_STRING(&constant_bin[ 14462 ], 27, 0);
    const_str_digest_557fe80a6c273179b39f6cacbcbc5fdc = UNSTREAM_STRING(&constant_bin[ 5870 ], 4, 0);
    const_str_plain_val = UNSTREAM_STRING(&constant_bin[ 6350 ], 3, 1);
    const_str_digest_2cc4d4227aa28fb660d89af2bdd2b9b5 = UNSTREAM_STRING(&constant_bin[ 14489 ], 31, 0);
    const_str_digest_038a28107205f832c6bf850b3119b5af = UNSTREAM_STRING(&constant_bin[ 10928 ], 4, 0);
    const_str_digest_6c563c0332df6661a8e4db7513182d71 = UNSTREAM_STRING(&constant_bin[ 14520 ], 61, 0);
    const_str_digest_65e9196bd4c730b537e5cdf8fe311777 = UNSTREAM_STRING(&constant_bin[ 14581 ], 24, 0);
    const_str_digest_f0a3507ff41f02a09d68be404e8d9765 = UNSTREAM_STRING(&constant_bin[ 14605 ], 10, 0);
    const_str_digest_efc2689cbd23a0681199447103d7c70b = UNSTREAM_STRING(&constant_bin[ 14615 ], 20, 0);
    const_tuple_str_plain_rescan_tuple = PyTuple_New(1);
    const_str_plain_rescan = UNSTREAM_STRING(&constant_bin[ 14288 ], 6, 1);
    PyTuple_SET_ITEM(const_tuple_str_plain_rescan_tuple, 0, const_str_plain_rescan); Py_INCREF(const_str_plain_rescan);
    const_list_int_pos_4_list = PyList_New(1);
    PyList_SET_ITEM(const_list_int_pos_4_list, 0, const_int_pos_4); Py_INCREF(const_int_pos_4);
    const_str_digest_5353e2b669106da20faee7c2688c2ea6 = UNSTREAM_STRING(&constant_bin[ 14635 ], 4, 0);
    const_str_digest_7e915908b47db79e283f64f488992d60 = UNSTREAM_STRING(&constant_bin[ 14639 ], 10, 0);
    const_str_digest_ed4dd40ce7a801d6a9039029873747bc = UNSTREAM_STRING(&constant_bin[ 14649 ], 19, 0);
    const_tuple_none_false_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_none_false_tuple, 0, Py_None); Py_INCREF(Py_None);
    PyTuple_SET_ITEM(const_tuple_none_false_tuple, 1, Py_False); Py_INCREF(Py_False);
    const_str_plain_set = UNSTREAM_STRING(&constant_bin[ 1508 ], 3, 1);
    const_str_digest_a02329ab09aa85c0ab8749a60da6e42f = UNSTREAM_STRING(&constant_bin[ 14668 ], 21, 0);
    const_str_digest_6f9d3b8c1c22c69a4d23112bae2b5acb = UNSTREAM_STRING(&constant_bin[ 14689 ], 108, 0);
    const_str_digest_125b3813ff8713f84b003abaa68a076c = UNSTREAM_STRING(&constant_bin[ 14797 ], 33, 0);
    const_tuple_str_digest_2d85cb53b7a3787dd8780d68a265e952_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_digest_2d85cb53b7a3787dd8780d68a265e952_tuple, 0, const_str_digest_2d85cb53b7a3787dd8780d68a265e952); Py_INCREF(const_str_digest_2d85cb53b7a3787dd8780d68a265e952);
    const_str_plain_val3 = UNSTREAM_STRING(&constant_bin[ 14830 ], 4, 1);
    const_str_digest_b2383d6443e1a32507015f287d7df566 = UNSTREAM_STRING(&constant_bin[ 14834 ], 17, 0);
    const_str_digest_c3a808c666d31607a746944e8f28505d = UNSTREAM_STRING(&constant_bin[ 14441 ], 21, 0);
    const_str_plain_curr_time = UNSTREAM_STRING(&constant_bin[ 14851 ], 9, 1);
    const_str_digest_6645dde3aeb8c0147c4c2fab3ea7a829 = UNSTREAM_STRING(&constant_bin[ 14860 ], 39, 0);
    const_str_digest_b75d8e285183aa38c94d170a4b772c60 = UNSTREAM_STRING(&constant_bin[ 14899 ], 41, 0);
    const_tuple_b057254a56fb0b1d4f9c1e034c856b26_tuple = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 14940 ], 539);
    const_list_int_pos_2_list = PyList_New(1);
    PyList_SET_ITEM(const_list_int_pos_2_list, 0, const_int_pos_2); Py_INCREF(const_int_pos_2);
    const_str_plain_op_procs = UNSTREAM_STRING(&constant_bin[ 15479 ], 8, 1);
    const_str_digest_62298f9949ee2e40c47e630d66965330 = UNSTREAM_STRING(&constant_bin[ 15487 ], 34, 0);
    const_tuple_str_digest_578f01a785338ee119f135fe28f487e9_tuple = PyTuple_New(1);
    const_str_digest_578f01a785338ee119f135fe28f487e9 = UNSTREAM_STRING(&constant_bin[ 15521 ], 32, 0);
    PyTuple_SET_ITEM(const_tuple_str_digest_578f01a785338ee119f135fe28f487e9_tuple, 0, const_str_digest_578f01a785338ee119f135fe28f487e9); Py_INCREF(const_str_digest_578f01a785338ee119f135fe28f487e9);
    const_str_plain_is_alive = UNSTREAM_STRING(&constant_bin[ 15553 ], 8, 1);
    const_str_digest_ff25997455ef1a74549578818e8cf049 = UNSTREAM_STRING(&constant_bin[ 14616 ], 19, 0);
    const_list_int_pos_2_int_pos_3_list = PyList_New(2);
    PyList_SET_ITEM(const_list_int_pos_2_int_pos_3_list, 0, const_int_pos_2); Py_INCREF(const_int_pos_2);
    PyList_SET_ITEM(const_list_int_pos_2_int_pos_3_list, 1, const_int_pos_3); Py_INCREF(const_int_pos_3);
    const_str_plain_unlockPBA_cleanup = UNSTREAM_STRING(&constant_bin[ 15561 ], 17, 1);
    const_tuple_fa0bed1132a2f20380dbb0f629cc7064_tuple = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 15578 ], 597);
    const_str_digest_d52b7941c22e05e1a2d1a9d72b327962 = UNSTREAM_STRING(&constant_bin[ 16175 ], 26, 0);
    const_str_plain_changePW_cleanup = UNSTREAM_STRING(&constant_bin[ 16201 ], 16, 1);
    const_str_digest_bfaeee4b2080205943b3a96f2ea90ee4 = UNSTREAM_STRING(&constant_bin[ 16217 ], 35, 0);
    const_str_plain_revertErase_cleanup = UNSTREAM_STRING(&constant_bin[ 16252 ], 19, 1);
    const_str_digest_2c7100a85050fc19fdf6026752d133e3 = UNSTREAM_STRING(&constant_bin[ 16271 ], 41, 0);
    const_str_plain_remount = UNSTREAM_STRING(&constant_bin[ 16312 ], 7, 1);
    const_tuple_str_plain_mountvol_tuple = PyTuple_New(1);
    const_str_plain_mountvol = UNSTREAM_STRING(&constant_bin[ 16319 ], 8, 1);
    PyTuple_SET_ITEM(const_tuple_str_plain_mountvol_tuple, 0, const_str_plain_mountvol); Py_INCREF(const_str_plain_mountvol);
    const_str_plain_op_proc = UNSTREAM_STRING(&constant_bin[ 15479 ], 7, 1);
    const_str_digest_f43d78fd2132499a8ac05b8e498eede9 = UNSTREAM_STRING(&constant_bin[ 16327 ], 38, 0);
    const_str_digest_77c0f42e61e4b539f097f95cbb5f3c21 = UNSTREAM_STRING(&constant_bin[ 16365 ], 17, 0);
    const_str_digest_aadcc3538cf4a9c922f17fa4943aeb37 = UNSTREAM_STRING(&constant_bin[ 16382 ], 33, 0);
    const_str_plain_is_set = UNSTREAM_STRING(&constant_bin[ 16415 ], 6, 1);
    const_int_neg_2 = PyInt_FromLong(-2l);
    const_str_digest_520a2c177e6589b85d829c7715981134 = UNSTREAM_STRING(&constant_bin[ 16421 ], 34, 0);
    const_str_digest_17f0a196c7aed21ea7fe8c53b1410953 = UNSTREAM_STRING(&constant_bin[ 16455 ], 19, 0);
    const_tuple_34550c78ae782f8a29621d43cbcfcd2d_tuple = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 16474 ], 502);
    const_str_plain_setupFull_cleanup = UNSTREAM_STRING(&constant_bin[ 16976 ], 17, 1);
    const_str_digest_4b25adc675d90cc54c79030b05db6a07 = UNSTREAM_STRING(&constant_bin[ 16993 ], 51, 0);
    const_str_digest_053fa4c75a0b51308e17bf327161a305 = UNSTREAM_STRING(&constant_bin[ 17044 ], 30, 0);
    const_str_plain_p = UNSTREAM_CHAR(112, 1);
    const_str_plain_pbaWrite_cleanup = UNSTREAM_STRING(&constant_bin[ 17074 ], 16, 1);
    const_str_plain_datawrite = UNSTREAM_STRING(&constant_bin[ 17090 ], 9, 1);
    const_str_digest_69e4e75d2afc83af7308e8948081a154 = UNSTREAM_STRING(&constant_bin[ 17099 ], 27, 0);
    const_tuple_none_true_tuple = PyTuple_New(2);
    PyTuple_SET_ITEM(const_tuple_none_true_tuple, 0, Py_None); Py_INCREF(Py_None);
    PyTuple_SET_ITEM(const_tuple_none_true_tuple, 1, Py_True); Py_INCREF(Py_True);
    const_tuple_f56716d0f86411d290d035753790ced4_tuple = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 17126 ], 577);
    const_tuple_4fb0a39c5131dee3a88c6f3831c05524_tuple = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 17703 ], 580);
    const_str_digest_4d2a6bf0324633e3f769615ed2fe8ec5 = UNSTREAM_STRING(&constant_bin[ 18283 ], 20, 0);
    const_str_plain_max_time = UNSTREAM_STRING(&constant_bin[ 14957 ], 8, 1);
    const_tuple_str_digest_17f0a196c7aed21ea7fe8c53b1410953_tuple = PyTuple_New(1);
    PyTuple_SET_ITEM(const_tuple_str_digest_17f0a196c7aed21ea7fe8c53b1410953_tuple, 0, const_str_digest_17f0a196c7aed21ea7fe8c53b1410953); Py_INCREF(const_str_digest_17f0a196c7aed21ea7fe8c53b1410953);
    const_str_digest_ad94a125aa57f8e470b62993b0b50b73 = UNSTREAM_STRING(&constant_bin[ 18303 ], 63, 0);
    const_str_plain_val2 = UNSTREAM_STRING(&constant_bin[ 15074 ], 4, 1);
    const_str_plain_status_list = UNSTREAM_STRING(&constant_bin[ 15040 ], 11, 1);
    const_str_plain_val4 = UNSTREAM_STRING(&constant_bin[ 15092 ], 4, 1);
    const_str_digest_ad2a73532bdfb5deb2b05b9bbc157496 = UNSTREAM_STRING(&constant_bin[ 18366 ], 50, 0);
    const_tuple_cfebab76fad2210d4170c742ce93f75a_tuple = PyTuple_New(16);
    PyTuple_SET_ITEM(const_tuple_cfebab76fad2210d4170c742ce93f75a_tuple, 0, const_str_plain_ui); Py_INCREF(const_str_plain_ui);
    PyTuple_SET_ITEM(const_tuple_cfebab76fad2210d4170c742ce93f75a_tuple, 1, const_str_plain_max_time); Py_INCREF(const_str_plain_max_time);
    PyTuple_SET_ITEM(const_tuple_cfebab76fad2210d4170c742ce93f75a_tuple, 2, const_str_plain_start_time); Py_INCREF(const_str_plain_start_time);
    PyTuple_SET_ITEM(const_tuple_cfebab76fad2210d4170c742ce93f75a_tuple, 3, const_str_plain_op_procs); Py_INCREF(const_str_plain_op_procs);
    const_str_plain_res_list = UNSTREAM_STRING(&constant_bin[ 15000 ], 8, 1);
    PyTuple_SET_ITEM(const_tuple_cfebab76fad2210d4170c742ce93f75a_tuple, 4, const_str_plain_res_list); Py_INCREF(const_str_plain_res_list);
    PyTuple_SET_ITEM(const_tuple_cfebab76fad2210d4170c742ce93f75a_tuple, 5, const_str_plain_e); Py_INCREF(const_str_plain_e);
    PyTuple_SET_ITEM(const_tuple_cfebab76fad2210d4170c742ce93f75a_tuple, 6, const_str_plain_selected_list); Py_INCREF(const_str_plain_selected_list);
    PyTuple_SET_ITEM(const_tuple_cfebab76fad2210d4170c742ce93f75a_tuple, 7, const_str_plain_status_list); Py_INCREF(const_str_plain_status_list);
    PyTuple_SET_ITEM(const_tuple_cfebab76fad2210d4170c742ce93f75a_tuple, 8, const_str_plain_val); Py_INCREF(const_str_plain_val);
    PyTuple_SET_ITEM(const_tuple_cfebab76fad2210d4170c742ce93f75a_tuple, 9, const_str_plain_val2); Py_INCREF(const_str_plain_val2);
    PyTuple_SET_ITEM(const_tuple_cfebab76fad2210d4170c742ce93f75a_tuple, 10, const_str_plain_val3); Py_INCREF(const_str_plain_val3);
    PyTuple_SET_ITEM(const_tuple_cfebab76fad2210d4170c742ce93f75a_tuple, 11, const_str_plain_val4); Py_INCREF(const_str_plain_val4);
    PyTuple_SET_ITEM(const_tuple_cfebab76fad2210d4170c742ce93f75a_tuple, 12, const_str_plain_op_proc); Py_INCREF(const_str_plain_op_proc);
    PyTuple_SET_ITEM(const_tuple_cfebab76fad2210d4170c742ce93f75a_tuple, 13, const_str_plain_elapsed_time); Py_INCREF(const_str_plain_elapsed_time);
    PyTuple_SET_ITEM(const_tuple_cfebab76fad2210d4170c742ce93f75a_tuple, 14, const_str_plain_p); Py_INCREF(const_str_plain_p);
    PyTuple_SET_ITEM(const_tuple_cfebab76fad2210d4170c742ce93f75a_tuple, 15, const_str_plain_curr_time); Py_INCREF(const_str_plain_curr_time);
    const_tuple_b077c9ec52372b5767acb19cb2e903ad_tuple = PyMarshal_ReadObjectFromString((char *)&constant_bin[ 18416 ], 527);
    const_str_digest_988469b196e452a23f29bba1dfcc46c1 = UNSTREAM_STRING(&constant_bin[ 18943 ], 23, 0);
    const_str_digest_8e9bcfdd45060137ba638f543f425301 = UNSTREAM_STRING(&constant_bin[ 18966 ], 29, 0);
    const_str_digest_321286e6d2e61a53029fdc47a4469cb5 = UNSTREAM_STRING(&constant_bin[ 18995 ], 30, 0);
    const_str_digest_e27e627be45460611dec1277001c6006 = UNSTREAM_STRING(&constant_bin[ 19025 ], 16, 0);
    const_str_plain_terminate = UNSTREAM_STRING(&constant_bin[ 19041 ], 9, 1);
    const_str_digest_21cdd10f62cd6949a9d1866524676a91 = UNSTREAM_STRING(&constant_bin[ 19050 ], 14, 0);

    constants_created = true;
}

/* Function to verify module private constants for non-corruption. */
#ifndef __NUITKA_NO_ASSERT__
void checkModuleConstants_cleanop(void) {
    // The module may not have been used at all, then ignore this.
    if (constants_created == false) return;


}
#endif

// The module code objects.
static PyCodeObject *codeobj_7641ea9ca847963ddcc73f763e1e5ec9;
static PyCodeObject *codeobj_8c9c9b79392ff0b7698017d8497908ef;
static PyCodeObject *codeobj_18a0298f42cb14be9dbbaaa3575f4d00;
static PyCodeObject *codeobj_15906d6e09d71ad6e3647802cd6cf8d1;
static PyCodeObject *codeobj_d0982cf3c09573f295fd67db087609f2;
static PyCodeObject *codeobj_ef356f0a113d493889005f3e6f52fd41;
static PyCodeObject *codeobj_a2fa7565dc252c4cd4924ec2306a4b6c;
static PyCodeObject *codeobj_c55d069b0e2db5de0f9b503ec621c80b;

static void createModuleCodeObjects(void) {
    module_filename_obj = MAKE_RELATIVE_PATH(const_str_digest_f0a3507ff41f02a09d68be404e8d9765);
    codeobj_7641ea9ca847963ddcc73f763e1e5ec9 = MAKE_CODEOBJECT(module_filename_obj, 1, CO_NOFREE, const_str_digest_e27e627be45460611dec1277001c6006, const_tuple_empty, 0, 0, 0);
    codeobj_8c9c9b79392ff0b7698017d8497908ef = MAKE_CODEOBJECT(module_filename_obj, 485, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_changePW_cleanup, const_tuple_34550c78ae782f8a29621d43cbcfcd2d_tuple, 12, 0, 0);
    codeobj_18a0298f42cb14be9dbbaaa3575f4d00 = MAKE_CODEOBJECT(module_filename_obj, 299, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_pbaWrite_cleanup, const_tuple_b077c9ec52372b5767acb19cb2e903ad_tuple, 12, 0, 0);
    codeobj_15906d6e09d71ad6e3647802cd6cf8d1 = MAKE_CODEOBJECT(module_filename_obj, 1024, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_revertErase_cleanup, const_tuple_4fb0a39c5131dee3a88c6f3831c05524_tuple, 12, 0, 0);
    codeobj_d0982cf3c09573f295fd67db087609f2 = MAKE_CODEOBJECT(module_filename_obj, 843, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_revertKeep_cleanup, const_tuple_b057254a56fb0b1d4f9c1e034c856b26_tuple, 12, 0, 0);
    codeobj_ef356f0a113d493889005f3e6f52fd41 = MAKE_CODEOBJECT(module_filename_obj, 30, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_setupFull_cleanup, const_tuple_fa0bed1132a2f20380dbb0f629cc7064_tuple, 12, 0, 0);
    codeobj_a2fa7565dc252c4cd4924ec2306a4b6c = MAKE_CODEOBJECT(module_filename_obj, 10, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_timeout_cleanup, const_tuple_cfebab76fad2210d4170c742ce93f75a_tuple, 12, 0, 0);
    codeobj_c55d069b0e2db5de0f9b503ec621c80b = MAKE_CODEOBJECT(module_filename_obj, 638, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, const_str_plain_unlockPBA_cleanup, const_tuple_f56716d0f86411d290d035753790ced4_tuple, 12, 0, 0);
}

// The module function declarations.
static PyObject *MAKE_FUNCTION_cleanop$$$function_1_timeout_cleanup();


static PyObject *MAKE_FUNCTION_cleanop$$$function_2_setupFull_cleanup();


static PyObject *MAKE_FUNCTION_cleanop$$$function_3_pbaWrite_cleanup();


static PyObject *MAKE_FUNCTION_cleanop$$$function_4_changePW_cleanup();


static PyObject *MAKE_FUNCTION_cleanop$$$function_5_unlockPBA_cleanup();


static PyObject *MAKE_FUNCTION_cleanop$$$function_6_revertKeep_cleanup();


static PyObject *MAKE_FUNCTION_cleanop$$$function_7_revertErase_cleanup();


// The module function definitions.
static PyObject *impl_cleanop$$$function_1_timeout_cleanup(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_ui = python_pars[0];
    PyObject *par_max_time = python_pars[1];
    PyObject *par_start_time = python_pars[2];
    PyObject *par_op_procs = python_pars[3];
    PyObject *par_res_list = python_pars[4];
    PyObject *par_e = python_pars[5];
    PyObject *par_selected_list = python_pars[6];
    PyObject *par_status_list = python_pars[7];
    PyObject *par_val = python_pars[8];
    PyObject *par_val2 = python_pars[9];
    PyObject *par_val3 = python_pars[10];
    PyObject *par_val4 = python_pars[11];
    PyObject *var_op_proc = NULL;
    PyObject *var_elapsed_time = NULL;
    PyObject *var_p = NULL;
    PyObject *var_curr_time = NULL;
    PyObject *tmp_for_loop_1__for_iterator = NULL;
    PyObject *tmp_for_loop_1__iter_value = NULL;
    PyObject *tmp_for_loop_2__for_iterator = NULL;
    PyObject *tmp_for_loop_2__iter_value = NULL;
    struct Nuitka_FrameObject *frame_a2fa7565dc252c4cd4924ec2306a4b6c;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    bool tmp_result;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;
    static struct Nuitka_FrameObject *cache_frame_a2fa7565dc252c4cd4924ec2306a4b6c = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_keeper_type_3;
    PyObject *exception_keeper_value_3;
    PyTracebackObject *exception_keeper_tb_3;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_3;

    // Actual function body.
    // Tried code:
    MAKE_OR_REUSE_FRAME(cache_frame_a2fa7565dc252c4cd4924ec2306a4b6c, codeobj_a2fa7565dc252c4cd4924ec2306a4b6c, module_cleanop, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
    frame_a2fa7565dc252c4cd4924ec2306a4b6c = cache_frame_a2fa7565dc252c4cd4924ec2306a4b6c;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_a2fa7565dc252c4cd4924ec2306a4b6c);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_a2fa7565dc252c4cd4924ec2306a4b6c) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_called_instance_1;
        PyObject *tmp_mvar_value_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_time);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_time);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1164 ], 33, 0);
            exception_tb = NULL;

            exception_lineno = 11;
            type_description_1 = "oooooooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_1 = tmp_mvar_value_1;
        frame_a2fa7565dc252c4cd4924ec2306a4b6c->m_frame.f_lineno = 11;
        tmp_assign_source_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_1, const_str_plain_time);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 11;
            type_description_1 = "oooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_curr_time == NULL);
        var_curr_time = tmp_assign_source_1;
    }
    {
        PyObject *tmp_assign_source_2;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        CHECK_OBJECT(var_curr_time);
        tmp_left_name_1 = var_curr_time;
        CHECK_OBJECT(par_start_time);
        tmp_right_name_1 = par_start_time;
        tmp_assign_source_2 = BINARY_OPERATION_SUB_OBJECT_OBJECT(tmp_left_name_1, tmp_right_name_1);
        if (tmp_assign_source_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 12;
            type_description_1 = "oooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_elapsed_time == NULL);
        var_elapsed_time = tmp_assign_source_2;
    }
    {
        nuitka_bool tmp_condition_result_1;
        PyObject *tmp_compexpr_left_1;
        PyObject *tmp_compexpr_right_1;
        CHECK_OBJECT(var_elapsed_time);
        tmp_compexpr_left_1 = var_elapsed_time;
        CHECK_OBJECT(par_max_time);
        tmp_compexpr_right_1 = par_max_time;
        tmp_res = RICH_COMPARE_BOOL_GTE_OBJECT_OBJECT(tmp_compexpr_left_1, tmp_compexpr_right_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 13;
            type_description_1 = "oooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        {
            PyObject *tmp_called_instance_2;
            PyObject *tmp_call_result_1;
            CHECK_OBJECT(par_e);
            tmp_called_instance_2 = par_e;
            frame_a2fa7565dc252c4cd4924ec2306a4b6c->m_frame.f_lineno = 14;
            tmp_call_result_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_2, const_str_plain_set);
            if (tmp_call_result_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 14;
                type_description_1 = "oooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_1);
        }
        {
            PyObject *tmp_assign_source_3;
            PyObject *tmp_iter_arg_1;
            CHECK_OBJECT(par_op_procs);
            tmp_iter_arg_1 = par_op_procs;
            tmp_assign_source_3 = MAKE_ITERATOR(tmp_iter_arg_1);
            if (tmp_assign_source_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 15;
                type_description_1 = "oooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_1__for_iterator == NULL);
            tmp_for_loop_1__for_iterator = tmp_assign_source_3;
        }
        // Tried code:
        loop_start_1:;
        {
            PyObject *tmp_next_source_1;
            PyObject *tmp_assign_source_4;
            CHECK_OBJECT(tmp_for_loop_1__for_iterator);
            tmp_next_source_1 = tmp_for_loop_1__for_iterator;
            tmp_assign_source_4 = ITERATOR_NEXT(tmp_next_source_1);
            if (tmp_assign_source_4 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_1;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "oooooooooooooooo";
                    exception_lineno = 15;
                    goto try_except_handler_2;
                }
            }

            {
                PyObject *old = tmp_for_loop_1__iter_value;
                tmp_for_loop_1__iter_value = tmp_assign_source_4;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_5;
            CHECK_OBJECT(tmp_for_loop_1__iter_value);
            tmp_assign_source_5 = tmp_for_loop_1__iter_value;
            {
                PyObject *old = var_op_proc;
                var_op_proc = tmp_assign_source_5;
                Py_INCREF(var_op_proc);
                Py_XDECREF(old);
            }

        }
        {
            nuitka_bool tmp_condition_result_2;
            int tmp_and_left_truth_1;
            nuitka_bool tmp_and_left_value_1;
            nuitka_bool tmp_and_right_value_1;
            PyObject *tmp_compexpr_left_2;
            PyObject *tmp_compexpr_right_2;
            PyObject *tmp_called_instance_3;
            PyObject *tmp_call_result_2;
            int tmp_truth_name_1;
            CHECK_OBJECT(var_op_proc);
            tmp_compexpr_left_2 = var_op_proc;
            tmp_compexpr_right_2 = Py_None;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_2, tmp_compexpr_right_2);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 16;
                type_description_1 = "oooooooooooooooo";
                goto try_except_handler_2;
            }
            tmp_and_left_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_and_left_truth_1 = tmp_and_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
            if (tmp_and_left_truth_1 == 1) {
                goto and_right_1;
            } else {
                goto and_left_1;
            }
            and_right_1:;
            CHECK_OBJECT(var_op_proc);
            tmp_called_instance_3 = var_op_proc;
            frame_a2fa7565dc252c4cd4924ec2306a4b6c->m_frame.f_lineno = 16;
            tmp_call_result_2 = CALL_METHOD_NO_ARGS(tmp_called_instance_3, const_str_plain_is_alive);
            if (tmp_call_result_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 16;
                type_description_1 = "oooooooooooooooo";
                goto try_except_handler_2;
            }
            tmp_truth_name_1 = CHECK_IF_TRUE(tmp_call_result_2);
            if (tmp_truth_name_1 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_call_result_2);

                exception_lineno = 16;
                type_description_1 = "oooooooooooooooo";
                goto try_except_handler_2;
            }
            tmp_and_right_value_1 = tmp_truth_name_1 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            Py_DECREF(tmp_call_result_2);
            tmp_condition_result_2 = tmp_and_right_value_1;
            goto and_end_1;
            and_left_1:;
            tmp_condition_result_2 = tmp_and_left_value_1;
            and_end_1:;
            if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
                goto branch_yes_2;
            } else {
                goto branch_no_2;
            }
            branch_yes_2:;
            {
                nuitka_bool tmp_condition_result_3;
                PyObject *tmp_compexpr_left_3;
                PyObject *tmp_compexpr_right_3;
                PyObject *tmp_source_name_1;
                CHECK_OBJECT(par_ui);
                tmp_source_name_1 = par_ui;
                tmp_compexpr_left_3 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_process);
                if (tmp_compexpr_left_3 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 17;
                    type_description_1 = "oooooooooooooooo";
                    goto try_except_handler_2;
                }
                tmp_compexpr_right_3 = Py_None;
                tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_3, tmp_compexpr_right_3);
                Py_DECREF(tmp_compexpr_left_3);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 17;
                    type_description_1 = "oooooooooooooooo";
                    goto try_except_handler_2;
                }
                tmp_condition_result_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_3 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_3;
                } else {
                    goto branch_no_3;
                }
                branch_yes_3:;
                {
                    PyObject *tmp_called_instance_4;
                    PyObject *tmp_source_name_2;
                    PyObject *tmp_call_result_3;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_2 = par_ui;
                    tmp_called_instance_4 = LOOKUP_ATTRIBUTE(tmp_source_name_2, const_str_plain_process);
                    if (tmp_called_instance_4 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 18;
                        type_description_1 = "oooooooooooooooo";
                        goto try_except_handler_2;
                    }
                    frame_a2fa7565dc252c4cd4924ec2306a4b6c->m_frame.f_lineno = 18;
                    tmp_call_result_3 = CALL_METHOD_NO_ARGS(tmp_called_instance_4, const_str_plain_terminate);
                    Py_DECREF(tmp_called_instance_4);
                    if (tmp_call_result_3 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 18;
                        type_description_1 = "oooooooooooooooo";
                        goto try_except_handler_2;
                    }
                    Py_DECREF(tmp_call_result_3);
                }
                {
                    PyObject *tmp_assattr_name_1;
                    PyObject *tmp_assattr_target_1;
                    tmp_assattr_name_1 = Py_None;
                    CHECK_OBJECT(par_ui);
                    tmp_assattr_target_1 = par_ui;
                    tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, const_str_plain_process, tmp_assattr_name_1);
                    if (tmp_result == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 19;
                        type_description_1 = "oooooooooooooooo";
                        goto try_except_handler_2;
                    }
                }
                goto branch_end_3;
                branch_no_3:;
                {
                    nuitka_bool tmp_condition_result_4;
                    PyObject *tmp_compexpr_left_4;
                    PyObject *tmp_compexpr_right_4;
                    PyObject *tmp_source_name_3;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_3 = par_ui;
                    tmp_compexpr_left_4 = LOOKUP_ATTRIBUTE(tmp_source_name_3, const_str_plain_process_list);
                    if (tmp_compexpr_left_4 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 20;
                        type_description_1 = "oooooooooooooooo";
                        goto try_except_handler_2;
                    }
                    tmp_compexpr_right_4 = PyList_New(0);
                    tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_4, tmp_compexpr_right_4);
                    Py_DECREF(tmp_compexpr_left_4);
                    Py_DECREF(tmp_compexpr_right_4);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 20;
                        type_description_1 = "oooooooooooooooo";
                        goto try_except_handler_2;
                    }
                    tmp_condition_result_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_4 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_4;
                    } else {
                        goto branch_no_4;
                    }
                    branch_yes_4:;
                    {
                        PyObject *tmp_assign_source_6;
                        PyObject *tmp_iter_arg_2;
                        PyObject *tmp_source_name_4;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_4 = par_ui;
                        tmp_iter_arg_2 = LOOKUP_ATTRIBUTE(tmp_source_name_4, const_str_plain_process_list);
                        if (tmp_iter_arg_2 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 21;
                            type_description_1 = "oooooooooooooooo";
                            goto try_except_handler_2;
                        }
                        tmp_assign_source_6 = MAKE_ITERATOR(tmp_iter_arg_2);
                        Py_DECREF(tmp_iter_arg_2);
                        if (tmp_assign_source_6 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 21;
                            type_description_1 = "oooooooooooooooo";
                            goto try_except_handler_2;
                        }
                        {
                            PyObject *old = tmp_for_loop_2__for_iterator;
                            tmp_for_loop_2__for_iterator = tmp_assign_source_6;
                            Py_XDECREF(old);
                        }

                    }
                    // Tried code:
                    loop_start_2:;
                    {
                        PyObject *tmp_next_source_2;
                        PyObject *tmp_assign_source_7;
                        CHECK_OBJECT(tmp_for_loop_2__for_iterator);
                        tmp_next_source_2 = tmp_for_loop_2__for_iterator;
                        tmp_assign_source_7 = ITERATOR_NEXT(tmp_next_source_2);
                        if (tmp_assign_source_7 == NULL) {
                            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                                goto loop_end_2;
                            } else {

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                type_description_1 = "oooooooooooooooo";
                                exception_lineno = 21;
                                goto try_except_handler_3;
                            }
                        }

                        {
                            PyObject *old = tmp_for_loop_2__iter_value;
                            tmp_for_loop_2__iter_value = tmp_assign_source_7;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assign_source_8;
                        CHECK_OBJECT(tmp_for_loop_2__iter_value);
                        tmp_assign_source_8 = tmp_for_loop_2__iter_value;
                        {
                            PyObject *old = var_p;
                            var_p = tmp_assign_source_8;
                            Py_INCREF(var_p);
                            Py_XDECREF(old);
                        }

                    }
                    {
                        nuitka_bool tmp_condition_result_5;
                        PyObject *tmp_compexpr_left_5;
                        PyObject *tmp_compexpr_right_5;
                        CHECK_OBJECT(var_p);
                        tmp_compexpr_left_5 = var_p;
                        tmp_compexpr_right_5 = Py_None;
                        tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_5, tmp_compexpr_right_5);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 22;
                            type_description_1 = "oooooooooooooooo";
                            goto try_except_handler_3;
                        }
                        tmp_condition_result_5 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_5 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_5;
                        } else {
                            goto branch_no_5;
                        }
                        branch_yes_5:;
                        {
                            PyObject *tmp_called_instance_5;
                            PyObject *tmp_call_result_4;
                            CHECK_OBJECT(var_p);
                            tmp_called_instance_5 = var_p;
                            frame_a2fa7565dc252c4cd4924ec2306a4b6c->m_frame.f_lineno = 23;
                            tmp_call_result_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_5, const_str_plain_terminate);
                            if (tmp_call_result_4 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 23;
                                type_description_1 = "oooooooooooooooo";
                                goto try_except_handler_3;
                            }
                            Py_DECREF(tmp_call_result_4);
                        }
                        {
                            PyObject *tmp_assign_source_9;
                            tmp_assign_source_9 = Py_None;
                            {
                                PyObject *old = var_p;
                                assert(old != NULL);
                                var_p = tmp_assign_source_9;
                                Py_INCREF(var_p);
                                Py_DECREF(old);
                            }

                        }
                        branch_no_5:;
                    }
                    if (CONSIDER_THREADING() == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 21;
                        type_description_1 = "oooooooooooooooo";
                        goto try_except_handler_3;
                    }
                    goto loop_start_2;
                    loop_end_2:;
                    goto try_end_1;
                    // Exception handler code:
                    try_except_handler_3:;
                    exception_keeper_type_1 = exception_type;
                    exception_keeper_value_1 = exception_value;
                    exception_keeper_tb_1 = exception_tb;
                    exception_keeper_lineno_1 = exception_lineno;
                    exception_type = NULL;
                    exception_value = NULL;
                    exception_tb = NULL;
                    exception_lineno = 0;

                    Py_XDECREF(tmp_for_loop_2__iter_value);
                    tmp_for_loop_2__iter_value = NULL;

                    CHECK_OBJECT((PyObject *)tmp_for_loop_2__for_iterator);
                    Py_DECREF(tmp_for_loop_2__for_iterator);
                    tmp_for_loop_2__for_iterator = NULL;

                    // Re-raise.
                    exception_type = exception_keeper_type_1;
                    exception_value = exception_keeper_value_1;
                    exception_tb = exception_keeper_tb_1;
                    exception_lineno = exception_keeper_lineno_1;

                    goto try_except_handler_2;
                    // End of try:
                    try_end_1:;
                    Py_XDECREF(tmp_for_loop_2__iter_value);
                    tmp_for_loop_2__iter_value = NULL;

                    CHECK_OBJECT((PyObject *)tmp_for_loop_2__for_iterator);
                    Py_DECREF(tmp_for_loop_2__for_iterator);
                    tmp_for_loop_2__for_iterator = NULL;

                    {
                        PyObject *tmp_assattr_name_2;
                        PyObject *tmp_assattr_target_2;
                        tmp_assattr_name_2 = PyList_New(0);
                        CHECK_OBJECT(par_ui);
                        tmp_assattr_target_2 = par_ui;
                        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_2, const_str_plain_process_list, tmp_assattr_name_2);
                        Py_DECREF(tmp_assattr_name_2);
                        if (tmp_result == false) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 25;
                            type_description_1 = "oooooooooooooooo";
                            goto try_except_handler_2;
                        }
                    }
                    branch_no_4:;
                }
                branch_end_3:;
            }
            {
                PyObject *tmp_called_instance_6;
                PyObject *tmp_call_result_5;
                CHECK_OBJECT(var_op_proc);
                tmp_called_instance_6 = var_op_proc;
                frame_a2fa7565dc252c4cd4924ec2306a4b6c->m_frame.f_lineno = 26;
                tmp_call_result_5 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_6, const_str_plain_join, &PyTuple_GET_ITEM(const_tuple_float_0_0_tuple, 0));

                if (tmp_call_result_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 26;
                    type_description_1 = "oooooooooooooooo";
                    goto try_except_handler_2;
                }
                Py_DECREF(tmp_call_result_5);
            }
            branch_no_2:;
        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 15;
            type_description_1 = "oooooooooooooooo";
            goto try_except_handler_2;
        }
        goto loop_start_1;
        loop_end_1:;
        goto try_end_2;
        // Exception handler code:
        try_except_handler_2:;
        exception_keeper_type_2 = exception_type;
        exception_keeper_value_2 = exception_value;
        exception_keeper_tb_2 = exception_tb;
        exception_keeper_lineno_2 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_1__iter_value);
        tmp_for_loop_1__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_1__for_iterator);
        Py_DECREF(tmp_for_loop_1__for_iterator);
        tmp_for_loop_1__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_2;
        exception_value = exception_keeper_value_2;
        exception_tb = exception_keeper_tb_2;
        exception_lineno = exception_keeper_lineno_2;

        goto frame_exception_exit_1;
        // End of try:
        try_end_2:;
        Py_XDECREF(tmp_for_loop_1__iter_value);
        tmp_for_loop_1__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_1__for_iterator);
        Py_DECREF(tmp_for_loop_1__for_iterator);
        tmp_for_loop_1__for_iterator = NULL;

        branch_no_1:;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_a2fa7565dc252c4cd4924ec2306a4b6c);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_a2fa7565dc252c4cd4924ec2306a4b6c);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_a2fa7565dc252c4cd4924ec2306a4b6c, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_a2fa7565dc252c4cd4924ec2306a4b6c->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_a2fa7565dc252c4cd4924ec2306a4b6c, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_a2fa7565dc252c4cd4924ec2306a4b6c,
        type_description_1,
        par_ui,
        par_max_time,
        par_start_time,
        par_op_procs,
        par_res_list,
        par_e,
        par_selected_list,
        par_status_list,
        par_val,
        par_val2,
        par_val3,
        par_val4,
        var_op_proc,
        var_elapsed_time,
        var_p,
        var_curr_time
    );


    // Release cached frame.
    if (frame_a2fa7565dc252c4cd4924ec2306a4b6c == cache_frame_a2fa7565dc252c4cd4924ec2306a4b6c) {
        Py_DECREF(frame_a2fa7565dc252c4cd4924ec2306a4b6c);
    }
    cache_frame_a2fa7565dc252c4cd4924ec2306a4b6c = NULL;

    assertFrameObject(frame_a2fa7565dc252c4cd4924ec2306a4b6c);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(cleanop$$$function_1_timeout_cleanup);
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    Py_XDECREF(var_op_proc);
    var_op_proc = NULL;

    CHECK_OBJECT((PyObject *)var_elapsed_time);
    Py_DECREF(var_elapsed_time);
    var_elapsed_time = NULL;

    Py_XDECREF(var_p);
    var_p = NULL;

    CHECK_OBJECT((PyObject *)var_curr_time);
    Py_DECREF(var_curr_time);
    var_curr_time = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_3 = exception_type;
    exception_keeper_value_3 = exception_value;
    exception_keeper_tb_3 = exception_tb;
    exception_keeper_lineno_3 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_op_proc);
    var_op_proc = NULL;

    Py_XDECREF(var_elapsed_time);
    var_elapsed_time = NULL;

    Py_XDECREF(var_p);
    var_p = NULL;

    Py_XDECREF(var_curr_time);
    var_curr_time = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_3;
    exception_value = exception_keeper_value_3;
    exception_tb = exception_keeper_tb_3;
    exception_lineno = exception_keeper_lineno_3;

    goto function_exception_exit;
    // End of try:

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(cleanop$$$function_1_timeout_cleanup);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_res_list);
    Py_DECREF(par_res_list);
    CHECK_OBJECT(par_e);
    Py_DECREF(par_e);
    CHECK_OBJECT(par_val);
    Py_DECREF(par_val);
    CHECK_OBJECT(par_start_time);
    Py_DECREF(par_start_time);
    CHECK_OBJECT(par_op_procs);
    Py_DECREF(par_op_procs);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);
    CHECK_OBJECT(par_max_time);
    Py_DECREF(par_max_time);
    CHECK_OBJECT(par_selected_list);
    Py_DECREF(par_selected_list);
    CHECK_OBJECT(par_val3);
    Py_DECREF(par_val3);
    CHECK_OBJECT(par_val2);
    Py_DECREF(par_val2);
    CHECK_OBJECT(par_status_list);
    Py_DECREF(par_status_list);
    CHECK_OBJECT(par_val4);
    Py_DECREF(par_val4);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_res_list);
    Py_DECREF(par_res_list);
    CHECK_OBJECT(par_e);
    Py_DECREF(par_e);
    CHECK_OBJECT(par_val);
    Py_DECREF(par_val);
    CHECK_OBJECT(par_start_time);
    Py_DECREF(par_start_time);
    CHECK_OBJECT(par_op_procs);
    Py_DECREF(par_op_procs);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);
    CHECK_OBJECT(par_max_time);
    Py_DECREF(par_max_time);
    CHECK_OBJECT(par_selected_list);
    Py_DECREF(par_selected_list);
    CHECK_OBJECT(par_val3);
    Py_DECREF(par_val3);
    CHECK_OBJECT(par_val2);
    Py_DECREF(par_val2);
    CHECK_OBJECT(par_status_list);
    Py_DECREF(par_status_list);
    CHECK_OBJECT(par_val4);
    Py_DECREF(par_val4);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_cleanop$$$function_2_setupFull_cleanup(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_ui = python_pars[0];
    PyObject *par_max_time = python_pars[1];
    PyObject *par_start_time = python_pars[2];
    PyObject *par_op_procs = python_pars[3];
    PyObject *par_res_list = python_pars[4];
    PyObject *par_e_to = python_pars[5];
    PyObject *par_selected_list = python_pars[6];
    PyObject *par_status_list = python_pars[7];
    PyObject *par_rc_list = python_pars[8];
    PyObject *par_status_usb = python_pars[9];
    PyObject *par_trylimit_list = python_pars[10];
    PyObject *par_rescan_needed = python_pars[11];
    PyObject *var_list_p = NULL;
    PyObject *var_list_miss = NULL;
    PyObject *var_start_miss = NULL;
    PyObject *var_start_p0 = NULL;
    PyObject *var_list_f = NULL;
    PyObject *var_op_proc = NULL;
    PyObject *var_start_alo = NULL;
    PyObject *var_start_na = NULL;
    PyObject *var_usb_f = NULL;
    PyObject *var_res_sum = NULL;
    PyObject *var_usb_fail = NULL;
    PyObject *var_list_to = NULL;
    PyObject *var_list_nat = NULL;
    PyObject *var_elapsed_time = NULL;
    PyObject *var_start = NULL;
    PyObject *var_start_f0 = NULL;
    PyObject *var_liststr = NULL;
    PyObject *var_list_alo = NULL;
    PyObject *var_start_nat = NULL;
    PyObject *var_start_f = NULL;
    PyObject *var_list_f0 = NULL;
    PyObject *var_start_to = NULL;
    PyObject *var_y = NULL;
    PyObject *var_pv = NULL;
    PyObject *var_fn = NULL;
    PyObject *var_count = NULL;
    PyObject *var_f = NULL;
    PyObject *var_d = NULL;
    PyObject *var_i = NULL;
    PyObject *var_j = NULL;
    PyObject *var_p = NULL;
    PyObject *var_act_idx = NULL;
    PyObject *var_start_p = NULL;
    PyObject *var_list_na = NULL;
    PyObject *var_list_p0 = NULL;
    PyObject *var_z = NULL;
    PyObject *var_curr_time = NULL;
    PyObject *tmp_for_loop_1__for_iterator = NULL;
    PyObject *tmp_for_loop_1__iter_value = NULL;
    PyObject *tmp_for_loop_2__for_iterator = NULL;
    PyObject *tmp_for_loop_2__iter_value = NULL;
    PyObject *tmp_for_loop_3__for_iterator = NULL;
    PyObject *tmp_for_loop_3__iter_value = NULL;
    PyObject *tmp_for_loop_4__for_iterator = NULL;
    PyObject *tmp_for_loop_4__iter_value = NULL;
    PyObject *tmp_for_loop_5__for_iterator = NULL;
    PyObject *tmp_for_loop_5__iter_value = NULL;
    PyObject *tmp_for_loop_6__for_iterator = NULL;
    PyObject *tmp_for_loop_6__iter_value = NULL;
    PyObject *tmp_for_loop_7__for_iterator = NULL;
    PyObject *tmp_for_loop_7__iter_value = NULL;
    PyObject *tmp_for_loop_8__for_iterator = NULL;
    PyObject *tmp_for_loop_8__iter_value = NULL;
    struct Nuitka_FrameObject *frame_ef356f0a113d493889005f3e6f52fd41;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    bool tmp_result;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;
    PyObject *exception_keeper_type_3;
    PyObject *exception_keeper_value_3;
    PyTracebackObject *exception_keeper_tb_3;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_3;
    PyObject *exception_keeper_type_4;
    PyObject *exception_keeper_value_4;
    PyTracebackObject *exception_keeper_tb_4;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_4;
    PyObject *exception_keeper_type_5;
    PyObject *exception_keeper_value_5;
    PyTracebackObject *exception_keeper_tb_5;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_5;
    PyObject *exception_keeper_type_6;
    PyObject *exception_keeper_value_6;
    PyTracebackObject *exception_keeper_tb_6;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_6;
    PyObject *exception_keeper_type_7;
    PyObject *exception_keeper_value_7;
    PyTracebackObject *exception_keeper_tb_7;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_7;
    PyObject *tmp_print_value;
    PyObject *exception_keeper_type_8;
    PyObject *exception_keeper_value_8;
    PyTracebackObject *exception_keeper_tb_8;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_8;
    PyObject *exception_keeper_type_9;
    PyObject *exception_keeper_value_9;
    PyTracebackObject *exception_keeper_tb_9;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_9;
    PyObject *exception_keeper_type_10;
    PyObject *exception_keeper_value_10;
    PyTracebackObject *exception_keeper_tb_10;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_10;
    PyObject *exception_keeper_type_11;
    PyObject *exception_keeper_value_11;
    PyTracebackObject *exception_keeper_tb_11;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_11;
    static struct Nuitka_FrameObject *cache_frame_ef356f0a113d493889005f3e6f52fd41 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_keeper_type_12;
    PyObject *exception_keeper_value_12;
    PyTracebackObject *exception_keeper_tb_12;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_12;

    // Actual function body.
    // Tried code:
    MAKE_OR_REUSE_FRAME(cache_frame_ef356f0a113d493889005f3e6f52fd41, codeobj_ef356f0a113d493889005f3e6f52fd41, module_cleanop, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
    frame_ef356f0a113d493889005f3e6f52fd41 = cache_frame_ef356f0a113d493889005f3e6f52fd41;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_ef356f0a113d493889005f3e6f52fd41);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_ef356f0a113d493889005f3e6f52fd41) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_called_instance_1;
        PyObject *tmp_mvar_value_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_time);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_time);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1164 ], 33, 0);
            exception_tb = NULL;

            exception_lineno = 31;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_1 = tmp_mvar_value_1;
        frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 31;
        tmp_assign_source_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_1, const_str_plain_time);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 31;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_curr_time == NULL);
        var_curr_time = tmp_assign_source_1;
    }
    {
        PyObject *tmp_assign_source_2;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        CHECK_OBJECT(var_curr_time);
        tmp_left_name_1 = var_curr_time;
        CHECK_OBJECT(par_start_time);
        tmp_right_name_1 = par_start_time;
        tmp_assign_source_2 = BINARY_OPERATION_SUB_OBJECT_OBJECT(tmp_left_name_1, tmp_right_name_1);
        if (tmp_assign_source_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 32;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_elapsed_time == NULL);
        var_elapsed_time = tmp_assign_source_2;
    }
    {
        nuitka_bool tmp_condition_result_1;
        PyObject *tmp_compexpr_left_1;
        PyObject *tmp_compexpr_right_1;
        CHECK_OBJECT(var_elapsed_time);
        tmp_compexpr_left_1 = var_elapsed_time;
        CHECK_OBJECT(par_max_time);
        tmp_compexpr_right_1 = par_max_time;
        tmp_res = RICH_COMPARE_BOOL_GTE_OBJECT_OBJECT(tmp_compexpr_left_1, tmp_compexpr_right_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 33;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        {
            PyObject *tmp_called_instance_2;
            PyObject *tmp_call_result_1;
            CHECK_OBJECT(par_e_to);
            tmp_called_instance_2 = par_e_to;
            frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 34;
            tmp_call_result_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_2, const_str_plain_set);
            if (tmp_call_result_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 34;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_1);
        }
        {
            PyObject *tmp_assign_source_3;
            PyObject *tmp_iter_arg_1;
            CHECK_OBJECT(par_op_procs);
            tmp_iter_arg_1 = par_op_procs;
            tmp_assign_source_3 = MAKE_ITERATOR(tmp_iter_arg_1);
            if (tmp_assign_source_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 35;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_1__for_iterator == NULL);
            tmp_for_loop_1__for_iterator = tmp_assign_source_3;
        }
        // Tried code:
        loop_start_1:;
        {
            PyObject *tmp_next_source_1;
            PyObject *tmp_assign_source_4;
            CHECK_OBJECT(tmp_for_loop_1__for_iterator);
            tmp_next_source_1 = tmp_for_loop_1__for_iterator;
            tmp_assign_source_4 = ITERATOR_NEXT(tmp_next_source_1);
            if (tmp_assign_source_4 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_1;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    exception_lineno = 35;
                    goto try_except_handler_2;
                }
            }

            {
                PyObject *old = tmp_for_loop_1__iter_value;
                tmp_for_loop_1__iter_value = tmp_assign_source_4;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_5;
            CHECK_OBJECT(tmp_for_loop_1__iter_value);
            tmp_assign_source_5 = tmp_for_loop_1__iter_value;
            {
                PyObject *old = var_op_proc;
                var_op_proc = tmp_assign_source_5;
                Py_INCREF(var_op_proc);
                Py_XDECREF(old);
            }

        }
        {
            nuitka_bool tmp_condition_result_2;
            int tmp_and_left_truth_1;
            nuitka_bool tmp_and_left_value_1;
            nuitka_bool tmp_and_right_value_1;
            PyObject *tmp_compexpr_left_2;
            PyObject *tmp_compexpr_right_2;
            PyObject *tmp_called_instance_3;
            PyObject *tmp_call_result_2;
            int tmp_truth_name_1;
            CHECK_OBJECT(var_op_proc);
            tmp_compexpr_left_2 = var_op_proc;
            tmp_compexpr_right_2 = Py_None;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_2, tmp_compexpr_right_2);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 36;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto try_except_handler_2;
            }
            tmp_and_left_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            tmp_and_left_truth_1 = tmp_and_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
            if (tmp_and_left_truth_1 == 1) {
                goto and_right_1;
            } else {
                goto and_left_1;
            }
            and_right_1:;
            CHECK_OBJECT(var_op_proc);
            tmp_called_instance_3 = var_op_proc;
            frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 36;
            tmp_call_result_2 = CALL_METHOD_NO_ARGS(tmp_called_instance_3, const_str_plain_is_alive);
            if (tmp_call_result_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 36;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto try_except_handler_2;
            }
            tmp_truth_name_1 = CHECK_IF_TRUE(tmp_call_result_2);
            if (tmp_truth_name_1 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_call_result_2);

                exception_lineno = 36;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto try_except_handler_2;
            }
            tmp_and_right_value_1 = tmp_truth_name_1 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            Py_DECREF(tmp_call_result_2);
            tmp_condition_result_2 = tmp_and_right_value_1;
            goto and_end_1;
            and_left_1:;
            tmp_condition_result_2 = tmp_and_left_value_1;
            and_end_1:;
            if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
                goto branch_yes_2;
            } else {
                goto branch_no_2;
            }
            branch_yes_2:;
            {
                nuitka_bool tmp_condition_result_3;
                PyObject *tmp_compexpr_left_3;
                PyObject *tmp_compexpr_right_3;
                PyObject *tmp_source_name_1;
                CHECK_OBJECT(par_ui);
                tmp_source_name_1 = par_ui;
                tmp_compexpr_left_3 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_process);
                if (tmp_compexpr_left_3 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 37;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_2;
                }
                tmp_compexpr_right_3 = Py_None;
                tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_3, tmp_compexpr_right_3);
                Py_DECREF(tmp_compexpr_left_3);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 37;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_2;
                }
                tmp_condition_result_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_3 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_3;
                } else {
                    goto branch_no_3;
                }
                branch_yes_3:;
                {
                    PyObject *tmp_called_instance_4;
                    PyObject *tmp_source_name_2;
                    PyObject *tmp_call_result_3;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_2 = par_ui;
                    tmp_called_instance_4 = LOOKUP_ATTRIBUTE(tmp_source_name_2, const_str_plain_process);
                    if (tmp_called_instance_4 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 38;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_2;
                    }
                    frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 38;
                    tmp_call_result_3 = CALL_METHOD_NO_ARGS(tmp_called_instance_4, const_str_plain_terminate);
                    Py_DECREF(tmp_called_instance_4);
                    if (tmp_call_result_3 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 38;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_2;
                    }
                    Py_DECREF(tmp_call_result_3);
                }
                {
                    PyObject *tmp_assattr_name_1;
                    PyObject *tmp_assattr_target_1;
                    tmp_assattr_name_1 = Py_None;
                    CHECK_OBJECT(par_ui);
                    tmp_assattr_target_1 = par_ui;
                    tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, const_str_plain_process, tmp_assattr_name_1);
                    if (tmp_result == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 39;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_2;
                    }
                }
                goto branch_end_3;
                branch_no_3:;
                {
                    nuitka_bool tmp_condition_result_4;
                    PyObject *tmp_compexpr_left_4;
                    PyObject *tmp_compexpr_right_4;
                    PyObject *tmp_source_name_3;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_3 = par_ui;
                    tmp_compexpr_left_4 = LOOKUP_ATTRIBUTE(tmp_source_name_3, const_str_plain_process_list);
                    if (tmp_compexpr_left_4 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 40;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_2;
                    }
                    tmp_compexpr_right_4 = PyList_New(0);
                    tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_4, tmp_compexpr_right_4);
                    Py_DECREF(tmp_compexpr_left_4);
                    Py_DECREF(tmp_compexpr_right_4);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 40;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_2;
                    }
                    tmp_condition_result_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_4 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_4;
                    } else {
                        goto branch_no_4;
                    }
                    branch_yes_4:;
                    {
                        PyObject *tmp_assign_source_6;
                        PyObject *tmp_iter_arg_2;
                        PyObject *tmp_source_name_4;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_4 = par_ui;
                        tmp_iter_arg_2 = LOOKUP_ATTRIBUTE(tmp_source_name_4, const_str_plain_process_list);
                        if (tmp_iter_arg_2 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 41;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_2;
                        }
                        tmp_assign_source_6 = MAKE_ITERATOR(tmp_iter_arg_2);
                        Py_DECREF(tmp_iter_arg_2);
                        if (tmp_assign_source_6 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 41;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_2;
                        }
                        {
                            PyObject *old = tmp_for_loop_2__for_iterator;
                            tmp_for_loop_2__for_iterator = tmp_assign_source_6;
                            Py_XDECREF(old);
                        }

                    }
                    // Tried code:
                    loop_start_2:;
                    {
                        PyObject *tmp_next_source_2;
                        PyObject *tmp_assign_source_7;
                        CHECK_OBJECT(tmp_for_loop_2__for_iterator);
                        tmp_next_source_2 = tmp_for_loop_2__for_iterator;
                        tmp_assign_source_7 = ITERATOR_NEXT(tmp_next_source_2);
                        if (tmp_assign_source_7 == NULL) {
                            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                                goto loop_end_2;
                            } else {

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                exception_lineno = 41;
                                goto try_except_handler_3;
                            }
                        }

                        {
                            PyObject *old = tmp_for_loop_2__iter_value;
                            tmp_for_loop_2__iter_value = tmp_assign_source_7;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assign_source_8;
                        CHECK_OBJECT(tmp_for_loop_2__iter_value);
                        tmp_assign_source_8 = tmp_for_loop_2__iter_value;
                        {
                            PyObject *old = var_p;
                            var_p = tmp_assign_source_8;
                            Py_INCREF(var_p);
                            Py_XDECREF(old);
                        }

                    }
                    {
                        nuitka_bool tmp_condition_result_5;
                        PyObject *tmp_compexpr_left_5;
                        PyObject *tmp_compexpr_right_5;
                        CHECK_OBJECT(var_p);
                        tmp_compexpr_left_5 = var_p;
                        tmp_compexpr_right_5 = Py_None;
                        tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_5, tmp_compexpr_right_5);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 42;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_3;
                        }
                        tmp_condition_result_5 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_5 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_5;
                        } else {
                            goto branch_no_5;
                        }
                        branch_yes_5:;
                        {
                            PyObject *tmp_called_instance_5;
                            PyObject *tmp_call_result_4;
                            CHECK_OBJECT(var_p);
                            tmp_called_instance_5 = var_p;
                            frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 43;
                            tmp_call_result_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_5, const_str_plain_terminate);
                            if (tmp_call_result_4 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 43;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_3;
                            }
                            Py_DECREF(tmp_call_result_4);
                        }
                        {
                            PyObject *tmp_assign_source_9;
                            tmp_assign_source_9 = Py_None;
                            {
                                PyObject *old = var_p;
                                assert(old != NULL);
                                var_p = tmp_assign_source_9;
                                Py_INCREF(var_p);
                                Py_DECREF(old);
                            }

                        }
                        branch_no_5:;
                    }
                    if (CONSIDER_THREADING() == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 41;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_3;
                    }
                    goto loop_start_2;
                    loop_end_2:;
                    goto try_end_1;
                    // Exception handler code:
                    try_except_handler_3:;
                    exception_keeper_type_1 = exception_type;
                    exception_keeper_value_1 = exception_value;
                    exception_keeper_tb_1 = exception_tb;
                    exception_keeper_lineno_1 = exception_lineno;
                    exception_type = NULL;
                    exception_value = NULL;
                    exception_tb = NULL;
                    exception_lineno = 0;

                    Py_XDECREF(tmp_for_loop_2__iter_value);
                    tmp_for_loop_2__iter_value = NULL;

                    CHECK_OBJECT((PyObject *)tmp_for_loop_2__for_iterator);
                    Py_DECREF(tmp_for_loop_2__for_iterator);
                    tmp_for_loop_2__for_iterator = NULL;

                    // Re-raise.
                    exception_type = exception_keeper_type_1;
                    exception_value = exception_keeper_value_1;
                    exception_tb = exception_keeper_tb_1;
                    exception_lineno = exception_keeper_lineno_1;

                    goto try_except_handler_2;
                    // End of try:
                    try_end_1:;
                    Py_XDECREF(tmp_for_loop_2__iter_value);
                    tmp_for_loop_2__iter_value = NULL;

                    CHECK_OBJECT((PyObject *)tmp_for_loop_2__for_iterator);
                    Py_DECREF(tmp_for_loop_2__for_iterator);
                    tmp_for_loop_2__for_iterator = NULL;

                    {
                        PyObject *tmp_assattr_name_2;
                        PyObject *tmp_assattr_target_2;
                        tmp_assattr_name_2 = PyList_New(0);
                        CHECK_OBJECT(par_ui);
                        tmp_assattr_target_2 = par_ui;
                        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_2, const_str_plain_process_list, tmp_assattr_name_2);
                        Py_DECREF(tmp_assattr_name_2);
                        if (tmp_result == false) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 45;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_2;
                        }
                    }
                    branch_no_4:;
                }
                branch_end_3:;
            }
            {
                PyObject *tmp_called_instance_6;
                PyObject *tmp_call_result_5;
                CHECK_OBJECT(var_op_proc);
                tmp_called_instance_6 = var_op_proc;
                frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 46;
                tmp_call_result_5 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_6, const_str_plain_join, &PyTuple_GET_ITEM(const_tuple_float_0_0_tuple, 0));

                if (tmp_call_result_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 46;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_2;
                }
                Py_DECREF(tmp_call_result_5);
            }
            branch_no_2:;
        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 35;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
            goto try_except_handler_2;
        }
        goto loop_start_1;
        loop_end_1:;
        goto try_end_2;
        // Exception handler code:
        try_except_handler_2:;
        exception_keeper_type_2 = exception_type;
        exception_keeper_value_2 = exception_value;
        exception_keeper_tb_2 = exception_tb;
        exception_keeper_lineno_2 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_1__iter_value);
        tmp_for_loop_1__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_1__for_iterator);
        Py_DECREF(tmp_for_loop_1__for_iterator);
        tmp_for_loop_1__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_2;
        exception_value = exception_keeper_value_2;
        exception_tb = exception_keeper_tb_2;
        exception_lineno = exception_keeper_lineno_2;

        goto frame_exception_exit_1;
        // End of try:
        try_end_2:;
        Py_XDECREF(tmp_for_loop_1__iter_value);
        tmp_for_loop_1__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_1__for_iterator);
        Py_DECREF(tmp_for_loop_1__for_iterator);
        tmp_for_loop_1__for_iterator = NULL;

        branch_no_1:;
    }
    {
        PyObject *tmp_assign_source_10;
        PyObject *tmp_iter_arg_3;
        PyObject *tmp_range_arg_1;
        PyObject *tmp_len_arg_1;
        PyObject *tmp_source_name_5;
        CHECK_OBJECT(par_ui);
        tmp_source_name_5 = par_ui;
        tmp_len_arg_1 = LOOKUP_ATTRIBUTE(tmp_source_name_5, const_str_plain_devs_list);
        if (tmp_len_arg_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 48;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_range_arg_1 = BUILTIN_LEN(tmp_len_arg_1);
        Py_DECREF(tmp_len_arg_1);
        if (tmp_range_arg_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 48;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_iter_arg_3 = BUILTIN_RANGE(tmp_range_arg_1);
        Py_DECREF(tmp_range_arg_1);
        if (tmp_iter_arg_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 48;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_10 = MAKE_ITERATOR(tmp_iter_arg_3);
        Py_DECREF(tmp_iter_arg_3);
        if (tmp_assign_source_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 48;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_3__for_iterator == NULL);
        tmp_for_loop_3__for_iterator = tmp_assign_source_10;
    }
    // Tried code:
    loop_start_3:;
    {
        PyObject *tmp_next_source_3;
        PyObject *tmp_assign_source_11;
        CHECK_OBJECT(tmp_for_loop_3__for_iterator);
        tmp_next_source_3 = tmp_for_loop_3__for_iterator;
        tmp_assign_source_11 = ITERATOR_NEXT(tmp_next_source_3);
        if (tmp_assign_source_11 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_3;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                exception_lineno = 48;
                goto try_except_handler_4;
            }
        }

        {
            PyObject *old = tmp_for_loop_3__iter_value;
            tmp_for_loop_3__iter_value = tmp_assign_source_11;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_12;
        CHECK_OBJECT(tmp_for_loop_3__iter_value);
        tmp_assign_source_12 = tmp_for_loop_3__iter_value;
        {
            PyObject *old = var_i;
            var_i = tmp_assign_source_12;
            Py_INCREF(var_i);
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_called_instance_7;
        PyObject *tmp_mvar_value_2;
        PyObject *tmp_call_result_6;
        PyObject *tmp_args_element_name_1;
        tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_runop);

        if (unlikely(tmp_mvar_value_2 == NULL)) {
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runop);
        }

        if (tmp_mvar_value_2 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 490 ], 34, 0);
            exception_tb = NULL;

            exception_lineno = 49;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
            goto try_except_handler_4;
        }

        tmp_called_instance_7 = tmp_mvar_value_2;
        CHECK_OBJECT(var_i);
        tmp_args_element_name_1 = var_i;
        frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 49;
        {
            PyObject *call_args[] = {tmp_args_element_name_1};
            tmp_call_result_6 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_7, const_str_plain_postlock, call_args);
        }

        if (tmp_call_result_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 49;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
            goto try_except_handler_4;
        }
        Py_DECREF(tmp_call_result_6);
    }
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 48;
        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
        goto try_except_handler_4;
    }
    goto loop_start_3;
    loop_end_3:;
    goto try_end_3;
    // Exception handler code:
    try_except_handler_4:;
    exception_keeper_type_3 = exception_type;
    exception_keeper_value_3 = exception_value;
    exception_keeper_tb_3 = exception_tb;
    exception_keeper_lineno_3 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_3__iter_value);
    tmp_for_loop_3__iter_value = NULL;

    CHECK_OBJECT((PyObject *)tmp_for_loop_3__for_iterator);
    Py_DECREF(tmp_for_loop_3__for_iterator);
    tmp_for_loop_3__for_iterator = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_3;
    exception_value = exception_keeper_value_3;
    exception_tb = exception_keeper_tb_3;
    exception_lineno = exception_keeper_lineno_3;

    goto frame_exception_exit_1;
    // End of try:
    try_end_3:;
    Py_XDECREF(tmp_for_loop_3__iter_value);
    tmp_for_loop_3__iter_value = NULL;

    CHECK_OBJECT((PyObject *)tmp_for_loop_3__for_iterator);
    Py_DECREF(tmp_for_loop_3__for_iterator);
    tmp_for_loop_3__for_iterator = NULL;

    {
        PyObject *tmp_assattr_name_3;
        PyObject *tmp_assattr_target_3;
        tmp_assattr_name_3 = Py_False;
        CHECK_OBJECT(par_ui);
        tmp_assattr_target_3 = par_ui;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_3, const_str_plain_op_inprogress, tmp_assattr_name_3);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 54;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
            goto frame_exception_exit_1;
        }
    }
    {
        PyObject *tmp_assattr_name_4;
        PyObject *tmp_assattr_target_4;
        tmp_assattr_name_4 = Py_False;
        CHECK_OBJECT(par_ui);
        tmp_assattr_target_4 = par_ui;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_4, const_str_plain_pbawrite_ip, tmp_assattr_name_4);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 55;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
            goto frame_exception_exit_1;
        }
    }
    {
        nuitka_bool tmp_condition_result_6;
        PyObject *tmp_compexpr_left_6;
        PyObject *tmp_compexpr_right_6;
        PyObject *tmp_source_name_6;
        CHECK_OBJECT(par_status_usb);
        tmp_source_name_6 = par_status_usb;
        tmp_compexpr_left_6 = LOOKUP_ATTRIBUTE(tmp_source_name_6, const_str_plain_value);
        if (tmp_compexpr_left_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 59;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_6 = const_int_0;
        tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_INT(tmp_compexpr_left_6, tmp_compexpr_right_6);
        Py_DECREF(tmp_compexpr_left_6);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 59;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_6 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_6 == NUITKA_BOOL_TRUE) {
            goto branch_yes_6;
        } else {
            goto branch_no_6;
        }
        branch_yes_6:;
        {
            PyObject *tmp_called_instance_8;
            PyObject *tmp_call_result_7;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_8 = par_ui;
            frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 60;
            tmp_call_result_7 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_8, const_str_plain_msg_err, &PyTuple_GET_ITEM(const_tuple_str_digest_578f01a785338ee119f135fe28f487e9_tuple, 0));

            if (tmp_call_result_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 60;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_7);
        }
        {
            PyObject *tmp_called_instance_9;
            PyObject *tmp_call_result_8;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_9 = par_ui;
            frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 61;
            tmp_call_result_8 = CALL_METHOD_NO_ARGS(tmp_called_instance_9, const_str_plain_stop_spin);
            if (tmp_call_result_8 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 61;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_8);
        }
        {
            PyObject *tmp_called_instance_10;
            PyObject *tmp_call_result_9;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_10 = par_ui;
            frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 62;
            tmp_call_result_9 = CALL_METHOD_NO_ARGS(tmp_called_instance_10, const_str_plain_setup_prompt1);
            if (tmp_call_result_9 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 62;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_9);
        }
        goto branch_end_6;
        branch_no_6:;
        {
            PyObject *tmp_assign_source_13;
            tmp_assign_source_13 = Py_True;
            assert(var_start_f0 == NULL);
            Py_INCREF(tmp_assign_source_13);
            var_start_f0 = tmp_assign_source_13;
        }
        {
            PyObject *tmp_assign_source_14;
            tmp_assign_source_14 = Py_True;
            assert(var_start_p0 == NULL);
            Py_INCREF(tmp_assign_source_14);
            var_start_p0 = tmp_assign_source_14;
        }
        {
            PyObject *tmp_assign_source_15;
            tmp_assign_source_15 = const_str_empty;
            assert(var_list_f0 == NULL);
            Py_INCREF(tmp_assign_source_15);
            var_list_f0 = tmp_assign_source_15;
        }
        {
            PyObject *tmp_assign_source_16;
            tmp_assign_source_16 = const_str_empty;
            assert(var_list_p0 == NULL);
            Py_INCREF(tmp_assign_source_16);
            var_list_p0 = tmp_assign_source_16;
        }
        {
            PyObject *tmp_assign_source_17;
            tmp_assign_source_17 = Py_True;
            assert(var_start_miss == NULL);
            Py_INCREF(tmp_assign_source_17);
            var_start_miss = tmp_assign_source_17;
        }
        {
            PyObject *tmp_assign_source_18;
            tmp_assign_source_18 = const_str_empty;
            assert(var_list_miss == NULL);
            Py_INCREF(tmp_assign_source_18);
            var_list_miss = tmp_assign_source_18;
        }
        {
            PyObject *tmp_assign_source_19;
            PyObject *tmp_iter_arg_4;
            PyObject *tmp_range_arg_2;
            PyObject *tmp_len_arg_2;
            CHECK_OBJECT(par_selected_list);
            tmp_len_arg_2 = par_selected_list;
            tmp_range_arg_2 = BUILTIN_LEN(tmp_len_arg_2);
            if (tmp_range_arg_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 73;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_iter_arg_4 = BUILTIN_RANGE(tmp_range_arg_2);
            Py_DECREF(tmp_range_arg_2);
            if (tmp_iter_arg_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 73;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_assign_source_19 = MAKE_ITERATOR(tmp_iter_arg_4);
            Py_DECREF(tmp_iter_arg_4);
            if (tmp_assign_source_19 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 73;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_4__for_iterator == NULL);
            tmp_for_loop_4__for_iterator = tmp_assign_source_19;
        }
        // Tried code:
        loop_start_4:;
        {
            PyObject *tmp_next_source_4;
            PyObject *tmp_assign_source_20;
            CHECK_OBJECT(tmp_for_loop_4__for_iterator);
            tmp_next_source_4 = tmp_for_loop_4__for_iterator;
            tmp_assign_source_20 = ITERATOR_NEXT(tmp_next_source_4);
            if (tmp_assign_source_20 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_4;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    exception_lineno = 73;
                    goto try_except_handler_5;
                }
            }

            {
                PyObject *old = tmp_for_loop_4__iter_value;
                tmp_for_loop_4__iter_value = tmp_assign_source_20;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_21;
            CHECK_OBJECT(tmp_for_loop_4__iter_value);
            tmp_assign_source_21 = tmp_for_loop_4__iter_value;
            {
                PyObject *old = var_z;
                var_z = tmp_assign_source_21;
                Py_INCREF(var_z);
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assattr_name_5;
            PyObject *tmp_subscribed_name_1;
            PyObject *tmp_source_name_7;
            PyObject *tmp_subscript_name_1;
            PyObject *tmp_subscribed_name_2;
            PyObject *tmp_subscript_name_2;
            PyObject *tmp_assattr_target_5;
            CHECK_OBJECT(par_ui);
            tmp_source_name_7 = par_ui;
            tmp_subscribed_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_7, const_str_plain_devs_list);
            if (tmp_subscribed_name_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 74;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto try_except_handler_5;
            }
            CHECK_OBJECT(par_selected_list);
            tmp_subscribed_name_2 = par_selected_list;
            CHECK_OBJECT(var_z);
            tmp_subscript_name_2 = var_z;
            tmp_subscript_name_1 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_2, tmp_subscript_name_2);
            if (tmp_subscript_name_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_subscribed_name_1);

                exception_lineno = 74;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto try_except_handler_5;
            }
            tmp_assattr_name_5 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_1, tmp_subscript_name_1);
            Py_DECREF(tmp_subscribed_name_1);
            Py_DECREF(tmp_subscript_name_1);
            if (tmp_assattr_name_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 74;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto try_except_handler_5;
            }
            CHECK_OBJECT(par_ui);
            tmp_assattr_target_5 = par_ui;
            tmp_result = SET_ATTRIBUTE(tmp_assattr_target_5, const_str_plain_devname, tmp_assattr_name_5);
            Py_DECREF(tmp_assattr_name_5);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 74;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto try_except_handler_5;
            }
        }
        {
            nuitka_bool tmp_condition_result_7;
            PyObject *tmp_compexpr_left_7;
            PyObject *tmp_compexpr_right_7;
            PyObject *tmp_subscribed_name_3;
            PyObject *tmp_subscript_name_3;
            CHECK_OBJECT(par_rc_list);
            tmp_subscribed_name_3 = par_rc_list;
            CHECK_OBJECT(var_z);
            tmp_subscript_name_3 = var_z;
            tmp_compexpr_left_7 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_3, tmp_subscript_name_3);
            if (tmp_compexpr_left_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 75;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto try_except_handler_5;
            }
            tmp_compexpr_right_7 = const_int_neg_1;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_INT(tmp_compexpr_left_7, tmp_compexpr_right_7);
            Py_DECREF(tmp_compexpr_left_7);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 75;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto try_except_handler_5;
            }
            tmp_condition_result_7 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_7 == NUITKA_BOOL_TRUE) {
                goto branch_yes_7;
            } else {
                goto branch_no_7;
            }
            branch_yes_7:;
            {
                nuitka_bool tmp_condition_result_8;
                PyObject *tmp_compexpr_left_8;
                PyObject *tmp_compexpr_right_8;
                PyObject *tmp_subscribed_name_4;
                PyObject *tmp_subscript_name_4;
                CHECK_OBJECT(par_rc_list);
                tmp_subscribed_name_4 = par_rc_list;
                CHECK_OBJECT(var_z);
                tmp_subscript_name_4 = var_z;
                tmp_compexpr_left_8 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_4, tmp_subscript_name_4);
                if (tmp_compexpr_left_8 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 76;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_5;
                }
                tmp_compexpr_right_8 = const_int_0;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_8, tmp_compexpr_right_8);
                Py_DECREF(tmp_compexpr_left_8);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 76;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_5;
                }
                tmp_condition_result_8 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_8 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_8;
                } else {
                    goto branch_no_8;
                }
                branch_yes_8:;
                {
                    nuitka_bool tmp_condition_result_9;
                    PyObject *tmp_operand_name_1;
                    if (var_start_p0 == NULL) {

                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_p0");
                        exception_tb = NULL;

                        exception_lineno = 77;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_5;
                    }

                    tmp_operand_name_1 = var_start_p0;
                    tmp_res = CHECK_IF_TRUE(tmp_operand_name_1);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 77;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_5;
                    }
                    tmp_condition_result_9 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_9 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_9;
                    } else {
                        goto branch_no_9;
                    }
                    branch_yes_9:;
                    {
                        PyObject *tmp_assign_source_22;
                        PyObject *tmp_left_name_2;
                        PyObject *tmp_right_name_2;
                        if (var_list_p0 == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p0");
                            exception_tb = NULL;

                            exception_lineno = 78;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_5;
                        }

                        tmp_left_name_2 = var_list_p0;
                        tmp_right_name_2 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                        tmp_assign_source_22 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_2, tmp_right_name_2);
                        if (tmp_assign_source_22 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 78;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_5;
                        }
                        {
                            PyObject *old = var_list_p0;
                            var_list_p0 = tmp_assign_source_22;
                            Py_XDECREF(old);
                        }

                    }
                    goto branch_end_9;
                    branch_no_9:;
                    {
                        PyObject *tmp_assign_source_23;
                        tmp_assign_source_23 = Py_False;
                        {
                            PyObject *old = var_start_p0;
                            var_start_p0 = tmp_assign_source_23;
                            Py_INCREF(var_start_p0);
                            Py_XDECREF(old);
                        }

                    }
                    branch_end_9:;
                }
                {
                    PyObject *tmp_assign_source_24;
                    PyObject *tmp_left_name_3;
                    PyObject *tmp_right_name_3;
                    PyObject *tmp_subscribed_name_5;
                    PyObject *tmp_source_name_8;
                    PyObject *tmp_subscript_name_5;
                    PyObject *tmp_subscribed_name_6;
                    PyObject *tmp_subscript_name_6;
                    if (var_list_p0 == NULL) {

                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p0");
                        exception_tb = NULL;

                        exception_lineno = 81;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_5;
                    }

                    tmp_left_name_3 = var_list_p0;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_8 = par_ui;
                    tmp_subscribed_name_5 = LOOKUP_ATTRIBUTE(tmp_source_name_8, const_str_plain_devs_list);
                    if (tmp_subscribed_name_5 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 81;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_5;
                    }
                    CHECK_OBJECT(par_selected_list);
                    tmp_subscribed_name_6 = par_selected_list;
                    CHECK_OBJECT(var_z);
                    tmp_subscript_name_6 = var_z;
                    tmp_subscript_name_5 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_6, tmp_subscript_name_6);
                    if (tmp_subscript_name_5 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_subscribed_name_5);

                        exception_lineno = 81;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_5;
                    }
                    tmp_right_name_3 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_5, tmp_subscript_name_5);
                    Py_DECREF(tmp_subscribed_name_5);
                    Py_DECREF(tmp_subscript_name_5);
                    if (tmp_right_name_3 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 81;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_5;
                    }
                    tmp_assign_source_24 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_3, tmp_right_name_3);
                    Py_DECREF(tmp_right_name_3);
                    if (tmp_assign_source_24 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 81;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_5;
                    }
                    {
                        PyObject *old = var_list_p0;
                        var_list_p0 = tmp_assign_source_24;
                        Py_XDECREF(old);
                    }

                }
                {
                    PyObject *tmp_called_name_1;
                    PyObject *tmp_source_name_9;
                    PyObject *tmp_source_name_10;
                    PyObject *tmp_call_result_10;
                    PyObject *tmp_args_element_name_2;
                    PyObject *tmp_subscribed_name_7;
                    PyObject *tmp_subscript_name_7;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_10 = par_ui;
                    tmp_source_name_9 = LOOKUP_ATTRIBUTE(tmp_source_name_10, const_str_plain_mbr_setup_list);
                    if (tmp_source_name_9 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 82;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_5;
                    }
                    tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_9, const_str_plain_append);
                    Py_DECREF(tmp_source_name_9);
                    if (tmp_called_name_1 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 82;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_5;
                    }
                    CHECK_OBJECT(par_selected_list);
                    tmp_subscribed_name_7 = par_selected_list;
                    CHECK_OBJECT(var_z);
                    tmp_subscript_name_7 = var_z;
                    tmp_args_element_name_2 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_7, tmp_subscript_name_7);
                    if (tmp_args_element_name_2 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_1);

                        exception_lineno = 82;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_5;
                    }
                    frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 82;
                    tmp_call_result_10 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_1, tmp_args_element_name_2);
                    Py_DECREF(tmp_called_name_1);
                    Py_DECREF(tmp_args_element_name_2);
                    if (tmp_call_result_10 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 82;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_5;
                    }
                    Py_DECREF(tmp_call_result_10);
                }
                {
                    PyObject *tmp_called_instance_11;
                    PyObject *tmp_source_name_11;
                    PyObject *tmp_call_result_11;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_11 = par_ui;
                    tmp_called_instance_11 = LOOKUP_ATTRIBUTE(tmp_source_name_11, const_str_plain_mbr_setup_list);
                    if (tmp_called_instance_11 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 83;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_5;
                    }
                    frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 83;
                    tmp_call_result_11 = CALL_METHOD_NO_ARGS(tmp_called_instance_11, const_str_plain_sort);
                    Py_DECREF(tmp_called_instance_11);
                    if (tmp_call_result_11 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 83;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_5;
                    }
                    Py_DECREF(tmp_call_result_11);
                }
                goto branch_end_8;
                branch_no_8:;
                {
                    nuitka_bool tmp_condition_result_10;
                    PyObject *tmp_compexpr_left_9;
                    PyObject *tmp_compexpr_right_9;
                    PyObject *tmp_subscribed_name_8;
                    PyObject *tmp_subscript_name_8;
                    CHECK_OBJECT(par_rc_list);
                    tmp_subscribed_name_8 = par_rc_list;
                    CHECK_OBJECT(var_z);
                    tmp_subscript_name_8 = var_z;
                    tmp_compexpr_left_9 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_8, tmp_subscript_name_8);
                    if (tmp_compexpr_left_9 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 84;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_5;
                    }
                    tmp_compexpr_right_9 = const_int_neg_2;
                    tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_INT(tmp_compexpr_left_9, tmp_compexpr_right_9);
                    Py_DECREF(tmp_compexpr_left_9);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 84;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_5;
                    }
                    tmp_condition_result_10 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_10 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_10;
                    } else {
                        goto branch_no_10;
                    }
                    branch_yes_10:;
                    {
                        nuitka_bool tmp_condition_result_11;
                        PyObject *tmp_operand_name_2;
                        if (var_start_f0 == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_f0");
                            exception_tb = NULL;

                            exception_lineno = 85;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_5;
                        }

                        tmp_operand_name_2 = var_start_f0;
                        tmp_res = CHECK_IF_TRUE(tmp_operand_name_2);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 85;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_5;
                        }
                        tmp_condition_result_11 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_11 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_11;
                        } else {
                            goto branch_no_11;
                        }
                        branch_yes_11:;
                        {
                            PyObject *tmp_assign_source_25;
                            PyObject *tmp_left_name_4;
                            PyObject *tmp_right_name_4;
                            if (var_list_f0 == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f0");
                                exception_tb = NULL;

                                exception_lineno = 86;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_5;
                            }

                            tmp_left_name_4 = var_list_f0;
                            tmp_right_name_4 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                            tmp_assign_source_25 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_4, tmp_right_name_4);
                            if (tmp_assign_source_25 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 86;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_5;
                            }
                            {
                                PyObject *old = var_list_f0;
                                var_list_f0 = tmp_assign_source_25;
                                Py_XDECREF(old);
                            }

                        }
                        goto branch_end_11;
                        branch_no_11:;
                        {
                            PyObject *tmp_assign_source_26;
                            tmp_assign_source_26 = Py_False;
                            {
                                PyObject *old = var_start_f0;
                                var_start_f0 = tmp_assign_source_26;
                                Py_INCREF(var_start_f0);
                                Py_XDECREF(old);
                            }

                        }
                        branch_end_11:;
                    }
                    {
                        PyObject *tmp_assign_source_27;
                        PyObject *tmp_left_name_5;
                        PyObject *tmp_right_name_5;
                        PyObject *tmp_subscribed_name_9;
                        PyObject *tmp_source_name_12;
                        PyObject *tmp_subscript_name_9;
                        PyObject *tmp_subscribed_name_10;
                        PyObject *tmp_subscript_name_10;
                        if (var_list_f0 == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f0");
                            exception_tb = NULL;

                            exception_lineno = 89;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_5;
                        }

                        tmp_left_name_5 = var_list_f0;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_12 = par_ui;
                        tmp_subscribed_name_9 = LOOKUP_ATTRIBUTE(tmp_source_name_12, const_str_plain_devs_list);
                        if (tmp_subscribed_name_9 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 89;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_5;
                        }
                        CHECK_OBJECT(par_selected_list);
                        tmp_subscribed_name_10 = par_selected_list;
                        CHECK_OBJECT(var_z);
                        tmp_subscript_name_10 = var_z;
                        tmp_subscript_name_9 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_10, tmp_subscript_name_10);
                        if (tmp_subscript_name_9 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_subscribed_name_9);

                            exception_lineno = 89;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_5;
                        }
                        tmp_right_name_5 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_9, tmp_subscript_name_9);
                        Py_DECREF(tmp_subscribed_name_9);
                        Py_DECREF(tmp_subscript_name_9);
                        if (tmp_right_name_5 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 89;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_5;
                        }
                        tmp_assign_source_27 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_5, tmp_right_name_5);
                        Py_DECREF(tmp_right_name_5);
                        if (tmp_assign_source_27 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 89;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_5;
                        }
                        {
                            PyObject *old = var_list_f0;
                            var_list_f0 = tmp_assign_source_27;
                            Py_XDECREF(old);
                        }

                    }
                    goto branch_end_10;
                    branch_no_10:;
                    {
                        nuitka_bool tmp_condition_result_12;
                        PyObject *tmp_operand_name_3;
                        if (var_start_miss == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_miss");
                            exception_tb = NULL;

                            exception_lineno = 91;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_5;
                        }

                        tmp_operand_name_3 = var_start_miss;
                        tmp_res = CHECK_IF_TRUE(tmp_operand_name_3);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 91;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_5;
                        }
                        tmp_condition_result_12 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_12 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_12;
                        } else {
                            goto branch_no_12;
                        }
                        branch_yes_12:;
                        {
                            PyObject *tmp_assign_source_28;
                            PyObject *tmp_left_name_6;
                            PyObject *tmp_right_name_6;
                            if (var_list_miss == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_miss");
                                exception_tb = NULL;

                                exception_lineno = 92;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_5;
                            }

                            tmp_left_name_6 = var_list_miss;
                            tmp_right_name_6 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                            tmp_assign_source_28 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_6, tmp_right_name_6);
                            if (tmp_assign_source_28 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 92;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_5;
                            }
                            {
                                PyObject *old = var_list_miss;
                                var_list_miss = tmp_assign_source_28;
                                Py_XDECREF(old);
                            }

                        }
                        goto branch_end_12;
                        branch_no_12:;
                        {
                            PyObject *tmp_assign_source_29;
                            tmp_assign_source_29 = Py_False;
                            {
                                PyObject *old = var_start_miss;
                                var_start_miss = tmp_assign_source_29;
                                Py_INCREF(var_start_miss);
                                Py_XDECREF(old);
                            }

                        }
                        branch_end_12:;
                    }
                    {
                        PyObject *tmp_assign_source_30;
                        PyObject *tmp_left_name_7;
                        PyObject *tmp_right_name_7;
                        PyObject *tmp_subscribed_name_11;
                        PyObject *tmp_source_name_13;
                        PyObject *tmp_subscript_name_11;
                        PyObject *tmp_subscribed_name_12;
                        PyObject *tmp_subscript_name_12;
                        if (var_list_miss == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_miss");
                            exception_tb = NULL;

                            exception_lineno = 95;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_5;
                        }

                        tmp_left_name_7 = var_list_miss;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_13 = par_ui;
                        tmp_subscribed_name_11 = LOOKUP_ATTRIBUTE(tmp_source_name_13, const_str_plain_devs_list);
                        if (tmp_subscribed_name_11 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 95;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_5;
                        }
                        CHECK_OBJECT(par_selected_list);
                        tmp_subscribed_name_12 = par_selected_list;
                        CHECK_OBJECT(var_z);
                        tmp_subscript_name_12 = var_z;
                        tmp_subscript_name_11 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_12, tmp_subscript_name_12);
                        if (tmp_subscript_name_11 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_subscribed_name_11);

                            exception_lineno = 95;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_5;
                        }
                        tmp_right_name_7 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_11, tmp_subscript_name_11);
                        Py_DECREF(tmp_subscribed_name_11);
                        Py_DECREF(tmp_subscript_name_11);
                        if (tmp_right_name_7 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 95;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_5;
                        }
                        tmp_assign_source_30 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_7, tmp_right_name_7);
                        Py_DECREF(tmp_right_name_7);
                        if (tmp_assign_source_30 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 95;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_5;
                        }
                        {
                            PyObject *old = var_list_miss;
                            var_list_miss = tmp_assign_source_30;
                            Py_XDECREF(old);
                        }

                    }
                    branch_end_10:;
                }
                branch_end_8:;
            }
            branch_no_7:;
        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 73;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
            goto try_except_handler_5;
        }
        goto loop_start_4;
        loop_end_4:;
        goto try_end_4;
        // Exception handler code:
        try_except_handler_5:;
        exception_keeper_type_4 = exception_type;
        exception_keeper_value_4 = exception_value;
        exception_keeper_tb_4 = exception_tb;
        exception_keeper_lineno_4 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_4__iter_value);
        tmp_for_loop_4__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_4__for_iterator);
        Py_DECREF(tmp_for_loop_4__for_iterator);
        tmp_for_loop_4__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_4;
        exception_value = exception_keeper_value_4;
        exception_tb = exception_keeper_tb_4;
        exception_lineno = exception_keeper_lineno_4;

        goto frame_exception_exit_1;
        // End of try:
        try_end_4:;
        Py_XDECREF(tmp_for_loop_4__iter_value);
        tmp_for_loop_4__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_4__for_iterator);
        Py_DECREF(tmp_for_loop_4__for_iterator);
        tmp_for_loop_4__for_iterator = NULL;

        {
            PyObject *tmp_assign_source_31;
            tmp_assign_source_31 = PyList_New(0);
            assert(var_usb_fail == NULL);
            var_usb_fail = tmp_assign_source_31;
        }
        {
            PyObject *tmp_assign_source_32;
            PyObject *tmp_iter_arg_5;
            PyObject *tmp_range_arg_3;
            PyObject *tmp_len_arg_3;
            CHECK_OBJECT(par_res_list);
            tmp_len_arg_3 = par_res_list;
            tmp_range_arg_3 = BUILTIN_LEN(tmp_len_arg_3);
            if (tmp_range_arg_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 98;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_iter_arg_5 = BUILTIN_RANGE(tmp_range_arg_3);
            Py_DECREF(tmp_range_arg_3);
            if (tmp_iter_arg_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 98;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_assign_source_32 = MAKE_ITERATOR(tmp_iter_arg_5);
            Py_DECREF(tmp_iter_arg_5);
            if (tmp_assign_source_32 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 98;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_5__for_iterator == NULL);
            tmp_for_loop_5__for_iterator = tmp_assign_source_32;
        }
        // Tried code:
        loop_start_5:;
        {
            PyObject *tmp_next_source_5;
            PyObject *tmp_assign_source_33;
            CHECK_OBJECT(tmp_for_loop_5__for_iterator);
            tmp_next_source_5 = tmp_for_loop_5__for_iterator;
            tmp_assign_source_33 = ITERATOR_NEXT(tmp_next_source_5);
            if (tmp_assign_source_33 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_5;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    exception_lineno = 98;
                    goto try_except_handler_6;
                }
            }

            {
                PyObject *old = tmp_for_loop_5__iter_value;
                tmp_for_loop_5__iter_value = tmp_assign_source_33;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_34;
            CHECK_OBJECT(tmp_for_loop_5__iter_value);
            tmp_assign_source_34 = tmp_for_loop_5__iter_value;
            {
                PyObject *old = var_i;
                var_i = tmp_assign_source_34;
                Py_INCREF(var_i);
                Py_XDECREF(old);
            }

        }
        {
            nuitka_bool tmp_condition_result_13;
            PyObject *tmp_compexpr_left_10;
            PyObject *tmp_compexpr_right_10;
            PyObject *tmp_subscribed_name_13;
            PyObject *tmp_subscript_name_13;
            CHECK_OBJECT(par_res_list);
            tmp_subscribed_name_13 = par_res_list;
            CHECK_OBJECT(var_i);
            tmp_subscript_name_13 = var_i;
            tmp_compexpr_left_10 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_13, tmp_subscript_name_13);
            if (tmp_compexpr_left_10 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 99;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto try_except_handler_6;
            }
            tmp_compexpr_right_10 = const_int_neg_1;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_10, tmp_compexpr_right_10);
            Py_DECREF(tmp_compexpr_left_10);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 99;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto try_except_handler_6;
            }
            tmp_condition_result_13 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_13 == NUITKA_BOOL_TRUE) {
                goto branch_yes_13;
            } else {
                goto branch_no_13;
            }
            branch_yes_13:;
            {
                nuitka_bool tmp_condition_result_14;
                PyObject *tmp_called_instance_12;
                PyObject *tmp_call_result_12;
                int tmp_truth_name_2;
                CHECK_OBJECT(par_e_to);
                tmp_called_instance_12 = par_e_to;
                frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 100;
                tmp_call_result_12 = CALL_METHOD_NO_ARGS(tmp_called_instance_12, const_str_plain_is_set);
                if (tmp_call_result_12 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 100;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_6;
                }
                tmp_truth_name_2 = CHECK_IF_TRUE(tmp_call_result_12);
                if (tmp_truth_name_2 == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_call_result_12);

                    exception_lineno = 100;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_6;
                }
                tmp_condition_result_14 = tmp_truth_name_2 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                Py_DECREF(tmp_call_result_12);
                if (tmp_condition_result_14 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_14;
                } else {
                    goto branch_no_14;
                }
                branch_yes_14:;
                {
                    PyObject *tmp_ass_subvalue_1;
                    PyObject *tmp_ass_subscribed_1;
                    PyObject *tmp_ass_subscript_1;
                    tmp_ass_subvalue_1 = const_int_pos_2;
                    CHECK_OBJECT(par_res_list);
                    tmp_ass_subscribed_1 = par_res_list;
                    CHECK_OBJECT(var_i);
                    tmp_ass_subscript_1 = var_i;
                    tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_1, tmp_ass_subscript_1, tmp_ass_subvalue_1);
                    if (tmp_result == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 101;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_6;
                    }
                }
                goto branch_end_14;
                branch_no_14:;
                {
                    PyObject *tmp_ass_subvalue_2;
                    PyObject *tmp_ass_subscribed_2;
                    PyObject *tmp_ass_subscript_2;
                    tmp_ass_subvalue_2 = const_int_pos_1;
                    CHECK_OBJECT(par_res_list);
                    tmp_ass_subscribed_2 = par_res_list;
                    CHECK_OBJECT(var_i);
                    tmp_ass_subscript_2 = var_i;
                    tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_2, tmp_ass_subscript_2, tmp_ass_subvalue_2);
                    if (tmp_result == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 103;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_6;
                    }
                }
                branch_end_14:;
            }
            goto branch_end_13;
            branch_no_13:;
            {
                nuitka_bool tmp_condition_result_15;
                PyObject *tmp_compexpr_left_11;
                PyObject *tmp_compexpr_right_11;
                PyObject *tmp_subscribed_name_14;
                PyObject *tmp_subscript_name_14;
                CHECK_OBJECT(par_res_list);
                tmp_subscribed_name_14 = par_res_list;
                CHECK_OBJECT(var_i);
                tmp_subscript_name_14 = var_i;
                tmp_compexpr_left_11 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_14, tmp_subscript_name_14);
                if (tmp_compexpr_left_11 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 104;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_6;
                }
                tmp_compexpr_right_11 = const_int_pos_3;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_11, tmp_compexpr_right_11);
                Py_DECREF(tmp_compexpr_left_11);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 104;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_6;
                }
                tmp_condition_result_15 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_15 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_15;
                } else {
                    goto branch_no_15;
                }
                branch_yes_15:;
                {
                    PyObject *tmp_called_instance_13;
                    PyObject *tmp_call_result_13;
                    PyObject *tmp_args_element_name_3;
                    CHECK_OBJECT(var_usb_fail);
                    tmp_called_instance_13 = var_usb_fail;
                    CHECK_OBJECT(var_i);
                    tmp_args_element_name_3 = var_i;
                    frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 105;
                    {
                        PyObject *call_args[] = {tmp_args_element_name_3};
                        tmp_call_result_13 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_13, const_str_plain_append, call_args);
                    }

                    if (tmp_call_result_13 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 105;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_6;
                    }
                    Py_DECREF(tmp_call_result_13);
                }
                {
                    PyObject *tmp_ass_subvalue_3;
                    PyObject *tmp_ass_subscribed_3;
                    PyObject *tmp_ass_subscript_3;
                    tmp_ass_subvalue_3 = const_int_0;
                    CHECK_OBJECT(par_res_list);
                    tmp_ass_subscribed_3 = par_res_list;
                    CHECK_OBJECT(var_i);
                    tmp_ass_subscript_3 = var_i;
                    tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_3, tmp_ass_subscript_3, tmp_ass_subvalue_3);
                    if (tmp_result == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 106;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_6;
                    }
                }
                branch_no_15:;
            }
            branch_end_13:;
        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 98;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
            goto try_except_handler_6;
        }
        goto loop_start_5;
        loop_end_5:;
        goto try_end_5;
        // Exception handler code:
        try_except_handler_6:;
        exception_keeper_type_5 = exception_type;
        exception_keeper_value_5 = exception_value;
        exception_keeper_tb_5 = exception_tb;
        exception_keeper_lineno_5 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_5__iter_value);
        tmp_for_loop_5__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_5__for_iterator);
        Py_DECREF(tmp_for_loop_5__for_iterator);
        tmp_for_loop_5__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_5;
        exception_value = exception_keeper_value_5;
        exception_tb = exception_keeper_tb_5;
        exception_lineno = exception_keeper_lineno_5;

        goto frame_exception_exit_1;
        // End of try:
        try_end_5:;
        Py_XDECREF(tmp_for_loop_5__iter_value);
        tmp_for_loop_5__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_5__for_iterator);
        Py_DECREF(tmp_for_loop_5__for_iterator);
        tmp_for_loop_5__for_iterator = NULL;

        {
            nuitka_bool tmp_condition_result_16;
            PyObject *tmp_compexpr_left_12;
            PyObject *tmp_compexpr_right_12;
            if (var_list_miss == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_miss");
                exception_tb = NULL;

                exception_lineno = 108;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_12 = var_list_miss;
            tmp_compexpr_right_12 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_12, tmp_compexpr_right_12);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 108;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_16 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_16 == NUITKA_BOOL_TRUE) {
                goto branch_yes_16;
            } else {
                goto branch_no_16;
            }
            branch_yes_16:;
            {
                PyObject *tmp_called_name_2;
                PyObject *tmp_source_name_14;
                PyObject *tmp_call_result_14;
                PyObject *tmp_args_element_name_4;
                PyObject *tmp_left_name_8;
                PyObject *tmp_right_name_8;
                CHECK_OBJECT(par_ui);
                tmp_source_name_14 = par_ui;
                tmp_called_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_14, const_str_plain_msg_err);
                if (tmp_called_name_2 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 109;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }
                if (var_list_miss == NULL) {
                    Py_DECREF(tmp_called_name_2);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_miss");
                    exception_tb = NULL;

                    exception_lineno = 109;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_left_name_8 = var_list_miss;
                tmp_right_name_8 = const_str_digest_21cdd10f62cd6949a9d1866524676a91;
                tmp_args_element_name_4 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_8, tmp_right_name_8);
                if (tmp_args_element_name_4 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_2);

                    exception_lineno = 109;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 109;
                tmp_call_result_14 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_2, tmp_args_element_name_4);
                Py_DECREF(tmp_called_name_2);
                Py_DECREF(tmp_args_element_name_4);
                if (tmp_call_result_14 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 109;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_14);
            }
            branch_no_16:;
        }
        {
            nuitka_bool tmp_condition_result_17;
            PyObject *tmp_compexpr_left_13;
            PyObject *tmp_compexpr_right_13;
            PyObject *tmp_len_arg_4;
            CHECK_OBJECT(var_usb_fail);
            tmp_len_arg_4 = var_usb_fail;
            tmp_compexpr_left_13 = BUILTIN_LEN(tmp_len_arg_4);
            assert(!(tmp_compexpr_left_13 == NULL));
            tmp_compexpr_right_13 = const_int_0;
            tmp_res = RICH_COMPARE_BOOL_GT_OBJECT_INT(tmp_compexpr_left_13, tmp_compexpr_right_13);
            Py_DECREF(tmp_compexpr_left_13);
            assert(!(tmp_res == -1));
            tmp_condition_result_17 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_17 == NUITKA_BOOL_TRUE) {
                goto branch_yes_17;
            } else {
                goto branch_no_17;
            }
            branch_yes_17:;
            {
                PyObject *tmp_assign_source_35;
                tmp_assign_source_35 = Py_True;
                assert(var_start == NULL);
                Py_INCREF(tmp_assign_source_35);
                var_start = tmp_assign_source_35;
            }
            {
                PyObject *tmp_assign_source_36;
                tmp_assign_source_36 = const_str_empty;
                assert(var_usb_f == NULL);
                Py_INCREF(tmp_assign_source_36);
                var_usb_f = tmp_assign_source_36;
            }
            {
                PyObject *tmp_assign_source_37;
                PyObject *tmp_iter_arg_6;
                CHECK_OBJECT(var_usb_fail);
                tmp_iter_arg_6 = var_usb_fail;
                tmp_assign_source_37 = MAKE_ITERATOR(tmp_iter_arg_6);
                if (tmp_assign_source_37 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 114;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }
                assert(tmp_for_loop_6__for_iterator == NULL);
                tmp_for_loop_6__for_iterator = tmp_assign_source_37;
            }
            // Tried code:
            loop_start_6:;
            {
                PyObject *tmp_next_source_6;
                PyObject *tmp_assign_source_38;
                CHECK_OBJECT(tmp_for_loop_6__for_iterator);
                tmp_next_source_6 = tmp_for_loop_6__for_iterator;
                tmp_assign_source_38 = ITERATOR_NEXT(tmp_next_source_6);
                if (tmp_assign_source_38 == NULL) {
                    if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                        goto loop_end_6;
                    } else {

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        exception_lineno = 114;
                        goto try_except_handler_7;
                    }
                }

                {
                    PyObject *old = tmp_for_loop_6__iter_value;
                    tmp_for_loop_6__iter_value = tmp_assign_source_38;
                    Py_XDECREF(old);
                }

            }
            {
                PyObject *tmp_assign_source_39;
                CHECK_OBJECT(tmp_for_loop_6__iter_value);
                tmp_assign_source_39 = tmp_for_loop_6__iter_value;
                {
                    PyObject *old = var_j;
                    var_j = tmp_assign_source_39;
                    Py_INCREF(var_j);
                    Py_XDECREF(old);
                }

            }
            {
                nuitka_bool tmp_condition_result_18;
                PyObject *tmp_operand_name_4;
                if (var_start == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start");
                    exception_tb = NULL;

                    exception_lineno = 115;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_7;
                }

                tmp_operand_name_4 = var_start;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_4);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 115;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_7;
                }
                tmp_condition_result_18 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_18 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_18;
                } else {
                    goto branch_no_18;
                }
                branch_yes_18:;
                {
                    PyObject *tmp_assign_source_40;
                    PyObject *tmp_left_name_9;
                    PyObject *tmp_right_name_9;
                    CHECK_OBJECT(var_usb_f);
                    tmp_left_name_9 = var_usb_f;
                    tmp_right_name_9 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                    tmp_assign_source_40 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_9, tmp_right_name_9);
                    if (tmp_assign_source_40 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 116;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_7;
                    }
                    {
                        PyObject *old = var_usb_f;
                        assert(old != NULL);
                        var_usb_f = tmp_assign_source_40;
                        Py_DECREF(old);
                    }

                }
                goto branch_end_18;
                branch_no_18:;
                {
                    PyObject *tmp_assign_source_41;
                    tmp_assign_source_41 = Py_False;
                    {
                        PyObject *old = var_start;
                        var_start = tmp_assign_source_41;
                        Py_INCREF(var_start);
                        Py_XDECREF(old);
                    }

                }
                branch_end_18:;
            }
            {
                PyObject *tmp_assign_source_42;
                PyObject *tmp_left_name_10;
                PyObject *tmp_right_name_10;
                PyObject *tmp_subscribed_name_15;
                PyObject *tmp_source_name_15;
                PyObject *tmp_subscript_name_15;
                PyObject *tmp_subscribed_name_16;
                PyObject *tmp_subscript_name_16;
                if (var_usb_f == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "usb_f");
                    exception_tb = NULL;

                    exception_lineno = 119;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_7;
                }

                tmp_left_name_10 = var_usb_f;
                CHECK_OBJECT(par_ui);
                tmp_source_name_15 = par_ui;
                tmp_subscribed_name_15 = LOOKUP_ATTRIBUTE(tmp_source_name_15, const_str_plain_devs_list);
                if (tmp_subscribed_name_15 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 119;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_7;
                }
                CHECK_OBJECT(par_selected_list);
                tmp_subscribed_name_16 = par_selected_list;
                CHECK_OBJECT(var_j);
                tmp_subscript_name_16 = var_j;
                tmp_subscript_name_15 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_16, tmp_subscript_name_16);
                if (tmp_subscript_name_15 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_subscribed_name_15);

                    exception_lineno = 119;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_7;
                }
                tmp_right_name_10 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_15, tmp_subscript_name_15);
                Py_DECREF(tmp_subscribed_name_15);
                Py_DECREF(tmp_subscript_name_15);
                if (tmp_right_name_10 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 119;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_7;
                }
                tmp_assign_source_42 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_10, tmp_right_name_10);
                Py_DECREF(tmp_right_name_10);
                if (tmp_assign_source_42 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 119;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_7;
                }
                {
                    PyObject *old = var_usb_f;
                    var_usb_f = tmp_assign_source_42;
                    Py_XDECREF(old);
                }

            }
            if (CONSIDER_THREADING() == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 114;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto try_except_handler_7;
            }
            goto loop_start_6;
            loop_end_6:;
            goto try_end_6;
            // Exception handler code:
            try_except_handler_7:;
            exception_keeper_type_6 = exception_type;
            exception_keeper_value_6 = exception_value;
            exception_keeper_tb_6 = exception_tb;
            exception_keeper_lineno_6 = exception_lineno;
            exception_type = NULL;
            exception_value = NULL;
            exception_tb = NULL;
            exception_lineno = 0;

            Py_XDECREF(tmp_for_loop_6__iter_value);
            tmp_for_loop_6__iter_value = NULL;

            CHECK_OBJECT((PyObject *)tmp_for_loop_6__for_iterator);
            Py_DECREF(tmp_for_loop_6__for_iterator);
            tmp_for_loop_6__for_iterator = NULL;

            // Re-raise.
            exception_type = exception_keeper_type_6;
            exception_value = exception_keeper_value_6;
            exception_tb = exception_keeper_tb_6;
            exception_lineno = exception_keeper_lineno_6;

            goto frame_exception_exit_1;
            // End of try:
            try_end_6:;
            Py_XDECREF(tmp_for_loop_6__iter_value);
            tmp_for_loop_6__iter_value = NULL;

            CHECK_OBJECT((PyObject *)tmp_for_loop_6__for_iterator);
            Py_DECREF(tmp_for_loop_6__for_iterator);
            tmp_for_loop_6__for_iterator = NULL;

            {
                PyObject *tmp_called_name_3;
                PyObject *tmp_source_name_16;
                PyObject *tmp_call_result_15;
                PyObject *tmp_args_element_name_5;
                PyObject *tmp_left_name_11;
                PyObject *tmp_left_name_12;
                PyObject *tmp_right_name_11;
                PyObject *tmp_right_name_12;
                CHECK_OBJECT(par_ui);
                tmp_source_name_16 = par_ui;
                tmp_called_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_16, const_str_plain_msg_err);
                if (tmp_called_name_3 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 120;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_left_name_12 = const_str_digest_ad94a125aa57f8e470b62993b0b50b73;
                CHECK_OBJECT(var_usb_f);
                tmp_right_name_11 = var_usb_f;
                tmp_left_name_11 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_12, tmp_right_name_11);
                if (tmp_left_name_11 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_3);

                    exception_lineno = 120;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_right_name_12 = const_str_dot;
                tmp_args_element_name_5 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_11, tmp_right_name_12);
                Py_DECREF(tmp_left_name_11);
                if (tmp_args_element_name_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_3);

                    exception_lineno = 120;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 120;
                tmp_call_result_15 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_3, tmp_args_element_name_5);
                Py_DECREF(tmp_called_name_3);
                Py_DECREF(tmp_args_element_name_5);
                if (tmp_call_result_15 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 120;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_15);
            }
            branch_no_17:;
        }
        {
            PyObject *tmp_assign_source_43;
            PyObject *tmp_sum_sequence_1;
            CHECK_OBJECT(par_res_list);
            tmp_sum_sequence_1 = par_res_list;
            tmp_assign_source_43 = BUILTIN_SUM1(tmp_sum_sequence_1);
            if (tmp_assign_source_43 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 123;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto frame_exception_exit_1;
            }
            assert(var_res_sum == NULL);
            var_res_sum = tmp_assign_source_43;
        }
        {
            nuitka_bool tmp_condition_result_19;
            PyObject *tmp_compexpr_left_14;
            PyObject *tmp_compexpr_right_14;
            CHECK_OBJECT(var_res_sum);
            tmp_compexpr_left_14 = var_res_sum;
            tmp_compexpr_right_14 = const_int_0;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_INT(tmp_compexpr_left_14, tmp_compexpr_right_14);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 125;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_19 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_19 == NUITKA_BOOL_TRUE) {
                goto branch_yes_19;
            } else {
                goto branch_no_19;
            }
            branch_yes_19:;
            {
                PyObject *tmp_assign_source_44;
                tmp_assign_source_44 = Py_True;
                assert(var_start_f == NULL);
                Py_INCREF(tmp_assign_source_44);
                var_start_f = tmp_assign_source_44;
            }
            {
                PyObject *tmp_assign_source_45;
                tmp_assign_source_45 = Py_True;
                assert(var_start_p == NULL);
                Py_INCREF(tmp_assign_source_45);
                var_start_p = tmp_assign_source_45;
            }
            {
                PyObject *tmp_assign_source_46;
                tmp_assign_source_46 = Py_True;
                assert(var_start_to == NULL);
                Py_INCREF(tmp_assign_source_46);
                var_start_to = tmp_assign_source_46;
            }
            {
                PyObject *tmp_assign_source_47;
                tmp_assign_source_47 = Py_True;
                assert(var_start_na == NULL);
                Py_INCREF(tmp_assign_source_47);
                var_start_na = tmp_assign_source_47;
            }
            {
                PyObject *tmp_assign_source_48;
                tmp_assign_source_48 = Py_True;
                assert(var_start_nat == NULL);
                Py_INCREF(tmp_assign_source_48);
                var_start_nat = tmp_assign_source_48;
            }
            {
                PyObject *tmp_assign_source_49;
                tmp_assign_source_49 = Py_True;
                assert(var_start_alo == NULL);
                Py_INCREF(tmp_assign_source_49);
                var_start_alo = tmp_assign_source_49;
            }
            {
                PyObject *tmp_assign_source_50;
                tmp_assign_source_50 = const_str_empty;
                assert(var_list_f == NULL);
                Py_INCREF(tmp_assign_source_50);
                var_list_f = tmp_assign_source_50;
            }
            {
                PyObject *tmp_assign_source_51;
                tmp_assign_source_51 = const_str_empty;
                assert(var_list_p == NULL);
                Py_INCREF(tmp_assign_source_51);
                var_list_p = tmp_assign_source_51;
            }
            {
                PyObject *tmp_assign_source_52;
                tmp_assign_source_52 = const_str_empty;
                assert(var_list_to == NULL);
                Py_INCREF(tmp_assign_source_52);
                var_list_to = tmp_assign_source_52;
            }
            {
                PyObject *tmp_assign_source_53;
                tmp_assign_source_53 = const_str_empty;
                assert(var_list_na == NULL);
                Py_INCREF(tmp_assign_source_53);
                var_list_na = tmp_assign_source_53;
            }
            {
                PyObject *tmp_assign_source_54;
                tmp_assign_source_54 = const_str_empty;
                assert(var_list_nat == NULL);
                Py_INCREF(tmp_assign_source_54);
                var_list_nat = tmp_assign_source_54;
            }
            {
                PyObject *tmp_assign_source_55;
                tmp_assign_source_55 = const_str_empty;
                assert(var_list_alo == NULL);
                Py_INCREF(tmp_assign_source_55);
                var_list_alo = tmp_assign_source_55;
            }
            {
                PyObject *tmp_assign_source_56;
                tmp_assign_source_56 = const_int_0;
                assert(var_count == NULL);
                Py_INCREF(tmp_assign_source_56);
                var_count = tmp_assign_source_56;
            }
            {
                PyObject *tmp_assign_source_57;
                PyObject *tmp_iter_arg_7;
                PyObject *tmp_range_arg_4;
                PyObject *tmp_len_arg_5;
                CHECK_OBJECT(par_selected_list);
                tmp_len_arg_5 = par_selected_list;
                tmp_range_arg_4 = BUILTIN_LEN(tmp_len_arg_5);
                if (tmp_range_arg_4 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 141;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_iter_arg_7 = BUILTIN_RANGE(tmp_range_arg_4);
                Py_DECREF(tmp_range_arg_4);
                if (tmp_iter_arg_7 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 141;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_assign_source_57 = MAKE_ITERATOR(tmp_iter_arg_7);
                Py_DECREF(tmp_iter_arg_7);
                if (tmp_assign_source_57 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 141;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }
                assert(tmp_for_loop_7__for_iterator == NULL);
                tmp_for_loop_7__for_iterator = tmp_assign_source_57;
            }
            // Tried code:
            loop_start_7:;
            {
                PyObject *tmp_next_source_7;
                PyObject *tmp_assign_source_58;
                CHECK_OBJECT(tmp_for_loop_7__for_iterator);
                tmp_next_source_7 = tmp_for_loop_7__for_iterator;
                tmp_assign_source_58 = ITERATOR_NEXT(tmp_next_source_7);
                if (tmp_assign_source_58 == NULL) {
                    if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                        goto loop_end_7;
                    } else {

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        exception_lineno = 141;
                        goto try_except_handler_8;
                    }
                }

                {
                    PyObject *old = tmp_for_loop_7__iter_value;
                    tmp_for_loop_7__iter_value = tmp_assign_source_58;
                    Py_XDECREF(old);
                }

            }
            {
                PyObject *tmp_assign_source_59;
                CHECK_OBJECT(tmp_for_loop_7__iter_value);
                tmp_assign_source_59 = tmp_for_loop_7__iter_value;
                {
                    PyObject *old = var_y;
                    var_y = tmp_assign_source_59;
                    Py_INCREF(var_y);
                    Py_XDECREF(old);
                }

            }
            {
                PyObject *tmp_assattr_name_6;
                PyObject *tmp_subscribed_name_17;
                PyObject *tmp_source_name_17;
                PyObject *tmp_subscript_name_17;
                PyObject *tmp_subscribed_name_18;
                PyObject *tmp_subscript_name_18;
                PyObject *tmp_assattr_target_6;
                CHECK_OBJECT(par_ui);
                tmp_source_name_17 = par_ui;
                tmp_subscribed_name_17 = LOOKUP_ATTRIBUTE(tmp_source_name_17, const_str_plain_devs_list);
                if (tmp_subscribed_name_17 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 142;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_8;
                }
                CHECK_OBJECT(par_selected_list);
                tmp_subscribed_name_18 = par_selected_list;
                CHECK_OBJECT(var_y);
                tmp_subscript_name_18 = var_y;
                tmp_subscript_name_17 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_18, tmp_subscript_name_18);
                if (tmp_subscript_name_17 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_subscribed_name_17);

                    exception_lineno = 142;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_8;
                }
                tmp_assattr_name_6 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_17, tmp_subscript_name_17);
                Py_DECREF(tmp_subscribed_name_17);
                Py_DECREF(tmp_subscript_name_17);
                if (tmp_assattr_name_6 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 142;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_8;
                }
                CHECK_OBJECT(par_ui);
                tmp_assattr_target_6 = par_ui;
                tmp_result = SET_ATTRIBUTE(tmp_assattr_target_6, const_str_plain_devname, tmp_assattr_name_6);
                Py_DECREF(tmp_assattr_name_6);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 142;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_8;
                }
            }
            {
                nuitka_bool tmp_condition_result_20;
                PyObject *tmp_compexpr_left_15;
                PyObject *tmp_compexpr_right_15;
                PyObject *tmp_subscribed_name_19;
                PyObject *tmp_subscript_name_19;
                CHECK_OBJECT(par_res_list);
                tmp_subscribed_name_19 = par_res_list;
                CHECK_OBJECT(var_count);
                tmp_subscript_name_19 = var_count;
                tmp_compexpr_left_15 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_19, tmp_subscript_name_19);
                if (tmp_compexpr_left_15 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 143;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_8;
                }
                tmp_compexpr_right_15 = const_int_0;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_15, tmp_compexpr_right_15);
                Py_DECREF(tmp_compexpr_left_15);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 143;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_8;
                }
                tmp_condition_result_20 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_20 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_20;
                } else {
                    goto branch_no_20;
                }
                branch_yes_20:;
                {
                    PyObject *tmp_called_instance_14;
                    PyObject *tmp_mvar_value_3;
                    PyObject *tmp_call_result_16;
                    PyObject *tmp_args_element_name_6;
                    PyObject *tmp_args_element_name_7;
                    PyObject *tmp_args_element_name_8;
                    tmp_mvar_value_3 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_dialogs);

                    if (unlikely(tmp_mvar_value_3 == NULL)) {
                        tmp_mvar_value_3 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_dialogs);
                    }

                    if (tmp_mvar_value_3 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 418 ], 36, 0);
                        exception_tb = NULL;

                        exception_lineno = 144;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }

                    tmp_called_instance_14 = tmp_mvar_value_3;
                    tmp_args_element_name_6 = Py_None;
                    CHECK_OBJECT(par_ui);
                    tmp_args_element_name_7 = par_ui;
                    tmp_args_element_name_8 = const_int_pos_1;
                    frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 144;
                    {
                        PyObject *call_args[] = {tmp_args_element_name_6, tmp_args_element_name_7, tmp_args_element_name_8};
                        tmp_call_result_16 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_14, const_str_plain_query, call_args);
                    }

                    if (tmp_call_result_16 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 144;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    Py_DECREF(tmp_call_result_16);
                }
                {
                    nuitka_bool tmp_condition_result_21;
                    PyObject *tmp_operand_name_5;
                    if (var_start_p == NULL) {

                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_p");
                        exception_tb = NULL;

                        exception_lineno = 145;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }

                    tmp_operand_name_5 = var_start_p;
                    tmp_res = CHECK_IF_TRUE(tmp_operand_name_5);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 145;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    tmp_condition_result_21 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_21 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_21;
                    } else {
                        goto branch_no_21;
                    }
                    branch_yes_21:;
                    {
                        PyObject *tmp_assign_source_60;
                        PyObject *tmp_left_name_13;
                        PyObject *tmp_right_name_13;
                        if (var_list_p == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p");
                            exception_tb = NULL;

                            exception_lineno = 146;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }

                        tmp_left_name_13 = var_list_p;
                        tmp_right_name_13 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                        tmp_assign_source_60 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_13, tmp_right_name_13);
                        if (tmp_assign_source_60 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 146;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        {
                            PyObject *old = var_list_p;
                            var_list_p = tmp_assign_source_60;
                            Py_XDECREF(old);
                        }

                    }
                    goto branch_end_21;
                    branch_no_21:;
                    {
                        PyObject *tmp_assign_source_61;
                        tmp_assign_source_61 = Py_False;
                        {
                            PyObject *old = var_start_p;
                            var_start_p = tmp_assign_source_61;
                            Py_INCREF(var_start_p);
                            Py_XDECREF(old);
                        }

                    }
                    branch_end_21:;
                }
                {
                    PyObject *tmp_assign_source_62;
                    PyObject *tmp_left_name_14;
                    PyObject *tmp_right_name_14;
                    PyObject *tmp_subscribed_name_20;
                    PyObject *tmp_source_name_18;
                    PyObject *tmp_subscript_name_20;
                    PyObject *tmp_subscribed_name_21;
                    PyObject *tmp_subscript_name_21;
                    if (var_list_p == NULL) {

                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p");
                        exception_tb = NULL;

                        exception_lineno = 149;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }

                    tmp_left_name_14 = var_list_p;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_18 = par_ui;
                    tmp_subscribed_name_20 = LOOKUP_ATTRIBUTE(tmp_source_name_18, const_str_plain_devs_list);
                    if (tmp_subscribed_name_20 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 149;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    CHECK_OBJECT(par_selected_list);
                    tmp_subscribed_name_21 = par_selected_list;
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_21 = var_y;
                    tmp_subscript_name_20 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_21, tmp_subscript_name_21);
                    if (tmp_subscript_name_20 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_subscribed_name_20);

                        exception_lineno = 149;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    tmp_right_name_14 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_20, tmp_subscript_name_20);
                    Py_DECREF(tmp_subscribed_name_20);
                    Py_DECREF(tmp_subscript_name_20);
                    if (tmp_right_name_14 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 149;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    tmp_assign_source_62 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_14, tmp_right_name_14);
                    Py_DECREF(tmp_right_name_14);
                    if (tmp_assign_source_62 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 149;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    {
                        PyObject *old = var_list_p;
                        var_list_p = tmp_assign_source_62;
                        Py_XDECREF(old);
                    }

                }
                {
                    PyObject *tmp_ass_subvalue_4;
                    PyObject *tmp_ass_subscribed_4;
                    PyObject *tmp_source_name_19;
                    PyObject *tmp_ass_subscript_4;
                    PyObject *tmp_subscribed_name_22;
                    PyObject *tmp_subscript_name_22;
                    tmp_ass_subvalue_4 = const_str_plain_Yes;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_19 = par_ui;
                    tmp_ass_subscribed_4 = LOOKUP_ATTRIBUTE(tmp_source_name_19, const_str_plain_setupstatus_list);
                    if (tmp_ass_subscribed_4 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 150;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    CHECK_OBJECT(par_selected_list);
                    tmp_subscribed_name_22 = par_selected_list;
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_22 = var_y;
                    tmp_ass_subscript_4 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_22, tmp_subscript_name_22);
                    if (tmp_ass_subscript_4 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_ass_subscribed_4);

                        exception_lineno = 150;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_4, tmp_ass_subscript_4, tmp_ass_subvalue_4);
                    Py_DECREF(tmp_ass_subscribed_4);
                    Py_DECREF(tmp_ass_subscript_4);
                    if (tmp_result == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 150;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                }
                {
                    PyObject *tmp_ass_subvalue_5;
                    PyObject *tmp_ass_subscribed_5;
                    PyObject *tmp_source_name_20;
                    PyObject *tmp_ass_subscript_5;
                    PyObject *tmp_subscribed_name_23;
                    PyObject *tmp_subscript_name_23;
                    tmp_ass_subvalue_5 = const_str_plain_No;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_20 = par_ui;
                    tmp_ass_subscribed_5 = LOOKUP_ATTRIBUTE(tmp_source_name_20, const_str_plain_setupuser_list);
                    if (tmp_ass_subscribed_5 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 151;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    CHECK_OBJECT(par_selected_list);
                    tmp_subscribed_name_23 = par_selected_list;
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_23 = var_y;
                    tmp_ass_subscript_5 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_23, tmp_subscript_name_23);
                    if (tmp_ass_subscript_5 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_ass_subscribed_5);

                        exception_lineno = 151;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_5, tmp_ass_subscript_5, tmp_ass_subvalue_5);
                    Py_DECREF(tmp_ass_subscribed_5);
                    Py_DECREF(tmp_ass_subscript_5);
                    if (tmp_result == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 151;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                }
                {
                    nuitka_bool tmp_condition_result_22;
                    PyObject *tmp_compexpr_left_16;
                    PyObject *tmp_compexpr_right_16;
                    PyObject *tmp_subscribed_name_24;
                    PyObject *tmp_subscript_name_24;
                    CHECK_OBJECT(par_trylimit_list);
                    tmp_subscribed_name_24 = par_trylimit_list;
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_24 = var_y;
                    tmp_compexpr_left_16 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_24, tmp_subscript_name_24);
                    if (tmp_compexpr_left_16 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 152;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    tmp_compexpr_right_16 = Py_None;
                    tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_16, tmp_compexpr_right_16);
                    Py_DECREF(tmp_compexpr_left_16);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 152;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    tmp_condition_result_22 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_22 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_22;
                    } else {
                        goto branch_no_22;
                    }
                    branch_yes_22:;
                    {
                        PyObject *tmp_ass_subvalue_6;
                        PyObject *tmp_subscribed_name_25;
                        PyObject *tmp_subscript_name_25;
                        PyObject *tmp_ass_subscribed_6;
                        PyObject *tmp_source_name_21;
                        PyObject *tmp_ass_subscript_6;
                        PyObject *tmp_subscribed_name_26;
                        PyObject *tmp_subscript_name_26;
                        CHECK_OBJECT(par_trylimit_list);
                        tmp_subscribed_name_25 = par_trylimit_list;
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_25 = var_y;
                        tmp_ass_subvalue_6 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_25, tmp_subscript_name_25);
                        if (tmp_ass_subvalue_6 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 153;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_21 = par_ui;
                        tmp_ass_subscribed_6 = LOOKUP_ATTRIBUTE(tmp_source_name_21, const_str_plain_retrylimit_list);
                        if (tmp_ass_subscribed_6 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_ass_subvalue_6);

                            exception_lineno = 153;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        CHECK_OBJECT(par_selected_list);
                        tmp_subscribed_name_26 = par_selected_list;
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_26 = var_y;
                        tmp_ass_subscript_6 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_26, tmp_subscript_name_26);
                        if (tmp_ass_subscript_6 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_ass_subvalue_6);
                            Py_DECREF(tmp_ass_subscribed_6);

                            exception_lineno = 153;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_6, tmp_ass_subscript_6, tmp_ass_subvalue_6);
                        Py_DECREF(tmp_ass_subscribed_6);
                        Py_DECREF(tmp_ass_subscript_6);
                        Py_DECREF(tmp_ass_subvalue_6);
                        if (tmp_result == false) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 153;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                    }
                    goto branch_end_22;
                    branch_no_22:;
                    {
                        PyObject *tmp_ass_subvalue_7;
                        PyObject *tmp_ass_subscribed_7;
                        PyObject *tmp_source_name_22;
                        PyObject *tmp_ass_subscript_7;
                        PyObject *tmp_subscribed_name_27;
                        PyObject *tmp_subscript_name_27;
                        tmp_ass_subvalue_7 = const_int_pos_10;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_22 = par_ui;
                        tmp_ass_subscribed_7 = LOOKUP_ATTRIBUTE(tmp_source_name_22, const_str_plain_retrylimit_list);
                        if (tmp_ass_subscribed_7 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 155;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        CHECK_OBJECT(par_selected_list);
                        tmp_subscribed_name_27 = par_selected_list;
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_27 = var_y;
                        tmp_ass_subscript_7 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_27, tmp_subscript_name_27);
                        if (tmp_ass_subscript_7 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_ass_subscribed_7);

                            exception_lineno = 155;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_7, tmp_ass_subscript_7, tmp_ass_subvalue_7);
                        Py_DECREF(tmp_ass_subscribed_7);
                        Py_DECREF(tmp_ass_subscript_7);
                        if (tmp_result == false) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 155;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                    }
                    branch_end_22:;
                }
                {
                    PyObject *tmp_called_name_4;
                    PyObject *tmp_source_name_23;
                    PyObject *tmp_call_result_17;
                    PyObject *tmp_args_element_name_9;
                    PyObject *tmp_subscribed_name_28;
                    PyObject *tmp_subscript_name_28;
                    PyObject *tmp_args_element_name_10;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_23 = par_ui;
                    tmp_called_name_4 = LOOKUP_ATTRIBUTE(tmp_source_name_23, const_str_plain_updateDevs);
                    if (tmp_called_name_4 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 156;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    CHECK_OBJECT(par_selected_list);
                    tmp_subscribed_name_28 = par_selected_list;
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_28 = var_y;
                    tmp_args_element_name_9 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_28, tmp_subscript_name_28);
                    if (tmp_args_element_name_9 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_4);

                        exception_lineno = 156;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    tmp_args_element_name_10 = LIST_COPY(const_list_int_pos_2_int_pos_3_list);
                    frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 156;
                    {
                        PyObject *call_args[] = {tmp_args_element_name_9, tmp_args_element_name_10};
                        tmp_call_result_17 = CALL_FUNCTION_WITH_ARGS2(tmp_called_name_4, call_args);
                    }

                    Py_DECREF(tmp_called_name_4);
                    Py_DECREF(tmp_args_element_name_9);
                    Py_DECREF(tmp_args_element_name_10);
                    if (tmp_call_result_17 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 156;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    Py_DECREF(tmp_call_result_17);
                }
                {
                    nuitka_bool tmp_condition_result_23;
                    PyObject *tmp_called_name_5;
                    PyObject *tmp_source_name_24;
                    PyObject *tmp_source_name_25;
                    PyObject *tmp_mvar_value_4;
                    PyObject *tmp_call_result_18;
                    PyObject *tmp_args_element_name_11;
                    PyObject *tmp_left_name_15;
                    PyObject *tmp_left_name_16;
                    PyObject *tmp_right_name_15;
                    PyObject *tmp_subscribed_name_29;
                    PyObject *tmp_source_name_26;
                    PyObject *tmp_subscript_name_29;
                    PyObject *tmp_subscribed_name_30;
                    PyObject *tmp_subscript_name_30;
                    PyObject *tmp_right_name_16;
                    int tmp_truth_name_3;
                    tmp_mvar_value_4 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_os);

                    if (unlikely(tmp_mvar_value_4 == NULL)) {
                        tmp_mvar_value_4 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                    }

                    if (tmp_mvar_value_4 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                        exception_tb = NULL;

                        exception_lineno = 157;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }

                    tmp_source_name_25 = tmp_mvar_value_4;
                    tmp_source_name_24 = LOOKUP_ATTRIBUTE(tmp_source_name_25, const_str_plain_path);
                    if (tmp_source_name_24 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 157;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    tmp_called_name_5 = LOOKUP_ATTRIBUTE(tmp_source_name_24, const_str_plain_isfile);
                    Py_DECREF(tmp_source_name_24);
                    if (tmp_called_name_5 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 157;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    tmp_left_name_16 = const_str_plain_datawrite;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_26 = par_ui;
                    tmp_subscribed_name_29 = LOOKUP_ATTRIBUTE(tmp_source_name_26, const_str_plain_sn_list);
                    if (tmp_subscribed_name_29 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_5);

                        exception_lineno = 157;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    CHECK_OBJECT(par_selected_list);
                    tmp_subscribed_name_30 = par_selected_list;
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_30 = var_y;
                    tmp_subscript_name_29 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_30, tmp_subscript_name_30);
                    if (tmp_subscript_name_29 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_5);
                        Py_DECREF(tmp_subscribed_name_29);

                        exception_lineno = 157;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    tmp_right_name_15 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_29, tmp_subscript_name_29);
                    Py_DECREF(tmp_subscribed_name_29);
                    Py_DECREF(tmp_subscript_name_29);
                    if (tmp_right_name_15 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_5);

                        exception_lineno = 157;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    tmp_left_name_15 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_16, tmp_right_name_15);
                    Py_DECREF(tmp_right_name_15);
                    if (tmp_left_name_15 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_5);

                        exception_lineno = 157;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    tmp_right_name_16 = const_str_digest_038a28107205f832c6bf850b3119b5af;
                    tmp_args_element_name_11 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_15, tmp_right_name_16);
                    Py_DECREF(tmp_left_name_15);
                    if (tmp_args_element_name_11 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_5);

                        exception_lineno = 157;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 157;
                    tmp_call_result_18 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_5, tmp_args_element_name_11);
                    Py_DECREF(tmp_called_name_5);
                    Py_DECREF(tmp_args_element_name_11);
                    if (tmp_call_result_18 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 157;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    tmp_truth_name_3 = CHECK_IF_TRUE(tmp_call_result_18);
                    if (tmp_truth_name_3 == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_call_result_18);

                        exception_lineno = 157;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    tmp_condition_result_23 = tmp_truth_name_3 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    Py_DECREF(tmp_call_result_18);
                    if (tmp_condition_result_23 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_23;
                    } else {
                        goto branch_no_23;
                    }
                    branch_yes_23:;
                    {
                        PyObject *tmp_assign_source_63;
                        PyObject *tmp_open_filename_1;
                        PyObject *tmp_left_name_17;
                        PyObject *tmp_left_name_18;
                        PyObject *tmp_right_name_17;
                        PyObject *tmp_subscribed_name_31;
                        PyObject *tmp_source_name_27;
                        PyObject *tmp_subscript_name_31;
                        PyObject *tmp_subscribed_name_32;
                        PyObject *tmp_subscript_name_32;
                        PyObject *tmp_right_name_18;
                        PyObject *tmp_open_mode_1;
                        tmp_left_name_18 = const_str_plain_datawrite;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_27 = par_ui;
                        tmp_subscribed_name_31 = LOOKUP_ATTRIBUTE(tmp_source_name_27, const_str_plain_sn_list);
                        if (tmp_subscribed_name_31 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 158;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        CHECK_OBJECT(par_selected_list);
                        tmp_subscribed_name_32 = par_selected_list;
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_32 = var_y;
                        tmp_subscript_name_31 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_32, tmp_subscript_name_32);
                        if (tmp_subscript_name_31 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_subscribed_name_31);

                            exception_lineno = 158;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        tmp_right_name_17 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_31, tmp_subscript_name_31);
                        Py_DECREF(tmp_subscribed_name_31);
                        Py_DECREF(tmp_subscript_name_31);
                        if (tmp_right_name_17 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 158;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        tmp_left_name_17 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_18, tmp_right_name_17);
                        Py_DECREF(tmp_right_name_17);
                        if (tmp_left_name_17 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 158;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        tmp_right_name_18 = const_str_digest_038a28107205f832c6bf850b3119b5af;
                        tmp_open_filename_1 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_17, tmp_right_name_18);
                        Py_DECREF(tmp_left_name_17);
                        if (tmp_open_filename_1 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 158;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        tmp_open_mode_1 = const_str_plain_r;
                        tmp_assign_source_63 = BUILTIN_OPEN(tmp_open_filename_1, tmp_open_mode_1, NULL);
                        Py_DECREF(tmp_open_filename_1);
                        if (tmp_assign_source_63 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 158;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        {
                            PyObject *old = var_f;
                            var_f = tmp_assign_source_63;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assign_source_64;
                        PyObject *tmp_called_instance_15;
                        CHECK_OBJECT(var_f);
                        tmp_called_instance_15 = var_f;
                        frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 159;
                        tmp_assign_source_64 = CALL_METHOD_NO_ARGS(tmp_called_instance_15, const_str_plain_read);
                        if (tmp_assign_source_64 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 159;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        {
                            PyObject *old = var_pv;
                            var_pv = tmp_assign_source_64;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_called_instance_16;
                        PyObject *tmp_call_result_19;
                        CHECK_OBJECT(var_f);
                        tmp_called_instance_16 = var_f;
                        frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 160;
                        tmp_call_result_19 = CALL_METHOD_NO_ARGS(tmp_called_instance_16, const_str_plain_close);
                        if (tmp_call_result_19 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 160;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        Py_DECREF(tmp_call_result_19);
                    }
                    {
                        PyObject *tmp_ass_subvalue_8;
                        PyObject *tmp_called_instance_17;
                        PyObject *tmp_ass_subscribed_8;
                        PyObject *tmp_source_name_28;
                        PyObject *tmp_ass_subscript_8;
                        PyObject *tmp_subscribed_name_33;
                        PyObject *tmp_subscript_name_33;
                        CHECK_OBJECT(var_pv);
                        tmp_called_instance_17 = var_pv;
                        frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 161;
                        tmp_ass_subvalue_8 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_17, const_str_plain_strip, &PyTuple_GET_ITEM(const_tuple_str_chr_0_tuple, 0));

                        if (tmp_ass_subvalue_8 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 161;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_28 = par_ui;
                        tmp_ass_subscribed_8 = LOOKUP_ATTRIBUTE(tmp_source_name_28, const_str_plain_pba_list);
                        if (tmp_ass_subscribed_8 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_ass_subvalue_8);

                            exception_lineno = 161;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        CHECK_OBJECT(par_selected_list);
                        tmp_subscribed_name_33 = par_selected_list;
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_33 = var_y;
                        tmp_ass_subscript_8 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_33, tmp_subscript_name_33);
                        if (tmp_ass_subscript_8 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_ass_subvalue_8);
                            Py_DECREF(tmp_ass_subscribed_8);

                            exception_lineno = 161;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_8, tmp_ass_subscript_8, tmp_ass_subvalue_8);
                        Py_DECREF(tmp_ass_subscribed_8);
                        Py_DECREF(tmp_ass_subscript_8);
                        Py_DECREF(tmp_ass_subvalue_8);
                        if (tmp_result == false) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 161;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                    }
                    {
                        PyObject *tmp_assign_source_65;
                        PyObject *tmp_called_instance_18;
                        PyObject *tmp_source_name_29;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_29 = par_ui;
                        tmp_called_instance_18 = LOOKUP_ATTRIBUTE(tmp_source_name_29, const_str_plain_dev_select);
                        if (tmp_called_instance_18 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 162;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 162;
                        tmp_assign_source_65 = CALL_METHOD_NO_ARGS(tmp_called_instance_18, const_str_plain_get_active);
                        Py_DECREF(tmp_called_instance_18);
                        if (tmp_assign_source_65 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 162;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        {
                            PyObject *old = var_act_idx;
                            var_act_idx = tmp_assign_source_65;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        nuitka_bool tmp_condition_result_24;
                        PyObject *tmp_compexpr_left_17;
                        PyObject *tmp_compexpr_right_17;
                        PyObject *tmp_subscribed_name_34;
                        PyObject *tmp_subscript_name_34;
                        CHECK_OBJECT(par_selected_list);
                        tmp_subscribed_name_34 = par_selected_list;
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_34 = var_y;
                        tmp_compexpr_left_17 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_34, tmp_subscript_name_34);
                        if (tmp_compexpr_left_17 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 163;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        CHECK_OBJECT(var_act_idx);
                        tmp_compexpr_right_17 = var_act_idx;
                        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_17, tmp_compexpr_right_17);
                        Py_DECREF(tmp_compexpr_left_17);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 163;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        tmp_condition_result_24 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_24 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_24;
                        } else {
                            goto branch_no_24;
                        }
                        branch_yes_24:;
                        {
                            PyObject *tmp_called_name_6;
                            PyObject *tmp_source_name_30;
                            PyObject *tmp_source_name_31;
                            PyObject *tmp_call_result_20;
                            PyObject *tmp_args_element_name_12;
                            PyObject *tmp_called_instance_19;
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_31 = par_ui;
                            tmp_source_name_30 = LOOKUP_ATTRIBUTE(tmp_source_name_31, const_str_plain_dev_pbaVer);
                            if (tmp_source_name_30 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 164;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_8;
                            }
                            tmp_called_name_6 = LOOKUP_ATTRIBUTE(tmp_source_name_30, const_str_plain_set_text);
                            Py_DECREF(tmp_source_name_30);
                            if (tmp_called_name_6 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 164;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_8;
                            }
                            CHECK_OBJECT(var_pv);
                            tmp_called_instance_19 = var_pv;
                            frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 164;
                            tmp_args_element_name_12 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_19, const_str_plain_strip, &PyTuple_GET_ITEM(const_tuple_str_chr_0_tuple, 0));

                            if (tmp_args_element_name_12 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_6);

                                exception_lineno = 164;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_8;
                            }
                            frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 164;
                            tmp_call_result_20 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_6, tmp_args_element_name_12);
                            Py_DECREF(tmp_called_name_6);
                            Py_DECREF(tmp_args_element_name_12);
                            if (tmp_call_result_20 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 164;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_8;
                            }
                            Py_DECREF(tmp_call_result_20);
                        }
                        branch_no_24:;
                    }
                    // Tried code:
                    {
                        PyObject *tmp_called_name_7;
                        PyObject *tmp_source_name_32;
                        PyObject *tmp_mvar_value_5;
                        PyObject *tmp_call_result_21;
                        PyObject *tmp_args_element_name_13;
                        PyObject *tmp_left_name_19;
                        PyObject *tmp_left_name_20;
                        PyObject *tmp_right_name_19;
                        PyObject *tmp_subscribed_name_35;
                        PyObject *tmp_source_name_33;
                        PyObject *tmp_subscript_name_35;
                        PyObject *tmp_subscribed_name_36;
                        PyObject *tmp_subscript_name_36;
                        PyObject *tmp_right_name_20;
                        tmp_mvar_value_5 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_os);

                        if (unlikely(tmp_mvar_value_5 == NULL)) {
                            tmp_mvar_value_5 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                        }

                        if (tmp_mvar_value_5 == NULL) {

                            exception_type = PyExc_NameError;
                            Py_INCREF(exception_type);
                            exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                            exception_tb = NULL;

                            exception_lineno = 166;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_9;
                        }

                        tmp_source_name_32 = tmp_mvar_value_5;
                        tmp_called_name_7 = LOOKUP_ATTRIBUTE(tmp_source_name_32, const_str_plain_remove);
                        if (tmp_called_name_7 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 166;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_9;
                        }
                        tmp_left_name_20 = const_str_plain_datawrite;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_33 = par_ui;
                        tmp_subscribed_name_35 = LOOKUP_ATTRIBUTE(tmp_source_name_33, const_str_plain_sn_list);
                        if (tmp_subscribed_name_35 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_7);

                            exception_lineno = 166;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_9;
                        }
                        CHECK_OBJECT(par_selected_list);
                        tmp_subscribed_name_36 = par_selected_list;
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_36 = var_y;
                        tmp_subscript_name_35 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_36, tmp_subscript_name_36);
                        if (tmp_subscript_name_35 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_7);
                            Py_DECREF(tmp_subscribed_name_35);

                            exception_lineno = 166;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_9;
                        }
                        tmp_right_name_19 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_35, tmp_subscript_name_35);
                        Py_DECREF(tmp_subscribed_name_35);
                        Py_DECREF(tmp_subscript_name_35);
                        if (tmp_right_name_19 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_7);

                            exception_lineno = 166;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_9;
                        }
                        tmp_left_name_19 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_20, tmp_right_name_19);
                        Py_DECREF(tmp_right_name_19);
                        if (tmp_left_name_19 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_7);

                            exception_lineno = 166;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_9;
                        }
                        tmp_right_name_20 = const_str_digest_038a28107205f832c6bf850b3119b5af;
                        tmp_args_element_name_13 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_19, tmp_right_name_20);
                        Py_DECREF(tmp_left_name_19);
                        if (tmp_args_element_name_13 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_7);

                            exception_lineno = 166;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_9;
                        }
                        frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 166;
                        tmp_call_result_21 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_7, tmp_args_element_name_13);
                        Py_DECREF(tmp_called_name_7);
                        Py_DECREF(tmp_args_element_name_13);
                        if (tmp_call_result_21 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 166;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_9;
                        }
                        Py_DECREF(tmp_call_result_21);
                    }
                    goto try_end_7;
                    // Exception handler code:
                    try_except_handler_9:;
                    exception_keeper_type_7 = exception_type;
                    exception_keeper_value_7 = exception_value;
                    exception_keeper_tb_7 = exception_tb;
                    exception_keeper_lineno_7 = exception_lineno;
                    exception_type = NULL;
                    exception_value = NULL;
                    exception_tb = NULL;
                    exception_lineno = 0;

                    // Preserve existing published exception.
                    PRESERVE_FRAME_EXCEPTION(frame_ef356f0a113d493889005f3e6f52fd41);
                    if (exception_keeper_tb_7 == NULL) {
                        exception_keeper_tb_7 = MAKE_TRACEBACK(frame_ef356f0a113d493889005f3e6f52fd41, exception_keeper_lineno_7);
                    } else if (exception_keeper_lineno_7 != 0) {
                        exception_keeper_tb_7 = ADD_TRACEBACK(exception_keeper_tb_7, frame_ef356f0a113d493889005f3e6f52fd41, exception_keeper_lineno_7);
                    }

                    NORMALIZE_EXCEPTION(&exception_keeper_type_7, &exception_keeper_value_7, &exception_keeper_tb_7);
                    PUBLISH_EXCEPTION(&exception_keeper_type_7, &exception_keeper_value_7, &exception_keeper_tb_7);
                    {
                        nuitka_bool tmp_condition_result_25;
                        PyObject *tmp_compexpr_left_18;
                        PyObject *tmp_compexpr_right_18;
                        tmp_compexpr_left_18 = EXC_TYPE(PyThreadState_GET());
                        tmp_compexpr_right_18 = PyExc_WindowsError;
                        tmp_res = EXCEPTION_MATCH_BOOL(tmp_compexpr_left_18, tmp_compexpr_right_18);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 167;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        tmp_condition_result_25 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_25 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_25;
                        } else {
                            goto branch_no_25;
                        }
                        branch_yes_25:;
                        tmp_print_value = const_str_digest_ed4dd40ce7a801d6a9039029873747bc;
                        tmp_result = PRINT_ITEM(tmp_print_value);
                        if (tmp_result == false) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 168;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        if (PRINT_NEW_LINE() == false) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 168;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        goto branch_end_25;
                        branch_no_25:;
                        tmp_result = RERAISE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                        if (unlikely(tmp_result == false)) {
                            exception_lineno = 165;
                        }

                        if (exception_tb && exception_tb->tb_frame == &frame_ef356f0a113d493889005f3e6f52fd41->m_frame) frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = exception_tb->tb_lineno;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                        branch_end_25:;
                    }
                    goto try_end_7;
                    // exception handler codes exits in all cases
                    NUITKA_CANNOT_GET_HERE(cleanop$$$function_2_setupFull_cleanup);
                    return NULL;
                    // End of try:
                    try_end_7:;
                    branch_no_23:;
                }
                goto branch_end_20;
                branch_no_20:;
                {
                    nuitka_bool tmp_condition_result_26;
                    int tmp_and_left_truth_2;
                    nuitka_bool tmp_and_left_value_2;
                    nuitka_bool tmp_and_right_value_2;
                    PyObject *tmp_compexpr_left_19;
                    PyObject *tmp_compexpr_right_19;
                    PyObject *tmp_source_name_34;
                    PyObject *tmp_compexpr_left_20;
                    PyObject *tmp_compexpr_right_20;
                    PyObject *tmp_source_name_35;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_34 = par_ui;
                    tmp_compexpr_left_19 = LOOKUP_ATTRIBUTE(tmp_source_name_34, const_str_plain_pass_dir);
                    if (tmp_compexpr_left_19 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 170;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    tmp_compexpr_right_19 = const_str_empty;
                    tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_19, tmp_compexpr_right_19);
                    Py_DECREF(tmp_compexpr_left_19);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 170;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    tmp_and_left_value_2 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_and_left_truth_2 = tmp_and_left_value_2 == NUITKA_BOOL_TRUE ? 1 : 0;
                    if (tmp_and_left_truth_2 == 1) {
                        goto and_right_2;
                    } else {
                        goto and_left_2;
                    }
                    and_right_2:;
                    CHECK_OBJECT(par_status_usb);
                    tmp_source_name_35 = par_status_usb;
                    tmp_compexpr_left_20 = LOOKUP_ATTRIBUTE(tmp_source_name_35, const_str_plain_value);
                    if (tmp_compexpr_left_20 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 170;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    tmp_compexpr_right_20 = const_int_0;
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_20, tmp_compexpr_right_20);
                    Py_DECREF(tmp_compexpr_left_20);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 170;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    tmp_and_right_value_2 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_condition_result_26 = tmp_and_right_value_2;
                    goto and_end_2;
                    and_left_2:;
                    tmp_condition_result_26 = tmp_and_left_value_2;
                    and_end_2:;
                    if (tmp_condition_result_26 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_26;
                    } else {
                        goto branch_no_26;
                    }
                    branch_yes_26:;
                    {
                        PyObject *tmp_assign_source_66;
                        PyObject *tmp_left_name_21;
                        PyObject *tmp_left_name_22;
                        PyObject *tmp_left_name_23;
                        PyObject *tmp_left_name_24;
                        PyObject *tmp_left_name_25;
                        PyObject *tmp_source_name_36;
                        PyObject *tmp_right_name_21;
                        PyObject *tmp_right_name_22;
                        PyObject *tmp_subscribed_name_37;
                        PyObject *tmp_source_name_37;
                        PyObject *tmp_subscript_name_37;
                        PyObject *tmp_subscribed_name_38;
                        PyObject *tmp_subscript_name_38;
                        PyObject *tmp_right_name_23;
                        PyObject *tmp_right_name_24;
                        PyObject *tmp_subscribed_name_39;
                        PyObject *tmp_source_name_38;
                        PyObject *tmp_subscript_name_39;
                        PyObject *tmp_subscribed_name_40;
                        PyObject *tmp_subscript_name_40;
                        PyObject *tmp_right_name_25;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_36 = par_ui;
                        tmp_left_name_25 = LOOKUP_ATTRIBUTE(tmp_source_name_36, const_str_plain_pass_dir);
                        if (tmp_left_name_25 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 171;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        tmp_right_name_21 = const_str_digest_7e915908b47db79e283f64f488992d60;
                        tmp_left_name_24 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_25, tmp_right_name_21);
                        Py_DECREF(tmp_left_name_25);
                        if (tmp_left_name_24 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 171;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_37 = par_ui;
                        tmp_subscribed_name_37 = LOOKUP_ATTRIBUTE(tmp_source_name_37, const_str_plain_vendor_list);
                        if (tmp_subscribed_name_37 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_left_name_24);

                            exception_lineno = 171;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        CHECK_OBJECT(par_selected_list);
                        tmp_subscribed_name_38 = par_selected_list;
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_38 = var_y;
                        tmp_subscript_name_37 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_38, tmp_subscript_name_38);
                        if (tmp_subscript_name_37 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_left_name_24);
                            Py_DECREF(tmp_subscribed_name_37);

                            exception_lineno = 171;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        tmp_right_name_22 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_37, tmp_subscript_name_37);
                        Py_DECREF(tmp_subscribed_name_37);
                        Py_DECREF(tmp_subscript_name_37);
                        if (tmp_right_name_22 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_left_name_24);

                            exception_lineno = 171;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        tmp_left_name_23 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_24, tmp_right_name_22);
                        Py_DECREF(tmp_left_name_24);
                        Py_DECREF(tmp_right_name_22);
                        if (tmp_left_name_23 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 171;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        tmp_right_name_23 = const_str_plain__;
                        tmp_left_name_22 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_23, tmp_right_name_23);
                        Py_DECREF(tmp_left_name_23);
                        if (tmp_left_name_22 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 171;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_38 = par_ui;
                        tmp_subscribed_name_39 = LOOKUP_ATTRIBUTE(tmp_source_name_38, const_str_plain_sn_list);
                        if (tmp_subscribed_name_39 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_left_name_22);

                            exception_lineno = 171;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        CHECK_OBJECT(par_selected_list);
                        tmp_subscribed_name_40 = par_selected_list;
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_40 = var_y;
                        tmp_subscript_name_39 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_40, tmp_subscript_name_40);
                        if (tmp_subscript_name_39 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_left_name_22);
                            Py_DECREF(tmp_subscribed_name_39);

                            exception_lineno = 171;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        tmp_right_name_24 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_39, tmp_subscript_name_39);
                        Py_DECREF(tmp_subscribed_name_39);
                        Py_DECREF(tmp_subscript_name_39);
                        if (tmp_right_name_24 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_left_name_22);

                            exception_lineno = 171;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        tmp_left_name_21 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_22, tmp_right_name_24);
                        Py_DECREF(tmp_left_name_22);
                        Py_DECREF(tmp_right_name_24);
                        if (tmp_left_name_21 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 171;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        tmp_right_name_25 = const_str_digest_5353e2b669106da20faee7c2688c2ea6;
                        tmp_assign_source_66 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_21, tmp_right_name_25);
                        Py_DECREF(tmp_left_name_21);
                        if (tmp_assign_source_66 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 171;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        {
                            PyObject *old = var_fn;
                            var_fn = tmp_assign_source_66;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        nuitka_bool tmp_condition_result_27;
                        PyObject *tmp_called_instance_20;
                        PyObject *tmp_source_name_39;
                        PyObject *tmp_mvar_value_6;
                        PyObject *tmp_call_result_22;
                        PyObject *tmp_args_element_name_14;
                        int tmp_truth_name_4;
                        tmp_mvar_value_6 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_os);

                        if (unlikely(tmp_mvar_value_6 == NULL)) {
                            tmp_mvar_value_6 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                        }

                        if (tmp_mvar_value_6 == NULL) {

                            exception_type = PyExc_NameError;
                            Py_INCREF(exception_type);
                            exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                            exception_tb = NULL;

                            exception_lineno = 172;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }

                        tmp_source_name_39 = tmp_mvar_value_6;
                        tmp_called_instance_20 = LOOKUP_ATTRIBUTE(tmp_source_name_39, const_str_plain_path);
                        if (tmp_called_instance_20 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 172;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        CHECK_OBJECT(var_fn);
                        tmp_args_element_name_14 = var_fn;
                        frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 172;
                        {
                            PyObject *call_args[] = {tmp_args_element_name_14};
                            tmp_call_result_22 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_20, const_str_plain_isfile, call_args);
                        }

                        Py_DECREF(tmp_called_instance_20);
                        if (tmp_call_result_22 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 172;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        tmp_truth_name_4 = CHECK_IF_TRUE(tmp_call_result_22);
                        if (tmp_truth_name_4 == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_call_result_22);

                            exception_lineno = 172;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        tmp_condition_result_27 = tmp_truth_name_4 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        Py_DECREF(tmp_call_result_22);
                        if (tmp_condition_result_27 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_27;
                        } else {
                            goto branch_no_27;
                        }
                        branch_yes_27:;
                        // Tried code:
                        {
                            PyObject *tmp_called_instance_21;
                            PyObject *tmp_mvar_value_7;
                            PyObject *tmp_call_result_23;
                            PyObject *tmp_args_element_name_15;
                            tmp_mvar_value_7 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_os);

                            if (unlikely(tmp_mvar_value_7 == NULL)) {
                                tmp_mvar_value_7 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                            }

                            if (tmp_mvar_value_7 == NULL) {

                                exception_type = PyExc_NameError;
                                Py_INCREF(exception_type);
                                exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                                exception_tb = NULL;

                                exception_lineno = 174;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_10;
                            }

                            tmp_called_instance_21 = tmp_mvar_value_7;
                            CHECK_OBJECT(var_fn);
                            tmp_args_element_name_15 = var_fn;
                            frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 174;
                            {
                                PyObject *call_args[] = {tmp_args_element_name_15};
                                tmp_call_result_23 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_21, const_str_plain_remove, call_args);
                            }

                            if (tmp_call_result_23 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 174;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_10;
                            }
                            Py_DECREF(tmp_call_result_23);
                        }
                        goto try_end_8;
                        // Exception handler code:
                        try_except_handler_10:;
                        exception_keeper_type_8 = exception_type;
                        exception_keeper_value_8 = exception_value;
                        exception_keeper_tb_8 = exception_tb;
                        exception_keeper_lineno_8 = exception_lineno;
                        exception_type = NULL;
                        exception_value = NULL;
                        exception_tb = NULL;
                        exception_lineno = 0;

                        // Preserve existing published exception.
                        PRESERVE_FRAME_EXCEPTION(frame_ef356f0a113d493889005f3e6f52fd41);
                        if (exception_keeper_tb_8 == NULL) {
                            exception_keeper_tb_8 = MAKE_TRACEBACK(frame_ef356f0a113d493889005f3e6f52fd41, exception_keeper_lineno_8);
                        } else if (exception_keeper_lineno_8 != 0) {
                            exception_keeper_tb_8 = ADD_TRACEBACK(exception_keeper_tb_8, frame_ef356f0a113d493889005f3e6f52fd41, exception_keeper_lineno_8);
                        }

                        NORMALIZE_EXCEPTION(&exception_keeper_type_8, &exception_keeper_value_8, &exception_keeper_tb_8);
                        PUBLISH_EXCEPTION(&exception_keeper_type_8, &exception_keeper_value_8, &exception_keeper_tb_8);
                        {
                            nuitka_bool tmp_condition_result_28;
                            PyObject *tmp_compexpr_left_21;
                            PyObject *tmp_compexpr_right_21;
                            tmp_compexpr_left_21 = EXC_TYPE(PyThreadState_GET());
                            tmp_compexpr_right_21 = PyExc_WindowsError;
                            tmp_res = EXCEPTION_MATCH_BOOL(tmp_compexpr_left_21, tmp_compexpr_right_21);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 175;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_8;
                            }
                            tmp_condition_result_28 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            if (tmp_condition_result_28 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_28;
                            } else {
                                goto branch_no_28;
                            }
                            branch_yes_28:;
                            tmp_print_value = const_str_digest_ad2a73532bdfb5deb2b05b9bbc157496;
                            tmp_result = PRINT_ITEM(tmp_print_value);
                            if (tmp_result == false) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 176;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_8;
                            }
                            if (PRINT_NEW_LINE() == false) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 176;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_8;
                            }
                            goto branch_end_28;
                            branch_no_28:;
                            tmp_result = RERAISE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                            if (unlikely(tmp_result == false)) {
                                exception_lineno = 173;
                            }

                            if (exception_tb && exception_tb->tb_frame == &frame_ef356f0a113d493889005f3e6f52fd41->m_frame) frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = exception_tb->tb_lineno;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                            branch_end_28:;
                        }
                        goto try_end_8;
                        // exception handler codes exits in all cases
                        NUITKA_CANNOT_GET_HERE(cleanop$$$function_2_setupFull_cleanup);
                        return NULL;
                        // End of try:
                        try_end_8:;
                        branch_no_27:;
                    }
                    branch_no_26:;
                }
                {
                    nuitka_bool tmp_condition_result_29;
                    PyObject *tmp_compexpr_left_22;
                    PyObject *tmp_compexpr_right_22;
                    PyObject *tmp_subscribed_name_41;
                    PyObject *tmp_subscript_name_41;
                    CHECK_OBJECT(par_res_list);
                    tmp_subscribed_name_41 = par_res_list;
                    CHECK_OBJECT(var_count);
                    tmp_subscript_name_41 = var_count;
                    tmp_compexpr_left_22 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_41, tmp_subscript_name_41);
                    if (tmp_compexpr_left_22 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 178;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    tmp_compexpr_right_22 = const_int_pos_1;
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_22, tmp_compexpr_right_22);
                    Py_DECREF(tmp_compexpr_left_22);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 178;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_8;
                    }
                    tmp_condition_result_29 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_29 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_29;
                    } else {
                        goto branch_no_29;
                    }
                    branch_yes_29:;
                    {
                        nuitka_bool tmp_condition_result_30;
                        PyObject *tmp_compexpr_left_23;
                        PyObject *tmp_compexpr_right_23;
                        PyObject *tmp_subscribed_name_42;
                        PyObject *tmp_subscript_name_42;
                        PyObject *tmp_source_name_40;
                        CHECK_OBJECT(par_status_list);
                        tmp_subscribed_name_42 = par_status_list;
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_42 = var_y;
                        tmp_compexpr_left_23 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_42, tmp_subscript_name_42);
                        if (tmp_compexpr_left_23 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 179;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_40 = par_ui;
                        tmp_compexpr_right_23 = LOOKUP_ATTRIBUTE(tmp_source_name_40, const_str_plain_NOT_AUTHORIZED);
                        if (tmp_compexpr_right_23 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_compexpr_left_23);

                            exception_lineno = 179;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_23, tmp_compexpr_right_23);
                        Py_DECREF(tmp_compexpr_left_23);
                        Py_DECREF(tmp_compexpr_right_23);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 179;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        tmp_condition_result_30 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_30 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_30;
                        } else {
                            goto branch_no_30;
                        }
                        branch_yes_30:;
                        {
                            nuitka_bool tmp_condition_result_31;
                            PyObject *tmp_operand_name_6;
                            if (var_start_nat == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_nat");
                                exception_tb = NULL;

                                exception_lineno = 180;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_8;
                            }

                            tmp_operand_name_6 = var_start_nat;
                            tmp_res = CHECK_IF_TRUE(tmp_operand_name_6);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 180;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_8;
                            }
                            tmp_condition_result_31 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            if (tmp_condition_result_31 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_31;
                            } else {
                                goto branch_no_31;
                            }
                            branch_yes_31:;
                            {
                                PyObject *tmp_assign_source_67;
                                PyObject *tmp_left_name_26;
                                PyObject *tmp_right_name_26;
                                if (var_list_nat == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_nat");
                                    exception_tb = NULL;

                                    exception_lineno = 181;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto try_except_handler_8;
                                }

                                tmp_left_name_26 = var_list_nat;
                                tmp_right_name_26 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                                tmp_assign_source_67 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_26, tmp_right_name_26);
                                if (tmp_assign_source_67 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 181;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto try_except_handler_8;
                                }
                                {
                                    PyObject *old = var_list_nat;
                                    var_list_nat = tmp_assign_source_67;
                                    Py_XDECREF(old);
                                }

                            }
                            goto branch_end_31;
                            branch_no_31:;
                            {
                                PyObject *tmp_assign_source_68;
                                tmp_assign_source_68 = Py_False;
                                {
                                    PyObject *old = var_start_nat;
                                    var_start_nat = tmp_assign_source_68;
                                    Py_INCREF(var_start_nat);
                                    Py_XDECREF(old);
                                }

                            }
                            branch_end_31:;
                        }
                        {
                            PyObject *tmp_assign_source_69;
                            PyObject *tmp_left_name_27;
                            PyObject *tmp_right_name_27;
                            PyObject *tmp_subscribed_name_43;
                            PyObject *tmp_source_name_41;
                            PyObject *tmp_subscript_name_43;
                            PyObject *tmp_subscribed_name_44;
                            PyObject *tmp_subscript_name_44;
                            if (var_list_nat == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_nat");
                                exception_tb = NULL;

                                exception_lineno = 184;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_8;
                            }

                            tmp_left_name_27 = var_list_nat;
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_41 = par_ui;
                            tmp_subscribed_name_43 = LOOKUP_ATTRIBUTE(tmp_source_name_41, const_str_plain_devs_list);
                            if (tmp_subscribed_name_43 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 184;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_8;
                            }
                            CHECK_OBJECT(par_selected_list);
                            tmp_subscribed_name_44 = par_selected_list;
                            CHECK_OBJECT(var_y);
                            tmp_subscript_name_44 = var_y;
                            tmp_subscript_name_43 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_44, tmp_subscript_name_44);
                            if (tmp_subscript_name_43 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_subscribed_name_43);

                                exception_lineno = 184;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_8;
                            }
                            tmp_right_name_27 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_43, tmp_subscript_name_43);
                            Py_DECREF(tmp_subscribed_name_43);
                            Py_DECREF(tmp_subscript_name_43);
                            if (tmp_right_name_27 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 184;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_8;
                            }
                            tmp_assign_source_69 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_27, tmp_right_name_27);
                            Py_DECREF(tmp_right_name_27);
                            if (tmp_assign_source_69 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 184;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_8;
                            }
                            {
                                PyObject *old = var_list_nat;
                                var_list_nat = tmp_assign_source_69;
                                Py_XDECREF(old);
                            }

                        }
                        goto branch_end_30;
                        branch_no_30:;
                        {
                            nuitka_bool tmp_condition_result_32;
                            PyObject *tmp_compexpr_left_24;
                            PyObject *tmp_compexpr_right_24;
                            PyObject *tmp_subscribed_name_45;
                            PyObject *tmp_subscript_name_45;
                            PyObject *tmp_source_name_42;
                            CHECK_OBJECT(par_status_list);
                            tmp_subscribed_name_45 = par_status_list;
                            CHECK_OBJECT(var_y);
                            tmp_subscript_name_45 = var_y;
                            tmp_compexpr_left_24 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_45, tmp_subscript_name_45);
                            if (tmp_compexpr_left_24 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 185;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_8;
                            }
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_42 = par_ui;
                            tmp_compexpr_right_24 = LOOKUP_ATTRIBUTE(tmp_source_name_42, const_str_plain_AUTHORITY_LOCKED_OUT);
                            if (tmp_compexpr_right_24 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_compexpr_left_24);

                                exception_lineno = 185;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_8;
                            }
                            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_24, tmp_compexpr_right_24);
                            Py_DECREF(tmp_compexpr_left_24);
                            Py_DECREF(tmp_compexpr_right_24);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 185;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_8;
                            }
                            tmp_condition_result_32 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            if (tmp_condition_result_32 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_32;
                            } else {
                                goto branch_no_32;
                            }
                            branch_yes_32:;
                            {
                                nuitka_bool tmp_condition_result_33;
                                PyObject *tmp_operand_name_7;
                                if (var_start_alo == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_alo");
                                    exception_tb = NULL;

                                    exception_lineno = 186;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto try_except_handler_8;
                                }

                                tmp_operand_name_7 = var_start_alo;
                                tmp_res = CHECK_IF_TRUE(tmp_operand_name_7);
                                if (tmp_res == -1) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 186;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto try_except_handler_8;
                                }
                                tmp_condition_result_33 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                                if (tmp_condition_result_33 == NUITKA_BOOL_TRUE) {
                                    goto branch_yes_33;
                                } else {
                                    goto branch_no_33;
                                }
                                branch_yes_33:;
                                {
                                    PyObject *tmp_assign_source_70;
                                    PyObject *tmp_left_name_28;
                                    PyObject *tmp_right_name_28;
                                    if (var_list_alo == NULL) {

                                        exception_type = PyExc_UnboundLocalError;
                                        Py_INCREF(exception_type);
                                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_alo");
                                        exception_tb = NULL;

                                        exception_lineno = 187;
                                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                        goto try_except_handler_8;
                                    }

                                    tmp_left_name_28 = var_list_alo;
                                    tmp_right_name_28 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                                    tmp_assign_source_70 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_28, tmp_right_name_28);
                                    if (tmp_assign_source_70 == NULL) {
                                        assert(ERROR_OCCURRED());

                                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                        exception_lineno = 187;
                                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                        goto try_except_handler_8;
                                    }
                                    {
                                        PyObject *old = var_list_alo;
                                        var_list_alo = tmp_assign_source_70;
                                        Py_XDECREF(old);
                                    }

                                }
                                goto branch_end_33;
                                branch_no_33:;
                                {
                                    PyObject *tmp_assign_source_71;
                                    tmp_assign_source_71 = Py_False;
                                    {
                                        PyObject *old = var_start_alo;
                                        var_start_alo = tmp_assign_source_71;
                                        Py_INCREF(var_start_alo);
                                        Py_XDECREF(old);
                                    }

                                }
                                branch_end_33:;
                            }
                            {
                                PyObject *tmp_assign_source_72;
                                PyObject *tmp_left_name_29;
                                PyObject *tmp_right_name_29;
                                PyObject *tmp_subscribed_name_46;
                                PyObject *tmp_source_name_43;
                                PyObject *tmp_subscript_name_46;
                                PyObject *tmp_subscribed_name_47;
                                PyObject *tmp_subscript_name_47;
                                if (var_list_alo == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_alo");
                                    exception_tb = NULL;

                                    exception_lineno = 190;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto try_except_handler_8;
                                }

                                tmp_left_name_29 = var_list_alo;
                                CHECK_OBJECT(par_ui);
                                tmp_source_name_43 = par_ui;
                                tmp_subscribed_name_46 = LOOKUP_ATTRIBUTE(tmp_source_name_43, const_str_plain_devs_list);
                                if (tmp_subscribed_name_46 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 190;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto try_except_handler_8;
                                }
                                CHECK_OBJECT(par_selected_list);
                                tmp_subscribed_name_47 = par_selected_list;
                                CHECK_OBJECT(var_y);
                                tmp_subscript_name_47 = var_y;
                                tmp_subscript_name_46 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_47, tmp_subscript_name_47);
                                if (tmp_subscript_name_46 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                    Py_DECREF(tmp_subscribed_name_46);

                                    exception_lineno = 190;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto try_except_handler_8;
                                }
                                tmp_right_name_29 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_46, tmp_subscript_name_46);
                                Py_DECREF(tmp_subscribed_name_46);
                                Py_DECREF(tmp_subscript_name_46);
                                if (tmp_right_name_29 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 190;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto try_except_handler_8;
                                }
                                tmp_assign_source_72 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_29, tmp_right_name_29);
                                Py_DECREF(tmp_right_name_29);
                                if (tmp_assign_source_72 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 190;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto try_except_handler_8;
                                }
                                {
                                    PyObject *old = var_list_alo;
                                    var_list_alo = tmp_assign_source_72;
                                    Py_XDECREF(old);
                                }

                            }
                            goto branch_end_32;
                            branch_no_32:;
                            {
                                nuitka_bool tmp_condition_result_34;
                                PyObject *tmp_operand_name_8;
                                if (var_start_f == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_f");
                                    exception_tb = NULL;

                                    exception_lineno = 192;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto try_except_handler_8;
                                }

                                tmp_operand_name_8 = var_start_f;
                                tmp_res = CHECK_IF_TRUE(tmp_operand_name_8);
                                if (tmp_res == -1) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 192;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto try_except_handler_8;
                                }
                                tmp_condition_result_34 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                                if (tmp_condition_result_34 == NUITKA_BOOL_TRUE) {
                                    goto branch_yes_34;
                                } else {
                                    goto branch_no_34;
                                }
                                branch_yes_34:;
                                {
                                    PyObject *tmp_assign_source_73;
                                    PyObject *tmp_left_name_30;
                                    PyObject *tmp_right_name_30;
                                    if (var_list_f == NULL) {

                                        exception_type = PyExc_UnboundLocalError;
                                        Py_INCREF(exception_type);
                                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                                        exception_tb = NULL;

                                        exception_lineno = 193;
                                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                        goto try_except_handler_8;
                                    }

                                    tmp_left_name_30 = var_list_f;
                                    tmp_right_name_30 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                                    tmp_assign_source_73 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_30, tmp_right_name_30);
                                    if (tmp_assign_source_73 == NULL) {
                                        assert(ERROR_OCCURRED());

                                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                        exception_lineno = 193;
                                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                        goto try_except_handler_8;
                                    }
                                    {
                                        PyObject *old = var_list_f;
                                        var_list_f = tmp_assign_source_73;
                                        Py_XDECREF(old);
                                    }

                                }
                                goto branch_end_34;
                                branch_no_34:;
                                {
                                    PyObject *tmp_assign_source_74;
                                    tmp_assign_source_74 = Py_False;
                                    {
                                        PyObject *old = var_start_f;
                                        var_start_f = tmp_assign_source_74;
                                        Py_INCREF(var_start_f);
                                        Py_XDECREF(old);
                                    }

                                }
                                branch_end_34:;
                            }
                            {
                                PyObject *tmp_assign_source_75;
                                PyObject *tmp_left_name_31;
                                PyObject *tmp_right_name_31;
                                PyObject *tmp_subscribed_name_48;
                                PyObject *tmp_source_name_44;
                                PyObject *tmp_subscript_name_48;
                                PyObject *tmp_subscribed_name_49;
                                PyObject *tmp_subscript_name_49;
                                if (var_list_f == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                                    exception_tb = NULL;

                                    exception_lineno = 196;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto try_except_handler_8;
                                }

                                tmp_left_name_31 = var_list_f;
                                CHECK_OBJECT(par_ui);
                                tmp_source_name_44 = par_ui;
                                tmp_subscribed_name_48 = LOOKUP_ATTRIBUTE(tmp_source_name_44, const_str_plain_devs_list);
                                if (tmp_subscribed_name_48 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 196;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto try_except_handler_8;
                                }
                                CHECK_OBJECT(par_selected_list);
                                tmp_subscribed_name_49 = par_selected_list;
                                CHECK_OBJECT(var_y);
                                tmp_subscript_name_49 = var_y;
                                tmp_subscript_name_48 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_49, tmp_subscript_name_49);
                                if (tmp_subscript_name_48 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                    Py_DECREF(tmp_subscribed_name_48);

                                    exception_lineno = 196;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto try_except_handler_8;
                                }
                                tmp_right_name_31 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_48, tmp_subscript_name_48);
                                Py_DECREF(tmp_subscribed_name_48);
                                Py_DECREF(tmp_subscript_name_48);
                                if (tmp_right_name_31 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 196;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto try_except_handler_8;
                                }
                                tmp_assign_source_75 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_31, tmp_right_name_31);
                                Py_DECREF(tmp_right_name_31);
                                if (tmp_assign_source_75 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 196;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto try_except_handler_8;
                                }
                                {
                                    PyObject *old = var_list_f;
                                    var_list_f = tmp_assign_source_75;
                                    Py_XDECREF(old);
                                }

                            }
                            branch_end_32:;
                        }
                        branch_end_30:;
                    }
                    goto branch_end_29;
                    branch_no_29:;
                    {
                        nuitka_bool tmp_condition_result_35;
                        PyObject *tmp_compexpr_left_25;
                        PyObject *tmp_compexpr_right_25;
                        PyObject *tmp_subscribed_name_50;
                        PyObject *tmp_subscript_name_50;
                        CHECK_OBJECT(par_res_list);
                        tmp_subscribed_name_50 = par_res_list;
                        CHECK_OBJECT(var_count);
                        tmp_subscript_name_50 = var_count;
                        tmp_compexpr_left_25 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_50, tmp_subscript_name_50);
                        if (tmp_compexpr_left_25 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 197;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        tmp_compexpr_right_25 = const_int_pos_2;
                        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_25, tmp_compexpr_right_25);
                        Py_DECREF(tmp_compexpr_left_25);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 197;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_8;
                        }
                        tmp_condition_result_35 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_35 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_35;
                        } else {
                            goto branch_no_35;
                        }
                        branch_yes_35:;
                        {
                            nuitka_bool tmp_condition_result_36;
                            PyObject *tmp_operand_name_9;
                            if (var_start_to == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_to");
                                exception_tb = NULL;

                                exception_lineno = 198;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_8;
                            }

                            tmp_operand_name_9 = var_start_to;
                            tmp_res = CHECK_IF_TRUE(tmp_operand_name_9);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 198;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_8;
                            }
                            tmp_condition_result_36 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            if (tmp_condition_result_36 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_36;
                            } else {
                                goto branch_no_36;
                            }
                            branch_yes_36:;
                            {
                                PyObject *tmp_assign_source_76;
                                PyObject *tmp_left_name_32;
                                PyObject *tmp_right_name_32;
                                if (var_list_to == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_to");
                                    exception_tb = NULL;

                                    exception_lineno = 199;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto try_except_handler_8;
                                }

                                tmp_left_name_32 = var_list_to;
                                tmp_right_name_32 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                                tmp_assign_source_76 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_32, tmp_right_name_32);
                                if (tmp_assign_source_76 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 199;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto try_except_handler_8;
                                }
                                {
                                    PyObject *old = var_list_to;
                                    var_list_to = tmp_assign_source_76;
                                    Py_XDECREF(old);
                                }

                            }
                            goto branch_end_36;
                            branch_no_36:;
                            {
                                PyObject *tmp_assign_source_77;
                                tmp_assign_source_77 = Py_False;
                                {
                                    PyObject *old = var_start_to;
                                    var_start_to = tmp_assign_source_77;
                                    Py_INCREF(var_start_to);
                                    Py_XDECREF(old);
                                }

                            }
                            branch_end_36:;
                        }
                        {
                            PyObject *tmp_assign_source_78;
                            PyObject *tmp_left_name_33;
                            PyObject *tmp_right_name_33;
                            PyObject *tmp_subscribed_name_51;
                            PyObject *tmp_source_name_45;
                            PyObject *tmp_subscript_name_51;
                            PyObject *tmp_subscribed_name_52;
                            PyObject *tmp_subscript_name_52;
                            if (var_list_to == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_to");
                                exception_tb = NULL;

                                exception_lineno = 202;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_8;
                            }

                            tmp_left_name_33 = var_list_to;
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_45 = par_ui;
                            tmp_subscribed_name_51 = LOOKUP_ATTRIBUTE(tmp_source_name_45, const_str_plain_devs_list);
                            if (tmp_subscribed_name_51 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 202;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_8;
                            }
                            CHECK_OBJECT(par_selected_list);
                            tmp_subscribed_name_52 = par_selected_list;
                            CHECK_OBJECT(var_y);
                            tmp_subscript_name_52 = var_y;
                            tmp_subscript_name_51 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_52, tmp_subscript_name_52);
                            if (tmp_subscript_name_51 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_subscribed_name_51);

                                exception_lineno = 202;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_8;
                            }
                            tmp_right_name_33 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_51, tmp_subscript_name_51);
                            Py_DECREF(tmp_subscribed_name_51);
                            Py_DECREF(tmp_subscript_name_51);
                            if (tmp_right_name_33 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 202;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_8;
                            }
                            tmp_assign_source_78 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_33, tmp_right_name_33);
                            Py_DECREF(tmp_right_name_33);
                            if (tmp_assign_source_78 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 202;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_8;
                            }
                            {
                                PyObject *old = var_list_to;
                                var_list_to = tmp_assign_source_78;
                                Py_XDECREF(old);
                            }

                        }
                        goto branch_end_35;
                        branch_no_35:;
                        {
                            nuitka_bool tmp_condition_result_37;
                            PyObject *tmp_compexpr_left_26;
                            PyObject *tmp_compexpr_right_26;
                            PyObject *tmp_subscribed_name_53;
                            PyObject *tmp_subscript_name_53;
                            CHECK_OBJECT(par_res_list);
                            tmp_subscribed_name_53 = par_res_list;
                            CHECK_OBJECT(var_count);
                            tmp_subscript_name_53 = var_count;
                            tmp_compexpr_left_26 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_53, tmp_subscript_name_53);
                            if (tmp_compexpr_left_26 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 203;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_8;
                            }
                            tmp_compexpr_right_26 = const_int_pos_6;
                            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_INT(tmp_compexpr_left_26, tmp_compexpr_right_26);
                            Py_DECREF(tmp_compexpr_left_26);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 203;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto try_except_handler_8;
                            }
                            tmp_condition_result_37 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            if (tmp_condition_result_37 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_37;
                            } else {
                                goto branch_no_37;
                            }
                            branch_yes_37:;
                            {
                                nuitka_bool tmp_condition_result_38;
                                PyObject *tmp_operand_name_10;
                                if (var_start_na == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_na");
                                    exception_tb = NULL;

                                    exception_lineno = 204;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto try_except_handler_8;
                                }

                                tmp_operand_name_10 = var_start_na;
                                tmp_res = CHECK_IF_TRUE(tmp_operand_name_10);
                                if (tmp_res == -1) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 204;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto try_except_handler_8;
                                }
                                tmp_condition_result_38 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                                if (tmp_condition_result_38 == NUITKA_BOOL_TRUE) {
                                    goto branch_yes_38;
                                } else {
                                    goto branch_no_38;
                                }
                                branch_yes_38:;
                                {
                                    PyObject *tmp_assign_source_79;
                                    PyObject *tmp_left_name_34;
                                    PyObject *tmp_right_name_34;
                                    if (var_list_na == NULL) {

                                        exception_type = PyExc_UnboundLocalError;
                                        Py_INCREF(exception_type);
                                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_na");
                                        exception_tb = NULL;

                                        exception_lineno = 205;
                                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                        goto try_except_handler_8;
                                    }

                                    tmp_left_name_34 = var_list_na;
                                    tmp_right_name_34 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                                    tmp_assign_source_79 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_34, tmp_right_name_34);
                                    if (tmp_assign_source_79 == NULL) {
                                        assert(ERROR_OCCURRED());

                                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                        exception_lineno = 205;
                                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                        goto try_except_handler_8;
                                    }
                                    {
                                        PyObject *old = var_list_na;
                                        var_list_na = tmp_assign_source_79;
                                        Py_XDECREF(old);
                                    }

                                }
                                goto branch_end_38;
                                branch_no_38:;
                                {
                                    PyObject *tmp_assign_source_80;
                                    tmp_assign_source_80 = Py_False;
                                    {
                                        PyObject *old = var_start_na;
                                        var_start_na = tmp_assign_source_80;
                                        Py_INCREF(var_start_na);
                                        Py_XDECREF(old);
                                    }

                                }
                                branch_end_38:;
                            }
                            {
                                PyObject *tmp_assign_source_81;
                                PyObject *tmp_left_name_35;
                                PyObject *tmp_right_name_35;
                                PyObject *tmp_subscribed_name_54;
                                PyObject *tmp_source_name_46;
                                PyObject *tmp_subscript_name_54;
                                PyObject *tmp_subscribed_name_55;
                                PyObject *tmp_subscript_name_55;
                                if (var_list_na == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_na");
                                    exception_tb = NULL;

                                    exception_lineno = 208;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto try_except_handler_8;
                                }

                                tmp_left_name_35 = var_list_na;
                                CHECK_OBJECT(par_ui);
                                tmp_source_name_46 = par_ui;
                                tmp_subscribed_name_54 = LOOKUP_ATTRIBUTE(tmp_source_name_46, const_str_plain_devs_list);
                                if (tmp_subscribed_name_54 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 208;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto try_except_handler_8;
                                }
                                CHECK_OBJECT(par_selected_list);
                                tmp_subscribed_name_55 = par_selected_list;
                                CHECK_OBJECT(var_y);
                                tmp_subscript_name_55 = var_y;
                                tmp_subscript_name_54 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_55, tmp_subscript_name_55);
                                if (tmp_subscript_name_54 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                    Py_DECREF(tmp_subscribed_name_54);

                                    exception_lineno = 208;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto try_except_handler_8;
                                }
                                tmp_right_name_35 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_54, tmp_subscript_name_54);
                                Py_DECREF(tmp_subscribed_name_54);
                                Py_DECREF(tmp_subscript_name_54);
                                if (tmp_right_name_35 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 208;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto try_except_handler_8;
                                }
                                tmp_assign_source_81 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_35, tmp_right_name_35);
                                Py_DECREF(tmp_right_name_35);
                                if (tmp_assign_source_81 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 208;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto try_except_handler_8;
                                }
                                {
                                    PyObject *old = var_list_na;
                                    var_list_na = tmp_assign_source_81;
                                    Py_XDECREF(old);
                                }

                            }
                            branch_no_37:;
                        }
                        branch_end_35:;
                    }
                    branch_end_29:;
                }
                branch_end_20:;
            }
            {
                PyObject *tmp_assign_source_82;
                PyObject *tmp_left_name_36;
                PyObject *tmp_right_name_36;
                CHECK_OBJECT(var_count);
                tmp_left_name_36 = var_count;
                tmp_right_name_36 = const_int_pos_1;
                tmp_assign_source_82 = BINARY_OPERATION_ADD_OBJECT_INT(tmp_left_name_36, tmp_right_name_36);
                assert(!(tmp_assign_source_82 == NULL));
                {
                    PyObject *old = var_count;
                    assert(old != NULL);
                    var_count = tmp_assign_source_82;
                    Py_DECREF(old);
                }

            }
            if (CONSIDER_THREADING() == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 141;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto try_except_handler_8;
            }
            goto loop_start_7;
            loop_end_7:;
            goto try_end_9;
            // Exception handler code:
            try_except_handler_8:;
            exception_keeper_type_9 = exception_type;
            exception_keeper_value_9 = exception_value;
            exception_keeper_tb_9 = exception_tb;
            exception_keeper_lineno_9 = exception_lineno;
            exception_type = NULL;
            exception_value = NULL;
            exception_tb = NULL;
            exception_lineno = 0;

            Py_XDECREF(tmp_for_loop_7__iter_value);
            tmp_for_loop_7__iter_value = NULL;

            CHECK_OBJECT((PyObject *)tmp_for_loop_7__for_iterator);
            Py_DECREF(tmp_for_loop_7__for_iterator);
            tmp_for_loop_7__for_iterator = NULL;

            // Re-raise.
            exception_type = exception_keeper_type_9;
            exception_value = exception_keeper_value_9;
            exception_tb = exception_keeper_tb_9;
            exception_lineno = exception_keeper_lineno_9;

            goto frame_exception_exit_1;
            // End of try:
            try_end_9:;
            Py_XDECREF(tmp_for_loop_7__iter_value);
            tmp_for_loop_7__iter_value = NULL;

            CHECK_OBJECT((PyObject *)tmp_for_loop_7__for_iterator);
            Py_DECREF(tmp_for_loop_7__for_iterator);
            tmp_for_loop_7__for_iterator = NULL;

            {
                PyObject *tmp_assattr_name_7;
                PyObject *tmp_assattr_target_7;
                tmp_assattr_name_7 = const_str_empty;
                CHECK_OBJECT(par_ui);
                tmp_assattr_target_7 = par_ui;
                tmp_result = SET_ATTRIBUTE(tmp_assattr_target_7, const_str_plain_pass_dir, tmp_assattr_name_7);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 210;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }
            }
            {
                nuitka_bool tmp_condition_result_39;
                PyObject *tmp_compexpr_left_27;
                PyObject *tmp_compexpr_right_27;
                if (var_list_na == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_na");
                    exception_tb = NULL;

                    exception_lineno = 211;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_compexpr_left_27 = var_list_na;
                tmp_compexpr_right_27 = const_str_empty;
                tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_27, tmp_compexpr_right_27);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 211;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_condition_result_39 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_39 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_39;
                } else {
                    goto branch_no_39;
                }
                branch_yes_39:;
                {
                    PyObject *tmp_called_name_8;
                    PyObject *tmp_source_name_47;
                    PyObject *tmp_call_result_24;
                    PyObject *tmp_args_element_name_16;
                    PyObject *tmp_left_name_37;
                    PyObject *tmp_left_name_38;
                    PyObject *tmp_right_name_37;
                    PyObject *tmp_right_name_38;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_47 = par_ui;
                    tmp_called_name_8 = LOOKUP_ATTRIBUTE(tmp_source_name_47, const_str_plain_msg_err);
                    if (tmp_called_name_8 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 212;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_left_name_38 = const_str_digest_77c0f42e61e4b539f097f95cbb5f3c21;
                    if (var_list_na == NULL) {
                        Py_DECREF(tmp_called_name_8);
                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_na");
                        exception_tb = NULL;

                        exception_lineno = 212;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_right_name_37 = var_list_na;
                    tmp_left_name_37 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_38, tmp_right_name_37);
                    if (tmp_left_name_37 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_8);

                        exception_lineno = 212;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_38 = const_str_dot;
                    tmp_args_element_name_16 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_37, tmp_right_name_38);
                    Py_DECREF(tmp_left_name_37);
                    if (tmp_args_element_name_16 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_8);

                        exception_lineno = 212;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 212;
                    tmp_call_result_24 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_8, tmp_args_element_name_16);
                    Py_DECREF(tmp_called_name_8);
                    Py_DECREF(tmp_args_element_name_16);
                    if (tmp_call_result_24 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 212;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_24);
                }
                branch_no_39:;
            }
            {
                nuitka_bool tmp_condition_result_40;
                PyObject *tmp_compexpr_left_28;
                PyObject *tmp_compexpr_right_28;
                if (var_list_nat == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_nat");
                    exception_tb = NULL;

                    exception_lineno = 213;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_compexpr_left_28 = var_list_nat;
                tmp_compexpr_right_28 = const_str_empty;
                tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_28, tmp_compexpr_right_28);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 213;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_condition_result_40 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_40 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_40;
                } else {
                    goto branch_no_40;
                }
                branch_yes_40:;
                {
                    PyObject *tmp_called_name_9;
                    PyObject *tmp_source_name_48;
                    PyObject *tmp_call_result_25;
                    PyObject *tmp_args_element_name_17;
                    PyObject *tmp_left_name_39;
                    PyObject *tmp_left_name_40;
                    PyObject *tmp_right_name_39;
                    PyObject *tmp_right_name_40;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_48 = par_ui;
                    tmp_called_name_9 = LOOKUP_ATTRIBUTE(tmp_source_name_48, const_str_plain_msg_err);
                    if (tmp_called_name_9 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 214;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_left_name_40 = const_str_digest_6645dde3aeb8c0147c4c2fab3ea7a829;
                    if (var_list_nat == NULL) {
                        Py_DECREF(tmp_called_name_9);
                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_nat");
                        exception_tb = NULL;

                        exception_lineno = 214;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_right_name_39 = var_list_nat;
                    tmp_left_name_39 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_40, tmp_right_name_39);
                    if (tmp_left_name_39 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_9);

                        exception_lineno = 214;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_40 = const_str_dot;
                    tmp_args_element_name_17 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_39, tmp_right_name_40);
                    Py_DECREF(tmp_left_name_39);
                    if (tmp_args_element_name_17 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_9);

                        exception_lineno = 214;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 214;
                    tmp_call_result_25 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_9, tmp_args_element_name_17);
                    Py_DECREF(tmp_called_name_9);
                    Py_DECREF(tmp_args_element_name_17);
                    if (tmp_call_result_25 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 214;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_25);
                }
                branch_no_40:;
            }
            {
                nuitka_bool tmp_condition_result_41;
                PyObject *tmp_compexpr_left_29;
                PyObject *tmp_compexpr_right_29;
                if (var_list_alo == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_alo");
                    exception_tb = NULL;

                    exception_lineno = 215;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_compexpr_left_29 = var_list_alo;
                tmp_compexpr_right_29 = const_str_empty;
                tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_29, tmp_compexpr_right_29);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 215;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_condition_result_41 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_41 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_41;
                } else {
                    goto branch_no_41;
                }
                branch_yes_41:;
                {
                    PyObject *tmp_called_name_10;
                    PyObject *tmp_source_name_49;
                    PyObject *tmp_call_result_26;
                    PyObject *tmp_args_element_name_18;
                    PyObject *tmp_left_name_41;
                    PyObject *tmp_left_name_42;
                    PyObject *tmp_right_name_41;
                    PyObject *tmp_right_name_42;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_49 = par_ui;
                    tmp_called_name_10 = LOOKUP_ATTRIBUTE(tmp_source_name_49, const_str_plain_msg_err);
                    if (tmp_called_name_10 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 216;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_left_name_42 = const_str_digest_125b3813ff8713f84b003abaa68a076c;
                    if (var_list_nat == NULL) {
                        Py_DECREF(tmp_called_name_10);
                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_nat");
                        exception_tb = NULL;

                        exception_lineno = 216;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_right_name_41 = var_list_nat;
                    tmp_left_name_41 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_42, tmp_right_name_41);
                    if (tmp_left_name_41 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_10);

                        exception_lineno = 216;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_42 = const_str_digest_c3a808c666d31607a746944e8f28505d;
                    tmp_args_element_name_18 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_41, tmp_right_name_42);
                    Py_DECREF(tmp_left_name_41);
                    if (tmp_args_element_name_18 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_10);

                        exception_lineno = 216;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 216;
                    tmp_call_result_26 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_10, tmp_args_element_name_18);
                    Py_DECREF(tmp_called_name_10);
                    Py_DECREF(tmp_args_element_name_18);
                    if (tmp_call_result_26 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 216;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_26);
                }
                branch_no_41:;
            }
            {
                nuitka_bool tmp_condition_result_42;
                PyObject *tmp_compexpr_left_30;
                PyObject *tmp_compexpr_right_30;
                if (var_list_p == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p");
                    exception_tb = NULL;

                    exception_lineno = 217;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_compexpr_left_30 = var_list_p;
                tmp_compexpr_right_30 = const_str_empty;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_30, tmp_compexpr_right_30);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 217;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_condition_result_42 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_42 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_42;
                } else {
                    goto branch_no_42;
                }
                branch_yes_42:;
                {
                    nuitka_bool tmp_condition_result_43;
                    PyObject *tmp_compexpr_left_31;
                    PyObject *tmp_compexpr_right_31;
                    if (var_list_f == NULL) {

                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                        exception_tb = NULL;

                        exception_lineno = 218;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_compexpr_left_31 = var_list_f;
                    tmp_compexpr_right_31 = const_str_empty;
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_31, tmp_compexpr_right_31);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 218;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_condition_result_43 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_43 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_43;
                    } else {
                        goto branch_no_43;
                    }
                    branch_yes_43:;
                    {
                        PyObject *tmp_called_name_11;
                        PyObject *tmp_source_name_50;
                        PyObject *tmp_call_result_27;
                        PyObject *tmp_args_element_name_19;
                        PyObject *tmp_left_name_43;
                        PyObject *tmp_left_name_44;
                        PyObject *tmp_right_name_43;
                        PyObject *tmp_right_name_44;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_50 = par_ui;
                        tmp_called_name_11 = LOOKUP_ATTRIBUTE(tmp_source_name_50, const_str_plain_msg_err);
                        if (tmp_called_name_11 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 219;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_left_name_44 = const_str_digest_69e4e75d2afc83af7308e8948081a154;
                        if (var_list_f == NULL) {
                            Py_DECREF(tmp_called_name_11);
                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                            exception_tb = NULL;

                            exception_lineno = 219;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_right_name_43 = var_list_f;
                        tmp_left_name_43 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_44, tmp_right_name_43);
                        if (tmp_left_name_43 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_11);

                            exception_lineno = 219;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_44 = const_str_dot;
                        tmp_args_element_name_19 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_43, tmp_right_name_44);
                        Py_DECREF(tmp_left_name_43);
                        if (tmp_args_element_name_19 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_11);

                            exception_lineno = 219;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto frame_exception_exit_1;
                        }
                        frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 219;
                        tmp_call_result_27 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_11, tmp_args_element_name_19);
                        Py_DECREF(tmp_called_name_11);
                        Py_DECREF(tmp_args_element_name_19);
                        if (tmp_call_result_27 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 219;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto frame_exception_exit_1;
                        }
                        Py_DECREF(tmp_call_result_27);
                    }
                    {
                        PyObject *tmp_called_instance_22;
                        PyObject *tmp_call_result_28;
                        CHECK_OBJECT(par_ui);
                        tmp_called_instance_22 = par_ui;
                        frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 220;
                        tmp_call_result_28 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_22, const_str_plain_msg_ok, &PyTuple_GET_ITEM(const_tuple_str_digest_17f0a196c7aed21ea7fe8c53b1410953_tuple, 0));

                        if (tmp_call_result_28 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 220;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto frame_exception_exit_1;
                        }
                        Py_DECREF(tmp_call_result_28);
                    }
                    goto branch_end_43;
                    branch_no_43:;
                    {
                        nuitka_bool tmp_condition_result_44;
                        PyObject *tmp_compexpr_left_32;
                        PyObject *tmp_compexpr_right_32;
                        if (var_list_to == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_to");
                            exception_tb = NULL;

                            exception_lineno = 221;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_compexpr_left_32 = var_list_to;
                        tmp_compexpr_right_32 = const_str_empty;
                        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_32, tmp_compexpr_right_32);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 221;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_condition_result_44 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_44 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_44;
                        } else {
                            goto branch_no_44;
                        }
                        branch_yes_44:;
                        {
                            PyObject *tmp_called_name_12;
                            PyObject *tmp_source_name_51;
                            PyObject *tmp_call_result_29;
                            PyObject *tmp_args_element_name_20;
                            PyObject *tmp_left_name_45;
                            PyObject *tmp_left_name_46;
                            PyObject *tmp_right_name_45;
                            PyObject *tmp_right_name_46;
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_51 = par_ui;
                            tmp_called_name_12 = LOOKUP_ATTRIBUTE(tmp_source_name_51, const_str_plain_msg_err);
                            if (tmp_called_name_12 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 222;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_left_name_46 = const_str_digest_a32c9aea5488fae5e5152e79a8ba3473;
                            if (var_list_to == NULL) {
                                Py_DECREF(tmp_called_name_12);
                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_to");
                                exception_tb = NULL;

                                exception_lineno = 222;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }

                            tmp_right_name_45 = var_list_to;
                            tmp_left_name_45 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_46, tmp_right_name_45);
                            if (tmp_left_name_45 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_12);

                                exception_lineno = 222;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_right_name_46 = const_str_dot;
                            tmp_args_element_name_20 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_45, tmp_right_name_46);
                            Py_DECREF(tmp_left_name_45);
                            if (tmp_args_element_name_20 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_12);

                                exception_lineno = 222;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 222;
                            tmp_call_result_29 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_12, tmp_args_element_name_20);
                            Py_DECREF(tmp_called_name_12);
                            Py_DECREF(tmp_args_element_name_20);
                            if (tmp_call_result_29 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 222;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            Py_DECREF(tmp_call_result_29);
                        }
                        {
                            PyObject *tmp_called_instance_23;
                            PyObject *tmp_call_result_30;
                            CHECK_OBJECT(par_ui);
                            tmp_called_instance_23 = par_ui;
                            frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 223;
                            tmp_call_result_30 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_23, const_str_plain_msg_ok, &PyTuple_GET_ITEM(const_tuple_str_digest_17f0a196c7aed21ea7fe8c53b1410953_tuple, 0));

                            if (tmp_call_result_30 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 223;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            Py_DECREF(tmp_call_result_30);
                        }
                        goto branch_end_44;
                        branch_no_44:;
                        {
                            PyObject *tmp_called_name_13;
                            PyObject *tmp_source_name_52;
                            PyObject *tmp_call_result_31;
                            PyObject *tmp_args_element_name_21;
                            PyObject *tmp_left_name_47;
                            PyObject *tmp_left_name_48;
                            PyObject *tmp_left_name_49;
                            PyObject *tmp_left_name_50;
                            PyObject *tmp_right_name_47;
                            PyObject *tmp_right_name_48;
                            PyObject *tmp_right_name_49;
                            PyObject *tmp_right_name_50;
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_52 = par_ui;
                            tmp_called_name_13 = LOOKUP_ATTRIBUTE(tmp_source_name_52, const_str_plain_msg_err);
                            if (tmp_called_name_13 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 225;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_left_name_50 = const_str_digest_69e4e75d2afc83af7308e8948081a154;
                            if (var_list_f == NULL) {
                                Py_DECREF(tmp_called_name_13);
                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                                exception_tb = NULL;

                                exception_lineno = 225;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }

                            tmp_right_name_47 = var_list_f;
                            tmp_left_name_49 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_50, tmp_right_name_47);
                            if (tmp_left_name_49 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_13);

                                exception_lineno = 225;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_right_name_48 = const_str_digest_efc2689cbd23a0681199447103d7c70b;
                            tmp_left_name_48 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_49, tmp_right_name_48);
                            Py_DECREF(tmp_left_name_49);
                            if (tmp_left_name_48 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_13);

                                exception_lineno = 225;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            if (var_list_to == NULL) {
                                Py_DECREF(tmp_called_name_13);
                                Py_DECREF(tmp_left_name_48);
                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_to");
                                exception_tb = NULL;

                                exception_lineno = 225;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }

                            tmp_right_name_49 = var_list_to;
                            tmp_left_name_47 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_48, tmp_right_name_49);
                            Py_DECREF(tmp_left_name_48);
                            if (tmp_left_name_47 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_13);

                                exception_lineno = 225;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_right_name_50 = const_str_dot;
                            tmp_args_element_name_21 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_47, tmp_right_name_50);
                            Py_DECREF(tmp_left_name_47);
                            if (tmp_args_element_name_21 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_13);

                                exception_lineno = 225;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 225;
                            tmp_call_result_31 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_13, tmp_args_element_name_21);
                            Py_DECREF(tmp_called_name_13);
                            Py_DECREF(tmp_args_element_name_21);
                            if (tmp_call_result_31 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 225;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            Py_DECREF(tmp_call_result_31);
                        }
                        {
                            PyObject *tmp_called_instance_24;
                            PyObject *tmp_call_result_32;
                            CHECK_OBJECT(par_ui);
                            tmp_called_instance_24 = par_ui;
                            frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 226;
                            tmp_call_result_32 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_24, const_str_plain_msg_ok, &PyTuple_GET_ITEM(const_tuple_str_digest_17f0a196c7aed21ea7fe8c53b1410953_tuple, 0));

                            if (tmp_call_result_32 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 226;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            Py_DECREF(tmp_call_result_32);
                        }
                        branch_end_44:;
                    }
                    branch_end_43:;
                }
                {
                    PyObject *tmp_called_instance_25;
                    PyObject *tmp_source_name_53;
                    PyObject *tmp_call_result_33;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_53 = par_ui;
                    tmp_called_instance_25 = LOOKUP_ATTRIBUTE(tmp_source_name_53, const_str_plain_op_instr);
                    if (tmp_called_instance_25 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 227;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 227;
                    tmp_call_result_33 = CALL_METHOD_NO_ARGS(tmp_called_instance_25, const_str_plain_show);
                    Py_DECREF(tmp_called_instance_25);
                    if (tmp_call_result_33 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 227;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_33);
                }
                {
                    PyObject *tmp_called_instance_26;
                    PyObject *tmp_source_name_54;
                    PyObject *tmp_call_result_34;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_54 = par_ui;
                    tmp_called_instance_26 = LOOKUP_ATTRIBUTE(tmp_source_name_54, const_str_plain_box_newpass);
                    if (tmp_called_instance_26 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 228;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 228;
                    tmp_call_result_34 = CALL_METHOD_NO_ARGS(tmp_called_instance_26, const_str_plain_show);
                    Py_DECREF(tmp_called_instance_26);
                    if (tmp_call_result_34 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 228;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_34);
                }
                {
                    PyObject *tmp_called_instance_27;
                    PyObject *tmp_source_name_55;
                    PyObject *tmp_call_result_35;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_55 = par_ui;
                    tmp_called_instance_27 = LOOKUP_ATTRIBUTE(tmp_source_name_55, const_str_plain_box_newpass_confirm);
                    if (tmp_called_instance_27 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 229;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 229;
                    tmp_call_result_35 = CALL_METHOD_NO_ARGS(tmp_called_instance_27, const_str_plain_show);
                    Py_DECREF(tmp_called_instance_27);
                    if (tmp_call_result_35 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 229;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_35);
                }
                {
                    PyObject *tmp_called_instance_28;
                    PyObject *tmp_source_name_56;
                    PyObject *tmp_call_result_36;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_56 = par_ui;
                    tmp_called_instance_28 = LOOKUP_ATTRIBUTE(tmp_source_name_56, const_str_plain_check_box_pass);
                    if (tmp_called_instance_28 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 230;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 230;
                    tmp_call_result_36 = CALL_METHOD_NO_ARGS(tmp_called_instance_28, const_str_plain_show);
                    Py_DECREF(tmp_called_instance_28);
                    if (tmp_call_result_36 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 230;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_36);
                }
                {
                    PyObject *tmp_called_instance_29;
                    PyObject *tmp_source_name_57;
                    PyObject *tmp_call_result_37;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_57 = par_ui;
                    tmp_called_instance_29 = LOOKUP_ATTRIBUTE(tmp_source_name_57, const_str_plain_setup_next);
                    if (tmp_called_instance_29 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 231;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 231;
                    tmp_call_result_37 = CALL_METHOD_NO_ARGS(tmp_called_instance_29, const_str_plain_show);
                    Py_DECREF(tmp_called_instance_29);
                    if (tmp_call_result_37 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 231;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_37);
                }
                {
                    PyObject *tmp_called_instance_30;
                    PyObject *tmp_source_name_58;
                    PyObject *tmp_call_result_38;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_58 = par_ui;
                    tmp_called_instance_30 = LOOKUP_ATTRIBUTE(tmp_source_name_58, const_str_plain_cancel_button);
                    if (tmp_called_instance_30 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 232;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 232;
                    tmp_call_result_38 = CALL_METHOD_NO_ARGS(tmp_called_instance_30, const_str_plain_show);
                    Py_DECREF(tmp_called_instance_30);
                    if (tmp_call_result_38 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 232;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_38);
                }
                goto branch_end_42;
                branch_no_42:;
                {
                    nuitka_bool tmp_condition_result_45;
                    PyObject *tmp_compexpr_left_33;
                    PyObject *tmp_compexpr_right_33;
                    if (var_list_to == NULL) {

                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_to");
                        exception_tb = NULL;

                        exception_lineno = 234;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_compexpr_left_33 = var_list_to;
                    tmp_compexpr_right_33 = const_str_empty;
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_33, tmp_compexpr_right_33);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 234;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_condition_result_45 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_45 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_45;
                    } else {
                        goto branch_no_45;
                    }
                    branch_yes_45:;
                    {
                        PyObject *tmp_called_name_14;
                        PyObject *tmp_source_name_59;
                        PyObject *tmp_call_result_39;
                        PyObject *tmp_args_element_name_22;
                        PyObject *tmp_left_name_51;
                        PyObject *tmp_left_name_52;
                        PyObject *tmp_left_name_53;
                        PyObject *tmp_left_name_54;
                        PyObject *tmp_right_name_51;
                        PyObject *tmp_right_name_52;
                        PyObject *tmp_right_name_53;
                        PyObject *tmp_right_name_54;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_59 = par_ui;
                        tmp_called_name_14 = LOOKUP_ATTRIBUTE(tmp_source_name_59, const_str_plain_msg_err);
                        if (tmp_called_name_14 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 235;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_left_name_54 = const_str_digest_aadcc3538cf4a9c922f17fa4943aeb37;
                        if (var_list_p == NULL) {
                            Py_DECREF(tmp_called_name_14);
                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p");
                            exception_tb = NULL;

                            exception_lineno = 235;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_right_name_51 = var_list_p;
                        tmp_left_name_53 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_54, tmp_right_name_51);
                        if (tmp_left_name_53 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_14);

                            exception_lineno = 235;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_52 = const_str_digest_b2383d6443e1a32507015f287d7df566;
                        tmp_left_name_52 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_53, tmp_right_name_52);
                        Py_DECREF(tmp_left_name_53);
                        if (tmp_left_name_52 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_14);

                            exception_lineno = 235;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto frame_exception_exit_1;
                        }
                        if (var_list_f == NULL) {
                            Py_DECREF(tmp_called_name_14);
                            Py_DECREF(tmp_left_name_52);
                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                            exception_tb = NULL;

                            exception_lineno = 235;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_right_name_53 = var_list_f;
                        tmp_left_name_51 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_52, tmp_right_name_53);
                        Py_DECREF(tmp_left_name_52);
                        if (tmp_left_name_51 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_14);

                            exception_lineno = 235;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_54 = const_str_dot;
                        tmp_args_element_name_22 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_51, tmp_right_name_54);
                        Py_DECREF(tmp_left_name_51);
                        if (tmp_args_element_name_22 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_14);

                            exception_lineno = 235;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto frame_exception_exit_1;
                        }
                        frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 235;
                        tmp_call_result_39 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_14, tmp_args_element_name_22);
                        Py_DECREF(tmp_called_name_14);
                        Py_DECREF(tmp_args_element_name_22);
                        if (tmp_call_result_39 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 235;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto frame_exception_exit_1;
                        }
                        Py_DECREF(tmp_call_result_39);
                    }
                    {
                        PyObject *tmp_called_instance_31;
                        PyObject *tmp_call_result_40;
                        CHECK_OBJECT(par_ui);
                        tmp_called_instance_31 = par_ui;
                        frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 236;
                        tmp_call_result_40 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_31, const_str_plain_msg_ok, &PyTuple_GET_ITEM(const_tuple_str_digest_17f0a196c7aed21ea7fe8c53b1410953_tuple, 0));

                        if (tmp_call_result_40 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 236;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto frame_exception_exit_1;
                        }
                        Py_DECREF(tmp_call_result_40);
                    }
                    goto branch_end_45;
                    branch_no_45:;
                    {
                        nuitka_bool tmp_condition_result_46;
                        PyObject *tmp_compexpr_left_34;
                        PyObject *tmp_compexpr_right_34;
                        if (var_list_f == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                            exception_tb = NULL;

                            exception_lineno = 237;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_compexpr_left_34 = var_list_f;
                        tmp_compexpr_right_34 = const_str_empty;
                        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_34, tmp_compexpr_right_34);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 237;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_condition_result_46 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_46 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_46;
                        } else {
                            goto branch_no_46;
                        }
                        branch_yes_46:;
                        {
                            PyObject *tmp_called_name_15;
                            PyObject *tmp_source_name_60;
                            PyObject *tmp_call_result_41;
                            PyObject *tmp_args_element_name_23;
                            PyObject *tmp_left_name_55;
                            PyObject *tmp_left_name_56;
                            PyObject *tmp_left_name_57;
                            PyObject *tmp_left_name_58;
                            PyObject *tmp_right_name_55;
                            PyObject *tmp_right_name_56;
                            PyObject *tmp_right_name_57;
                            PyObject *tmp_right_name_58;
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_60 = par_ui;
                            tmp_called_name_15 = LOOKUP_ATTRIBUTE(tmp_source_name_60, const_str_plain_msg_err);
                            if (tmp_called_name_15 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 238;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_left_name_58 = const_str_digest_aadcc3538cf4a9c922f17fa4943aeb37;
                            if (var_list_p == NULL) {
                                Py_DECREF(tmp_called_name_15);
                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p");
                                exception_tb = NULL;

                                exception_lineno = 238;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }

                            tmp_right_name_55 = var_list_p;
                            tmp_left_name_57 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_58, tmp_right_name_55);
                            if (tmp_left_name_57 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_15);

                                exception_lineno = 238;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_right_name_56 = const_str_digest_4d2a6bf0324633e3f769615ed2fe8ec5;
                            tmp_left_name_56 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_57, tmp_right_name_56);
                            Py_DECREF(tmp_left_name_57);
                            if (tmp_left_name_56 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_15);

                                exception_lineno = 238;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            if (var_list_to == NULL) {
                                Py_DECREF(tmp_called_name_15);
                                Py_DECREF(tmp_left_name_56);
                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_to");
                                exception_tb = NULL;

                                exception_lineno = 238;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }

                            tmp_right_name_57 = var_list_to;
                            tmp_left_name_55 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_56, tmp_right_name_57);
                            Py_DECREF(tmp_left_name_56);
                            if (tmp_left_name_55 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_15);

                                exception_lineno = 238;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_right_name_58 = const_str_dot;
                            tmp_args_element_name_23 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_55, tmp_right_name_58);
                            Py_DECREF(tmp_left_name_55);
                            if (tmp_args_element_name_23 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_15);

                                exception_lineno = 238;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 238;
                            tmp_call_result_41 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_15, tmp_args_element_name_23);
                            Py_DECREF(tmp_called_name_15);
                            Py_DECREF(tmp_args_element_name_23);
                            if (tmp_call_result_41 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 238;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            Py_DECREF(tmp_call_result_41);
                        }
                        {
                            PyObject *tmp_called_instance_32;
                            PyObject *tmp_call_result_42;
                            CHECK_OBJECT(par_ui);
                            tmp_called_instance_32 = par_ui;
                            frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 239;
                            tmp_call_result_42 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_32, const_str_plain_msg_ok, &PyTuple_GET_ITEM(const_tuple_str_digest_17f0a196c7aed21ea7fe8c53b1410953_tuple, 0));

                            if (tmp_call_result_42 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 239;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            Py_DECREF(tmp_call_result_42);
                        }
                        goto branch_end_46;
                        branch_no_46:;
                        {
                            PyObject *tmp_called_name_16;
                            PyObject *tmp_source_name_61;
                            PyObject *tmp_call_result_43;
                            PyObject *tmp_args_element_name_24;
                            PyObject *tmp_left_name_59;
                            PyObject *tmp_left_name_60;
                            PyObject *tmp_left_name_61;
                            PyObject *tmp_left_name_62;
                            PyObject *tmp_left_name_63;
                            PyObject *tmp_left_name_64;
                            PyObject *tmp_right_name_59;
                            PyObject *tmp_right_name_60;
                            PyObject *tmp_right_name_61;
                            PyObject *tmp_right_name_62;
                            PyObject *tmp_right_name_63;
                            PyObject *tmp_right_name_64;
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_61 = par_ui;
                            tmp_called_name_16 = LOOKUP_ATTRIBUTE(tmp_source_name_61, const_str_plain_msg_err);
                            if (tmp_called_name_16 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 241;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_left_name_64 = const_str_digest_aadcc3538cf4a9c922f17fa4943aeb37;
                            if (var_list_p == NULL) {
                                Py_DECREF(tmp_called_name_16);
                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p");
                                exception_tb = NULL;

                                exception_lineno = 241;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }

                            tmp_right_name_59 = var_list_p;
                            tmp_left_name_63 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_64, tmp_right_name_59);
                            if (tmp_left_name_63 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_16);

                                exception_lineno = 241;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_right_name_60 = const_str_digest_b2383d6443e1a32507015f287d7df566;
                            tmp_left_name_62 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_63, tmp_right_name_60);
                            Py_DECREF(tmp_left_name_63);
                            if (tmp_left_name_62 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_16);

                                exception_lineno = 241;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            if (var_list_f == NULL) {
                                Py_DECREF(tmp_called_name_16);
                                Py_DECREF(tmp_left_name_62);
                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                                exception_tb = NULL;

                                exception_lineno = 241;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }

                            tmp_right_name_61 = var_list_f;
                            tmp_left_name_61 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_62, tmp_right_name_61);
                            Py_DECREF(tmp_left_name_62);
                            if (tmp_left_name_61 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_16);

                                exception_lineno = 241;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_right_name_62 = const_str_digest_ff25997455ef1a74549578818e8cf049;
                            tmp_left_name_60 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_61, tmp_right_name_62);
                            Py_DECREF(tmp_left_name_61);
                            if (tmp_left_name_60 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_16);

                                exception_lineno = 241;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            if (var_list_to == NULL) {
                                Py_DECREF(tmp_called_name_16);
                                Py_DECREF(tmp_left_name_60);
                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_to");
                                exception_tb = NULL;

                                exception_lineno = 241;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }

                            tmp_right_name_63 = var_list_to;
                            tmp_left_name_59 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_60, tmp_right_name_63);
                            Py_DECREF(tmp_left_name_60);
                            if (tmp_left_name_59 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_16);

                                exception_lineno = 241;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_right_name_64 = const_str_dot;
                            tmp_args_element_name_24 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_59, tmp_right_name_64);
                            Py_DECREF(tmp_left_name_59);
                            if (tmp_args_element_name_24 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_16);

                                exception_lineno = 241;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 241;
                            tmp_call_result_43 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_16, tmp_args_element_name_24);
                            Py_DECREF(tmp_called_name_16);
                            Py_DECREF(tmp_args_element_name_24);
                            if (tmp_call_result_43 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 241;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            Py_DECREF(tmp_call_result_43);
                        }
                        {
                            PyObject *tmp_called_instance_33;
                            PyObject *tmp_call_result_44;
                            CHECK_OBJECT(par_ui);
                            tmp_called_instance_33 = par_ui;
                            frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 242;
                            tmp_call_result_44 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_33, const_str_plain_msg_ok, &PyTuple_GET_ITEM(const_tuple_str_digest_17f0a196c7aed21ea7fe8c53b1410953_tuple, 0));

                            if (tmp_call_result_44 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 242;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            Py_DECREF(tmp_call_result_44);
                        }
                        branch_end_46:;
                    }
                    branch_end_45:;
                }
                {
                    nuitka_bool tmp_condition_result_47;
                    int tmp_or_left_truth_1;
                    nuitka_bool tmp_or_left_value_1;
                    nuitka_bool tmp_or_right_value_1;
                    PyObject *tmp_compexpr_left_35;
                    PyObject *tmp_compexpr_right_35;
                    PyObject *tmp_compexpr_left_36;
                    PyObject *tmp_compexpr_right_36;
                    if (var_list_p0 == NULL) {

                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p0");
                        exception_tb = NULL;

                        exception_lineno = 243;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_compexpr_left_35 = var_list_p0;
                    tmp_compexpr_right_35 = const_str_empty;
                    tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_35, tmp_compexpr_right_35);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 243;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_or_left_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_or_left_truth_1 = tmp_or_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
                    if (tmp_or_left_truth_1 == 1) {
                        goto or_left_1;
                    } else {
                        goto or_right_1;
                    }
                    or_right_1:;
                    if (var_list_f0 == NULL) {

                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f0");
                        exception_tb = NULL;

                        exception_lineno = 243;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_compexpr_left_36 = var_list_f0;
                    tmp_compexpr_right_36 = const_str_empty;
                    tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_36, tmp_compexpr_right_36);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 243;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_or_right_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_condition_result_47 = tmp_or_right_value_1;
                    goto or_end_1;
                    or_left_1:;
                    tmp_condition_result_47 = tmp_or_left_value_1;
                    or_end_1:;
                    if (tmp_condition_result_47 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_47;
                    } else {
                        goto branch_no_47;
                    }
                    branch_yes_47:;
                    {
                        nuitka_bool tmp_condition_result_48;
                        PyObject *tmp_compexpr_left_37;
                        PyObject *tmp_compexpr_right_37;
                        if (var_list_p0 == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p0");
                            exception_tb = NULL;

                            exception_lineno = 244;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_compexpr_left_37 = var_list_p0;
                        tmp_compexpr_right_37 = const_str_empty;
                        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_37, tmp_compexpr_right_37);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 244;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_condition_result_48 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_48 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_48;
                        } else {
                            goto branch_no_48;
                        }
                        branch_yes_48:;
                        {
                            PyObject *tmp_called_name_17;
                            PyObject *tmp_source_name_62;
                            PyObject *tmp_call_result_45;
                            PyObject *tmp_args_element_name_25;
                            PyObject *tmp_left_name_65;
                            PyObject *tmp_left_name_66;
                            PyObject *tmp_right_name_65;
                            PyObject *tmp_right_name_66;
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_62 = par_ui;
                            tmp_called_name_17 = LOOKUP_ATTRIBUTE(tmp_source_name_62, const_str_plain_msg_err);
                            if (tmp_called_name_17 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 245;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_left_name_66 = const_str_digest_2cc4d4227aa28fb660d89af2bdd2b9b5;
                            if (var_list_f0 == NULL) {
                                Py_DECREF(tmp_called_name_17);
                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f0");
                                exception_tb = NULL;

                                exception_lineno = 245;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }

                            tmp_right_name_65 = var_list_f0;
                            tmp_left_name_65 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_66, tmp_right_name_65);
                            if (tmp_left_name_65 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_17);

                                exception_lineno = 245;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_right_name_66 = const_str_dot;
                            tmp_args_element_name_25 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_65, tmp_right_name_66);
                            Py_DECREF(tmp_left_name_65);
                            if (tmp_args_element_name_25 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_17);

                                exception_lineno = 245;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 245;
                            tmp_call_result_45 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_17, tmp_args_element_name_25);
                            Py_DECREF(tmp_called_name_17);
                            Py_DECREF(tmp_args_element_name_25);
                            if (tmp_call_result_45 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 245;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            Py_DECREF(tmp_call_result_45);
                        }
                        goto branch_end_48;
                        branch_no_48:;
                        {
                            nuitka_bool tmp_condition_result_49;
                            PyObject *tmp_compexpr_left_38;
                            PyObject *tmp_compexpr_right_38;
                            if (var_list_f0 == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f0");
                                exception_tb = NULL;

                                exception_lineno = 246;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }

                            tmp_compexpr_left_38 = var_list_f0;
                            tmp_compexpr_right_38 = const_str_empty;
                            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_38, tmp_compexpr_right_38);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 246;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_condition_result_49 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            if (tmp_condition_result_49 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_49;
                            } else {
                                goto branch_no_49;
                            }
                            branch_yes_49:;
                            {
                                PyObject *tmp_called_name_18;
                                PyObject *tmp_source_name_63;
                                PyObject *tmp_call_result_46;
                                PyObject *tmp_args_element_name_26;
                                PyObject *tmp_left_name_67;
                                PyObject *tmp_left_name_68;
                                PyObject *tmp_right_name_67;
                                PyObject *tmp_right_name_68;
                                CHECK_OBJECT(par_ui);
                                tmp_source_name_63 = par_ui;
                                tmp_called_name_18 = LOOKUP_ATTRIBUTE(tmp_source_name_63, const_str_plain_msg_ok);
                                if (tmp_called_name_18 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 247;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto frame_exception_exit_1;
                                }
                                tmp_left_name_68 = const_str_digest_f43d78fd2132499a8ac05b8e498eede9;
                                if (var_list_p0 == NULL) {
                                    Py_DECREF(tmp_called_name_18);
                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p0");
                                    exception_tb = NULL;

                                    exception_lineno = 247;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto frame_exception_exit_1;
                                }

                                tmp_right_name_67 = var_list_p0;
                                tmp_left_name_67 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_68, tmp_right_name_67);
                                if (tmp_left_name_67 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                    Py_DECREF(tmp_called_name_18);

                                    exception_lineno = 247;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto frame_exception_exit_1;
                                }
                                tmp_right_name_68 = const_str_dot;
                                tmp_args_element_name_26 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_67, tmp_right_name_68);
                                Py_DECREF(tmp_left_name_67);
                                if (tmp_args_element_name_26 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                    Py_DECREF(tmp_called_name_18);

                                    exception_lineno = 247;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto frame_exception_exit_1;
                                }
                                frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 247;
                                tmp_call_result_46 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_18, tmp_args_element_name_26);
                                Py_DECREF(tmp_called_name_18);
                                Py_DECREF(tmp_args_element_name_26);
                                if (tmp_call_result_46 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 247;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto frame_exception_exit_1;
                                }
                                Py_DECREF(tmp_call_result_46);
                            }
                            goto branch_end_49;
                            branch_no_49:;
                            {
                                PyObject *tmp_called_name_19;
                                PyObject *tmp_source_name_64;
                                PyObject *tmp_call_result_47;
                                PyObject *tmp_args_element_name_27;
                                PyObject *tmp_left_name_69;
                                PyObject *tmp_left_name_70;
                                PyObject *tmp_left_name_71;
                                PyObject *tmp_left_name_72;
                                PyObject *tmp_right_name_69;
                                PyObject *tmp_right_name_70;
                                PyObject *tmp_right_name_71;
                                PyObject *tmp_right_name_72;
                                CHECK_OBJECT(par_ui);
                                tmp_source_name_64 = par_ui;
                                tmp_called_name_19 = LOOKUP_ATTRIBUTE(tmp_source_name_64, const_str_plain_msg_err);
                                if (tmp_called_name_19 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 249;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto frame_exception_exit_1;
                                }
                                tmp_left_name_72 = const_str_digest_f43d78fd2132499a8ac05b8e498eede9;
                                if (var_list_p0 == NULL) {
                                    Py_DECREF(tmp_called_name_19);
                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p0");
                                    exception_tb = NULL;

                                    exception_lineno = 249;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto frame_exception_exit_1;
                                }

                                tmp_right_name_69 = var_list_p0;
                                tmp_left_name_71 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_72, tmp_right_name_69);
                                if (tmp_left_name_71 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                    Py_DECREF(tmp_called_name_19);

                                    exception_lineno = 249;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto frame_exception_exit_1;
                                }
                                tmp_right_name_70 = const_str_digest_b2383d6443e1a32507015f287d7df566;
                                tmp_left_name_70 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_71, tmp_right_name_70);
                                Py_DECREF(tmp_left_name_71);
                                if (tmp_left_name_70 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                    Py_DECREF(tmp_called_name_19);

                                    exception_lineno = 249;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto frame_exception_exit_1;
                                }
                                if (var_list_f0 == NULL) {
                                    Py_DECREF(tmp_called_name_19);
                                    Py_DECREF(tmp_left_name_70);
                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f0");
                                    exception_tb = NULL;

                                    exception_lineno = 249;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto frame_exception_exit_1;
                                }

                                tmp_right_name_71 = var_list_f0;
                                tmp_left_name_69 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_70, tmp_right_name_71);
                                Py_DECREF(tmp_left_name_70);
                                if (tmp_left_name_69 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                    Py_DECREF(tmp_called_name_19);

                                    exception_lineno = 249;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto frame_exception_exit_1;
                                }
                                tmp_right_name_72 = const_str_dot;
                                tmp_args_element_name_27 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_69, tmp_right_name_72);
                                Py_DECREF(tmp_left_name_69);
                                if (tmp_args_element_name_27 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                    Py_DECREF(tmp_called_name_19);

                                    exception_lineno = 249;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto frame_exception_exit_1;
                                }
                                frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 249;
                                tmp_call_result_47 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_19, tmp_args_element_name_27);
                                Py_DECREF(tmp_called_name_19);
                                Py_DECREF(tmp_args_element_name_27);
                                if (tmp_call_result_47 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 249;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                    goto frame_exception_exit_1;
                                }
                                Py_DECREF(tmp_call_result_47);
                            }
                            branch_end_49:;
                        }
                        branch_end_48:;
                    }
                    branch_no_47:;
                }
                branch_end_42:;
            }
            {
                PyObject *tmp_called_instance_34;
                PyObject *tmp_call_result_48;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_34 = par_ui;
                frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 250;
                tmp_call_result_48 = CALL_METHOD_NO_ARGS(tmp_called_instance_34, const_str_plain_setup_prompt1);
                if (tmp_call_result_48 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 250;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_48);
            }
            goto branch_end_19;
            branch_no_19:;
            {
                PyObject *tmp_assign_source_83;
                tmp_assign_source_83 = Py_True;
                {
                    PyObject *old = var_start;
                    var_start = tmp_assign_source_83;
                    Py_INCREF(var_start);
                    Py_XDECREF(old);
                }

            }
            {
                PyObject *tmp_assign_source_84;
                tmp_assign_source_84 = const_str_empty;
                assert(var_liststr == NULL);
                Py_INCREF(tmp_assign_source_84);
                var_liststr = tmp_assign_source_84;
            }
            {
                PyObject *tmp_assign_source_85;
                tmp_assign_source_85 = const_int_0;
                assert(var_y == NULL);
                Py_INCREF(tmp_assign_source_85);
                var_y = tmp_assign_source_85;
            }
            {
                PyObject *tmp_assign_source_86;
                PyObject *tmp_iter_arg_8;
                CHECK_OBJECT(par_selected_list);
                tmp_iter_arg_8 = par_selected_list;
                tmp_assign_source_86 = MAKE_ITERATOR(tmp_iter_arg_8);
                if (tmp_assign_source_86 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 255;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }
                assert(tmp_for_loop_8__for_iterator == NULL);
                tmp_for_loop_8__for_iterator = tmp_assign_source_86;
            }
            // Tried code:
            loop_start_8:;
            {
                PyObject *tmp_next_source_8;
                PyObject *tmp_assign_source_87;
                CHECK_OBJECT(tmp_for_loop_8__for_iterator);
                tmp_next_source_8 = tmp_for_loop_8__for_iterator;
                tmp_assign_source_87 = ITERATOR_NEXT(tmp_next_source_8);
                if (tmp_assign_source_87 == NULL) {
                    if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                        goto loop_end_8;
                    } else {

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        exception_lineno = 255;
                        goto try_except_handler_11;
                    }
                }

                {
                    PyObject *old = tmp_for_loop_8__iter_value;
                    tmp_for_loop_8__iter_value = tmp_assign_source_87;
                    Py_XDECREF(old);
                }

            }
            {
                PyObject *tmp_assign_source_88;
                CHECK_OBJECT(tmp_for_loop_8__iter_value);
                tmp_assign_source_88 = tmp_for_loop_8__iter_value;
                {
                    PyObject *old = var_d;
                    var_d = tmp_assign_source_88;
                    Py_INCREF(var_d);
                    Py_XDECREF(old);
                }

            }
            {
                PyObject *tmp_assattr_name_8;
                PyObject *tmp_subscribed_name_56;
                PyObject *tmp_source_name_65;
                PyObject *tmp_subscript_name_56;
                PyObject *tmp_assattr_target_8;
                CHECK_OBJECT(par_ui);
                tmp_source_name_65 = par_ui;
                tmp_subscribed_name_56 = LOOKUP_ATTRIBUTE(tmp_source_name_65, const_str_plain_devs_list);
                if (tmp_subscribed_name_56 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 256;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_11;
                }
                CHECK_OBJECT(var_d);
                tmp_subscript_name_56 = var_d;
                tmp_assattr_name_8 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_56, tmp_subscript_name_56);
                Py_DECREF(tmp_subscribed_name_56);
                if (tmp_assattr_name_8 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 256;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_11;
                }
                CHECK_OBJECT(par_ui);
                tmp_assattr_target_8 = par_ui;
                tmp_result = SET_ATTRIBUTE(tmp_assattr_target_8, const_str_plain_devname, tmp_assattr_name_8);
                Py_DECREF(tmp_assattr_name_8);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 256;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_11;
                }
            }
            {
                PyObject *tmp_called_instance_35;
                PyObject *tmp_mvar_value_8;
                PyObject *tmp_call_result_49;
                PyObject *tmp_args_element_name_28;
                PyObject *tmp_args_element_name_29;
                PyObject *tmp_args_element_name_30;
                tmp_mvar_value_8 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_dialogs);

                if (unlikely(tmp_mvar_value_8 == NULL)) {
                    tmp_mvar_value_8 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_dialogs);
                }

                if (tmp_mvar_value_8 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 418 ], 36, 0);
                    exception_tb = NULL;

                    exception_lineno = 257;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_11;
                }

                tmp_called_instance_35 = tmp_mvar_value_8;
                tmp_args_element_name_28 = Py_None;
                CHECK_OBJECT(par_ui);
                tmp_args_element_name_29 = par_ui;
                tmp_args_element_name_30 = const_int_pos_1;
                frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 257;
                {
                    PyObject *call_args[] = {tmp_args_element_name_28, tmp_args_element_name_29, tmp_args_element_name_30};
                    tmp_call_result_49 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_35, const_str_plain_query, call_args);
                }

                if (tmp_call_result_49 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 257;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_11;
                }
                Py_DECREF(tmp_call_result_49);
            }
            {
                nuitka_bool tmp_condition_result_50;
                PyObject *tmp_operand_name_11;
                if (var_start == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start");
                    exception_tb = NULL;

                    exception_lineno = 258;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_11;
                }

                tmp_operand_name_11 = var_start;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_11);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 258;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_11;
                }
                tmp_condition_result_50 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_50 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_50;
                } else {
                    goto branch_no_50;
                }
                branch_yes_50:;
                {
                    PyObject *tmp_assign_source_89;
                    PyObject *tmp_left_name_73;
                    PyObject *tmp_right_name_73;
                    CHECK_OBJECT(var_liststr);
                    tmp_left_name_73 = var_liststr;
                    tmp_right_name_73 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                    tmp_assign_source_89 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_73, tmp_right_name_73);
                    if (tmp_assign_source_89 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 259;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_11;
                    }
                    {
                        PyObject *old = var_liststr;
                        assert(old != NULL);
                        var_liststr = tmp_assign_source_89;
                        Py_DECREF(old);
                    }

                }
                goto branch_end_50;
                branch_no_50:;
                {
                    PyObject *tmp_assign_source_90;
                    tmp_assign_source_90 = Py_False;
                    {
                        PyObject *old = var_start;
                        var_start = tmp_assign_source_90;
                        Py_INCREF(var_start);
                        Py_XDECREF(old);
                    }

                }
                branch_end_50:;
            }
            {
                PyObject *tmp_assign_source_91;
                PyObject *tmp_left_name_74;
                PyObject *tmp_right_name_74;
                PyObject *tmp_subscribed_name_57;
                PyObject *tmp_source_name_66;
                PyObject *tmp_subscript_name_57;
                if (var_liststr == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "liststr");
                    exception_tb = NULL;

                    exception_lineno = 262;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_11;
                }

                tmp_left_name_74 = var_liststr;
                CHECK_OBJECT(par_ui);
                tmp_source_name_66 = par_ui;
                tmp_subscribed_name_57 = LOOKUP_ATTRIBUTE(tmp_source_name_66, const_str_plain_devs_list);
                if (tmp_subscribed_name_57 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 262;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_11;
                }
                CHECK_OBJECT(var_d);
                tmp_subscript_name_57 = var_d;
                tmp_right_name_74 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_57, tmp_subscript_name_57);
                Py_DECREF(tmp_subscribed_name_57);
                if (tmp_right_name_74 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 262;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_11;
                }
                tmp_assign_source_91 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_74, tmp_right_name_74);
                Py_DECREF(tmp_right_name_74);
                if (tmp_assign_source_91 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 262;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_11;
                }
                {
                    PyObject *old = var_liststr;
                    var_liststr = tmp_assign_source_91;
                    Py_XDECREF(old);
                }

            }
            {
                PyObject *tmp_ass_subvalue_9;
                PyObject *tmp_ass_subscribed_9;
                PyObject *tmp_source_name_67;
                PyObject *tmp_ass_subscript_9;
                tmp_ass_subvalue_9 = const_str_plain_Yes;
                CHECK_OBJECT(par_ui);
                tmp_source_name_67 = par_ui;
                tmp_ass_subscribed_9 = LOOKUP_ATTRIBUTE(tmp_source_name_67, const_str_plain_setupstatus_list);
                if (tmp_ass_subscribed_9 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 263;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_11;
                }
                CHECK_OBJECT(var_d);
                tmp_ass_subscript_9 = var_d;
                tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_9, tmp_ass_subscript_9, tmp_ass_subvalue_9);
                Py_DECREF(tmp_ass_subscribed_9);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 263;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_11;
                }
            }
            {
                PyObject *tmp_ass_subvalue_10;
                PyObject *tmp_ass_subscribed_10;
                PyObject *tmp_source_name_68;
                PyObject *tmp_ass_subscript_10;
                tmp_ass_subvalue_10 = const_str_plain_No;
                CHECK_OBJECT(par_ui);
                tmp_source_name_68 = par_ui;
                tmp_ass_subscribed_10 = LOOKUP_ATTRIBUTE(tmp_source_name_68, const_str_plain_setupuser_list);
                if (tmp_ass_subscribed_10 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 264;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_11;
                }
                CHECK_OBJECT(var_d);
                tmp_ass_subscript_10 = var_d;
                tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_10, tmp_ass_subscript_10, tmp_ass_subvalue_10);
                Py_DECREF(tmp_ass_subscribed_10);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 264;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_11;
                }
            }
            {
                nuitka_bool tmp_condition_result_51;
                PyObject *tmp_compexpr_left_39;
                PyObject *tmp_compexpr_right_39;
                PyObject *tmp_subscribed_name_58;
                PyObject *tmp_subscript_name_58;
                CHECK_OBJECT(par_trylimit_list);
                tmp_subscribed_name_58 = par_trylimit_list;
                CHECK_OBJECT(var_y);
                tmp_subscript_name_58 = var_y;
                tmp_compexpr_left_39 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_58, tmp_subscript_name_58);
                if (tmp_compexpr_left_39 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 265;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_11;
                }
                tmp_compexpr_right_39 = Py_None;
                tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_39, tmp_compexpr_right_39);
                Py_DECREF(tmp_compexpr_left_39);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 265;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_11;
                }
                tmp_condition_result_51 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_51 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_51;
                } else {
                    goto branch_no_51;
                }
                branch_yes_51:;
                {
                    PyObject *tmp_ass_subvalue_11;
                    PyObject *tmp_subscribed_name_59;
                    PyObject *tmp_subscript_name_59;
                    PyObject *tmp_ass_subscribed_11;
                    PyObject *tmp_source_name_69;
                    PyObject *tmp_ass_subscript_11;
                    CHECK_OBJECT(par_trylimit_list);
                    tmp_subscribed_name_59 = par_trylimit_list;
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_59 = var_y;
                    tmp_ass_subvalue_11 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_59, tmp_subscript_name_59);
                    if (tmp_ass_subvalue_11 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 266;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_11;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_69 = par_ui;
                    tmp_ass_subscribed_11 = LOOKUP_ATTRIBUTE(tmp_source_name_69, const_str_plain_retrylimit_list);
                    if (tmp_ass_subscribed_11 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_ass_subvalue_11);

                        exception_lineno = 266;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_11;
                    }
                    CHECK_OBJECT(var_d);
                    tmp_ass_subscript_11 = var_d;
                    tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_11, tmp_ass_subscript_11, tmp_ass_subvalue_11);
                    Py_DECREF(tmp_ass_subscribed_11);
                    Py_DECREF(tmp_ass_subvalue_11);
                    if (tmp_result == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 266;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_11;
                    }
                }
                goto branch_end_51;
                branch_no_51:;
                {
                    PyObject *tmp_ass_subvalue_12;
                    PyObject *tmp_ass_subscribed_12;
                    PyObject *tmp_source_name_70;
                    PyObject *tmp_ass_subscript_12;
                    tmp_ass_subvalue_12 = const_int_pos_10;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_70 = par_ui;
                    tmp_ass_subscribed_12 = LOOKUP_ATTRIBUTE(tmp_source_name_70, const_str_plain_retrylimit_list);
                    if (tmp_ass_subscribed_12 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 268;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_11;
                    }
                    CHECK_OBJECT(var_d);
                    tmp_ass_subscript_12 = var_d;
                    tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_12, tmp_ass_subscript_12, tmp_ass_subvalue_12);
                    Py_DECREF(tmp_ass_subscribed_12);
                    if (tmp_result == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 268;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_11;
                    }
                }
                branch_end_51:;
            }
            {
                PyObject *tmp_called_instance_36;
                PyObject *tmp_call_result_50;
                PyObject *tmp_args_element_name_31;
                PyObject *tmp_args_element_name_32;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_36 = par_ui;
                CHECK_OBJECT(var_d);
                tmp_args_element_name_31 = var_d;
                tmp_args_element_name_32 = LIST_COPY(const_list_int_pos_2_int_pos_3_list);
                frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 269;
                {
                    PyObject *call_args[] = {tmp_args_element_name_31, tmp_args_element_name_32};
                    tmp_call_result_50 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_36, const_str_plain_updateDevs, call_args);
                }

                Py_DECREF(tmp_args_element_name_32);
                if (tmp_call_result_50 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 269;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_11;
                }
                Py_DECREF(tmp_call_result_50);
            }
            {
                nuitka_bool tmp_condition_result_52;
                PyObject *tmp_called_name_20;
                PyObject *tmp_source_name_71;
                PyObject *tmp_source_name_72;
                PyObject *tmp_mvar_value_9;
                PyObject *tmp_call_result_51;
                PyObject *tmp_args_element_name_33;
                PyObject *tmp_left_name_75;
                PyObject *tmp_left_name_76;
                PyObject *tmp_right_name_75;
                PyObject *tmp_subscribed_name_60;
                PyObject *tmp_source_name_73;
                PyObject *tmp_subscript_name_60;
                PyObject *tmp_right_name_76;
                int tmp_truth_name_5;
                tmp_mvar_value_9 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_os);

                if (unlikely(tmp_mvar_value_9 == NULL)) {
                    tmp_mvar_value_9 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                }

                if (tmp_mvar_value_9 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                    exception_tb = NULL;

                    exception_lineno = 271;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_11;
                }

                tmp_source_name_72 = tmp_mvar_value_9;
                tmp_source_name_71 = LOOKUP_ATTRIBUTE(tmp_source_name_72, const_str_plain_path);
                if (tmp_source_name_71 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 271;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_11;
                }
                tmp_called_name_20 = LOOKUP_ATTRIBUTE(tmp_source_name_71, const_str_plain_isfile);
                Py_DECREF(tmp_source_name_71);
                if (tmp_called_name_20 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 271;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_11;
                }
                tmp_left_name_76 = const_str_plain_datawrite;
                CHECK_OBJECT(par_ui);
                tmp_source_name_73 = par_ui;
                tmp_subscribed_name_60 = LOOKUP_ATTRIBUTE(tmp_source_name_73, const_str_plain_sn_list);
                if (tmp_subscribed_name_60 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_20);

                    exception_lineno = 271;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_11;
                }
                CHECK_OBJECT(var_d);
                tmp_subscript_name_60 = var_d;
                tmp_right_name_75 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_60, tmp_subscript_name_60);
                Py_DECREF(tmp_subscribed_name_60);
                if (tmp_right_name_75 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_20);

                    exception_lineno = 271;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_11;
                }
                tmp_left_name_75 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_76, tmp_right_name_75);
                Py_DECREF(tmp_right_name_75);
                if (tmp_left_name_75 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_20);

                    exception_lineno = 271;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_11;
                }
                tmp_right_name_76 = const_str_digest_038a28107205f832c6bf850b3119b5af;
                tmp_args_element_name_33 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_75, tmp_right_name_76);
                Py_DECREF(tmp_left_name_75);
                if (tmp_args_element_name_33 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_20);

                    exception_lineno = 271;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_11;
                }
                frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 271;
                tmp_call_result_51 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_20, tmp_args_element_name_33);
                Py_DECREF(tmp_called_name_20);
                Py_DECREF(tmp_args_element_name_33);
                if (tmp_call_result_51 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 271;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_11;
                }
                tmp_truth_name_5 = CHECK_IF_TRUE(tmp_call_result_51);
                if (tmp_truth_name_5 == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_call_result_51);

                    exception_lineno = 271;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_11;
                }
                tmp_condition_result_52 = tmp_truth_name_5 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                Py_DECREF(tmp_call_result_51);
                if (tmp_condition_result_52 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_52;
                } else {
                    goto branch_no_52;
                }
                branch_yes_52:;
                {
                    PyObject *tmp_assign_source_92;
                    PyObject *tmp_open_filename_2;
                    PyObject *tmp_left_name_77;
                    PyObject *tmp_left_name_78;
                    PyObject *tmp_right_name_77;
                    PyObject *tmp_subscribed_name_61;
                    PyObject *tmp_source_name_74;
                    PyObject *tmp_subscript_name_61;
                    PyObject *tmp_right_name_78;
                    PyObject *tmp_open_mode_2;
                    tmp_left_name_78 = const_str_plain_datawrite;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_74 = par_ui;
                    tmp_subscribed_name_61 = LOOKUP_ATTRIBUTE(tmp_source_name_74, const_str_plain_sn_list);
                    if (tmp_subscribed_name_61 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 272;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_11;
                    }
                    CHECK_OBJECT(var_d);
                    tmp_subscript_name_61 = var_d;
                    tmp_right_name_77 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_61, tmp_subscript_name_61);
                    Py_DECREF(tmp_subscribed_name_61);
                    if (tmp_right_name_77 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 272;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_11;
                    }
                    tmp_left_name_77 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_78, tmp_right_name_77);
                    Py_DECREF(tmp_right_name_77);
                    if (tmp_left_name_77 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 272;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_11;
                    }
                    tmp_right_name_78 = const_str_digest_038a28107205f832c6bf850b3119b5af;
                    tmp_open_filename_2 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_77, tmp_right_name_78);
                    Py_DECREF(tmp_left_name_77);
                    if (tmp_open_filename_2 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 272;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_11;
                    }
                    tmp_open_mode_2 = const_str_plain_r;
                    tmp_assign_source_92 = BUILTIN_OPEN(tmp_open_filename_2, tmp_open_mode_2, NULL);
                    Py_DECREF(tmp_open_filename_2);
                    if (tmp_assign_source_92 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 272;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_11;
                    }
                    {
                        PyObject *old = var_f;
                        var_f = tmp_assign_source_92;
                        Py_XDECREF(old);
                    }

                }
                {
                    PyObject *tmp_assign_source_93;
                    PyObject *tmp_called_instance_37;
                    CHECK_OBJECT(var_f);
                    tmp_called_instance_37 = var_f;
                    frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 273;
                    tmp_assign_source_93 = CALL_METHOD_NO_ARGS(tmp_called_instance_37, const_str_plain_read);
                    if (tmp_assign_source_93 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 273;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_11;
                    }
                    {
                        PyObject *old = var_pv;
                        var_pv = tmp_assign_source_93;
                        Py_XDECREF(old);
                    }

                }
                {
                    PyObject *tmp_called_instance_38;
                    PyObject *tmp_call_result_52;
                    CHECK_OBJECT(var_f);
                    tmp_called_instance_38 = var_f;
                    frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 274;
                    tmp_call_result_52 = CALL_METHOD_NO_ARGS(tmp_called_instance_38, const_str_plain_close);
                    if (tmp_call_result_52 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 274;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_11;
                    }
                    Py_DECREF(tmp_call_result_52);
                }
                {
                    PyObject *tmp_ass_subvalue_13;
                    PyObject *tmp_called_instance_39;
                    PyObject *tmp_ass_subscribed_13;
                    PyObject *tmp_source_name_75;
                    PyObject *tmp_ass_subscript_13;
                    CHECK_OBJECT(var_pv);
                    tmp_called_instance_39 = var_pv;
                    frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 275;
                    tmp_ass_subvalue_13 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_39, const_str_plain_strip, &PyTuple_GET_ITEM(const_tuple_str_chr_0_tuple, 0));

                    if (tmp_ass_subvalue_13 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 275;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_11;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_75 = par_ui;
                    tmp_ass_subscribed_13 = LOOKUP_ATTRIBUTE(tmp_source_name_75, const_str_plain_pba_list);
                    if (tmp_ass_subscribed_13 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_ass_subvalue_13);

                        exception_lineno = 275;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_11;
                    }
                    CHECK_OBJECT(var_d);
                    tmp_ass_subscript_13 = var_d;
                    tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_13, tmp_ass_subscript_13, tmp_ass_subvalue_13);
                    Py_DECREF(tmp_ass_subscribed_13);
                    Py_DECREF(tmp_ass_subvalue_13);
                    if (tmp_result == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 275;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_11;
                    }
                }
                {
                    PyObject *tmp_assign_source_94;
                    PyObject *tmp_called_instance_40;
                    PyObject *tmp_source_name_76;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_76 = par_ui;
                    tmp_called_instance_40 = LOOKUP_ATTRIBUTE(tmp_source_name_76, const_str_plain_dev_select);
                    if (tmp_called_instance_40 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 276;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_11;
                    }
                    frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 276;
                    tmp_assign_source_94 = CALL_METHOD_NO_ARGS(tmp_called_instance_40, const_str_plain_get_active);
                    Py_DECREF(tmp_called_instance_40);
                    if (tmp_assign_source_94 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 276;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_11;
                    }
                    {
                        PyObject *old = var_act_idx;
                        var_act_idx = tmp_assign_source_94;
                        Py_XDECREF(old);
                    }

                }
                {
                    nuitka_bool tmp_condition_result_53;
                    PyObject *tmp_compexpr_left_40;
                    PyObject *tmp_compexpr_right_40;
                    CHECK_OBJECT(var_d);
                    tmp_compexpr_left_40 = var_d;
                    CHECK_OBJECT(var_act_idx);
                    tmp_compexpr_right_40 = var_act_idx;
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_40, tmp_compexpr_right_40);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 277;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_11;
                    }
                    tmp_condition_result_53 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_53 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_53;
                    } else {
                        goto branch_no_53;
                    }
                    branch_yes_53:;
                    {
                        PyObject *tmp_called_name_21;
                        PyObject *tmp_source_name_77;
                        PyObject *tmp_source_name_78;
                        PyObject *tmp_call_result_53;
                        PyObject *tmp_args_element_name_34;
                        PyObject *tmp_called_instance_41;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_78 = par_ui;
                        tmp_source_name_77 = LOOKUP_ATTRIBUTE(tmp_source_name_78, const_str_plain_dev_pbaVer);
                        if (tmp_source_name_77 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 278;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_11;
                        }
                        tmp_called_name_21 = LOOKUP_ATTRIBUTE(tmp_source_name_77, const_str_plain_set_text);
                        Py_DECREF(tmp_source_name_77);
                        if (tmp_called_name_21 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 278;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_11;
                        }
                        CHECK_OBJECT(var_pv);
                        tmp_called_instance_41 = var_pv;
                        frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 278;
                        tmp_args_element_name_34 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_41, const_str_plain_strip, &PyTuple_GET_ITEM(const_tuple_str_chr_0_tuple, 0));

                        if (tmp_args_element_name_34 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_21);

                            exception_lineno = 278;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_11;
                        }
                        frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 278;
                        tmp_call_result_53 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_21, tmp_args_element_name_34);
                        Py_DECREF(tmp_called_name_21);
                        Py_DECREF(tmp_args_element_name_34);
                        if (tmp_call_result_53 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 278;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto try_except_handler_11;
                        }
                        Py_DECREF(tmp_call_result_53);
                    }
                    branch_no_53:;
                }
                // Tried code:
                {
                    PyObject *tmp_called_name_22;
                    PyObject *tmp_source_name_79;
                    PyObject *tmp_mvar_value_10;
                    PyObject *tmp_call_result_54;
                    PyObject *tmp_args_element_name_35;
                    PyObject *tmp_left_name_79;
                    PyObject *tmp_left_name_80;
                    PyObject *tmp_right_name_79;
                    PyObject *tmp_subscribed_name_62;
                    PyObject *tmp_source_name_80;
                    PyObject *tmp_subscript_name_62;
                    PyObject *tmp_right_name_80;
                    tmp_mvar_value_10 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_os);

                    if (unlikely(tmp_mvar_value_10 == NULL)) {
                        tmp_mvar_value_10 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                    }

                    if (tmp_mvar_value_10 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                        exception_tb = NULL;

                        exception_lineno = 280;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_12;
                    }

                    tmp_source_name_79 = tmp_mvar_value_10;
                    tmp_called_name_22 = LOOKUP_ATTRIBUTE(tmp_source_name_79, const_str_plain_remove);
                    if (tmp_called_name_22 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 280;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_12;
                    }
                    tmp_left_name_80 = const_str_plain_datawrite;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_80 = par_ui;
                    tmp_subscribed_name_62 = LOOKUP_ATTRIBUTE(tmp_source_name_80, const_str_plain_sn_list);
                    if (tmp_subscribed_name_62 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_22);

                        exception_lineno = 280;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_12;
                    }
                    CHECK_OBJECT(var_d);
                    tmp_subscript_name_62 = var_d;
                    tmp_right_name_79 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_62, tmp_subscript_name_62);
                    Py_DECREF(tmp_subscribed_name_62);
                    if (tmp_right_name_79 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_22);

                        exception_lineno = 280;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_12;
                    }
                    tmp_left_name_79 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_80, tmp_right_name_79);
                    Py_DECREF(tmp_right_name_79);
                    if (tmp_left_name_79 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_22);

                        exception_lineno = 280;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_12;
                    }
                    tmp_right_name_80 = const_str_digest_038a28107205f832c6bf850b3119b5af;
                    tmp_args_element_name_35 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_79, tmp_right_name_80);
                    Py_DECREF(tmp_left_name_79);
                    if (tmp_args_element_name_35 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_22);

                        exception_lineno = 280;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_12;
                    }
                    frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 280;
                    tmp_call_result_54 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_22, tmp_args_element_name_35);
                    Py_DECREF(tmp_called_name_22);
                    Py_DECREF(tmp_args_element_name_35);
                    if (tmp_call_result_54 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 280;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_12;
                    }
                    Py_DECREF(tmp_call_result_54);
                }
                goto try_end_10;
                // Exception handler code:
                try_except_handler_12:;
                exception_keeper_type_10 = exception_type;
                exception_keeper_value_10 = exception_value;
                exception_keeper_tb_10 = exception_tb;
                exception_keeper_lineno_10 = exception_lineno;
                exception_type = NULL;
                exception_value = NULL;
                exception_tb = NULL;
                exception_lineno = 0;

                // Preserve existing published exception.
                PRESERVE_FRAME_EXCEPTION(frame_ef356f0a113d493889005f3e6f52fd41);
                if (exception_keeper_tb_10 == NULL) {
                    exception_keeper_tb_10 = MAKE_TRACEBACK(frame_ef356f0a113d493889005f3e6f52fd41, exception_keeper_lineno_10);
                } else if (exception_keeper_lineno_10 != 0) {
                    exception_keeper_tb_10 = ADD_TRACEBACK(exception_keeper_tb_10, frame_ef356f0a113d493889005f3e6f52fd41, exception_keeper_lineno_10);
                }

                NORMALIZE_EXCEPTION(&exception_keeper_type_10, &exception_keeper_value_10, &exception_keeper_tb_10);
                PUBLISH_EXCEPTION(&exception_keeper_type_10, &exception_keeper_value_10, &exception_keeper_tb_10);
                {
                    nuitka_bool tmp_condition_result_54;
                    PyObject *tmp_compexpr_left_41;
                    PyObject *tmp_compexpr_right_41;
                    tmp_compexpr_left_41 = EXC_TYPE(PyThreadState_GET());
                    tmp_compexpr_right_41 = PyExc_WindowsError;
                    tmp_res = EXCEPTION_MATCH_BOOL(tmp_compexpr_left_41, tmp_compexpr_right_41);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 281;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_11;
                    }
                    tmp_condition_result_54 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_54 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_54;
                    } else {
                        goto branch_no_54;
                    }
                    branch_yes_54:;
                    tmp_print_value = const_str_digest_ed4dd40ce7a801d6a9039029873747bc;
                    tmp_result = PRINT_ITEM(tmp_print_value);
                    if (tmp_result == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 282;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_11;
                    }
                    if (PRINT_NEW_LINE() == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 282;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto try_except_handler_11;
                    }
                    goto branch_end_54;
                    branch_no_54:;
                    tmp_result = RERAISE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                    if (unlikely(tmp_result == false)) {
                        exception_lineno = 279;
                    }

                    if (exception_tb && exception_tb->tb_frame == &frame_ef356f0a113d493889005f3e6f52fd41->m_frame) frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = exception_tb->tb_lineno;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto try_except_handler_11;
                    branch_end_54:;
                }
                goto try_end_10;
                // exception handler codes exits in all cases
                NUITKA_CANNOT_GET_HERE(cleanop$$$function_2_setupFull_cleanup);
                return NULL;
                // End of try:
                try_end_10:;
                branch_no_52:;
            }
            {
                PyObject *tmp_assign_source_95;
                PyObject *tmp_left_name_81;
                PyObject *tmp_right_name_81;
                CHECK_OBJECT(var_y);
                tmp_left_name_81 = var_y;
                tmp_right_name_81 = const_int_pos_1;
                tmp_assign_source_95 = BINARY_OPERATION_ADD_OBJECT_INT(tmp_left_name_81, tmp_right_name_81);
                assert(!(tmp_assign_source_95 == NULL));
                {
                    PyObject *old = var_y;
                    assert(old != NULL);
                    var_y = tmp_assign_source_95;
                    Py_DECREF(old);
                }

            }
            if (CONSIDER_THREADING() == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 255;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto try_except_handler_11;
            }
            goto loop_start_8;
            loop_end_8:;
            goto try_end_11;
            // Exception handler code:
            try_except_handler_11:;
            exception_keeper_type_11 = exception_type;
            exception_keeper_value_11 = exception_value;
            exception_keeper_tb_11 = exception_tb;
            exception_keeper_lineno_11 = exception_lineno;
            exception_type = NULL;
            exception_value = NULL;
            exception_tb = NULL;
            exception_lineno = 0;

            Py_XDECREF(tmp_for_loop_8__iter_value);
            tmp_for_loop_8__iter_value = NULL;

            CHECK_OBJECT((PyObject *)tmp_for_loop_8__for_iterator);
            Py_DECREF(tmp_for_loop_8__for_iterator);
            tmp_for_loop_8__for_iterator = NULL;

            // Re-raise.
            exception_type = exception_keeper_type_11;
            exception_value = exception_keeper_value_11;
            exception_tb = exception_keeper_tb_11;
            exception_lineno = exception_keeper_lineno_11;

            goto frame_exception_exit_1;
            // End of try:
            try_end_11:;
            Py_XDECREF(tmp_for_loop_8__iter_value);
            tmp_for_loop_8__iter_value = NULL;

            CHECK_OBJECT((PyObject *)tmp_for_loop_8__for_iterator);
            Py_DECREF(tmp_for_loop_8__for_iterator);
            tmp_for_loop_8__for_iterator = NULL;

            {
                PyObject *tmp_called_name_23;
                PyObject *tmp_source_name_81;
                PyObject *tmp_call_result_55;
                PyObject *tmp_args_element_name_36;
                PyObject *tmp_left_name_82;
                PyObject *tmp_left_name_83;
                PyObject *tmp_right_name_82;
                PyObject *tmp_right_name_83;
                CHECK_OBJECT(par_ui);
                tmp_source_name_81 = par_ui;
                tmp_called_name_23 = LOOKUP_ATTRIBUTE(tmp_source_name_81, const_str_plain_msg_ok);
                if (tmp_called_name_23 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 285;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_left_name_83 = const_str_digest_aadcc3538cf4a9c922f17fa4943aeb37;
                CHECK_OBJECT(var_liststr);
                tmp_right_name_82 = var_liststr;
                tmp_left_name_82 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_83, tmp_right_name_82);
                if (tmp_left_name_82 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_23);

                    exception_lineno = 285;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_right_name_83 = const_str_digest_bfaeee4b2080205943b3a96f2ea90ee4;
                tmp_args_element_name_36 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_82, tmp_right_name_83);
                Py_DECREF(tmp_left_name_82);
                if (tmp_args_element_name_36 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_23);

                    exception_lineno = 285;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 285;
                tmp_call_result_55 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_23, tmp_args_element_name_36);
                Py_DECREF(tmp_called_name_23);
                Py_DECREF(tmp_args_element_name_36);
                if (tmp_call_result_55 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 285;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_55);
            }
            {
                nuitka_bool tmp_condition_result_55;
                int tmp_or_left_truth_2;
                nuitka_bool tmp_or_left_value_2;
                nuitka_bool tmp_or_right_value_2;
                PyObject *tmp_compexpr_left_42;
                PyObject *tmp_compexpr_right_42;
                PyObject *tmp_compexpr_left_43;
                PyObject *tmp_compexpr_right_43;
                if (var_list_p0 == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p0");
                    exception_tb = NULL;

                    exception_lineno = 286;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_compexpr_left_42 = var_list_p0;
                tmp_compexpr_right_42 = const_str_empty;
                tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_42, tmp_compexpr_right_42);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 286;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_or_left_value_2 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                tmp_or_left_truth_2 = tmp_or_left_value_2 == NUITKA_BOOL_TRUE ? 1 : 0;
                if (tmp_or_left_truth_2 == 1) {
                    goto or_left_2;
                } else {
                    goto or_right_2;
                }
                or_right_2:;
                if (var_list_f0 == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f0");
                    exception_tb = NULL;

                    exception_lineno = 286;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_compexpr_left_43 = var_list_f0;
                tmp_compexpr_right_43 = const_str_empty;
                tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_43, tmp_compexpr_right_43);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 286;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_or_right_value_2 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                tmp_condition_result_55 = tmp_or_right_value_2;
                goto or_end_2;
                or_left_2:;
                tmp_condition_result_55 = tmp_or_left_value_2;
                or_end_2:;
                if (tmp_condition_result_55 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_55;
                } else {
                    goto branch_no_55;
                }
                branch_yes_55:;
                {
                    nuitka_bool tmp_condition_result_56;
                    PyObject *tmp_compexpr_left_44;
                    PyObject *tmp_compexpr_right_44;
                    if (var_list_p0 == NULL) {

                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p0");
                        exception_tb = NULL;

                        exception_lineno = 287;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_compexpr_left_44 = var_list_p0;
                    tmp_compexpr_right_44 = const_str_empty;
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_44, tmp_compexpr_right_44);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 287;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_condition_result_56 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_56 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_56;
                    } else {
                        goto branch_no_56;
                    }
                    branch_yes_56:;
                    {
                        PyObject *tmp_called_name_24;
                        PyObject *tmp_source_name_82;
                        PyObject *tmp_call_result_56;
                        PyObject *tmp_args_element_name_37;
                        PyObject *tmp_left_name_84;
                        PyObject *tmp_left_name_85;
                        PyObject *tmp_right_name_84;
                        PyObject *tmp_right_name_85;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_82 = par_ui;
                        tmp_called_name_24 = LOOKUP_ATTRIBUTE(tmp_source_name_82, const_str_plain_msg_err);
                        if (tmp_called_name_24 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 288;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_left_name_85 = const_str_digest_2cc4d4227aa28fb660d89af2bdd2b9b5;
                        if (var_list_f0 == NULL) {
                            Py_DECREF(tmp_called_name_24);
                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f0");
                            exception_tb = NULL;

                            exception_lineno = 288;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_right_name_84 = var_list_f0;
                        tmp_left_name_84 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_85, tmp_right_name_84);
                        if (tmp_left_name_84 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_24);

                            exception_lineno = 288;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_85 = const_str_dot;
                        tmp_args_element_name_37 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_84, tmp_right_name_85);
                        Py_DECREF(tmp_left_name_84);
                        if (tmp_args_element_name_37 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_24);

                            exception_lineno = 288;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto frame_exception_exit_1;
                        }
                        frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 288;
                        tmp_call_result_56 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_24, tmp_args_element_name_37);
                        Py_DECREF(tmp_called_name_24);
                        Py_DECREF(tmp_args_element_name_37);
                        if (tmp_call_result_56 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 288;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto frame_exception_exit_1;
                        }
                        Py_DECREF(tmp_call_result_56);
                    }
                    goto branch_end_56;
                    branch_no_56:;
                    {
                        nuitka_bool tmp_condition_result_57;
                        PyObject *tmp_compexpr_left_45;
                        PyObject *tmp_compexpr_right_45;
                        if (var_list_f0 == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f0");
                            exception_tb = NULL;

                            exception_lineno = 289;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_compexpr_left_45 = var_list_f0;
                        tmp_compexpr_right_45 = const_str_empty;
                        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_45, tmp_compexpr_right_45);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 289;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_condition_result_57 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_57 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_57;
                        } else {
                            goto branch_no_57;
                        }
                        branch_yes_57:;
                        {
                            PyObject *tmp_called_name_25;
                            PyObject *tmp_source_name_83;
                            PyObject *tmp_call_result_57;
                            PyObject *tmp_args_element_name_38;
                            PyObject *tmp_left_name_86;
                            PyObject *tmp_left_name_87;
                            PyObject *tmp_right_name_86;
                            PyObject *tmp_right_name_87;
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_83 = par_ui;
                            tmp_called_name_25 = LOOKUP_ATTRIBUTE(tmp_source_name_83, const_str_plain_msg_ok);
                            if (tmp_called_name_25 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 290;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_left_name_87 = const_str_digest_f43d78fd2132499a8ac05b8e498eede9;
                            if (var_list_p0 == NULL) {
                                Py_DECREF(tmp_called_name_25);
                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p0");
                                exception_tb = NULL;

                                exception_lineno = 290;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }

                            tmp_right_name_86 = var_list_p0;
                            tmp_left_name_86 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_87, tmp_right_name_86);
                            if (tmp_left_name_86 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_25);

                                exception_lineno = 290;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_right_name_87 = const_str_dot;
                            tmp_args_element_name_38 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_86, tmp_right_name_87);
                            Py_DECREF(tmp_left_name_86);
                            if (tmp_args_element_name_38 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_25);

                                exception_lineno = 290;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 290;
                            tmp_call_result_57 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_25, tmp_args_element_name_38);
                            Py_DECREF(tmp_called_name_25);
                            Py_DECREF(tmp_args_element_name_38);
                            if (tmp_call_result_57 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 290;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            Py_DECREF(tmp_call_result_57);
                        }
                        goto branch_end_57;
                        branch_no_57:;
                        {
                            PyObject *tmp_called_name_26;
                            PyObject *tmp_source_name_84;
                            PyObject *tmp_call_result_58;
                            PyObject *tmp_args_element_name_39;
                            PyObject *tmp_left_name_88;
                            PyObject *tmp_left_name_89;
                            PyObject *tmp_left_name_90;
                            PyObject *tmp_left_name_91;
                            PyObject *tmp_right_name_88;
                            PyObject *tmp_right_name_89;
                            PyObject *tmp_right_name_90;
                            PyObject *tmp_right_name_91;
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_84 = par_ui;
                            tmp_called_name_26 = LOOKUP_ATTRIBUTE(tmp_source_name_84, const_str_plain_msg_err);
                            if (tmp_called_name_26 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 292;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_left_name_91 = const_str_digest_f43d78fd2132499a8ac05b8e498eede9;
                            if (var_list_p0 == NULL) {
                                Py_DECREF(tmp_called_name_26);
                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p0");
                                exception_tb = NULL;

                                exception_lineno = 292;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }

                            tmp_right_name_88 = var_list_p0;
                            tmp_left_name_90 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_91, tmp_right_name_88);
                            if (tmp_left_name_90 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_26);

                                exception_lineno = 292;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_right_name_89 = const_str_digest_b2383d6443e1a32507015f287d7df566;
                            tmp_left_name_89 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_90, tmp_right_name_89);
                            Py_DECREF(tmp_left_name_90);
                            if (tmp_left_name_89 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_26);

                                exception_lineno = 292;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            if (var_list_f0 == NULL) {
                                Py_DECREF(tmp_called_name_26);
                                Py_DECREF(tmp_left_name_89);
                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f0");
                                exception_tb = NULL;

                                exception_lineno = 292;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }

                            tmp_right_name_90 = var_list_f0;
                            tmp_left_name_88 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_89, tmp_right_name_90);
                            Py_DECREF(tmp_left_name_89);
                            if (tmp_left_name_88 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_26);

                                exception_lineno = 292;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            tmp_right_name_91 = const_str_dot;
                            tmp_args_element_name_39 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_88, tmp_right_name_91);
                            Py_DECREF(tmp_left_name_88);
                            if (tmp_args_element_name_39 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_called_name_26);

                                exception_lineno = 292;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 292;
                            tmp_call_result_58 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_26, tmp_args_element_name_39);
                            Py_DECREF(tmp_called_name_26);
                            Py_DECREF(tmp_args_element_name_39);
                            if (tmp_call_result_58 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 292;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                                goto frame_exception_exit_1;
                            }
                            Py_DECREF(tmp_call_result_58);
                        }
                        branch_end_57:;
                    }
                    branch_end_56:;
                }
                branch_no_55:;
            }
            {
                PyObject *tmp_called_instance_42;
                PyObject *tmp_call_result_59;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_42 = par_ui;
                frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 293;
                tmp_call_result_59 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_42, const_str_plain_returnToMain, &PyTuple_GET_ITEM(const_tuple_none_true_tuple, 0));

                if (tmp_call_result_59 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 293;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_59);
            }
            branch_end_19:;
        }
        {
            PyObject *tmp_called_instance_43;
            PyObject *tmp_call_result_60;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_43 = par_ui;
            frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 294;
            tmp_call_result_60 = CALL_METHOD_NO_ARGS(tmp_called_instance_43, const_str_plain_stop_spin);
            if (tmp_call_result_60 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 294;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_60);
        }
        {
            nuitka_bool tmp_condition_result_58;
            int tmp_truth_name_6;
            CHECK_OBJECT(par_rescan_needed);
            tmp_truth_name_6 = CHECK_IF_TRUE(par_rescan_needed);
            if (tmp_truth_name_6 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 295;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_58 = tmp_truth_name_6 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_58 == NUITKA_BOOL_TRUE) {
                goto branch_yes_58;
            } else {
                goto branch_no_58;
            }
            branch_yes_58:;
            {
                PyObject *tmp_called_instance_44;
                PyObject *tmp_call_result_61;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_44 = par_ui;
                frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 296;
                tmp_call_result_61 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_44, const_str_plain_msg_ok, &PyTuple_GET_ITEM(const_tuple_str_digest_ae3b8b33bbb4f0816fc34e114de2f069_tuple, 0));

                if (tmp_call_result_61 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 296;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_61);
            }
            {
                PyObject *tmp_called_instance_45;
                PyObject *tmp_mvar_value_11;
                PyObject *tmp_call_result_62;
                PyObject *tmp_args_element_name_40;
                PyObject *tmp_args_element_name_41;
                PyObject *tmp_args_element_name_42;
                tmp_mvar_value_11 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_runscan);

                if (unlikely(tmp_mvar_value_11 == NULL)) {
                    tmp_mvar_value_11 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runscan);
                }

                if (tmp_mvar_value_11 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 454 ], 36, 0);
                    exception_tb = NULL;

                    exception_lineno = 297;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_called_instance_45 = tmp_mvar_value_11;
                tmp_args_element_name_40 = Py_None;
                CHECK_OBJECT(par_ui);
                tmp_args_element_name_41 = par_ui;
                tmp_args_element_name_42 = Py_True;
                frame_ef356f0a113d493889005f3e6f52fd41->m_frame.f_lineno = 297;
                {
                    PyObject *call_args[] = {tmp_args_element_name_40, tmp_args_element_name_41, tmp_args_element_name_42};
                    tmp_call_result_62 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_45, const_str_plain_run_scan, call_args);
                }

                if (tmp_call_result_62 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 297;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooNoooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_62);
            }
            branch_no_58:;
        }
        branch_end_6:;
    }

#if 1
    RESTORE_FRAME_EXCEPTION(frame_ef356f0a113d493889005f3e6f52fd41);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_exception_exit_1:;

#if 1
    RESTORE_FRAME_EXCEPTION(frame_ef356f0a113d493889005f3e6f52fd41);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_ef356f0a113d493889005f3e6f52fd41, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_ef356f0a113d493889005f3e6f52fd41->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_ef356f0a113d493889005f3e6f52fd41, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_ef356f0a113d493889005f3e6f52fd41,
        type_description_1,
        par_ui,
        par_max_time,
        par_start_time,
        par_op_procs,
        par_res_list,
        par_e_to,
        par_selected_list,
        par_status_list,
        par_rc_list,
        par_status_usb,
        par_trylimit_list,
        par_rescan_needed,
        var_list_p,
        var_list_miss,
        var_start_miss,
        var_start_p0,
        var_list_f,
        var_op_proc,
        var_start_alo,
        var_start_na,
        var_usb_f,
        var_res_sum,
        var_usb_fail,
        var_list_to,
        var_list_nat,
        var_elapsed_time,
        var_start,
        var_start_f0,
        var_liststr,
        var_list_alo,
        var_start_nat,
        var_start_f,
        var_list_f0,
        var_start_to,
        var_y,
        var_pv,
        var_fn,
        var_count,
        var_f,
        NULL,
        var_d,
        var_i,
        var_j,
        var_p,
        var_act_idx,
        var_start_p,
        var_list_na,
        var_list_p0,
        var_z,
        var_curr_time
    );


    // Release cached frame.
    if (frame_ef356f0a113d493889005f3e6f52fd41 == cache_frame_ef356f0a113d493889005f3e6f52fd41) {
        Py_DECREF(frame_ef356f0a113d493889005f3e6f52fd41);
    }
    cache_frame_ef356f0a113d493889005f3e6f52fd41 = NULL;

    assertFrameObject(frame_ef356f0a113d493889005f3e6f52fd41);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(cleanop$$$function_2_setupFull_cleanup);
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    Py_XDECREF(var_list_p);
    var_list_p = NULL;

    Py_XDECREF(var_list_miss);
    var_list_miss = NULL;

    Py_XDECREF(var_start_miss);
    var_start_miss = NULL;

    Py_XDECREF(var_start_p0);
    var_start_p0 = NULL;

    Py_XDECREF(var_list_f);
    var_list_f = NULL;

    Py_XDECREF(var_op_proc);
    var_op_proc = NULL;

    Py_XDECREF(var_start_alo);
    var_start_alo = NULL;

    Py_XDECREF(var_start_na);
    var_start_na = NULL;

    Py_XDECREF(var_usb_f);
    var_usb_f = NULL;

    Py_XDECREF(var_res_sum);
    var_res_sum = NULL;

    Py_XDECREF(var_usb_fail);
    var_usb_fail = NULL;

    Py_XDECREF(var_list_to);
    var_list_to = NULL;

    Py_XDECREF(var_list_nat);
    var_list_nat = NULL;

    CHECK_OBJECT((PyObject *)var_elapsed_time);
    Py_DECREF(var_elapsed_time);
    var_elapsed_time = NULL;

    Py_XDECREF(var_start);
    var_start = NULL;

    Py_XDECREF(var_start_f0);
    var_start_f0 = NULL;

    Py_XDECREF(var_liststr);
    var_liststr = NULL;

    Py_XDECREF(var_list_alo);
    var_list_alo = NULL;

    Py_XDECREF(var_start_nat);
    var_start_nat = NULL;

    Py_XDECREF(var_start_f);
    var_start_f = NULL;

    Py_XDECREF(var_list_f0);
    var_list_f0 = NULL;

    Py_XDECREF(var_start_to);
    var_start_to = NULL;

    Py_XDECREF(var_y);
    var_y = NULL;

    Py_XDECREF(var_pv);
    var_pv = NULL;

    Py_XDECREF(var_fn);
    var_fn = NULL;

    Py_XDECREF(var_count);
    var_count = NULL;

    Py_XDECREF(var_f);
    var_f = NULL;

    Py_XDECREF(var_d);
    var_d = NULL;

    Py_XDECREF(var_i);
    var_i = NULL;

    Py_XDECREF(var_j);
    var_j = NULL;

    Py_XDECREF(var_p);
    var_p = NULL;

    Py_XDECREF(var_act_idx);
    var_act_idx = NULL;

    Py_XDECREF(var_start_p);
    var_start_p = NULL;

    Py_XDECREF(var_list_na);
    var_list_na = NULL;

    Py_XDECREF(var_list_p0);
    var_list_p0 = NULL;

    Py_XDECREF(var_z);
    var_z = NULL;

    CHECK_OBJECT((PyObject *)var_curr_time);
    Py_DECREF(var_curr_time);
    var_curr_time = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_12 = exception_type;
    exception_keeper_value_12 = exception_value;
    exception_keeper_tb_12 = exception_tb;
    exception_keeper_lineno_12 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_list_p);
    var_list_p = NULL;

    Py_XDECREF(var_list_miss);
    var_list_miss = NULL;

    Py_XDECREF(var_start_miss);
    var_start_miss = NULL;

    Py_XDECREF(var_start_p0);
    var_start_p0 = NULL;

    Py_XDECREF(var_list_f);
    var_list_f = NULL;

    Py_XDECREF(var_op_proc);
    var_op_proc = NULL;

    Py_XDECREF(var_start_alo);
    var_start_alo = NULL;

    Py_XDECREF(var_start_na);
    var_start_na = NULL;

    Py_XDECREF(var_usb_f);
    var_usb_f = NULL;

    Py_XDECREF(var_res_sum);
    var_res_sum = NULL;

    Py_XDECREF(var_usb_fail);
    var_usb_fail = NULL;

    Py_XDECREF(var_list_to);
    var_list_to = NULL;

    Py_XDECREF(var_list_nat);
    var_list_nat = NULL;

    Py_XDECREF(var_elapsed_time);
    var_elapsed_time = NULL;

    Py_XDECREF(var_start);
    var_start = NULL;

    Py_XDECREF(var_start_f0);
    var_start_f0 = NULL;

    Py_XDECREF(var_liststr);
    var_liststr = NULL;

    Py_XDECREF(var_list_alo);
    var_list_alo = NULL;

    Py_XDECREF(var_start_nat);
    var_start_nat = NULL;

    Py_XDECREF(var_start_f);
    var_start_f = NULL;

    Py_XDECREF(var_list_f0);
    var_list_f0 = NULL;

    Py_XDECREF(var_start_to);
    var_start_to = NULL;

    Py_XDECREF(var_y);
    var_y = NULL;

    Py_XDECREF(var_pv);
    var_pv = NULL;

    Py_XDECREF(var_fn);
    var_fn = NULL;

    Py_XDECREF(var_count);
    var_count = NULL;

    Py_XDECREF(var_f);
    var_f = NULL;

    Py_XDECREF(var_d);
    var_d = NULL;

    Py_XDECREF(var_i);
    var_i = NULL;

    Py_XDECREF(var_j);
    var_j = NULL;

    Py_XDECREF(var_p);
    var_p = NULL;

    Py_XDECREF(var_act_idx);
    var_act_idx = NULL;

    Py_XDECREF(var_start_p);
    var_start_p = NULL;

    Py_XDECREF(var_list_na);
    var_list_na = NULL;

    Py_XDECREF(var_list_p0);
    var_list_p0 = NULL;

    Py_XDECREF(var_z);
    var_z = NULL;

    Py_XDECREF(var_curr_time);
    var_curr_time = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_12;
    exception_value = exception_keeper_value_12;
    exception_tb = exception_keeper_tb_12;
    exception_lineno = exception_keeper_lineno_12;

    goto function_exception_exit;
    // End of try:

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(cleanop$$$function_2_setupFull_cleanup);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_res_list);
    Py_DECREF(par_res_list);
    CHECK_OBJECT(par_selected_list);
    Py_DECREF(par_selected_list);
    CHECK_OBJECT(par_trylimit_list);
    Py_DECREF(par_trylimit_list);
    CHECK_OBJECT(par_rescan_needed);
    Py_DECREF(par_rescan_needed);
    CHECK_OBJECT(par_e_to);
    Py_DECREF(par_e_to);
    CHECK_OBJECT(par_start_time);
    Py_DECREF(par_start_time);
    CHECK_OBJECT(par_op_procs);
    Py_DECREF(par_op_procs);
    CHECK_OBJECT(par_status_usb);
    Py_DECREF(par_status_usb);
    CHECK_OBJECT(par_rc_list);
    Py_DECREF(par_rc_list);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);
    CHECK_OBJECT(par_max_time);
    Py_DECREF(par_max_time);
    CHECK_OBJECT(par_status_list);
    Py_DECREF(par_status_list);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_res_list);
    Py_DECREF(par_res_list);
    CHECK_OBJECT(par_selected_list);
    Py_DECREF(par_selected_list);
    CHECK_OBJECT(par_trylimit_list);
    Py_DECREF(par_trylimit_list);
    CHECK_OBJECT(par_rescan_needed);
    Py_DECREF(par_rescan_needed);
    CHECK_OBJECT(par_e_to);
    Py_DECREF(par_e_to);
    CHECK_OBJECT(par_start_time);
    Py_DECREF(par_start_time);
    CHECK_OBJECT(par_op_procs);
    Py_DECREF(par_op_procs);
    CHECK_OBJECT(par_status_usb);
    Py_DECREF(par_status_usb);
    CHECK_OBJECT(par_rc_list);
    Py_DECREF(par_rc_list);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);
    CHECK_OBJECT(par_max_time);
    Py_DECREF(par_max_time);
    CHECK_OBJECT(par_status_list);
    Py_DECREF(par_status_list);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_cleanop$$$function_3_pbaWrite_cleanup(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_ui = python_pars[0];
    PyObject *par_max_time = python_pars[1];
    PyObject *par_start_time = python_pars[2];
    PyObject *par_op_threads = python_pars[3];
    PyObject *par_res_list = python_pars[4];
    PyObject *par_e_to = python_pars[5];
    PyObject *par_selected_list = python_pars[6];
    PyObject *par_status_list = python_pars[7];
    PyObject *par_rescan_needed = python_pars[8];
    PyObject *par_val2 = python_pars[9];
    PyObject *par_val3 = python_pars[10];
    PyObject *par_val4 = python_pars[11];
    PyObject *var_list_p = NULL;
    PyObject *var_list_miss = NULL;
    PyObject *var_list_alo = NULL;
    PyObject *var_start_miss = NULL;
    PyObject *var_list_f = NULL;
    PyObject *var_start_alo = NULL;
    PyObject *var_start_na = NULL;
    PyObject *var_pv = NULL;
    PyObject *var_res_sum = NULL;
    PyObject *var_list_to = NULL;
    PyObject *var_elapsed_time = NULL;
    PyObject *var_start = NULL;
    PyObject *var_liststr = NULL;
    PyObject *var_count_f = NULL;
    PyObject *var_start_f = NULL;
    PyObject *var_list_spb = NULL;
    PyObject *var_start_to = NULL;
    PyObject *var_op_thread = NULL;
    PyObject *var_sf_txt = NULL;
    PyObject *var_last_f = NULL;
    PyObject *var_count = NULL;
    PyObject *var_d = NULL;
    PyObject *var_f = NULL;
    PyObject *var_i = NULL;
    PyObject *var_j = NULL;
    PyObject *var_start_spb = NULL;
    PyObject *var_p = NULL;
    PyObject *var_act_idx = NULL;
    PyObject *var_start_p = NULL;
    PyObject *var_list_na = NULL;
    PyObject *var_y = NULL;
    PyObject *var_save_fail = NULL;
    PyObject *var_curr_time = NULL;
    PyObject *tmp_for_loop_1__for_iterator = NULL;
    PyObject *tmp_for_loop_1__iter_value = NULL;
    PyObject *tmp_for_loop_2__for_iterator = NULL;
    PyObject *tmp_for_loop_2__iter_value = NULL;
    PyObject *tmp_for_loop_3__for_iterator = NULL;
    PyObject *tmp_for_loop_3__iter_value = NULL;
    PyObject *tmp_for_loop_4__for_iterator = NULL;
    PyObject *tmp_for_loop_4__iter_value = NULL;
    PyObject *tmp_for_loop_5__for_iterator = NULL;
    PyObject *tmp_for_loop_5__iter_value = NULL;
    PyObject *tmp_for_loop_6__for_iterator = NULL;
    PyObject *tmp_for_loop_6__iter_value = NULL;
    PyObject *tmp_for_loop_7__for_iterator = NULL;
    PyObject *tmp_for_loop_7__iter_value = NULL;
    struct Nuitka_FrameObject *frame_18a0298f42cb14be9dbbaaa3575f4d00;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    bool tmp_result;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;
    PyObject *exception_keeper_type_3;
    PyObject *exception_keeper_value_3;
    PyTracebackObject *exception_keeper_tb_3;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_3;
    PyObject *exception_keeper_type_4;
    PyObject *exception_keeper_value_4;
    PyTracebackObject *exception_keeper_tb_4;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_4;
    PyObject *exception_keeper_type_5;
    PyObject *exception_keeper_value_5;
    PyTracebackObject *exception_keeper_tb_5;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_5;
    PyObject *exception_keeper_type_6;
    PyObject *exception_keeper_value_6;
    PyTracebackObject *exception_keeper_tb_6;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_6;
    PyObject *tmp_print_value;
    PyObject *exception_keeper_type_7;
    PyObject *exception_keeper_value_7;
    PyTracebackObject *exception_keeper_tb_7;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_7;
    PyObject *exception_keeper_type_8;
    PyObject *exception_keeper_value_8;
    PyTracebackObject *exception_keeper_tb_8;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_8;
    PyObject *exception_keeper_type_9;
    PyObject *exception_keeper_value_9;
    PyTracebackObject *exception_keeper_tb_9;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_9;
    static struct Nuitka_FrameObject *cache_frame_18a0298f42cb14be9dbbaaa3575f4d00 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_keeper_type_10;
    PyObject *exception_keeper_value_10;
    PyTracebackObject *exception_keeper_tb_10;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_10;

    // Actual function body.
    // Tried code:
    MAKE_OR_REUSE_FRAME(cache_frame_18a0298f42cb14be9dbbaaa3575f4d00, codeobj_18a0298f42cb14be9dbbaaa3575f4d00, module_cleanop, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
    frame_18a0298f42cb14be9dbbaaa3575f4d00 = cache_frame_18a0298f42cb14be9dbbaaa3575f4d00;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_18a0298f42cb14be9dbbaaa3575f4d00);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_18a0298f42cb14be9dbbaaa3575f4d00) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_called_instance_1;
        PyObject *tmp_mvar_value_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_time);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_time);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1164 ], 33, 0);
            exception_tb = NULL;

            exception_lineno = 300;
            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_1 = tmp_mvar_value_1;
        frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 300;
        tmp_assign_source_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_1, const_str_plain_time);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 300;
            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_curr_time == NULL);
        var_curr_time = tmp_assign_source_1;
    }
    {
        PyObject *tmp_assign_source_2;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        CHECK_OBJECT(var_curr_time);
        tmp_left_name_1 = var_curr_time;
        CHECK_OBJECT(par_start_time);
        tmp_right_name_1 = par_start_time;
        tmp_assign_source_2 = BINARY_OPERATION_SUB_OBJECT_OBJECT(tmp_left_name_1, tmp_right_name_1);
        if (tmp_assign_source_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 301;
            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_elapsed_time == NULL);
        var_elapsed_time = tmp_assign_source_2;
    }
    {
        nuitka_bool tmp_condition_result_1;
        PyObject *tmp_compexpr_left_1;
        PyObject *tmp_compexpr_right_1;
        CHECK_OBJECT(var_elapsed_time);
        tmp_compexpr_left_1 = var_elapsed_time;
        CHECK_OBJECT(par_max_time);
        tmp_compexpr_right_1 = par_max_time;
        tmp_res = RICH_COMPARE_BOOL_GTE_OBJECT_OBJECT(tmp_compexpr_left_1, tmp_compexpr_right_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 302;
            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        {
            PyObject *tmp_called_instance_2;
            PyObject *tmp_call_result_1;
            CHECK_OBJECT(par_e_to);
            tmp_called_instance_2 = par_e_to;
            frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 303;
            tmp_call_result_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_2, const_str_plain_set);
            if (tmp_call_result_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 303;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_1);
        }
        {
            PyObject *tmp_assign_source_3;
            PyObject *tmp_iter_arg_1;
            CHECK_OBJECT(par_op_threads);
            tmp_iter_arg_1 = par_op_threads;
            tmp_assign_source_3 = MAKE_ITERATOR(tmp_iter_arg_1);
            if (tmp_assign_source_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 304;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_1__for_iterator == NULL);
            tmp_for_loop_1__for_iterator = tmp_assign_source_3;
        }
        // Tried code:
        loop_start_1:;
        {
            PyObject *tmp_next_source_1;
            PyObject *tmp_assign_source_4;
            CHECK_OBJECT(tmp_for_loop_1__for_iterator);
            tmp_next_source_1 = tmp_for_loop_1__for_iterator;
            tmp_assign_source_4 = ITERATOR_NEXT(tmp_next_source_1);
            if (tmp_assign_source_4 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_1;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    exception_lineno = 304;
                    goto try_except_handler_2;
                }
            }

            {
                PyObject *old = tmp_for_loop_1__iter_value;
                tmp_for_loop_1__iter_value = tmp_assign_source_4;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_5;
            CHECK_OBJECT(tmp_for_loop_1__iter_value);
            tmp_assign_source_5 = tmp_for_loop_1__iter_value;
            {
                PyObject *old = var_op_thread;
                var_op_thread = tmp_assign_source_5;
                Py_INCREF(var_op_thread);
                Py_XDECREF(old);
            }

        }
        {
            nuitka_bool tmp_condition_result_2;
            PyObject *tmp_called_instance_3;
            PyObject *tmp_call_result_2;
            int tmp_truth_name_1;
            CHECK_OBJECT(var_op_thread);
            tmp_called_instance_3 = var_op_thread;
            frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 305;
            tmp_call_result_2 = CALL_METHOD_NO_ARGS(tmp_called_instance_3, const_str_plain_is_alive);
            if (tmp_call_result_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 305;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_2;
            }
            tmp_truth_name_1 = CHECK_IF_TRUE(tmp_call_result_2);
            if (tmp_truth_name_1 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_call_result_2);

                exception_lineno = 305;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_2;
            }
            tmp_condition_result_2 = tmp_truth_name_1 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            Py_DECREF(tmp_call_result_2);
            if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
                goto branch_yes_2;
            } else {
                goto branch_no_2;
            }
            branch_yes_2:;
            {
                nuitka_bool tmp_condition_result_3;
                PyObject *tmp_compexpr_left_2;
                PyObject *tmp_compexpr_right_2;
                PyObject *tmp_source_name_1;
                CHECK_OBJECT(par_ui);
                tmp_source_name_1 = par_ui;
                tmp_compexpr_left_2 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_process);
                if (tmp_compexpr_left_2 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 306;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_2;
                }
                tmp_compexpr_right_2 = Py_None;
                tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_2, tmp_compexpr_right_2);
                Py_DECREF(tmp_compexpr_left_2);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 306;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_2;
                }
                tmp_condition_result_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_3 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_3;
                } else {
                    goto branch_no_3;
                }
                branch_yes_3:;
                {
                    PyObject *tmp_called_instance_4;
                    PyObject *tmp_source_name_2;
                    PyObject *tmp_call_result_3;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_2 = par_ui;
                    tmp_called_instance_4 = LOOKUP_ATTRIBUTE(tmp_source_name_2, const_str_plain_process);
                    if (tmp_called_instance_4 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 307;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_2;
                    }
                    frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 307;
                    tmp_call_result_3 = CALL_METHOD_NO_ARGS(tmp_called_instance_4, const_str_plain_terminate);
                    Py_DECREF(tmp_called_instance_4);
                    if (tmp_call_result_3 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 307;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_2;
                    }
                    Py_DECREF(tmp_call_result_3);
                }
                {
                    PyObject *tmp_assattr_name_1;
                    PyObject *tmp_assattr_target_1;
                    tmp_assattr_name_1 = Py_None;
                    CHECK_OBJECT(par_ui);
                    tmp_assattr_target_1 = par_ui;
                    tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, const_str_plain_process, tmp_assattr_name_1);
                    if (tmp_result == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 308;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_2;
                    }
                }
                goto branch_end_3;
                branch_no_3:;
                {
                    nuitka_bool tmp_condition_result_4;
                    PyObject *tmp_compexpr_left_3;
                    PyObject *tmp_compexpr_right_3;
                    PyObject *tmp_source_name_3;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_3 = par_ui;
                    tmp_compexpr_left_3 = LOOKUP_ATTRIBUTE(tmp_source_name_3, const_str_plain_process_list);
                    if (tmp_compexpr_left_3 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 309;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_2;
                    }
                    tmp_compexpr_right_3 = PyList_New(0);
                    tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_3, tmp_compexpr_right_3);
                    Py_DECREF(tmp_compexpr_left_3);
                    Py_DECREF(tmp_compexpr_right_3);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 309;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_2;
                    }
                    tmp_condition_result_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_4 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_4;
                    } else {
                        goto branch_no_4;
                    }
                    branch_yes_4:;
                    {
                        PyObject *tmp_assign_source_6;
                        tmp_assign_source_6 = const_int_0;
                        {
                            PyObject *old = var_i;
                            var_i = tmp_assign_source_6;
                            Py_INCREF(var_i);
                            Py_XDECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assign_source_7;
                        PyObject *tmp_iter_arg_2;
                        PyObject *tmp_source_name_4;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_4 = par_ui;
                        tmp_iter_arg_2 = LOOKUP_ATTRIBUTE(tmp_source_name_4, const_str_plain_process_list);
                        if (tmp_iter_arg_2 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 311;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_2;
                        }
                        tmp_assign_source_7 = MAKE_ITERATOR(tmp_iter_arg_2);
                        Py_DECREF(tmp_iter_arg_2);
                        if (tmp_assign_source_7 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 311;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_2;
                        }
                        {
                            PyObject *old = tmp_for_loop_2__for_iterator;
                            tmp_for_loop_2__for_iterator = tmp_assign_source_7;
                            Py_XDECREF(old);
                        }

                    }
                    // Tried code:
                    loop_start_2:;
                    {
                        PyObject *tmp_next_source_2;
                        PyObject *tmp_assign_source_8;
                        CHECK_OBJECT(tmp_for_loop_2__for_iterator);
                        tmp_next_source_2 = tmp_for_loop_2__for_iterator;
                        tmp_assign_source_8 = ITERATOR_NEXT(tmp_next_source_2);
                        if (tmp_assign_source_8 == NULL) {
                            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                                goto loop_end_2;
                            } else {

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                exception_lineno = 311;
                                goto try_except_handler_3;
                            }
                        }

                        {
                            PyObject *old = tmp_for_loop_2__iter_value;
                            tmp_for_loop_2__iter_value = tmp_assign_source_8;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assign_source_9;
                        CHECK_OBJECT(tmp_for_loop_2__iter_value);
                        tmp_assign_source_9 = tmp_for_loop_2__iter_value;
                        {
                            PyObject *old = var_p;
                            var_p = tmp_assign_source_9;
                            Py_INCREF(var_p);
                            Py_XDECREF(old);
                        }

                    }
                    {
                        nuitka_bool tmp_condition_result_5;
                        PyObject *tmp_compexpr_left_4;
                        PyObject *tmp_compexpr_right_4;
                        CHECK_OBJECT(var_p);
                        tmp_compexpr_left_4 = var_p;
                        tmp_compexpr_right_4 = Py_None;
                        tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_4, tmp_compexpr_right_4);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 312;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_3;
                        }
                        tmp_condition_result_5 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_5 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_5;
                        } else {
                            goto branch_no_5;
                        }
                        branch_yes_5:;
                        {
                            PyObject *tmp_called_instance_5;
                            PyObject *tmp_call_result_4;
                            CHECK_OBJECT(var_p);
                            tmp_called_instance_5 = var_p;
                            frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 313;
                            tmp_call_result_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_5, const_str_plain_terminate);
                            if (tmp_call_result_4 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 313;
                                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_3;
                            }
                            Py_DECREF(tmp_call_result_4);
                        }
                        {
                            PyObject *tmp_assign_source_10;
                            tmp_assign_source_10 = Py_None;
                            {
                                PyObject *old = var_p;
                                assert(old != NULL);
                                var_p = tmp_assign_source_10;
                                Py_INCREF(var_p);
                                Py_DECREF(old);
                            }

                        }
                        {
                            PyObject *tmp_ass_subvalue_1;
                            PyObject *tmp_ass_subscribed_1;
                            PyObject *tmp_ass_subscript_1;
                            tmp_ass_subvalue_1 = const_int_pos_1;
                            CHECK_OBJECT(par_res_list);
                            tmp_ass_subscribed_1 = par_res_list;
                            CHECK_OBJECT(var_i);
                            tmp_ass_subscript_1 = var_i;
                            tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_1, tmp_ass_subscript_1, tmp_ass_subvalue_1);
                            if (tmp_result == false) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 315;
                                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_3;
                            }
                        }
                        branch_no_5:;
                    }
                    {
                        PyObject *tmp_assign_source_11;
                        PyObject *tmp_left_name_2;
                        PyObject *tmp_right_name_2;
                        CHECK_OBJECT(var_i);
                        tmp_left_name_2 = var_i;
                        tmp_right_name_2 = const_int_pos_1;
                        tmp_assign_source_11 = BINARY_OPERATION_ADD_OBJECT_INT(tmp_left_name_2, tmp_right_name_2);
                        assert(!(tmp_assign_source_11 == NULL));
                        {
                            PyObject *old = var_i;
                            assert(old != NULL);
                            var_i = tmp_assign_source_11;
                            Py_DECREF(old);
                        }

                    }
                    if (CONSIDER_THREADING() == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 311;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_3;
                    }
                    goto loop_start_2;
                    loop_end_2:;
                    goto try_end_1;
                    // Exception handler code:
                    try_except_handler_3:;
                    exception_keeper_type_1 = exception_type;
                    exception_keeper_value_1 = exception_value;
                    exception_keeper_tb_1 = exception_tb;
                    exception_keeper_lineno_1 = exception_lineno;
                    exception_type = NULL;
                    exception_value = NULL;
                    exception_tb = NULL;
                    exception_lineno = 0;

                    Py_XDECREF(tmp_for_loop_2__iter_value);
                    tmp_for_loop_2__iter_value = NULL;

                    CHECK_OBJECT((PyObject *)tmp_for_loop_2__for_iterator);
                    Py_DECREF(tmp_for_loop_2__for_iterator);
                    tmp_for_loop_2__for_iterator = NULL;

                    // Re-raise.
                    exception_type = exception_keeper_type_1;
                    exception_value = exception_keeper_value_1;
                    exception_tb = exception_keeper_tb_1;
                    exception_lineno = exception_keeper_lineno_1;

                    goto try_except_handler_2;
                    // End of try:
                    try_end_1:;
                    Py_XDECREF(tmp_for_loop_2__iter_value);
                    tmp_for_loop_2__iter_value = NULL;

                    CHECK_OBJECT((PyObject *)tmp_for_loop_2__for_iterator);
                    Py_DECREF(tmp_for_loop_2__for_iterator);
                    tmp_for_loop_2__for_iterator = NULL;

                    {
                        PyObject *tmp_assattr_name_2;
                        PyObject *tmp_assattr_target_2;
                        tmp_assattr_name_2 = PyList_New(0);
                        CHECK_OBJECT(par_ui);
                        tmp_assattr_target_2 = par_ui;
                        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_2, const_str_plain_process_list, tmp_assattr_name_2);
                        Py_DECREF(tmp_assattr_name_2);
                        if (tmp_result == false) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 317;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_2;
                        }
                    }
                    branch_no_4:;
                }
                branch_end_3:;
            }
            {
                PyObject *tmp_called_instance_6;
                PyObject *tmp_call_result_5;
                CHECK_OBJECT(var_op_thread);
                tmp_called_instance_6 = var_op_thread;
                frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 318;
                tmp_call_result_5 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_6, const_str_plain_join, &PyTuple_GET_ITEM(const_tuple_float_0_0_tuple, 0));

                if (tmp_call_result_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 318;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_2;
                }
                Py_DECREF(tmp_call_result_5);
            }
            branch_no_2:;
        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 304;
            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
            goto try_except_handler_2;
        }
        goto loop_start_1;
        loop_end_1:;
        goto try_end_2;
        // Exception handler code:
        try_except_handler_2:;
        exception_keeper_type_2 = exception_type;
        exception_keeper_value_2 = exception_value;
        exception_keeper_tb_2 = exception_tb;
        exception_keeper_lineno_2 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_1__iter_value);
        tmp_for_loop_1__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_1__for_iterator);
        Py_DECREF(tmp_for_loop_1__for_iterator);
        tmp_for_loop_1__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_2;
        exception_value = exception_keeper_value_2;
        exception_tb = exception_keeper_tb_2;
        exception_lineno = exception_keeper_lineno_2;

        goto frame_exception_exit_1;
        // End of try:
        try_end_2:;
        Py_XDECREF(tmp_for_loop_1__iter_value);
        tmp_for_loop_1__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_1__for_iterator);
        Py_DECREF(tmp_for_loop_1__for_iterator);
        tmp_for_loop_1__for_iterator = NULL;

        branch_no_1:;
    }
    {
        PyObject *tmp_assattr_name_3;
        PyObject *tmp_assattr_target_3;
        tmp_assattr_name_3 = Py_False;
        CHECK_OBJECT(par_ui);
        tmp_assattr_target_3 = par_ui;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_3, const_str_plain_op_inprogress, tmp_assattr_name_3);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 320;
            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
    }
    {
        PyObject *tmp_assattr_name_4;
        PyObject *tmp_assattr_target_4;
        tmp_assattr_name_4 = Py_False;
        CHECK_OBJECT(par_ui);
        tmp_assattr_target_4 = par_ui;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_4, const_str_plain_pbawrite_ip, tmp_assattr_name_4);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 321;
            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
    }
    {
        PyObject *tmp_assign_source_12;
        tmp_assign_source_12 = PyList_New(0);
        assert(var_save_fail == NULL);
        var_save_fail = tmp_assign_source_12;
    }
    {
        PyObject *tmp_assign_source_13;
        PyObject *tmp_iter_arg_3;
        PyObject *tmp_range_arg_1;
        PyObject *tmp_len_arg_1;
        CHECK_OBJECT(par_res_list);
        tmp_len_arg_1 = par_res_list;
        tmp_range_arg_1 = BUILTIN_LEN(tmp_len_arg_1);
        if (tmp_range_arg_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 323;
            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_iter_arg_3 = BUILTIN_RANGE(tmp_range_arg_1);
        Py_DECREF(tmp_range_arg_1);
        if (tmp_iter_arg_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 323;
            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_13 = MAKE_ITERATOR(tmp_iter_arg_3);
        Py_DECREF(tmp_iter_arg_3);
        if (tmp_assign_source_13 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 323;
            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_3__for_iterator == NULL);
        tmp_for_loop_3__for_iterator = tmp_assign_source_13;
    }
    // Tried code:
    loop_start_3:;
    {
        PyObject *tmp_next_source_3;
        PyObject *tmp_assign_source_14;
        CHECK_OBJECT(tmp_for_loop_3__for_iterator);
        tmp_next_source_3 = tmp_for_loop_3__for_iterator;
        tmp_assign_source_14 = ITERATOR_NEXT(tmp_next_source_3);
        if (tmp_assign_source_14 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_3;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                exception_lineno = 323;
                goto try_except_handler_4;
            }
        }

        {
            PyObject *old = tmp_for_loop_3__iter_value;
            tmp_for_loop_3__iter_value = tmp_assign_source_14;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_15;
        CHECK_OBJECT(tmp_for_loop_3__iter_value);
        tmp_assign_source_15 = tmp_for_loop_3__iter_value;
        {
            PyObject *old = var_i;
            var_i = tmp_assign_source_15;
            Py_INCREF(var_i);
            Py_XDECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_6;
        PyObject *tmp_compexpr_left_5;
        PyObject *tmp_compexpr_right_5;
        PyObject *tmp_subscribed_name_1;
        PyObject *tmp_subscript_name_1;
        CHECK_OBJECT(par_res_list);
        tmp_subscribed_name_1 = par_res_list;
        CHECK_OBJECT(var_i);
        tmp_subscript_name_1 = var_i;
        tmp_compexpr_left_5 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_1, tmp_subscript_name_1);
        if (tmp_compexpr_left_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 324;
            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
            goto try_except_handler_4;
        }
        tmp_compexpr_right_5 = const_int_neg_1;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_5, tmp_compexpr_right_5);
        Py_DECREF(tmp_compexpr_left_5);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 324;
            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
            goto try_except_handler_4;
        }
        tmp_condition_result_6 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_6 == NUITKA_BOOL_TRUE) {
            goto branch_yes_6;
        } else {
            goto branch_no_6;
        }
        branch_yes_6:;
        {
            nuitka_bool tmp_condition_result_7;
            PyObject *tmp_called_instance_7;
            PyObject *tmp_call_result_6;
            int tmp_truth_name_2;
            CHECK_OBJECT(par_e_to);
            tmp_called_instance_7 = par_e_to;
            frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 325;
            tmp_call_result_6 = CALL_METHOD_NO_ARGS(tmp_called_instance_7, const_str_plain_is_set);
            if (tmp_call_result_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 325;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_4;
            }
            tmp_truth_name_2 = CHECK_IF_TRUE(tmp_call_result_6);
            if (tmp_truth_name_2 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_call_result_6);

                exception_lineno = 325;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_4;
            }
            tmp_condition_result_7 = tmp_truth_name_2 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            Py_DECREF(tmp_call_result_6);
            if (tmp_condition_result_7 == NUITKA_BOOL_TRUE) {
                goto branch_yes_7;
            } else {
                goto branch_no_7;
            }
            branch_yes_7:;
            {
                PyObject *tmp_ass_subvalue_2;
                PyObject *tmp_ass_subscribed_2;
                PyObject *tmp_ass_subscript_2;
                tmp_ass_subvalue_2 = const_int_pos_2;
                CHECK_OBJECT(par_res_list);
                tmp_ass_subscribed_2 = par_res_list;
                CHECK_OBJECT(var_i);
                tmp_ass_subscript_2 = var_i;
                tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_2, tmp_ass_subscript_2, tmp_ass_subvalue_2);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 326;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_4;
                }
            }
            goto branch_end_7;
            branch_no_7:;
            {
                PyObject *tmp_ass_subvalue_3;
                PyObject *tmp_ass_subscribed_3;
                PyObject *tmp_ass_subscript_3;
                tmp_ass_subvalue_3 = const_int_pos_3;
                CHECK_OBJECT(par_res_list);
                tmp_ass_subscribed_3 = par_res_list;
                CHECK_OBJECT(var_i);
                tmp_ass_subscript_3 = var_i;
                tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_3, tmp_ass_subscript_3, tmp_ass_subvalue_3);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 328;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_4;
                }
            }
            branch_end_7:;
        }
        goto branch_end_6;
        branch_no_6:;
        {
            nuitka_bool tmp_condition_result_8;
            PyObject *tmp_compexpr_left_6;
            PyObject *tmp_compexpr_right_6;
            PyObject *tmp_subscribed_name_2;
            PyObject *tmp_subscript_name_2;
            CHECK_OBJECT(par_res_list);
            tmp_subscribed_name_2 = par_res_list;
            CHECK_OBJECT(var_i);
            tmp_subscript_name_2 = var_i;
            tmp_compexpr_left_6 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_2, tmp_subscript_name_2);
            if (tmp_compexpr_left_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 329;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_4;
            }
            tmp_compexpr_right_6 = const_int_pos_5;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_6, tmp_compexpr_right_6);
            Py_DECREF(tmp_compexpr_left_6);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 329;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_4;
            }
            tmp_condition_result_8 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_8 == NUITKA_BOOL_TRUE) {
                goto branch_yes_8;
            } else {
                goto branch_no_8;
            }
            branch_yes_8:;
            {
                PyObject *tmp_called_instance_8;
                PyObject *tmp_call_result_7;
                PyObject *tmp_args_element_name_1;
                CHECK_OBJECT(var_save_fail);
                tmp_called_instance_8 = var_save_fail;
                CHECK_OBJECT(var_i);
                tmp_args_element_name_1 = var_i;
                frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 330;
                {
                    PyObject *call_args[] = {tmp_args_element_name_1};
                    tmp_call_result_7 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_8, const_str_plain_append, call_args);
                }

                if (tmp_call_result_7 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 330;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_4;
                }
                Py_DECREF(tmp_call_result_7);
            }
            {
                PyObject *tmp_ass_subvalue_4;
                PyObject *tmp_ass_subscribed_4;
                PyObject *tmp_ass_subscript_4;
                tmp_ass_subvalue_4 = const_int_0;
                CHECK_OBJECT(par_res_list);
                tmp_ass_subscribed_4 = par_res_list;
                CHECK_OBJECT(var_i);
                tmp_ass_subscript_4 = var_i;
                tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_4, tmp_ass_subscript_4, tmp_ass_subvalue_4);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 331;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_4;
                }
            }
            branch_no_8:;
        }
        branch_end_6:;
    }
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 323;
        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
        goto try_except_handler_4;
    }
    goto loop_start_3;
    loop_end_3:;
    goto try_end_3;
    // Exception handler code:
    try_except_handler_4:;
    exception_keeper_type_3 = exception_type;
    exception_keeper_value_3 = exception_value;
    exception_keeper_tb_3 = exception_tb;
    exception_keeper_lineno_3 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_3__iter_value);
    tmp_for_loop_3__iter_value = NULL;

    CHECK_OBJECT((PyObject *)tmp_for_loop_3__for_iterator);
    Py_DECREF(tmp_for_loop_3__for_iterator);
    tmp_for_loop_3__for_iterator = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_3;
    exception_value = exception_keeper_value_3;
    exception_tb = exception_keeper_tb_3;
    exception_lineno = exception_keeper_lineno_3;

    goto frame_exception_exit_1;
    // End of try:
    try_end_3:;
    Py_XDECREF(tmp_for_loop_3__iter_value);
    tmp_for_loop_3__iter_value = NULL;

    CHECK_OBJECT((PyObject *)tmp_for_loop_3__for_iterator);
    Py_DECREF(tmp_for_loop_3__for_iterator);
    tmp_for_loop_3__for_iterator = NULL;

    {
        PyObject *tmp_assign_source_16;
        PyObject *tmp_iter_arg_4;
        PyObject *tmp_range_arg_2;
        PyObject *tmp_len_arg_2;
        PyObject *tmp_source_name_5;
        CHECK_OBJECT(par_ui);
        tmp_source_name_5 = par_ui;
        tmp_len_arg_2 = LOOKUP_ATTRIBUTE(tmp_source_name_5, const_str_plain_devs_list);
        if (tmp_len_arg_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 333;
            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_range_arg_2 = BUILTIN_LEN(tmp_len_arg_2);
        Py_DECREF(tmp_len_arg_2);
        if (tmp_range_arg_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 333;
            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_iter_arg_4 = BUILTIN_RANGE(tmp_range_arg_2);
        Py_DECREF(tmp_range_arg_2);
        if (tmp_iter_arg_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 333;
            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_16 = MAKE_ITERATOR(tmp_iter_arg_4);
        Py_DECREF(tmp_iter_arg_4);
        if (tmp_assign_source_16 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 333;
            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_4__for_iterator == NULL);
        tmp_for_loop_4__for_iterator = tmp_assign_source_16;
    }
    // Tried code:
    loop_start_4:;
    {
        PyObject *tmp_next_source_4;
        PyObject *tmp_assign_source_17;
        CHECK_OBJECT(tmp_for_loop_4__for_iterator);
        tmp_next_source_4 = tmp_for_loop_4__for_iterator;
        tmp_assign_source_17 = ITERATOR_NEXT(tmp_next_source_4);
        if (tmp_assign_source_17 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_4;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                exception_lineno = 333;
                goto try_except_handler_5;
            }
        }

        {
            PyObject *old = tmp_for_loop_4__iter_value;
            tmp_for_loop_4__iter_value = tmp_assign_source_17;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_18;
        CHECK_OBJECT(tmp_for_loop_4__iter_value);
        tmp_assign_source_18 = tmp_for_loop_4__iter_value;
        {
            PyObject *old = var_i;
            var_i = tmp_assign_source_18;
            Py_INCREF(var_i);
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_called_instance_9;
        PyObject *tmp_mvar_value_2;
        PyObject *tmp_call_result_8;
        PyObject *tmp_args_element_name_2;
        tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_runop);

        if (unlikely(tmp_mvar_value_2 == NULL)) {
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runop);
        }

        if (tmp_mvar_value_2 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 490 ], 34, 0);
            exception_tb = NULL;

            exception_lineno = 334;
            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
            goto try_except_handler_5;
        }

        tmp_called_instance_9 = tmp_mvar_value_2;
        CHECK_OBJECT(var_i);
        tmp_args_element_name_2 = var_i;
        frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 334;
        {
            PyObject *call_args[] = {tmp_args_element_name_2};
            tmp_call_result_8 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_9, const_str_plain_postlock, call_args);
        }

        if (tmp_call_result_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 334;
            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
            goto try_except_handler_5;
        }
        Py_DECREF(tmp_call_result_8);
    }
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 333;
        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
        goto try_except_handler_5;
    }
    goto loop_start_4;
    loop_end_4:;
    goto try_end_4;
    // Exception handler code:
    try_except_handler_5:;
    exception_keeper_type_4 = exception_type;
    exception_keeper_value_4 = exception_value;
    exception_keeper_tb_4 = exception_tb;
    exception_keeper_lineno_4 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_4__iter_value);
    tmp_for_loop_4__iter_value = NULL;

    CHECK_OBJECT((PyObject *)tmp_for_loop_4__for_iterator);
    Py_DECREF(tmp_for_loop_4__for_iterator);
    tmp_for_loop_4__for_iterator = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_4;
    exception_value = exception_keeper_value_4;
    exception_tb = exception_keeper_tb_4;
    exception_lineno = exception_keeper_lineno_4;

    goto frame_exception_exit_1;
    // End of try:
    try_end_4:;
    Py_XDECREF(tmp_for_loop_4__iter_value);
    tmp_for_loop_4__iter_value = NULL;

    CHECK_OBJECT((PyObject *)tmp_for_loop_4__for_iterator);
    Py_DECREF(tmp_for_loop_4__for_iterator);
    tmp_for_loop_4__for_iterator = NULL;

    {
        nuitka_bool tmp_condition_result_9;
        PyObject *tmp_compexpr_left_7;
        PyObject *tmp_compexpr_right_7;
        PyObject *tmp_len_arg_3;
        CHECK_OBJECT(var_save_fail);
        tmp_len_arg_3 = var_save_fail;
        tmp_compexpr_left_7 = BUILTIN_LEN(tmp_len_arg_3);
        assert(!(tmp_compexpr_left_7 == NULL));
        tmp_compexpr_right_7 = const_int_0;
        tmp_res = RICH_COMPARE_BOOL_GT_OBJECT_INT(tmp_compexpr_left_7, tmp_compexpr_right_7);
        Py_DECREF(tmp_compexpr_left_7);
        assert(!(tmp_res == -1));
        tmp_condition_result_9 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_9 == NUITKA_BOOL_TRUE) {
            goto branch_yes_9;
        } else {
            goto branch_no_9;
        }
        branch_yes_9:;
        {
            PyObject *tmp_assign_source_19;
            tmp_assign_source_19 = Py_True;
            assert(var_start == NULL);
            Py_INCREF(tmp_assign_source_19);
            var_start = tmp_assign_source_19;
        }
        {
            PyObject *tmp_assign_source_20;
            tmp_assign_source_20 = const_str_empty;
            assert(var_sf_txt == NULL);
            Py_INCREF(tmp_assign_source_20);
            var_sf_txt = tmp_assign_source_20;
        }
        {
            PyObject *tmp_assign_source_21;
            PyObject *tmp_iter_arg_5;
            CHECK_OBJECT(var_save_fail);
            tmp_iter_arg_5 = var_save_fail;
            tmp_assign_source_21 = MAKE_ITERATOR(tmp_iter_arg_5);
            if (tmp_assign_source_21 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 339;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_5__for_iterator == NULL);
            tmp_for_loop_5__for_iterator = tmp_assign_source_21;
        }
        // Tried code:
        loop_start_5:;
        {
            PyObject *tmp_next_source_5;
            PyObject *tmp_assign_source_22;
            CHECK_OBJECT(tmp_for_loop_5__for_iterator);
            tmp_next_source_5 = tmp_for_loop_5__for_iterator;
            tmp_assign_source_22 = ITERATOR_NEXT(tmp_next_source_5);
            if (tmp_assign_source_22 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_5;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    exception_lineno = 339;
                    goto try_except_handler_6;
                }
            }

            {
                PyObject *old = tmp_for_loop_5__iter_value;
                tmp_for_loop_5__iter_value = tmp_assign_source_22;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_23;
            CHECK_OBJECT(tmp_for_loop_5__iter_value);
            tmp_assign_source_23 = tmp_for_loop_5__iter_value;
            {
                PyObject *old = var_j;
                var_j = tmp_assign_source_23;
                Py_INCREF(var_j);
                Py_XDECREF(old);
            }

        }
        {
            nuitka_bool tmp_condition_result_10;
            PyObject *tmp_operand_name_1;
            if (var_start == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start");
                exception_tb = NULL;

                exception_lineno = 340;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_6;
            }

            tmp_operand_name_1 = var_start;
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_1);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 340;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_6;
            }
            tmp_condition_result_10 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_10 == NUITKA_BOOL_TRUE) {
                goto branch_yes_10;
            } else {
                goto branch_no_10;
            }
            branch_yes_10:;
            {
                PyObject *tmp_assign_source_24;
                PyObject *tmp_left_name_3;
                PyObject *tmp_right_name_3;
                CHECK_OBJECT(var_sf_txt);
                tmp_left_name_3 = var_sf_txt;
                tmp_right_name_3 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                tmp_assign_source_24 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_3, tmp_right_name_3);
                if (tmp_assign_source_24 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 341;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_6;
                }
                {
                    PyObject *old = var_sf_txt;
                    assert(old != NULL);
                    var_sf_txt = tmp_assign_source_24;
                    Py_DECREF(old);
                }

            }
            goto branch_end_10;
            branch_no_10:;
            {
                PyObject *tmp_assign_source_25;
                tmp_assign_source_25 = Py_False;
                {
                    PyObject *old = var_start;
                    var_start = tmp_assign_source_25;
                    Py_INCREF(var_start);
                    Py_XDECREF(old);
                }

            }
            branch_end_10:;
        }
        {
            PyObject *tmp_assign_source_26;
            PyObject *tmp_left_name_4;
            PyObject *tmp_right_name_4;
            PyObject *tmp_subscribed_name_3;
            PyObject *tmp_source_name_6;
            PyObject *tmp_subscript_name_3;
            PyObject *tmp_subscribed_name_4;
            PyObject *tmp_subscript_name_4;
            if (var_sf_txt == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "sf_txt");
                exception_tb = NULL;

                exception_lineno = 344;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_6;
            }

            tmp_left_name_4 = var_sf_txt;
            CHECK_OBJECT(par_ui);
            tmp_source_name_6 = par_ui;
            tmp_subscribed_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_6, const_str_plain_devs_list);
            if (tmp_subscribed_name_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 344;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_6;
            }
            CHECK_OBJECT(par_selected_list);
            tmp_subscribed_name_4 = par_selected_list;
            CHECK_OBJECT(var_j);
            tmp_subscript_name_4 = var_j;
            tmp_subscript_name_3 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_4, tmp_subscript_name_4);
            if (tmp_subscript_name_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_subscribed_name_3);

                exception_lineno = 344;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_6;
            }
            tmp_right_name_4 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_3, tmp_subscript_name_3);
            Py_DECREF(tmp_subscribed_name_3);
            Py_DECREF(tmp_subscript_name_3);
            if (tmp_right_name_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 344;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_6;
            }
            tmp_assign_source_26 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_4, tmp_right_name_4);
            Py_DECREF(tmp_right_name_4);
            if (tmp_assign_source_26 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 344;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_6;
            }
            {
                PyObject *old = var_sf_txt;
                var_sf_txt = tmp_assign_source_26;
                Py_XDECREF(old);
            }

        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 339;
            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
            goto try_except_handler_6;
        }
        goto loop_start_5;
        loop_end_5:;
        goto try_end_5;
        // Exception handler code:
        try_except_handler_6:;
        exception_keeper_type_5 = exception_type;
        exception_keeper_value_5 = exception_value;
        exception_keeper_tb_5 = exception_tb;
        exception_keeper_lineno_5 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_5__iter_value);
        tmp_for_loop_5__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_5__for_iterator);
        Py_DECREF(tmp_for_loop_5__for_iterator);
        tmp_for_loop_5__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_5;
        exception_value = exception_keeper_value_5;
        exception_tb = exception_keeper_tb_5;
        exception_lineno = exception_keeper_lineno_5;

        goto frame_exception_exit_1;
        // End of try:
        try_end_5:;
        Py_XDECREF(tmp_for_loop_5__iter_value);
        tmp_for_loop_5__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_5__for_iterator);
        Py_DECREF(tmp_for_loop_5__for_iterator);
        tmp_for_loop_5__for_iterator = NULL;

        {
            PyObject *tmp_called_name_1;
            PyObject *tmp_source_name_7;
            PyObject *tmp_call_result_9;
            PyObject *tmp_args_element_name_3;
            PyObject *tmp_left_name_5;
            PyObject *tmp_left_name_6;
            PyObject *tmp_right_name_5;
            PyObject *tmp_right_name_6;
            CHECK_OBJECT(par_ui);
            tmp_source_name_7 = par_ui;
            tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_7, const_str_plain_msg_err);
            if (tmp_called_name_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 345;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_left_name_6 = const_str_digest_ad94a125aa57f8e470b62993b0b50b73;
            CHECK_OBJECT(var_sf_txt);
            tmp_right_name_5 = var_sf_txt;
            tmp_left_name_5 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_6, tmp_right_name_5);
            if (tmp_left_name_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_1);

                exception_lineno = 345;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_right_name_6 = const_str_dot;
            tmp_args_element_name_3 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_5, tmp_right_name_6);
            Py_DECREF(tmp_left_name_5);
            if (tmp_args_element_name_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_1);

                exception_lineno = 345;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 345;
            tmp_call_result_9 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_1, tmp_args_element_name_3);
            Py_DECREF(tmp_called_name_1);
            Py_DECREF(tmp_args_element_name_3);
            if (tmp_call_result_9 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 345;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_9);
        }
        branch_no_9:;
    }
    {
        PyObject *tmp_assign_source_27;
        PyObject *tmp_sum_sequence_1;
        CHECK_OBJECT(par_res_list);
        tmp_sum_sequence_1 = par_res_list;
        tmp_assign_source_27 = BUILTIN_SUM1(tmp_sum_sequence_1);
        if (tmp_assign_source_27 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 347;
            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_res_sum == NULL);
        var_res_sum = tmp_assign_source_27;
    }
    {
        PyObject *tmp_assign_source_28;
        PyObject *tmp_called_instance_10;
        PyObject *tmp_source_name_8;
        CHECK_OBJECT(par_ui);
        tmp_source_name_8 = par_ui;
        tmp_called_instance_10 = LOOKUP_ATTRIBUTE(tmp_source_name_8, const_str_plain_dev_select);
        if (tmp_called_instance_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 351;
            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 351;
        tmp_assign_source_28 = CALL_METHOD_NO_ARGS(tmp_called_instance_10, const_str_plain_get_active);
        Py_DECREF(tmp_called_instance_10);
        if (tmp_assign_source_28 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 351;
            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_act_idx == NULL);
        var_act_idx = tmp_assign_source_28;
    }
    {
        nuitka_bool tmp_condition_result_11;
        PyObject *tmp_compexpr_left_8;
        PyObject *tmp_compexpr_right_8;
        CHECK_OBJECT(var_res_sum);
        tmp_compexpr_left_8 = var_res_sum;
        tmp_compexpr_right_8 = const_int_0;
        tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_INT(tmp_compexpr_left_8, tmp_compexpr_right_8);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 353;
            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_11 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_11 == NUITKA_BOOL_TRUE) {
            goto branch_yes_11;
        } else {
            goto branch_no_11;
        }
        branch_yes_11:;
        {
            PyObject *tmp_assign_source_29;
            tmp_assign_source_29 = Py_True;
            assert(var_start_f == NULL);
            Py_INCREF(tmp_assign_source_29);
            var_start_f = tmp_assign_source_29;
        }
        {
            PyObject *tmp_assign_source_30;
            tmp_assign_source_30 = Py_True;
            assert(var_start_p == NULL);
            Py_INCREF(tmp_assign_source_30);
            var_start_p = tmp_assign_source_30;
        }
        {
            PyObject *tmp_assign_source_31;
            tmp_assign_source_31 = Py_True;
            assert(var_start_alo == NULL);
            Py_INCREF(tmp_assign_source_31);
            var_start_alo = tmp_assign_source_31;
        }
        {
            PyObject *tmp_assign_source_32;
            tmp_assign_source_32 = Py_True;
            assert(var_start_to == NULL);
            Py_INCREF(tmp_assign_source_32);
            var_start_to = tmp_assign_source_32;
        }
        {
            PyObject *tmp_assign_source_33;
            tmp_assign_source_33 = Py_True;
            assert(var_start_na == NULL);
            Py_INCREF(tmp_assign_source_33);
            var_start_na = tmp_assign_source_33;
        }
        {
            PyObject *tmp_assign_source_34;
            tmp_assign_source_34 = Py_True;
            assert(var_start_spb == NULL);
            Py_INCREF(tmp_assign_source_34);
            var_start_spb = tmp_assign_source_34;
        }
        {
            PyObject *tmp_assign_source_35;
            tmp_assign_source_35 = Py_True;
            assert(var_start_miss == NULL);
            Py_INCREF(tmp_assign_source_35);
            var_start_miss = tmp_assign_source_35;
        }
        {
            PyObject *tmp_assign_source_36;
            tmp_assign_source_36 = const_str_empty;
            assert(var_list_f == NULL);
            Py_INCREF(tmp_assign_source_36);
            var_list_f = tmp_assign_source_36;
        }
        {
            PyObject *tmp_assign_source_37;
            tmp_assign_source_37 = const_str_empty;
            assert(var_list_p == NULL);
            Py_INCREF(tmp_assign_source_37);
            var_list_p = tmp_assign_source_37;
        }
        {
            PyObject *tmp_assign_source_38;
            tmp_assign_source_38 = const_str_empty;
            assert(var_list_alo == NULL);
            Py_INCREF(tmp_assign_source_38);
            var_list_alo = tmp_assign_source_38;
        }
        {
            PyObject *tmp_assign_source_39;
            tmp_assign_source_39 = const_str_empty;
            assert(var_list_to == NULL);
            Py_INCREF(tmp_assign_source_39);
            var_list_to = tmp_assign_source_39;
        }
        {
            PyObject *tmp_assign_source_40;
            tmp_assign_source_40 = const_str_empty;
            assert(var_list_na == NULL);
            Py_INCREF(tmp_assign_source_40);
            var_list_na = tmp_assign_source_40;
        }
        {
            PyObject *tmp_assign_source_41;
            tmp_assign_source_41 = const_str_empty;
            assert(var_list_spb == NULL);
            Py_INCREF(tmp_assign_source_41);
            var_list_spb = tmp_assign_source_41;
        }
        {
            PyObject *tmp_assign_source_42;
            tmp_assign_source_42 = const_str_empty;
            assert(var_list_miss == NULL);
            Py_INCREF(tmp_assign_source_42);
            var_list_miss = tmp_assign_source_42;
        }
        {
            PyObject *tmp_assign_source_43;
            tmp_assign_source_43 = const_int_0;
            assert(var_count == NULL);
            Py_INCREF(tmp_assign_source_43);
            var_count = tmp_assign_source_43;
        }
        {
            PyObject *tmp_assign_source_44;
            tmp_assign_source_44 = const_int_neg_1;
            assert(var_last_f == NULL);
            Py_INCREF(tmp_assign_source_44);
            var_last_f = tmp_assign_source_44;
        }
        {
            PyObject *tmp_assign_source_45;
            tmp_assign_source_45 = const_int_0;
            assert(var_count_f == NULL);
            Py_INCREF(tmp_assign_source_45);
            var_count_f = tmp_assign_source_45;
        }
        {
            PyObject *tmp_assign_source_46;
            PyObject *tmp_iter_arg_6;
            CHECK_OBJECT(par_selected_list);
            tmp_iter_arg_6 = par_selected_list;
            tmp_assign_source_46 = MAKE_ITERATOR(tmp_iter_arg_6);
            if (tmp_assign_source_46 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 371;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_6__for_iterator == NULL);
            tmp_for_loop_6__for_iterator = tmp_assign_source_46;
        }
        // Tried code:
        loop_start_6:;
        {
            PyObject *tmp_next_source_6;
            PyObject *tmp_assign_source_47;
            CHECK_OBJECT(tmp_for_loop_6__for_iterator);
            tmp_next_source_6 = tmp_for_loop_6__for_iterator;
            tmp_assign_source_47 = ITERATOR_NEXT(tmp_next_source_6);
            if (tmp_assign_source_47 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_6;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    exception_lineno = 371;
                    goto try_except_handler_7;
                }
            }

            {
                PyObject *old = tmp_for_loop_6__iter_value;
                tmp_for_loop_6__iter_value = tmp_assign_source_47;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_48;
            CHECK_OBJECT(tmp_for_loop_6__iter_value);
            tmp_assign_source_48 = tmp_for_loop_6__iter_value;
            {
                PyObject *old = var_y;
                var_y = tmp_assign_source_48;
                Py_INCREF(var_y);
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assattr_name_5;
            PyObject *tmp_subscribed_name_5;
            PyObject *tmp_source_name_9;
            PyObject *tmp_subscript_name_5;
            PyObject *tmp_assattr_target_5;
            CHECK_OBJECT(par_ui);
            tmp_source_name_9 = par_ui;
            tmp_subscribed_name_5 = LOOKUP_ATTRIBUTE(tmp_source_name_9, const_str_plain_devs_list);
            if (tmp_subscribed_name_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 372;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }
            CHECK_OBJECT(var_y);
            tmp_subscript_name_5 = var_y;
            tmp_assattr_name_5 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_5, tmp_subscript_name_5);
            Py_DECREF(tmp_subscribed_name_5);
            if (tmp_assattr_name_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 372;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }
            CHECK_OBJECT(par_ui);
            tmp_assattr_target_5 = par_ui;
            tmp_result = SET_ATTRIBUTE(tmp_assattr_target_5, const_str_plain_devname, tmp_assattr_name_5);
            Py_DECREF(tmp_assattr_name_5);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 372;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }
        }
        {
            nuitka_bool tmp_condition_result_12;
            PyObject *tmp_compexpr_left_9;
            PyObject *tmp_compexpr_right_9;
            PyObject *tmp_subscribed_name_6;
            PyObject *tmp_subscript_name_6;
            CHECK_OBJECT(par_res_list);
            tmp_subscribed_name_6 = par_res_list;
            CHECK_OBJECT(var_count);
            tmp_subscript_name_6 = var_count;
            tmp_compexpr_left_9 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_6, tmp_subscript_name_6);
            if (tmp_compexpr_left_9 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 373;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }
            tmp_compexpr_right_9 = const_int_0;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_9, tmp_compexpr_right_9);
            Py_DECREF(tmp_compexpr_left_9);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 373;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }
            tmp_condition_result_12 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_12 == NUITKA_BOOL_TRUE) {
                goto branch_yes_12;
            } else {
                goto branch_no_12;
            }
            branch_yes_12:;
            {
                PyObject *tmp_ass_subvalue_5;
                PyObject *tmp_ass_subscribed_5;
                PyObject *tmp_source_name_10;
                PyObject *tmp_ass_subscript_5;
                tmp_ass_subvalue_5 = const_int_0;
                CHECK_OBJECT(par_ui);
                tmp_source_name_10 = par_ui;
                tmp_ass_subscribed_5 = LOOKUP_ATTRIBUTE(tmp_source_name_10, const_str_plain_admin_aol_list);
                if (tmp_ass_subscribed_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 374;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_7;
                }
                CHECK_OBJECT(var_y);
                tmp_ass_subscript_5 = var_y;
                tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_5, tmp_ass_subscript_5, tmp_ass_subvalue_5);
                Py_DECREF(tmp_ass_subscribed_5);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 374;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_7;
                }
            }
            {
                PyObject *tmp_called_instance_11;
                PyObject *tmp_mvar_value_3;
                PyObject *tmp_call_result_10;
                PyObject *tmp_args_element_name_4;
                PyObject *tmp_args_element_name_5;
                PyObject *tmp_args_element_name_6;
                tmp_mvar_value_3 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_dialogs);

                if (unlikely(tmp_mvar_value_3 == NULL)) {
                    tmp_mvar_value_3 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_dialogs);
                }

                if (tmp_mvar_value_3 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 418 ], 36, 0);
                    exception_tb = NULL;

                    exception_lineno = 375;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_7;
                }

                tmp_called_instance_11 = tmp_mvar_value_3;
                tmp_args_element_name_4 = Py_None;
                CHECK_OBJECT(par_ui);
                tmp_args_element_name_5 = par_ui;
                tmp_args_element_name_6 = const_int_pos_1;
                frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 375;
                {
                    PyObject *call_args[] = {tmp_args_element_name_4, tmp_args_element_name_5, tmp_args_element_name_6};
                    tmp_call_result_10 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_11, const_str_plain_query, call_args);
                }

                if (tmp_call_result_10 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 375;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_7;
                }
                Py_DECREF(tmp_call_result_10);
            }
            {
                nuitka_bool tmp_condition_result_13;
                PyObject *tmp_operand_name_2;
                if (var_start_p == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_p");
                    exception_tb = NULL;

                    exception_lineno = 376;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_7;
                }

                tmp_operand_name_2 = var_start_p;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_2);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 376;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_7;
                }
                tmp_condition_result_13 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_13 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_13;
                } else {
                    goto branch_no_13;
                }
                branch_yes_13:;
                {
                    PyObject *tmp_assign_source_49;
                    PyObject *tmp_left_name_7;
                    PyObject *tmp_right_name_7;
                    if (var_list_p == NULL) {

                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p");
                        exception_tb = NULL;

                        exception_lineno = 377;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_7;
                    }

                    tmp_left_name_7 = var_list_p;
                    tmp_right_name_7 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                    tmp_assign_source_49 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_7, tmp_right_name_7);
                    if (tmp_assign_source_49 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 377;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                    {
                        PyObject *old = var_list_p;
                        var_list_p = tmp_assign_source_49;
                        Py_XDECREF(old);
                    }

                }
                goto branch_end_13;
                branch_no_13:;
                {
                    PyObject *tmp_assign_source_50;
                    tmp_assign_source_50 = Py_False;
                    {
                        PyObject *old = var_start_p;
                        var_start_p = tmp_assign_source_50;
                        Py_INCREF(var_start_p);
                        Py_XDECREF(old);
                    }

                }
                branch_end_13:;
            }
            {
                PyObject *tmp_assign_source_51;
                PyObject *tmp_left_name_8;
                PyObject *tmp_right_name_8;
                PyObject *tmp_subscribed_name_7;
                PyObject *tmp_source_name_11;
                PyObject *tmp_subscript_name_7;
                if (var_list_p == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p");
                    exception_tb = NULL;

                    exception_lineno = 380;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_7;
                }

                tmp_left_name_8 = var_list_p;
                CHECK_OBJECT(par_ui);
                tmp_source_name_11 = par_ui;
                tmp_subscribed_name_7 = LOOKUP_ATTRIBUTE(tmp_source_name_11, const_str_plain_devs_list);
                if (tmp_subscribed_name_7 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 380;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_7;
                }
                CHECK_OBJECT(var_y);
                tmp_subscript_name_7 = var_y;
                tmp_right_name_8 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_7, tmp_subscript_name_7);
                Py_DECREF(tmp_subscribed_name_7);
                if (tmp_right_name_8 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 380;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_7;
                }
                tmp_assign_source_51 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_8, tmp_right_name_8);
                Py_DECREF(tmp_right_name_8);
                if (tmp_assign_source_51 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 380;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_7;
                }
                {
                    PyObject *old = var_list_p;
                    var_list_p = tmp_assign_source_51;
                    Py_XDECREF(old);
                }

            }
            {
                nuitka_bool tmp_condition_result_14;
                PyObject *tmp_called_name_2;
                PyObject *tmp_source_name_12;
                PyObject *tmp_source_name_13;
                PyObject *tmp_mvar_value_4;
                PyObject *tmp_call_result_11;
                PyObject *tmp_args_element_name_7;
                PyObject *tmp_left_name_9;
                PyObject *tmp_left_name_10;
                PyObject *tmp_right_name_9;
                PyObject *tmp_subscribed_name_8;
                PyObject *tmp_source_name_14;
                PyObject *tmp_subscript_name_8;
                PyObject *tmp_right_name_10;
                int tmp_truth_name_3;
                tmp_mvar_value_4 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_os);

                if (unlikely(tmp_mvar_value_4 == NULL)) {
                    tmp_mvar_value_4 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                }

                if (tmp_mvar_value_4 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                    exception_tb = NULL;

                    exception_lineno = 381;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_7;
                }

                tmp_source_name_13 = tmp_mvar_value_4;
                tmp_source_name_12 = LOOKUP_ATTRIBUTE(tmp_source_name_13, const_str_plain_path);
                if (tmp_source_name_12 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 381;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_7;
                }
                tmp_called_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_12, const_str_plain_isfile);
                Py_DECREF(tmp_source_name_12);
                if (tmp_called_name_2 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 381;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_7;
                }
                tmp_left_name_10 = const_str_plain_datawrite;
                CHECK_OBJECT(par_ui);
                tmp_source_name_14 = par_ui;
                tmp_subscribed_name_8 = LOOKUP_ATTRIBUTE(tmp_source_name_14, const_str_plain_sn_list);
                if (tmp_subscribed_name_8 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_2);

                    exception_lineno = 381;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_7;
                }
                CHECK_OBJECT(var_y);
                tmp_subscript_name_8 = var_y;
                tmp_right_name_9 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_8, tmp_subscript_name_8);
                Py_DECREF(tmp_subscribed_name_8);
                if (tmp_right_name_9 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_2);

                    exception_lineno = 381;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_7;
                }
                tmp_left_name_9 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_10, tmp_right_name_9);
                Py_DECREF(tmp_right_name_9);
                if (tmp_left_name_9 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_2);

                    exception_lineno = 381;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_7;
                }
                tmp_right_name_10 = const_str_digest_038a28107205f832c6bf850b3119b5af;
                tmp_args_element_name_7 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_9, tmp_right_name_10);
                Py_DECREF(tmp_left_name_9);
                if (tmp_args_element_name_7 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_2);

                    exception_lineno = 381;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_7;
                }
                frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 381;
                tmp_call_result_11 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_2, tmp_args_element_name_7);
                Py_DECREF(tmp_called_name_2);
                Py_DECREF(tmp_args_element_name_7);
                if (tmp_call_result_11 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 381;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_7;
                }
                tmp_truth_name_3 = CHECK_IF_TRUE(tmp_call_result_11);
                if (tmp_truth_name_3 == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_call_result_11);

                    exception_lineno = 381;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_7;
                }
                tmp_condition_result_14 = tmp_truth_name_3 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                Py_DECREF(tmp_call_result_11);
                if (tmp_condition_result_14 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_14;
                } else {
                    goto branch_no_14;
                }
                branch_yes_14:;
                {
                    PyObject *tmp_assign_source_52;
                    PyObject *tmp_open_filename_1;
                    PyObject *tmp_left_name_11;
                    PyObject *tmp_left_name_12;
                    PyObject *tmp_right_name_11;
                    PyObject *tmp_subscribed_name_9;
                    PyObject *tmp_source_name_15;
                    PyObject *tmp_subscript_name_9;
                    PyObject *tmp_right_name_12;
                    PyObject *tmp_open_mode_1;
                    tmp_left_name_12 = const_str_plain_datawrite;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_15 = par_ui;
                    tmp_subscribed_name_9 = LOOKUP_ATTRIBUTE(tmp_source_name_15, const_str_plain_sn_list);
                    if (tmp_subscribed_name_9 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 382;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_9 = var_y;
                    tmp_right_name_11 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_9, tmp_subscript_name_9);
                    Py_DECREF(tmp_subscribed_name_9);
                    if (tmp_right_name_11 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 382;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                    tmp_left_name_11 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_12, tmp_right_name_11);
                    Py_DECREF(tmp_right_name_11);
                    if (tmp_left_name_11 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 382;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                    tmp_right_name_12 = const_str_digest_038a28107205f832c6bf850b3119b5af;
                    tmp_open_filename_1 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_11, tmp_right_name_12);
                    Py_DECREF(tmp_left_name_11);
                    if (tmp_open_filename_1 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 382;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                    tmp_open_mode_1 = const_str_plain_r;
                    tmp_assign_source_52 = BUILTIN_OPEN(tmp_open_filename_1, tmp_open_mode_1, NULL);
                    Py_DECREF(tmp_open_filename_1);
                    if (tmp_assign_source_52 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 382;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                    {
                        PyObject *old = var_f;
                        var_f = tmp_assign_source_52;
                        Py_XDECREF(old);
                    }

                }
                {
                    PyObject *tmp_assign_source_53;
                    PyObject *tmp_called_instance_12;
                    CHECK_OBJECT(var_f);
                    tmp_called_instance_12 = var_f;
                    frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 383;
                    tmp_assign_source_53 = CALL_METHOD_NO_ARGS(tmp_called_instance_12, const_str_plain_read);
                    if (tmp_assign_source_53 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 383;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                    {
                        PyObject *old = var_pv;
                        var_pv = tmp_assign_source_53;
                        Py_XDECREF(old);
                    }

                }
                {
                    PyObject *tmp_called_instance_13;
                    PyObject *tmp_call_result_12;
                    CHECK_OBJECT(var_f);
                    tmp_called_instance_13 = var_f;
                    frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 384;
                    tmp_call_result_12 = CALL_METHOD_NO_ARGS(tmp_called_instance_13, const_str_plain_close);
                    if (tmp_call_result_12 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 384;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                    Py_DECREF(tmp_call_result_12);
                }
                {
                    PyObject *tmp_ass_subvalue_6;
                    PyObject *tmp_called_instance_14;
                    PyObject *tmp_ass_subscribed_6;
                    PyObject *tmp_source_name_16;
                    PyObject *tmp_ass_subscript_6;
                    CHECK_OBJECT(var_pv);
                    tmp_called_instance_14 = var_pv;
                    frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 385;
                    tmp_ass_subvalue_6 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_14, const_str_plain_strip, &PyTuple_GET_ITEM(const_tuple_str_chr_0_tuple, 0));

                    if (tmp_ass_subvalue_6 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 385;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_16 = par_ui;
                    tmp_ass_subscribed_6 = LOOKUP_ATTRIBUTE(tmp_source_name_16, const_str_plain_pba_list);
                    if (tmp_ass_subscribed_6 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_ass_subvalue_6);

                        exception_lineno = 385;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                    CHECK_OBJECT(var_y);
                    tmp_ass_subscript_6 = var_y;
                    tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_6, tmp_ass_subscript_6, tmp_ass_subvalue_6);
                    Py_DECREF(tmp_ass_subscribed_6);
                    Py_DECREF(tmp_ass_subvalue_6);
                    if (tmp_result == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 385;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                }
                {
                    nuitka_bool tmp_condition_result_15;
                    PyObject *tmp_compexpr_left_10;
                    PyObject *tmp_compexpr_right_10;
                    CHECK_OBJECT(var_y);
                    tmp_compexpr_left_10 = var_y;
                    CHECK_OBJECT(var_act_idx);
                    tmp_compexpr_right_10 = var_act_idx;
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_10, tmp_compexpr_right_10);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 386;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                    tmp_condition_result_15 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_15 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_15;
                    } else {
                        goto branch_no_15;
                    }
                    branch_yes_15:;
                    {
                        PyObject *tmp_called_name_3;
                        PyObject *tmp_source_name_17;
                        PyObject *tmp_source_name_18;
                        PyObject *tmp_call_result_13;
                        PyObject *tmp_args_element_name_8;
                        PyObject *tmp_called_instance_15;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_18 = par_ui;
                        tmp_source_name_17 = LOOKUP_ATTRIBUTE(tmp_source_name_18, const_str_plain_dev_pbaVer);
                        if (tmp_source_name_17 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 387;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        tmp_called_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_17, const_str_plain_set_text);
                        Py_DECREF(tmp_source_name_17);
                        if (tmp_called_name_3 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 387;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        CHECK_OBJECT(var_pv);
                        tmp_called_instance_15 = var_pv;
                        frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 387;
                        tmp_args_element_name_8 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_15, const_str_plain_strip, &PyTuple_GET_ITEM(const_tuple_str_chr_0_tuple, 0));

                        if (tmp_args_element_name_8 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_3);

                            exception_lineno = 387;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 387;
                        tmp_call_result_13 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_3, tmp_args_element_name_8);
                        Py_DECREF(tmp_called_name_3);
                        Py_DECREF(tmp_args_element_name_8);
                        if (tmp_call_result_13 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 387;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        Py_DECREF(tmp_call_result_13);
                    }
                    branch_no_15:;
                }
                // Tried code:
                {
                    PyObject *tmp_called_name_4;
                    PyObject *tmp_source_name_19;
                    PyObject *tmp_mvar_value_5;
                    PyObject *tmp_call_result_14;
                    PyObject *tmp_args_element_name_9;
                    PyObject *tmp_left_name_13;
                    PyObject *tmp_left_name_14;
                    PyObject *tmp_right_name_13;
                    PyObject *tmp_subscribed_name_10;
                    PyObject *tmp_source_name_20;
                    PyObject *tmp_subscript_name_10;
                    PyObject *tmp_right_name_14;
                    tmp_mvar_value_5 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_os);

                    if (unlikely(tmp_mvar_value_5 == NULL)) {
                        tmp_mvar_value_5 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                    }

                    if (tmp_mvar_value_5 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                        exception_tb = NULL;

                        exception_lineno = 389;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_8;
                    }

                    tmp_source_name_19 = tmp_mvar_value_5;
                    tmp_called_name_4 = LOOKUP_ATTRIBUTE(tmp_source_name_19, const_str_plain_remove);
                    if (tmp_called_name_4 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 389;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_8;
                    }
                    tmp_left_name_14 = const_str_plain_datawrite;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_20 = par_ui;
                    tmp_subscribed_name_10 = LOOKUP_ATTRIBUTE(tmp_source_name_20, const_str_plain_sn_list);
                    if (tmp_subscribed_name_10 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_4);

                        exception_lineno = 389;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_8;
                    }
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_10 = var_y;
                    tmp_right_name_13 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_10, tmp_subscript_name_10);
                    Py_DECREF(tmp_subscribed_name_10);
                    if (tmp_right_name_13 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_4);

                        exception_lineno = 389;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_8;
                    }
                    tmp_left_name_13 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_14, tmp_right_name_13);
                    Py_DECREF(tmp_right_name_13);
                    if (tmp_left_name_13 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_4);

                        exception_lineno = 389;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_8;
                    }
                    tmp_right_name_14 = const_str_digest_038a28107205f832c6bf850b3119b5af;
                    tmp_args_element_name_9 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_13, tmp_right_name_14);
                    Py_DECREF(tmp_left_name_13);
                    if (tmp_args_element_name_9 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_4);

                        exception_lineno = 389;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_8;
                    }
                    frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 389;
                    tmp_call_result_14 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_4, tmp_args_element_name_9);
                    Py_DECREF(tmp_called_name_4);
                    Py_DECREF(tmp_args_element_name_9);
                    if (tmp_call_result_14 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 389;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_8;
                    }
                    Py_DECREF(tmp_call_result_14);
                }
                goto try_end_6;
                // Exception handler code:
                try_except_handler_8:;
                exception_keeper_type_6 = exception_type;
                exception_keeper_value_6 = exception_value;
                exception_keeper_tb_6 = exception_tb;
                exception_keeper_lineno_6 = exception_lineno;
                exception_type = NULL;
                exception_value = NULL;
                exception_tb = NULL;
                exception_lineno = 0;

                // Preserve existing published exception.
                PRESERVE_FRAME_EXCEPTION(frame_18a0298f42cb14be9dbbaaa3575f4d00);
                if (exception_keeper_tb_6 == NULL) {
                    exception_keeper_tb_6 = MAKE_TRACEBACK(frame_18a0298f42cb14be9dbbaaa3575f4d00, exception_keeper_lineno_6);
                } else if (exception_keeper_lineno_6 != 0) {
                    exception_keeper_tb_6 = ADD_TRACEBACK(exception_keeper_tb_6, frame_18a0298f42cb14be9dbbaaa3575f4d00, exception_keeper_lineno_6);
                }

                NORMALIZE_EXCEPTION(&exception_keeper_type_6, &exception_keeper_value_6, &exception_keeper_tb_6);
                PUBLISH_EXCEPTION(&exception_keeper_type_6, &exception_keeper_value_6, &exception_keeper_tb_6);
                {
                    nuitka_bool tmp_condition_result_16;
                    PyObject *tmp_compexpr_left_11;
                    PyObject *tmp_compexpr_right_11;
                    tmp_compexpr_left_11 = EXC_TYPE(PyThreadState_GET());
                    tmp_compexpr_right_11 = PyExc_WindowsError;
                    tmp_res = EXCEPTION_MATCH_BOOL(tmp_compexpr_left_11, tmp_compexpr_right_11);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 390;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                    tmp_condition_result_16 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_16 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_16;
                    } else {
                        goto branch_no_16;
                    }
                    branch_yes_16:;
                    tmp_print_value = const_str_digest_ed4dd40ce7a801d6a9039029873747bc;
                    tmp_result = PRINT_ITEM(tmp_print_value);
                    if (tmp_result == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 391;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                    if (PRINT_NEW_LINE() == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 391;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                    goto branch_end_16;
                    branch_no_16:;
                    tmp_result = RERAISE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                    if (unlikely(tmp_result == false)) {
                        exception_lineno = 388;
                    }

                    if (exception_tb && exception_tb->tb_frame == &frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame) frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = exception_tb->tb_lineno;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_7;
                    branch_end_16:;
                }
                goto try_end_6;
                // exception handler codes exits in all cases
                NUITKA_CANNOT_GET_HERE(cleanop$$$function_3_pbaWrite_cleanup);
                return NULL;
                // End of try:
                try_end_6:;
                branch_no_14:;
            }
            goto branch_end_12;
            branch_no_12:;
            {
                nuitka_bool tmp_condition_result_17;
                PyObject *tmp_compexpr_left_12;
                PyObject *tmp_compexpr_right_12;
                PyObject *tmp_subscribed_name_11;
                PyObject *tmp_subscript_name_11;
                CHECK_OBJECT(par_res_list);
                tmp_subscribed_name_11 = par_res_list;
                CHECK_OBJECT(var_count);
                tmp_subscript_name_11 = var_count;
                tmp_compexpr_left_12 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_11, tmp_subscript_name_11);
                if (tmp_compexpr_left_12 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 392;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_7;
                }
                tmp_compexpr_right_12 = const_int_pos_1;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_12, tmp_compexpr_right_12);
                Py_DECREF(tmp_compexpr_left_12);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 392;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_7;
                }
                tmp_condition_result_17 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_17 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_17;
                } else {
                    goto branch_no_17;
                }
                branch_yes_17:;
                {
                    nuitka_bool tmp_condition_result_18;
                    int tmp_and_left_truth_1;
                    nuitka_bool tmp_and_left_value_1;
                    nuitka_bool tmp_and_right_value_1;
                    PyObject *tmp_compexpr_left_13;
                    PyObject *tmp_compexpr_right_13;
                    PyObject *tmp_subscribed_name_12;
                    PyObject *tmp_subscript_name_12;
                    PyObject *tmp_source_name_21;
                    PyObject *tmp_compexpr_left_14;
                    PyObject *tmp_compexpr_right_14;
                    PyObject *tmp_subscribed_name_13;
                    PyObject *tmp_source_name_22;
                    PyObject *tmp_subscript_name_13;
                    PyObject *tmp_subscribed_name_14;
                    PyObject *tmp_source_name_23;
                    PyObject *tmp_subscript_name_14;
                    CHECK_OBJECT(par_status_list);
                    tmp_subscribed_name_12 = par_status_list;
                    CHECK_OBJECT(var_count);
                    tmp_subscript_name_12 = var_count;
                    tmp_compexpr_left_13 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_12, tmp_subscript_name_12);
                    if (tmp_compexpr_left_13 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 393;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_21 = par_ui;
                    tmp_compexpr_right_13 = LOOKUP_ATTRIBUTE(tmp_source_name_21, const_str_plain_NOT_AUTHORIZED);
                    if (tmp_compexpr_right_13 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_compexpr_left_13);

                        exception_lineno = 393;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_13, tmp_compexpr_right_13);
                    Py_DECREF(tmp_compexpr_left_13);
                    Py_DECREF(tmp_compexpr_right_13);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 393;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                    tmp_and_left_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_and_left_truth_1 = tmp_and_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
                    if (tmp_and_left_truth_1 == 1) {
                        goto and_right_1;
                    } else {
                        goto and_left_1;
                    }
                    and_right_1:;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_22 = par_ui;
                    tmp_subscribed_name_13 = LOOKUP_ATTRIBUTE(tmp_source_name_22, const_str_plain_admin_aol_list);
                    if (tmp_subscribed_name_13 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 393;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_13 = var_y;
                    tmp_compexpr_left_14 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_13, tmp_subscript_name_13);
                    Py_DECREF(tmp_subscribed_name_13);
                    if (tmp_compexpr_left_14 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 393;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_23 = par_ui;
                    tmp_subscribed_name_14 = LOOKUP_ATTRIBUTE(tmp_source_name_23, const_str_plain_retrylimit_list);
                    if (tmp_subscribed_name_14 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_compexpr_left_14);

                        exception_lineno = 393;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_14 = var_y;
                    tmp_compexpr_right_14 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_14, tmp_subscript_name_14);
                    Py_DECREF(tmp_subscribed_name_14);
                    if (tmp_compexpr_right_14 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_compexpr_left_14);

                        exception_lineno = 393;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                    tmp_res = RICH_COMPARE_BOOL_LT_OBJECT_OBJECT(tmp_compexpr_left_14, tmp_compexpr_right_14);
                    Py_DECREF(tmp_compexpr_left_14);
                    Py_DECREF(tmp_compexpr_right_14);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 393;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                    tmp_and_right_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_condition_result_18 = tmp_and_right_value_1;
                    goto and_end_1;
                    and_left_1:;
                    tmp_condition_result_18 = tmp_and_left_value_1;
                    and_end_1:;
                    if (tmp_condition_result_18 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_18;
                    } else {
                        goto branch_no_18;
                    }
                    branch_yes_18:;
                    {
                        PyObject *tmp_ass_subvalue_7;
                        PyObject *tmp_left_name_15;
                        PyObject *tmp_subscribed_name_15;
                        PyObject *tmp_source_name_24;
                        PyObject *tmp_subscript_name_15;
                        PyObject *tmp_right_name_15;
                        PyObject *tmp_ass_subscribed_7;
                        PyObject *tmp_source_name_25;
                        PyObject *tmp_ass_subscript_7;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_24 = par_ui;
                        tmp_subscribed_name_15 = LOOKUP_ATTRIBUTE(tmp_source_name_24, const_str_plain_admin_aol_list);
                        if (tmp_subscribed_name_15 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 394;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_15 = var_y;
                        tmp_left_name_15 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_15, tmp_subscript_name_15);
                        Py_DECREF(tmp_subscribed_name_15);
                        if (tmp_left_name_15 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 394;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        tmp_right_name_15 = const_int_pos_1;
                        tmp_ass_subvalue_7 = BINARY_OPERATION_ADD_OBJECT_INT(tmp_left_name_15, tmp_right_name_15);
                        Py_DECREF(tmp_left_name_15);
                        if (tmp_ass_subvalue_7 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 394;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_25 = par_ui;
                        tmp_ass_subscribed_7 = LOOKUP_ATTRIBUTE(tmp_source_name_25, const_str_plain_admin_aol_list);
                        if (tmp_ass_subscribed_7 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_ass_subvalue_7);

                            exception_lineno = 394;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        CHECK_OBJECT(var_y);
                        tmp_ass_subscript_7 = var_y;
                        tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_7, tmp_ass_subscript_7, tmp_ass_subvalue_7);
                        Py_DECREF(tmp_ass_subscribed_7);
                        Py_DECREF(tmp_ass_subvalue_7);
                        if (tmp_result == false) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 394;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                    }
                    {
                        nuitka_bool tmp_condition_result_19;
                        PyObject *tmp_operand_name_3;
                        if (var_start_f == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_f");
                            exception_tb = NULL;

                            exception_lineno = 395;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }

                        tmp_operand_name_3 = var_start_f;
                        tmp_res = CHECK_IF_TRUE(tmp_operand_name_3);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 395;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        tmp_condition_result_19 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_19 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_19;
                        } else {
                            goto branch_no_19;
                        }
                        branch_yes_19:;
                        {
                            PyObject *tmp_assign_source_54;
                            PyObject *tmp_left_name_16;
                            PyObject *tmp_right_name_16;
                            if (var_list_f == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                                exception_tb = NULL;

                                exception_lineno = 396;
                                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_7;
                            }

                            tmp_left_name_16 = var_list_f;
                            tmp_right_name_16 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                            tmp_assign_source_54 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_16, tmp_right_name_16);
                            if (tmp_assign_source_54 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 396;
                                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_7;
                            }
                            {
                                PyObject *old = var_list_f;
                                var_list_f = tmp_assign_source_54;
                                Py_XDECREF(old);
                            }

                        }
                        goto branch_end_19;
                        branch_no_19:;
                        {
                            PyObject *tmp_assign_source_55;
                            tmp_assign_source_55 = Py_False;
                            {
                                PyObject *old = var_start_f;
                                var_start_f = tmp_assign_source_55;
                                Py_INCREF(var_start_f);
                                Py_XDECREF(old);
                            }

                        }
                        branch_end_19:;
                    }
                    {
                        PyObject *tmp_assign_source_56;
                        PyObject *tmp_left_name_17;
                        PyObject *tmp_right_name_17;
                        PyObject *tmp_subscribed_name_16;
                        PyObject *tmp_source_name_26;
                        PyObject *tmp_subscript_name_16;
                        if (var_list_f == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                            exception_tb = NULL;

                            exception_lineno = 399;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }

                        tmp_left_name_17 = var_list_f;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_26 = par_ui;
                        tmp_subscribed_name_16 = LOOKUP_ATTRIBUTE(tmp_source_name_26, const_str_plain_devs_list);
                        if (tmp_subscribed_name_16 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 399;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_16 = var_y;
                        tmp_right_name_17 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_16, tmp_subscript_name_16);
                        Py_DECREF(tmp_subscribed_name_16);
                        if (tmp_right_name_17 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 399;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        tmp_assign_source_56 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_17, tmp_right_name_17);
                        Py_DECREF(tmp_right_name_17);
                        if (tmp_assign_source_56 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 399;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        {
                            PyObject *old = var_list_f;
                            var_list_f = tmp_assign_source_56;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assign_source_57;
                        PyObject *tmp_left_name_18;
                        PyObject *tmp_right_name_18;
                        if (var_count_f == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "count_f");
                            exception_tb = NULL;

                            exception_lineno = 400;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }

                        tmp_left_name_18 = var_count_f;
                        tmp_right_name_18 = const_int_pos_1;
                        tmp_assign_source_57 = BINARY_OPERATION_ADD_OBJECT_INT(tmp_left_name_18, tmp_right_name_18);
                        if (tmp_assign_source_57 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 400;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        {
                            PyObject *old = var_count_f;
                            var_count_f = tmp_assign_source_57;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assign_source_58;
                        CHECK_OBJECT(var_y);
                        tmp_assign_source_58 = var_y;
                        {
                            PyObject *old = var_last_f;
                            var_last_f = tmp_assign_source_58;
                            Py_INCREF(var_last_f);
                            Py_XDECREF(old);
                        }

                    }
                    goto branch_end_18;
                    branch_no_18:;
                    {
                        nuitka_bool tmp_condition_result_20;
                        int tmp_or_left_truth_1;
                        nuitka_bool tmp_or_left_value_1;
                        nuitka_bool tmp_or_right_value_1;
                        PyObject *tmp_compexpr_left_15;
                        PyObject *tmp_compexpr_right_15;
                        PyObject *tmp_subscribed_name_17;
                        PyObject *tmp_subscript_name_17;
                        PyObject *tmp_source_name_27;
                        PyObject *tmp_compexpr_left_16;
                        PyObject *tmp_compexpr_right_16;
                        PyObject *tmp_subscribed_name_18;
                        PyObject *tmp_source_name_28;
                        PyObject *tmp_subscript_name_18;
                        PyObject *tmp_subscribed_name_19;
                        PyObject *tmp_source_name_29;
                        PyObject *tmp_subscript_name_19;
                        CHECK_OBJECT(par_status_list);
                        tmp_subscribed_name_17 = par_status_list;
                        CHECK_OBJECT(var_count);
                        tmp_subscript_name_17 = var_count;
                        tmp_compexpr_left_15 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_17, tmp_subscript_name_17);
                        if (tmp_compexpr_left_15 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 402;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_27 = par_ui;
                        tmp_compexpr_right_15 = LOOKUP_ATTRIBUTE(tmp_source_name_27, const_str_plain_AUTHORITY_LOCKED_OUT);
                        if (tmp_compexpr_right_15 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_compexpr_left_15);

                            exception_lineno = 402;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_15, tmp_compexpr_right_15);
                        Py_DECREF(tmp_compexpr_left_15);
                        Py_DECREF(tmp_compexpr_right_15);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 402;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        tmp_or_left_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        tmp_or_left_truth_1 = tmp_or_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
                        if (tmp_or_left_truth_1 == 1) {
                            goto or_left_1;
                        } else {
                            goto or_right_1;
                        }
                        or_right_1:;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_28 = par_ui;
                        tmp_subscribed_name_18 = LOOKUP_ATTRIBUTE(tmp_source_name_28, const_str_plain_admin_aol_list);
                        if (tmp_subscribed_name_18 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 402;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_18 = var_y;
                        tmp_compexpr_left_16 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_18, tmp_subscript_name_18);
                        Py_DECREF(tmp_subscribed_name_18);
                        if (tmp_compexpr_left_16 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 402;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_29 = par_ui;
                        tmp_subscribed_name_19 = LOOKUP_ATTRIBUTE(tmp_source_name_29, const_str_plain_retrylimit_list);
                        if (tmp_subscribed_name_19 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_compexpr_left_16);

                            exception_lineno = 402;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_19 = var_y;
                        tmp_compexpr_right_16 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_19, tmp_subscript_name_19);
                        Py_DECREF(tmp_subscribed_name_19);
                        if (tmp_compexpr_right_16 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_compexpr_left_16);

                            exception_lineno = 402;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        tmp_res = RICH_COMPARE_BOOL_GTE_OBJECT_OBJECT(tmp_compexpr_left_16, tmp_compexpr_right_16);
                        Py_DECREF(tmp_compexpr_left_16);
                        Py_DECREF(tmp_compexpr_right_16);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 402;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        tmp_or_right_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        tmp_condition_result_20 = tmp_or_right_value_1;
                        goto or_end_1;
                        or_left_1:;
                        tmp_condition_result_20 = tmp_or_left_value_1;
                        or_end_1:;
                        if (tmp_condition_result_20 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_20;
                        } else {
                            goto branch_no_20;
                        }
                        branch_yes_20:;
                        {
                            PyObject *tmp_ass_subvalue_8;
                            PyObject *tmp_left_name_19;
                            PyObject *tmp_subscribed_name_20;
                            PyObject *tmp_source_name_30;
                            PyObject *tmp_subscript_name_20;
                            PyObject *tmp_right_name_19;
                            PyObject *tmp_ass_subscribed_8;
                            PyObject *tmp_source_name_31;
                            PyObject *tmp_ass_subscript_8;
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_30 = par_ui;
                            tmp_subscribed_name_20 = LOOKUP_ATTRIBUTE(tmp_source_name_30, const_str_plain_retrylimit_list);
                            if (tmp_subscribed_name_20 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 403;
                                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_7;
                            }
                            CHECK_OBJECT(var_y);
                            tmp_subscript_name_20 = var_y;
                            tmp_left_name_19 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_20, tmp_subscript_name_20);
                            Py_DECREF(tmp_subscribed_name_20);
                            if (tmp_left_name_19 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 403;
                                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_7;
                            }
                            tmp_right_name_19 = const_int_pos_1;
                            tmp_ass_subvalue_8 = BINARY_OPERATION_ADD_OBJECT_INT(tmp_left_name_19, tmp_right_name_19);
                            Py_DECREF(tmp_left_name_19);
                            if (tmp_ass_subvalue_8 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 403;
                                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_7;
                            }
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_31 = par_ui;
                            tmp_ass_subscribed_8 = LOOKUP_ATTRIBUTE(tmp_source_name_31, const_str_plain_admin_aol_list);
                            if (tmp_ass_subscribed_8 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                Py_DECREF(tmp_ass_subvalue_8);

                                exception_lineno = 403;
                                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_7;
                            }
                            CHECK_OBJECT(var_y);
                            tmp_ass_subscript_8 = var_y;
                            tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_8, tmp_ass_subscript_8, tmp_ass_subvalue_8);
                            Py_DECREF(tmp_ass_subscribed_8);
                            Py_DECREF(tmp_ass_subvalue_8);
                            if (tmp_result == false) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 403;
                                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_7;
                            }
                        }
                        {
                            nuitka_bool tmp_condition_result_21;
                            PyObject *tmp_operand_name_4;
                            if (var_start_alo == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_alo");
                                exception_tb = NULL;

                                exception_lineno = 404;
                                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_7;
                            }

                            tmp_operand_name_4 = var_start_alo;
                            tmp_res = CHECK_IF_TRUE(tmp_operand_name_4);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 404;
                                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_7;
                            }
                            tmp_condition_result_21 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            if (tmp_condition_result_21 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_21;
                            } else {
                                goto branch_no_21;
                            }
                            branch_yes_21:;
                            {
                                PyObject *tmp_assign_source_59;
                                PyObject *tmp_left_name_20;
                                PyObject *tmp_right_name_20;
                                if (var_list_alo == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_alo");
                                    exception_tb = NULL;

                                    exception_lineno = 405;
                                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_7;
                                }

                                tmp_left_name_20 = var_list_alo;
                                tmp_right_name_20 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                                tmp_assign_source_59 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_20, tmp_right_name_20);
                                if (tmp_assign_source_59 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 405;
                                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_7;
                                }
                                {
                                    PyObject *old = var_list_alo;
                                    var_list_alo = tmp_assign_source_59;
                                    Py_XDECREF(old);
                                }

                            }
                            goto branch_end_21;
                            branch_no_21:;
                            {
                                PyObject *tmp_assign_source_60;
                                tmp_assign_source_60 = Py_False;
                                {
                                    PyObject *old = var_start_alo;
                                    var_start_alo = tmp_assign_source_60;
                                    Py_INCREF(var_start_alo);
                                    Py_XDECREF(old);
                                }

                            }
                            branch_end_21:;
                        }
                        {
                            PyObject *tmp_assign_source_61;
                            PyObject *tmp_left_name_21;
                            PyObject *tmp_right_name_21;
                            PyObject *tmp_subscribed_name_21;
                            PyObject *tmp_source_name_32;
                            PyObject *tmp_subscript_name_21;
                            if (var_list_alo == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_alo");
                                exception_tb = NULL;

                                exception_lineno = 408;
                                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_7;
                            }

                            tmp_left_name_21 = var_list_alo;
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_32 = par_ui;
                            tmp_subscribed_name_21 = LOOKUP_ATTRIBUTE(tmp_source_name_32, const_str_plain_devs_list);
                            if (tmp_subscribed_name_21 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 408;
                                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_7;
                            }
                            CHECK_OBJECT(var_y);
                            tmp_subscript_name_21 = var_y;
                            tmp_right_name_21 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_21, tmp_subscript_name_21);
                            Py_DECREF(tmp_subscribed_name_21);
                            if (tmp_right_name_21 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 408;
                                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_7;
                            }
                            tmp_assign_source_61 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_21, tmp_right_name_21);
                            Py_DECREF(tmp_right_name_21);
                            if (tmp_assign_source_61 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 408;
                                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_7;
                            }
                            {
                                PyObject *old = var_list_alo;
                                var_list_alo = tmp_assign_source_61;
                                Py_XDECREF(old);
                            }

                        }
                        branch_no_20:;
                    }
                    branch_end_18:;
                }
                goto branch_end_17;
                branch_no_17:;
                {
                    nuitka_bool tmp_condition_result_22;
                    PyObject *tmp_compexpr_left_17;
                    PyObject *tmp_compexpr_right_17;
                    PyObject *tmp_subscribed_name_22;
                    PyObject *tmp_subscript_name_22;
                    CHECK_OBJECT(par_res_list);
                    tmp_subscribed_name_22 = par_res_list;
                    CHECK_OBJECT(var_count);
                    tmp_subscript_name_22 = var_count;
                    tmp_compexpr_left_17 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_22, tmp_subscript_name_22);
                    if (tmp_compexpr_left_17 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 409;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                    tmp_compexpr_right_17 = const_int_pos_3;
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_17, tmp_compexpr_right_17);
                    Py_DECREF(tmp_compexpr_left_17);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 409;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_7;
                    }
                    tmp_condition_result_22 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_22 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_22;
                    } else {
                        goto branch_no_22;
                    }
                    branch_yes_22:;
                    {
                        nuitka_bool tmp_condition_result_23;
                        PyObject *tmp_operand_name_5;
                        if (var_start_na == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_na");
                            exception_tb = NULL;

                            exception_lineno = 410;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }

                        tmp_operand_name_5 = var_start_na;
                        tmp_res = CHECK_IF_TRUE(tmp_operand_name_5);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 410;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        tmp_condition_result_23 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_23 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_23;
                        } else {
                            goto branch_no_23;
                        }
                        branch_yes_23:;
                        {
                            PyObject *tmp_assign_source_62;
                            PyObject *tmp_left_name_22;
                            PyObject *tmp_right_name_22;
                            if (var_list_na == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_na");
                                exception_tb = NULL;

                                exception_lineno = 411;
                                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_7;
                            }

                            tmp_left_name_22 = var_list_na;
                            tmp_right_name_22 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                            tmp_assign_source_62 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_22, tmp_right_name_22);
                            if (tmp_assign_source_62 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 411;
                                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_7;
                            }
                            {
                                PyObject *old = var_list_na;
                                var_list_na = tmp_assign_source_62;
                                Py_XDECREF(old);
                            }

                        }
                        goto branch_end_23;
                        branch_no_23:;
                        {
                            PyObject *tmp_assign_source_63;
                            tmp_assign_source_63 = Py_False;
                            {
                                PyObject *old = var_start_na;
                                var_start_na = tmp_assign_source_63;
                                Py_INCREF(var_start_na);
                                Py_XDECREF(old);
                            }

                        }
                        branch_end_23:;
                    }
                    {
                        PyObject *tmp_assign_source_64;
                        PyObject *tmp_left_name_23;
                        PyObject *tmp_right_name_23;
                        PyObject *tmp_subscribed_name_23;
                        PyObject *tmp_source_name_33;
                        PyObject *tmp_subscript_name_23;
                        if (var_list_na == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_na");
                            exception_tb = NULL;

                            exception_lineno = 414;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }

                        tmp_left_name_23 = var_list_na;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_33 = par_ui;
                        tmp_subscribed_name_23 = LOOKUP_ATTRIBUTE(tmp_source_name_33, const_str_plain_devs_list);
                        if (tmp_subscribed_name_23 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 414;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_23 = var_y;
                        tmp_right_name_23 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_23, tmp_subscript_name_23);
                        Py_DECREF(tmp_subscribed_name_23);
                        if (tmp_right_name_23 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 414;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        tmp_assign_source_64 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_23, tmp_right_name_23);
                        Py_DECREF(tmp_right_name_23);
                        if (tmp_assign_source_64 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 414;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        {
                            PyObject *old = var_list_na;
                            var_list_na = tmp_assign_source_64;
                            Py_XDECREF(old);
                        }

                    }
                    goto branch_end_22;
                    branch_no_22:;
                    {
                        nuitka_bool tmp_condition_result_24;
                        PyObject *tmp_compexpr_left_18;
                        PyObject *tmp_compexpr_right_18;
                        PyObject *tmp_subscribed_name_24;
                        PyObject *tmp_subscript_name_24;
                        CHECK_OBJECT(par_res_list);
                        tmp_subscribed_name_24 = par_res_list;
                        CHECK_OBJECT(var_count);
                        tmp_subscript_name_24 = var_count;
                        tmp_compexpr_left_18 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_24, tmp_subscript_name_24);
                        if (tmp_compexpr_left_18 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 415;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        tmp_compexpr_right_18 = const_int_pos_4;
                        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_18, tmp_compexpr_right_18);
                        Py_DECREF(tmp_compexpr_left_18);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 415;
                            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_7;
                        }
                        tmp_condition_result_24 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_24 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_24;
                        } else {
                            goto branch_no_24;
                        }
                        branch_yes_24:;
                        {
                            nuitka_bool tmp_condition_result_25;
                            PyObject *tmp_operand_name_6;
                            if (var_start_spb == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_spb");
                                exception_tb = NULL;

                                exception_lineno = 416;
                                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_7;
                            }

                            tmp_operand_name_6 = var_start_spb;
                            tmp_res = CHECK_IF_TRUE(tmp_operand_name_6);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 416;
                                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_7;
                            }
                            tmp_condition_result_25 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            if (tmp_condition_result_25 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_25;
                            } else {
                                goto branch_no_25;
                            }
                            branch_yes_25:;
                            {
                                PyObject *tmp_assign_source_65;
                                PyObject *tmp_left_name_24;
                                PyObject *tmp_right_name_24;
                                if (var_list_spb == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_spb");
                                    exception_tb = NULL;

                                    exception_lineno = 417;
                                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_7;
                                }

                                tmp_left_name_24 = var_list_spb;
                                tmp_right_name_24 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                                tmp_assign_source_65 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_24, tmp_right_name_24);
                                if (tmp_assign_source_65 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 417;
                                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_7;
                                }
                                {
                                    PyObject *old = var_list_spb;
                                    var_list_spb = tmp_assign_source_65;
                                    Py_XDECREF(old);
                                }

                            }
                            goto branch_end_25;
                            branch_no_25:;
                            {
                                PyObject *tmp_assign_source_66;
                                tmp_assign_source_66 = Py_False;
                                {
                                    PyObject *old = var_start_spb;
                                    var_start_spb = tmp_assign_source_66;
                                    Py_INCREF(var_start_spb);
                                    Py_XDECREF(old);
                                }

                            }
                            branch_end_25:;
                        }
                        {
                            PyObject *tmp_assign_source_67;
                            PyObject *tmp_left_name_25;
                            PyObject *tmp_right_name_25;
                            PyObject *tmp_subscribed_name_25;
                            PyObject *tmp_source_name_34;
                            PyObject *tmp_subscript_name_25;
                            if (var_list_spb == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_spb");
                                exception_tb = NULL;

                                exception_lineno = 420;
                                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_7;
                            }

                            tmp_left_name_25 = var_list_spb;
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_34 = par_ui;
                            tmp_subscribed_name_25 = LOOKUP_ATTRIBUTE(tmp_source_name_34, const_str_plain_devs_list);
                            if (tmp_subscribed_name_25 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 420;
                                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_7;
                            }
                            CHECK_OBJECT(var_y);
                            tmp_subscript_name_25 = var_y;
                            tmp_right_name_25 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_25, tmp_subscript_name_25);
                            Py_DECREF(tmp_subscribed_name_25);
                            if (tmp_right_name_25 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 420;
                                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_7;
                            }
                            tmp_assign_source_67 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_25, tmp_right_name_25);
                            Py_DECREF(tmp_right_name_25);
                            if (tmp_assign_source_67 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 420;
                                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_7;
                            }
                            {
                                PyObject *old = var_list_spb;
                                var_list_spb = tmp_assign_source_67;
                                Py_XDECREF(old);
                            }

                        }
                        goto branch_end_24;
                        branch_no_24:;
                        {
                            nuitka_bool tmp_condition_result_26;
                            PyObject *tmp_compexpr_left_19;
                            PyObject *tmp_compexpr_right_19;
                            PyObject *tmp_subscribed_name_26;
                            PyObject *tmp_subscript_name_26;
                            CHECK_OBJECT(par_res_list);
                            tmp_subscribed_name_26 = par_res_list;
                            CHECK_OBJECT(var_count);
                            tmp_subscript_name_26 = var_count;
                            tmp_compexpr_left_19 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_26, tmp_subscript_name_26);
                            if (tmp_compexpr_left_19 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 421;
                                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_7;
                            }
                            tmp_compexpr_right_19 = const_int_pos_6;
                            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_19, tmp_compexpr_right_19);
                            Py_DECREF(tmp_compexpr_left_19);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 421;
                                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_7;
                            }
                            tmp_condition_result_26 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            if (tmp_condition_result_26 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_26;
                            } else {
                                goto branch_no_26;
                            }
                            branch_yes_26:;
                            {
                                nuitka_bool tmp_condition_result_27;
                                PyObject *tmp_operand_name_7;
                                if (var_start_miss == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_miss");
                                    exception_tb = NULL;

                                    exception_lineno = 422;
                                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_7;
                                }

                                tmp_operand_name_7 = var_start_miss;
                                tmp_res = CHECK_IF_TRUE(tmp_operand_name_7);
                                if (tmp_res == -1) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 422;
                                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_7;
                                }
                                tmp_condition_result_27 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                                if (tmp_condition_result_27 == NUITKA_BOOL_TRUE) {
                                    goto branch_yes_27;
                                } else {
                                    goto branch_no_27;
                                }
                                branch_yes_27:;
                                {
                                    PyObject *tmp_assign_source_68;
                                    PyObject *tmp_left_name_26;
                                    PyObject *tmp_right_name_26;
                                    if (var_list_miss == NULL) {

                                        exception_type = PyExc_UnboundLocalError;
                                        Py_INCREF(exception_type);
                                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_miss");
                                        exception_tb = NULL;

                                        exception_lineno = 423;
                                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                        goto try_except_handler_7;
                                    }

                                    tmp_left_name_26 = var_list_miss;
                                    tmp_right_name_26 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                                    tmp_assign_source_68 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_26, tmp_right_name_26);
                                    if (tmp_assign_source_68 == NULL) {
                                        assert(ERROR_OCCURRED());

                                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                        exception_lineno = 423;
                                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                        goto try_except_handler_7;
                                    }
                                    {
                                        PyObject *old = var_list_miss;
                                        var_list_miss = tmp_assign_source_68;
                                        Py_XDECREF(old);
                                    }

                                }
                                goto branch_end_27;
                                branch_no_27:;
                                {
                                    PyObject *tmp_assign_source_69;
                                    tmp_assign_source_69 = Py_False;
                                    {
                                        PyObject *old = var_start_miss;
                                        var_start_miss = tmp_assign_source_69;
                                        Py_INCREF(var_start_miss);
                                        Py_XDECREF(old);
                                    }

                                }
                                branch_end_27:;
                            }
                            {
                                PyObject *tmp_assign_source_70;
                                PyObject *tmp_left_name_27;
                                PyObject *tmp_right_name_27;
                                PyObject *tmp_subscribed_name_27;
                                PyObject *tmp_source_name_35;
                                PyObject *tmp_subscript_name_27;
                                if (var_list_miss == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_miss");
                                    exception_tb = NULL;

                                    exception_lineno = 426;
                                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_7;
                                }

                                tmp_left_name_27 = var_list_miss;
                                CHECK_OBJECT(par_ui);
                                tmp_source_name_35 = par_ui;
                                tmp_subscribed_name_27 = LOOKUP_ATTRIBUTE(tmp_source_name_35, const_str_plain_devs_list);
                                if (tmp_subscribed_name_27 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 426;
                                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_7;
                                }
                                CHECK_OBJECT(var_y);
                                tmp_subscript_name_27 = var_y;
                                tmp_right_name_27 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_27, tmp_subscript_name_27);
                                Py_DECREF(tmp_subscribed_name_27);
                                if (tmp_right_name_27 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 426;
                                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_7;
                                }
                                tmp_assign_source_70 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_27, tmp_right_name_27);
                                Py_DECREF(tmp_right_name_27);
                                if (tmp_assign_source_70 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 426;
                                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_7;
                                }
                                {
                                    PyObject *old = var_list_miss;
                                    var_list_miss = tmp_assign_source_70;
                                    Py_XDECREF(old);
                                }

                            }
                            goto branch_end_26;
                            branch_no_26:;
                            {
                                nuitka_bool tmp_condition_result_28;
                                PyObject *tmp_operand_name_8;
                                if (var_start_to == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_to");
                                    exception_tb = NULL;

                                    exception_lineno = 428;
                                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_7;
                                }

                                tmp_operand_name_8 = var_start_to;
                                tmp_res = CHECK_IF_TRUE(tmp_operand_name_8);
                                if (tmp_res == -1) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 428;
                                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_7;
                                }
                                tmp_condition_result_28 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                                if (tmp_condition_result_28 == NUITKA_BOOL_TRUE) {
                                    goto branch_yes_28;
                                } else {
                                    goto branch_no_28;
                                }
                                branch_yes_28:;
                                {
                                    PyObject *tmp_assign_source_71;
                                    PyObject *tmp_left_name_28;
                                    PyObject *tmp_right_name_28;
                                    if (var_list_to == NULL) {

                                        exception_type = PyExc_UnboundLocalError;
                                        Py_INCREF(exception_type);
                                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_to");
                                        exception_tb = NULL;

                                        exception_lineno = 429;
                                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                        goto try_except_handler_7;
                                    }

                                    tmp_left_name_28 = var_list_to;
                                    tmp_right_name_28 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                                    tmp_assign_source_71 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_28, tmp_right_name_28);
                                    if (tmp_assign_source_71 == NULL) {
                                        assert(ERROR_OCCURRED());

                                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                        exception_lineno = 429;
                                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                        goto try_except_handler_7;
                                    }
                                    {
                                        PyObject *old = var_list_to;
                                        var_list_to = tmp_assign_source_71;
                                        Py_XDECREF(old);
                                    }

                                }
                                goto branch_end_28;
                                branch_no_28:;
                                {
                                    PyObject *tmp_assign_source_72;
                                    tmp_assign_source_72 = Py_False;
                                    {
                                        PyObject *old = var_start_to;
                                        var_start_to = tmp_assign_source_72;
                                        Py_INCREF(var_start_to);
                                        Py_XDECREF(old);
                                    }

                                }
                                branch_end_28:;
                            }
                            {
                                PyObject *tmp_assign_source_73;
                                PyObject *tmp_left_name_29;
                                PyObject *tmp_right_name_29;
                                PyObject *tmp_subscribed_name_28;
                                PyObject *tmp_source_name_36;
                                PyObject *tmp_subscript_name_28;
                                if (var_list_to == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_to");
                                    exception_tb = NULL;

                                    exception_lineno = 432;
                                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_7;
                                }

                                tmp_left_name_29 = var_list_to;
                                CHECK_OBJECT(par_ui);
                                tmp_source_name_36 = par_ui;
                                tmp_subscribed_name_28 = LOOKUP_ATTRIBUTE(tmp_source_name_36, const_str_plain_devs_list);
                                if (tmp_subscribed_name_28 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 432;
                                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_7;
                                }
                                CHECK_OBJECT(var_y);
                                tmp_subscript_name_28 = var_y;
                                tmp_right_name_29 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_28, tmp_subscript_name_28);
                                Py_DECREF(tmp_subscribed_name_28);
                                if (tmp_right_name_29 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 432;
                                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_7;
                                }
                                tmp_assign_source_73 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_29, tmp_right_name_29);
                                Py_DECREF(tmp_right_name_29);
                                if (tmp_assign_source_73 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 432;
                                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_7;
                                }
                                {
                                    PyObject *old = var_list_to;
                                    var_list_to = tmp_assign_source_73;
                                    Py_XDECREF(old);
                                }

                            }
                            branch_end_26:;
                        }
                        branch_end_24:;
                    }
                    branch_end_22:;
                }
                branch_end_17:;
            }
            branch_end_12:;
        }
        {
            PyObject *tmp_assign_source_74;
            PyObject *tmp_left_name_30;
            PyObject *tmp_right_name_30;
            CHECK_OBJECT(var_count);
            tmp_left_name_30 = var_count;
            tmp_right_name_30 = const_int_pos_1;
            tmp_assign_source_74 = BINARY_OPERATION_ADD_OBJECT_INT(tmp_left_name_30, tmp_right_name_30);
            assert(!(tmp_assign_source_74 == NULL));
            {
                PyObject *old = var_count;
                assert(old != NULL);
                var_count = tmp_assign_source_74;
                Py_DECREF(old);
            }

        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 371;
            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
            goto try_except_handler_7;
        }
        goto loop_start_6;
        loop_end_6:;
        goto try_end_7;
        // Exception handler code:
        try_except_handler_7:;
        exception_keeper_type_7 = exception_type;
        exception_keeper_value_7 = exception_value;
        exception_keeper_tb_7 = exception_tb;
        exception_keeper_lineno_7 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_6__iter_value);
        tmp_for_loop_6__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_6__for_iterator);
        Py_DECREF(tmp_for_loop_6__for_iterator);
        tmp_for_loop_6__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_7;
        exception_value = exception_keeper_value_7;
        exception_tb = exception_keeper_tb_7;
        exception_lineno = exception_keeper_lineno_7;

        goto frame_exception_exit_1;
        // End of try:
        try_end_7:;
        Py_XDECREF(tmp_for_loop_6__iter_value);
        tmp_for_loop_6__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_6__for_iterator);
        Py_DECREF(tmp_for_loop_6__for_iterator);
        tmp_for_loop_6__for_iterator = NULL;

        {
            nuitka_bool tmp_condition_result_29;
            PyObject *tmp_compexpr_left_20;
            PyObject *tmp_compexpr_right_20;
            if (var_list_miss == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_miss");
                exception_tb = NULL;

                exception_lineno = 434;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_20 = var_list_miss;
            tmp_compexpr_right_20 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_20, tmp_compexpr_right_20);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 434;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_29 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_29 == NUITKA_BOOL_TRUE) {
                goto branch_yes_29;
            } else {
                goto branch_no_29;
            }
            branch_yes_29:;
            {
                PyObject *tmp_called_name_5;
                PyObject *tmp_source_name_37;
                PyObject *tmp_call_result_15;
                PyObject *tmp_args_element_name_10;
                PyObject *tmp_left_name_31;
                PyObject *tmp_right_name_31;
                CHECK_OBJECT(par_ui);
                tmp_source_name_37 = par_ui;
                tmp_called_name_5 = LOOKUP_ATTRIBUTE(tmp_source_name_37, const_str_plain_msg_err);
                if (tmp_called_name_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 435;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                if (var_list_miss == NULL) {
                    Py_DECREF(tmp_called_name_5);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_miss");
                    exception_tb = NULL;

                    exception_lineno = 435;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_left_name_31 = var_list_miss;
                tmp_right_name_31 = const_str_digest_21cdd10f62cd6949a9d1866524676a91;
                tmp_args_element_name_10 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_31, tmp_right_name_31);
                if (tmp_args_element_name_10 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_5);

                    exception_lineno = 435;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 435;
                tmp_call_result_15 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_5, tmp_args_element_name_10);
                Py_DECREF(tmp_called_name_5);
                Py_DECREF(tmp_args_element_name_10);
                if (tmp_call_result_15 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 435;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_15);
            }
            branch_no_29:;
        }
        {
            nuitka_bool tmp_condition_result_30;
            PyObject *tmp_compexpr_left_21;
            PyObject *tmp_compexpr_right_21;
            if (var_list_na == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_na");
                exception_tb = NULL;

                exception_lineno = 436;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_21 = var_list_na;
            tmp_compexpr_right_21 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_21, tmp_compexpr_right_21);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 436;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_30 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_30 == NUITKA_BOOL_TRUE) {
                goto branch_yes_30;
            } else {
                goto branch_no_30;
            }
            branch_yes_30:;
            {
                PyObject *tmp_called_name_6;
                PyObject *tmp_source_name_38;
                PyObject *tmp_call_result_16;
                PyObject *tmp_args_element_name_11;
                PyObject *tmp_left_name_32;
                PyObject *tmp_left_name_33;
                PyObject *tmp_right_name_32;
                PyObject *tmp_right_name_33;
                CHECK_OBJECT(par_ui);
                tmp_source_name_38 = par_ui;
                tmp_called_name_6 = LOOKUP_ATTRIBUTE(tmp_source_name_38, const_str_plain_msg_err);
                if (tmp_called_name_6 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 437;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_left_name_33 = const_str_digest_d6f4bb381952f457ada9f751d4a228b9;
                if (var_list_na == NULL) {
                    Py_DECREF(tmp_called_name_6);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_na");
                    exception_tb = NULL;

                    exception_lineno = 437;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_right_name_32 = var_list_na;
                tmp_left_name_32 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_33, tmp_right_name_32);
                if (tmp_left_name_32 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_6);

                    exception_lineno = 437;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_right_name_33 = const_str_dot;
                tmp_args_element_name_11 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_32, tmp_right_name_33);
                Py_DECREF(tmp_left_name_32);
                if (tmp_args_element_name_11 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_6);

                    exception_lineno = 437;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 437;
                tmp_call_result_16 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_6, tmp_args_element_name_11);
                Py_DECREF(tmp_called_name_6);
                Py_DECREF(tmp_args_element_name_11);
                if (tmp_call_result_16 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 437;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_16);
            }
            branch_no_30:;
        }
        {
            nuitka_bool tmp_condition_result_31;
            PyObject *tmp_compexpr_left_22;
            PyObject *tmp_compexpr_right_22;
            if (var_list_spb == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_spb");
                exception_tb = NULL;

                exception_lineno = 438;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_22 = var_list_spb;
            tmp_compexpr_right_22 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_22, tmp_compexpr_right_22);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 438;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_31 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_31 == NUITKA_BOOL_TRUE) {
                goto branch_yes_31;
            } else {
                goto branch_no_31;
            }
            branch_yes_31:;
            {
                PyObject *tmp_called_name_7;
                PyObject *tmp_source_name_39;
                PyObject *tmp_call_result_17;
                PyObject *tmp_args_element_name_12;
                PyObject *tmp_left_name_34;
                PyObject *tmp_left_name_35;
                PyObject *tmp_right_name_34;
                PyObject *tmp_right_name_35;
                CHECK_OBJECT(par_ui);
                tmp_source_name_39 = par_ui;
                tmp_called_name_7 = LOOKUP_ATTRIBUTE(tmp_source_name_39, const_str_plain_msg_err);
                if (tmp_called_name_7 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 439;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_left_name_35 = const_str_digest_d6f4bb381952f457ada9f751d4a228b9;
                if (var_list_spb == NULL) {
                    Py_DECREF(tmp_called_name_7);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_spb");
                    exception_tb = NULL;

                    exception_lineno = 439;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_right_name_34 = var_list_spb;
                tmp_left_name_34 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_35, tmp_right_name_34);
                if (tmp_left_name_34 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_7);

                    exception_lineno = 439;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_right_name_35 = const_str_digest_6f9d3b8c1c22c69a4d23112bae2b5acb;
                tmp_args_element_name_12 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_34, tmp_right_name_35);
                Py_DECREF(tmp_left_name_34);
                if (tmp_args_element_name_12 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_7);

                    exception_lineno = 439;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 439;
                tmp_call_result_17 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_7, tmp_args_element_name_12);
                Py_DECREF(tmp_called_name_7);
                Py_DECREF(tmp_args_element_name_12);
                if (tmp_call_result_17 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 439;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_17);
            }
            branch_no_31:;
        }
        {
            nuitka_bool tmp_condition_result_32;
            PyObject *tmp_compexpr_left_23;
            PyObject *tmp_compexpr_right_23;
            if (var_list_to == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_to");
                exception_tb = NULL;

                exception_lineno = 441;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_23 = var_list_to;
            tmp_compexpr_right_23 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_23, tmp_compexpr_right_23);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 441;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_32 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_32 == NUITKA_BOOL_TRUE) {
                goto branch_yes_32;
            } else {
                goto branch_no_32;
            }
            branch_yes_32:;
            {
                PyObject *tmp_called_name_8;
                PyObject *tmp_source_name_40;
                PyObject *tmp_call_result_18;
                PyObject *tmp_args_element_name_13;
                PyObject *tmp_left_name_36;
                PyObject *tmp_left_name_37;
                PyObject *tmp_right_name_36;
                PyObject *tmp_right_name_37;
                CHECK_OBJECT(par_ui);
                tmp_source_name_40 = par_ui;
                tmp_called_name_8 = LOOKUP_ATTRIBUTE(tmp_source_name_40, const_str_plain_msg_err);
                if (tmp_called_name_8 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 442;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_left_name_37 = const_str_digest_520a2c177e6589b85d829c7715981134;
                if (var_list_to == NULL) {
                    Py_DECREF(tmp_called_name_8);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_to");
                    exception_tb = NULL;

                    exception_lineno = 442;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_right_name_36 = var_list_to;
                tmp_left_name_36 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_37, tmp_right_name_36);
                if (tmp_left_name_36 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_8);

                    exception_lineno = 442;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_right_name_37 = const_str_dot;
                tmp_args_element_name_13 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_36, tmp_right_name_37);
                Py_DECREF(tmp_left_name_36);
                if (tmp_args_element_name_13 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_8);

                    exception_lineno = 442;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 442;
                tmp_call_result_18 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_8, tmp_args_element_name_13);
                Py_DECREF(tmp_called_name_8);
                Py_DECREF(tmp_args_element_name_13);
                if (tmp_call_result_18 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 442;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_18);
            }
            branch_no_32:;
        }
        {
            nuitka_bool tmp_condition_result_33;
            PyObject *tmp_compexpr_left_24;
            PyObject *tmp_compexpr_right_24;
            if (var_list_f == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                exception_tb = NULL;

                exception_lineno = 443;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_24 = var_list_f;
            tmp_compexpr_right_24 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_24, tmp_compexpr_right_24);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 443;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_33 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_33 == NUITKA_BOOL_TRUE) {
                goto branch_yes_33;
            } else {
                goto branch_no_33;
            }
            branch_yes_33:;
            {
                nuitka_bool tmp_condition_result_34;
                PyObject *tmp_compexpr_left_25;
                PyObject *tmp_compexpr_right_25;
                if (var_count_f == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "count_f");
                    exception_tb = NULL;

                    exception_lineno = 444;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_compexpr_left_25 = var_count_f;
                tmp_compexpr_right_25 = const_int_pos_1;
                tmp_res = RICH_COMPARE_BOOL_GT_OBJECT_INT(tmp_compexpr_left_25, tmp_compexpr_right_25);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 444;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_condition_result_34 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_34 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_34;
                } else {
                    goto branch_no_34;
                }
                branch_yes_34:;
                {
                    PyObject *tmp_called_name_9;
                    PyObject *tmp_source_name_41;
                    PyObject *tmp_call_result_19;
                    PyObject *tmp_args_element_name_14;
                    PyObject *tmp_left_name_38;
                    PyObject *tmp_left_name_39;
                    PyObject *tmp_right_name_38;
                    PyObject *tmp_right_name_39;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_41 = par_ui;
                    tmp_called_name_9 = LOOKUP_ATTRIBUTE(tmp_source_name_41, const_str_plain_msg_err);
                    if (tmp_called_name_9 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 445;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_left_name_39 = const_str_digest_d6f4bb381952f457ada9f751d4a228b9;
                    if (var_list_f == NULL) {
                        Py_DECREF(tmp_called_name_9);
                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                        exception_tb = NULL;

                        exception_lineno = 445;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_right_name_38 = var_list_f;
                    tmp_left_name_38 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_39, tmp_right_name_38);
                    if (tmp_left_name_38 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_9);

                        exception_lineno = 445;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_39 = const_str_digest_fcb3f707055a45843f9f5f984a177a66;
                    tmp_args_element_name_14 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_38, tmp_right_name_39);
                    Py_DECREF(tmp_left_name_38);
                    if (tmp_args_element_name_14 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_9);

                        exception_lineno = 445;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 445;
                    tmp_call_result_19 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_9, tmp_args_element_name_14);
                    Py_DECREF(tmp_called_name_9);
                    Py_DECREF(tmp_args_element_name_14);
                    if (tmp_call_result_19 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 445;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_19);
                }
                goto branch_end_34;
                branch_no_34:;
                {
                    PyObject *tmp_called_name_10;
                    PyObject *tmp_source_name_42;
                    PyObject *tmp_call_result_20;
                    PyObject *tmp_args_element_name_15;
                    PyObject *tmp_left_name_40;
                    PyObject *tmp_left_name_41;
                    PyObject *tmp_left_name_42;
                    PyObject *tmp_left_name_43;
                    PyObject *tmp_left_name_44;
                    PyObject *tmp_left_name_45;
                    PyObject *tmp_right_name_40;
                    PyObject *tmp_right_name_41;
                    PyObject *tmp_right_name_42;
                    PyObject *tmp_str_arg_1;
                    PyObject *tmp_subscribed_name_29;
                    PyObject *tmp_source_name_43;
                    PyObject *tmp_subscript_name_29;
                    PyObject *tmp_right_name_43;
                    PyObject *tmp_right_name_44;
                    PyObject *tmp_str_arg_2;
                    PyObject *tmp_subscribed_name_30;
                    PyObject *tmp_source_name_44;
                    PyObject *tmp_subscript_name_30;
                    PyObject *tmp_right_name_45;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_42 = par_ui;
                    tmp_called_name_10 = LOOKUP_ATTRIBUTE(tmp_source_name_42, const_str_plain_msg_err);
                    if (tmp_called_name_10 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 447;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_left_name_45 = const_str_digest_d6f4bb381952f457ada9f751d4a228b9;
                    if (var_list_f == NULL) {
                        Py_DECREF(tmp_called_name_10);
                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                        exception_tb = NULL;

                        exception_lineno = 447;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_right_name_40 = var_list_f;
                    tmp_left_name_44 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_45, tmp_right_name_40);
                    if (tmp_left_name_44 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_10);

                        exception_lineno = 447;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_41 = const_str_digest_2d5ab67f28a1f8ea7de7b4da8d17a7c2;
                    tmp_left_name_43 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_44, tmp_right_name_41);
                    Py_DECREF(tmp_left_name_44);
                    if (tmp_left_name_43 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_10);

                        exception_lineno = 447;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_43 = par_ui;
                    tmp_subscribed_name_29 = LOOKUP_ATTRIBUTE(tmp_source_name_43, const_str_plain_admin_aol_list);
                    if (tmp_subscribed_name_29 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_10);
                        Py_DECREF(tmp_left_name_43);

                        exception_lineno = 447;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    if (var_last_f == NULL) {
                        Py_DECREF(tmp_called_name_10);
                        Py_DECREF(tmp_left_name_43);
                        Py_DECREF(tmp_subscribed_name_29);
                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "last_f");
                        exception_tb = NULL;

                        exception_lineno = 447;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_subscript_name_29 = var_last_f;
                    tmp_str_arg_1 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_29, tmp_subscript_name_29);
                    Py_DECREF(tmp_subscribed_name_29);
                    if (tmp_str_arg_1 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_10);
                        Py_DECREF(tmp_left_name_43);

                        exception_lineno = 447;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_42 = PyObject_Str(tmp_str_arg_1);
                    Py_DECREF(tmp_str_arg_1);
                    if (tmp_right_name_42 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_10);
                        Py_DECREF(tmp_left_name_43);

                        exception_lineno = 447;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_left_name_42 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_43, tmp_right_name_42);
                    Py_DECREF(tmp_left_name_43);
                    Py_DECREF(tmp_right_name_42);
                    if (tmp_left_name_42 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_10);

                        exception_lineno = 447;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_43 = const_str_digest_557fe80a6c273179b39f6cacbcbc5fdc;
                    tmp_left_name_41 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_42, tmp_right_name_43);
                    Py_DECREF(tmp_left_name_42);
                    if (tmp_left_name_41 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_10);

                        exception_lineno = 447;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_44 = par_ui;
                    tmp_subscribed_name_30 = LOOKUP_ATTRIBUTE(tmp_source_name_44, const_str_plain_retrylimit_list);
                    if (tmp_subscribed_name_30 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_10);
                        Py_DECREF(tmp_left_name_41);

                        exception_lineno = 447;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    if (var_last_f == NULL) {
                        Py_DECREF(tmp_called_name_10);
                        Py_DECREF(tmp_left_name_41);
                        Py_DECREF(tmp_subscribed_name_30);
                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "last_f");
                        exception_tb = NULL;

                        exception_lineno = 447;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_subscript_name_30 = var_last_f;
                    tmp_str_arg_2 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_30, tmp_subscript_name_30);
                    Py_DECREF(tmp_subscribed_name_30);
                    if (tmp_str_arg_2 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_10);
                        Py_DECREF(tmp_left_name_41);

                        exception_lineno = 447;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_44 = PyObject_Str(tmp_str_arg_2);
                    Py_DECREF(tmp_str_arg_2);
                    if (tmp_right_name_44 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_10);
                        Py_DECREF(tmp_left_name_41);

                        exception_lineno = 447;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_left_name_40 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_41, tmp_right_name_44);
                    Py_DECREF(tmp_left_name_41);
                    Py_DECREF(tmp_right_name_44);
                    if (tmp_left_name_40 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_10);

                        exception_lineno = 447;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_45 = const_str_dot;
                    tmp_args_element_name_15 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_40, tmp_right_name_45);
                    Py_DECREF(tmp_left_name_40);
                    if (tmp_args_element_name_15 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_10);

                        exception_lineno = 447;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 447;
                    tmp_call_result_20 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_10, tmp_args_element_name_15);
                    Py_DECREF(tmp_called_name_10);
                    Py_DECREF(tmp_args_element_name_15);
                    if (tmp_call_result_20 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 447;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_20);
                }
                branch_end_34:;
            }
            branch_no_33:;
        }
        {
            nuitka_bool tmp_condition_result_35;
            PyObject *tmp_compexpr_left_26;
            PyObject *tmp_compexpr_right_26;
            if (var_list_alo == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_alo");
                exception_tb = NULL;

                exception_lineno = 448;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_26 = var_list_alo;
            tmp_compexpr_right_26 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_26, tmp_compexpr_right_26);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 448;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_35 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_35 == NUITKA_BOOL_TRUE) {
                goto branch_yes_35;
            } else {
                goto branch_no_35;
            }
            branch_yes_35:;
            {
                PyObject *tmp_called_name_11;
                PyObject *tmp_source_name_45;
                PyObject *tmp_call_result_21;
                PyObject *tmp_args_element_name_16;
                PyObject *tmp_left_name_46;
                PyObject *tmp_left_name_47;
                PyObject *tmp_right_name_46;
                PyObject *tmp_right_name_47;
                CHECK_OBJECT(par_ui);
                tmp_source_name_45 = par_ui;
                tmp_called_name_11 = LOOKUP_ATTRIBUTE(tmp_source_name_45, const_str_plain_msg_err);
                if (tmp_called_name_11 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 449;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_left_name_47 = const_str_digest_65e9196bd4c730b537e5cdf8fe311777;
                if (var_list_alo == NULL) {
                    Py_DECREF(tmp_called_name_11);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_alo");
                    exception_tb = NULL;

                    exception_lineno = 449;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_right_name_46 = var_list_alo;
                tmp_left_name_46 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_47, tmp_right_name_46);
                if (tmp_left_name_46 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_11);

                    exception_lineno = 449;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_right_name_47 = const_str_digest_4b25adc675d90cc54c79030b05db6a07;
                tmp_args_element_name_16 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_46, tmp_right_name_47);
                Py_DECREF(tmp_left_name_46);
                if (tmp_args_element_name_16 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_11);

                    exception_lineno = 449;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 449;
                tmp_call_result_21 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_11, tmp_args_element_name_16);
                Py_DECREF(tmp_called_name_11);
                Py_DECREF(tmp_args_element_name_16);
                if (tmp_call_result_21 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 449;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_21);
            }
            branch_no_35:;
        }
        {
            nuitka_bool tmp_condition_result_36;
            PyObject *tmp_compexpr_left_27;
            PyObject *tmp_compexpr_right_27;
            if (var_list_p == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p");
                exception_tb = NULL;

                exception_lineno = 450;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_27 = var_list_p;
            tmp_compexpr_right_27 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_27, tmp_compexpr_right_27);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 450;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_36 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_36 == NUITKA_BOOL_TRUE) {
                goto branch_yes_36;
            } else {
                goto branch_no_36;
            }
            branch_yes_36:;
            {
                PyObject *tmp_called_name_12;
                PyObject *tmp_source_name_46;
                PyObject *tmp_call_result_22;
                PyObject *tmp_args_element_name_17;
                PyObject *tmp_left_name_48;
                PyObject *tmp_left_name_49;
                PyObject *tmp_right_name_48;
                PyObject *tmp_right_name_49;
                CHECK_OBJECT(par_ui);
                tmp_source_name_46 = par_ui;
                tmp_called_name_12 = LOOKUP_ATTRIBUTE(tmp_source_name_46, const_str_plain_msg_ok);
                if (tmp_called_name_12 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 451;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_left_name_49 = const_str_digest_1ca43a76406b1a1f0549319504d044c1;
                if (var_list_p == NULL) {
                    Py_DECREF(tmp_called_name_12);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p");
                    exception_tb = NULL;

                    exception_lineno = 451;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_right_name_48 = var_list_p;
                tmp_left_name_48 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_49, tmp_right_name_48);
                if (tmp_left_name_48 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_12);

                    exception_lineno = 451;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_right_name_49 = const_str_dot;
                tmp_args_element_name_17 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_48, tmp_right_name_49);
                Py_DECREF(tmp_left_name_48);
                if (tmp_args_element_name_17 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_12);

                    exception_lineno = 451;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 451;
                tmp_call_result_22 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_12, tmp_args_element_name_17);
                Py_DECREF(tmp_called_name_12);
                Py_DECREF(tmp_args_element_name_17);
                if (tmp_call_result_22 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 451;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_22);
            }
            branch_no_36:;
        }
        {
            PyObject *tmp_called_instance_16;
            PyObject *tmp_call_result_23;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_16 = par_ui;
            frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 452;
            tmp_call_result_23 = CALL_METHOD_NO_ARGS(tmp_called_instance_16, const_str_plain_updatePBA_prompt);
            if (tmp_call_result_23 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 452;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_23);
        }
        goto branch_end_11;
        branch_no_11:;
        {
            PyObject *tmp_assign_source_75;
            tmp_assign_source_75 = Py_True;
            {
                PyObject *old = var_start;
                var_start = tmp_assign_source_75;
                Py_INCREF(var_start);
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_76;
            tmp_assign_source_76 = const_str_empty;
            assert(var_liststr == NULL);
            Py_INCREF(tmp_assign_source_76);
            var_liststr = tmp_assign_source_76;
        }
        {
            PyObject *tmp_assign_source_77;
            tmp_assign_source_77 = const_int_0;
            assert(var_count == NULL);
            Py_INCREF(tmp_assign_source_77);
            var_count = tmp_assign_source_77;
        }
        {
            PyObject *tmp_assign_source_78;
            PyObject *tmp_iter_arg_7;
            CHECK_OBJECT(par_selected_list);
            tmp_iter_arg_7 = par_selected_list;
            tmp_assign_source_78 = MAKE_ITERATOR(tmp_iter_arg_7);
            if (tmp_assign_source_78 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 457;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_7__for_iterator == NULL);
            tmp_for_loop_7__for_iterator = tmp_assign_source_78;
        }
        // Tried code:
        loop_start_7:;
        {
            PyObject *tmp_next_source_7;
            PyObject *tmp_assign_source_79;
            CHECK_OBJECT(tmp_for_loop_7__for_iterator);
            tmp_next_source_7 = tmp_for_loop_7__for_iterator;
            tmp_assign_source_79 = ITERATOR_NEXT(tmp_next_source_7);
            if (tmp_assign_source_79 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_7;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    exception_lineno = 457;
                    goto try_except_handler_9;
                }
            }

            {
                PyObject *old = tmp_for_loop_7__iter_value;
                tmp_for_loop_7__iter_value = tmp_assign_source_79;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_80;
            CHECK_OBJECT(tmp_for_loop_7__iter_value);
            tmp_assign_source_80 = tmp_for_loop_7__iter_value;
            {
                PyObject *old = var_d;
                var_d = tmp_assign_source_80;
                Py_INCREF(var_d);
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assattr_name_6;
            PyObject *tmp_subscribed_name_31;
            PyObject *tmp_source_name_47;
            PyObject *tmp_subscript_name_31;
            PyObject *tmp_assattr_target_6;
            CHECK_OBJECT(par_ui);
            tmp_source_name_47 = par_ui;
            tmp_subscribed_name_31 = LOOKUP_ATTRIBUTE(tmp_source_name_47, const_str_plain_devs_list);
            if (tmp_subscribed_name_31 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 458;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            CHECK_OBJECT(var_d);
            tmp_subscript_name_31 = var_d;
            tmp_assattr_name_6 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_31, tmp_subscript_name_31);
            Py_DECREF(tmp_subscribed_name_31);
            if (tmp_assattr_name_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 458;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            CHECK_OBJECT(par_ui);
            tmp_assattr_target_6 = par_ui;
            tmp_result = SET_ATTRIBUTE(tmp_assattr_target_6, const_str_plain_devname, tmp_assattr_name_6);
            Py_DECREF(tmp_assattr_name_6);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 458;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
        }
        {
            PyObject *tmp_ass_subvalue_9;
            PyObject *tmp_ass_subscribed_9;
            PyObject *tmp_source_name_48;
            PyObject *tmp_ass_subscript_9;
            tmp_ass_subvalue_9 = const_int_0;
            CHECK_OBJECT(par_ui);
            tmp_source_name_48 = par_ui;
            tmp_ass_subscribed_9 = LOOKUP_ATTRIBUTE(tmp_source_name_48, const_str_plain_admin_aol_list);
            if (tmp_ass_subscribed_9 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 459;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            CHECK_OBJECT(var_d);
            tmp_ass_subscript_9 = var_d;
            tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_9, tmp_ass_subscript_9, tmp_ass_subvalue_9);
            Py_DECREF(tmp_ass_subscribed_9);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 459;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
        }
        {
            PyObject *tmp_called_instance_17;
            PyObject *tmp_mvar_value_6;
            PyObject *tmp_call_result_24;
            PyObject *tmp_args_element_name_18;
            PyObject *tmp_args_element_name_19;
            PyObject *tmp_args_element_name_20;
            tmp_mvar_value_6 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_dialogs);

            if (unlikely(tmp_mvar_value_6 == NULL)) {
                tmp_mvar_value_6 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_dialogs);
            }

            if (tmp_mvar_value_6 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 418 ], 36, 0);
                exception_tb = NULL;

                exception_lineno = 460;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }

            tmp_called_instance_17 = tmp_mvar_value_6;
            tmp_args_element_name_18 = Py_None;
            CHECK_OBJECT(par_ui);
            tmp_args_element_name_19 = par_ui;
            tmp_args_element_name_20 = const_int_pos_1;
            frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 460;
            {
                PyObject *call_args[] = {tmp_args_element_name_18, tmp_args_element_name_19, tmp_args_element_name_20};
                tmp_call_result_24 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_17, const_str_plain_query, call_args);
            }

            if (tmp_call_result_24 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 460;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            Py_DECREF(tmp_call_result_24);
        }
        {
            nuitka_bool tmp_condition_result_37;
            PyObject *tmp_operand_name_9;
            if (var_start == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start");
                exception_tb = NULL;

                exception_lineno = 461;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }

            tmp_operand_name_9 = var_start;
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_9);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 461;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            tmp_condition_result_37 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_37 == NUITKA_BOOL_TRUE) {
                goto branch_yes_37;
            } else {
                goto branch_no_37;
            }
            branch_yes_37:;
            {
                PyObject *tmp_assign_source_81;
                PyObject *tmp_left_name_50;
                PyObject *tmp_right_name_50;
                CHECK_OBJECT(var_liststr);
                tmp_left_name_50 = var_liststr;
                tmp_right_name_50 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                tmp_assign_source_81 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_50, tmp_right_name_50);
                if (tmp_assign_source_81 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 462;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_9;
                }
                {
                    PyObject *old = var_liststr;
                    assert(old != NULL);
                    var_liststr = tmp_assign_source_81;
                    Py_DECREF(old);
                }

            }
            goto branch_end_37;
            branch_no_37:;
            {
                PyObject *tmp_assign_source_82;
                tmp_assign_source_82 = Py_False;
                {
                    PyObject *old = var_start;
                    var_start = tmp_assign_source_82;
                    Py_INCREF(var_start);
                    Py_XDECREF(old);
                }

            }
            branch_end_37:;
        }
        {
            PyObject *tmp_assign_source_83;
            PyObject *tmp_left_name_51;
            PyObject *tmp_right_name_51;
            PyObject *tmp_subscribed_name_32;
            PyObject *tmp_source_name_49;
            PyObject *tmp_subscript_name_32;
            if (var_liststr == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "liststr");
                exception_tb = NULL;

                exception_lineno = 465;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }

            tmp_left_name_51 = var_liststr;
            CHECK_OBJECT(par_ui);
            tmp_source_name_49 = par_ui;
            tmp_subscribed_name_32 = LOOKUP_ATTRIBUTE(tmp_source_name_49, const_str_plain_devs_list);
            if (tmp_subscribed_name_32 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 465;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            CHECK_OBJECT(var_d);
            tmp_subscript_name_32 = var_d;
            tmp_right_name_51 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_32, tmp_subscript_name_32);
            Py_DECREF(tmp_subscribed_name_32);
            if (tmp_right_name_51 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 465;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            tmp_assign_source_83 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_51, tmp_right_name_51);
            Py_DECREF(tmp_right_name_51);
            if (tmp_assign_source_83 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 465;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            {
                PyObject *old = var_liststr;
                var_liststr = tmp_assign_source_83;
                Py_XDECREF(old);
            }

        }
        {
            nuitka_bool tmp_condition_result_38;
            PyObject *tmp_called_name_13;
            PyObject *tmp_source_name_50;
            PyObject *tmp_source_name_51;
            PyObject *tmp_mvar_value_7;
            PyObject *tmp_call_result_25;
            PyObject *tmp_args_element_name_21;
            PyObject *tmp_left_name_52;
            PyObject *tmp_left_name_53;
            PyObject *tmp_right_name_52;
            PyObject *tmp_subscribed_name_33;
            PyObject *tmp_source_name_52;
            PyObject *tmp_subscript_name_33;
            PyObject *tmp_right_name_53;
            int tmp_truth_name_4;
            tmp_mvar_value_7 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_os);

            if (unlikely(tmp_mvar_value_7 == NULL)) {
                tmp_mvar_value_7 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
            }

            if (tmp_mvar_value_7 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                exception_tb = NULL;

                exception_lineno = 466;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }

            tmp_source_name_51 = tmp_mvar_value_7;
            tmp_source_name_50 = LOOKUP_ATTRIBUTE(tmp_source_name_51, const_str_plain_path);
            if (tmp_source_name_50 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 466;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            tmp_called_name_13 = LOOKUP_ATTRIBUTE(tmp_source_name_50, const_str_plain_isfile);
            Py_DECREF(tmp_source_name_50);
            if (tmp_called_name_13 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 466;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            tmp_left_name_53 = const_str_plain_datawrite;
            CHECK_OBJECT(par_ui);
            tmp_source_name_52 = par_ui;
            tmp_subscribed_name_33 = LOOKUP_ATTRIBUTE(tmp_source_name_52, const_str_plain_sn_list);
            if (tmp_subscribed_name_33 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_13);

                exception_lineno = 466;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            CHECK_OBJECT(var_d);
            tmp_subscript_name_33 = var_d;
            tmp_right_name_52 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_33, tmp_subscript_name_33);
            Py_DECREF(tmp_subscribed_name_33);
            if (tmp_right_name_52 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_13);

                exception_lineno = 466;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            tmp_left_name_52 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_53, tmp_right_name_52);
            Py_DECREF(tmp_right_name_52);
            if (tmp_left_name_52 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_13);

                exception_lineno = 466;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            tmp_right_name_53 = const_str_digest_038a28107205f832c6bf850b3119b5af;
            tmp_args_element_name_21 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_52, tmp_right_name_53);
            Py_DECREF(tmp_left_name_52);
            if (tmp_args_element_name_21 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_13);

                exception_lineno = 466;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 466;
            tmp_call_result_25 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_13, tmp_args_element_name_21);
            Py_DECREF(tmp_called_name_13);
            Py_DECREF(tmp_args_element_name_21);
            if (tmp_call_result_25 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 466;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            tmp_truth_name_4 = CHECK_IF_TRUE(tmp_call_result_25);
            if (tmp_truth_name_4 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_call_result_25);

                exception_lineno = 466;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            tmp_condition_result_38 = tmp_truth_name_4 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            Py_DECREF(tmp_call_result_25);
            if (tmp_condition_result_38 == NUITKA_BOOL_TRUE) {
                goto branch_yes_38;
            } else {
                goto branch_no_38;
            }
            branch_yes_38:;
            {
                PyObject *tmp_assign_source_84;
                PyObject *tmp_open_filename_2;
                PyObject *tmp_left_name_54;
                PyObject *tmp_left_name_55;
                PyObject *tmp_right_name_54;
                PyObject *tmp_subscribed_name_34;
                PyObject *tmp_source_name_53;
                PyObject *tmp_subscript_name_34;
                PyObject *tmp_right_name_55;
                PyObject *tmp_open_mode_2;
                tmp_left_name_55 = const_str_plain_datawrite;
                CHECK_OBJECT(par_ui);
                tmp_source_name_53 = par_ui;
                tmp_subscribed_name_34 = LOOKUP_ATTRIBUTE(tmp_source_name_53, const_str_plain_sn_list);
                if (tmp_subscribed_name_34 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 467;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_9;
                }
                CHECK_OBJECT(var_d);
                tmp_subscript_name_34 = var_d;
                tmp_right_name_54 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_34, tmp_subscript_name_34);
                Py_DECREF(tmp_subscribed_name_34);
                if (tmp_right_name_54 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 467;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_9;
                }
                tmp_left_name_54 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_55, tmp_right_name_54);
                Py_DECREF(tmp_right_name_54);
                if (tmp_left_name_54 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 467;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_9;
                }
                tmp_right_name_55 = const_str_digest_038a28107205f832c6bf850b3119b5af;
                tmp_open_filename_2 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_54, tmp_right_name_55);
                Py_DECREF(tmp_left_name_54);
                if (tmp_open_filename_2 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 467;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_9;
                }
                tmp_open_mode_2 = const_str_plain_r;
                tmp_assign_source_84 = BUILTIN_OPEN(tmp_open_filename_2, tmp_open_mode_2, NULL);
                Py_DECREF(tmp_open_filename_2);
                if (tmp_assign_source_84 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 467;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_9;
                }
                {
                    PyObject *old = var_f;
                    var_f = tmp_assign_source_84;
                    Py_XDECREF(old);
                }

            }
            {
                PyObject *tmp_assign_source_85;
                PyObject *tmp_called_instance_18;
                CHECK_OBJECT(var_f);
                tmp_called_instance_18 = var_f;
                frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 468;
                tmp_assign_source_85 = CALL_METHOD_NO_ARGS(tmp_called_instance_18, const_str_plain_read);
                if (tmp_assign_source_85 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 468;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_9;
                }
                {
                    PyObject *old = var_pv;
                    var_pv = tmp_assign_source_85;
                    Py_XDECREF(old);
                }

            }
            {
                PyObject *tmp_called_instance_19;
                PyObject *tmp_call_result_26;
                CHECK_OBJECT(var_f);
                tmp_called_instance_19 = var_f;
                frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 469;
                tmp_call_result_26 = CALL_METHOD_NO_ARGS(tmp_called_instance_19, const_str_plain_close);
                if (tmp_call_result_26 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 469;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_9;
                }
                Py_DECREF(tmp_call_result_26);
            }
            {
                PyObject *tmp_ass_subvalue_10;
                PyObject *tmp_called_instance_20;
                PyObject *tmp_ass_subscribed_10;
                PyObject *tmp_source_name_54;
                PyObject *tmp_ass_subscript_10;
                CHECK_OBJECT(var_pv);
                tmp_called_instance_20 = var_pv;
                frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 470;
                tmp_ass_subvalue_10 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_20, const_str_plain_strip, &PyTuple_GET_ITEM(const_tuple_str_chr_0_tuple, 0));

                if (tmp_ass_subvalue_10 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 470;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_9;
                }
                CHECK_OBJECT(par_ui);
                tmp_source_name_54 = par_ui;
                tmp_ass_subscribed_10 = LOOKUP_ATTRIBUTE(tmp_source_name_54, const_str_plain_pba_list);
                if (tmp_ass_subscribed_10 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_ass_subvalue_10);

                    exception_lineno = 470;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_9;
                }
                CHECK_OBJECT(var_d);
                tmp_ass_subscript_10 = var_d;
                tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_10, tmp_ass_subscript_10, tmp_ass_subvalue_10);
                Py_DECREF(tmp_ass_subscribed_10);
                Py_DECREF(tmp_ass_subvalue_10);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 470;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_9;
                }
            }
            {
                nuitka_bool tmp_condition_result_39;
                PyObject *tmp_compexpr_left_28;
                PyObject *tmp_compexpr_right_28;
                CHECK_OBJECT(var_d);
                tmp_compexpr_left_28 = var_d;
                CHECK_OBJECT(var_act_idx);
                tmp_compexpr_right_28 = var_act_idx;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_28, tmp_compexpr_right_28);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 471;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_9;
                }
                tmp_condition_result_39 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_39 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_39;
                } else {
                    goto branch_no_39;
                }
                branch_yes_39:;
                {
                    PyObject *tmp_called_name_14;
                    PyObject *tmp_source_name_55;
                    PyObject *tmp_source_name_56;
                    PyObject *tmp_call_result_27;
                    PyObject *tmp_args_element_name_22;
                    PyObject *tmp_called_instance_21;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_56 = par_ui;
                    tmp_source_name_55 = LOOKUP_ATTRIBUTE(tmp_source_name_56, const_str_plain_dev_pbaVer);
                    if (tmp_source_name_55 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 472;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_9;
                    }
                    tmp_called_name_14 = LOOKUP_ATTRIBUTE(tmp_source_name_55, const_str_plain_set_text);
                    Py_DECREF(tmp_source_name_55);
                    if (tmp_called_name_14 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 472;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_9;
                    }
                    CHECK_OBJECT(var_pv);
                    tmp_called_instance_21 = var_pv;
                    frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 472;
                    tmp_args_element_name_22 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_21, const_str_plain_strip, &PyTuple_GET_ITEM(const_tuple_str_chr_0_tuple, 0));

                    if (tmp_args_element_name_22 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_14);

                        exception_lineno = 472;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_9;
                    }
                    frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 472;
                    tmp_call_result_27 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_14, tmp_args_element_name_22);
                    Py_DECREF(tmp_called_name_14);
                    Py_DECREF(tmp_args_element_name_22);
                    if (tmp_call_result_27 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 472;
                        type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_9;
                    }
                    Py_DECREF(tmp_call_result_27);
                }
                branch_no_39:;
            }
            // Tried code:
            {
                PyObject *tmp_called_name_15;
                PyObject *tmp_source_name_57;
                PyObject *tmp_mvar_value_8;
                PyObject *tmp_call_result_28;
                PyObject *tmp_args_element_name_23;
                PyObject *tmp_left_name_56;
                PyObject *tmp_left_name_57;
                PyObject *tmp_right_name_56;
                PyObject *tmp_subscribed_name_35;
                PyObject *tmp_source_name_58;
                PyObject *tmp_subscript_name_35;
                PyObject *tmp_right_name_57;
                tmp_mvar_value_8 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_os);

                if (unlikely(tmp_mvar_value_8 == NULL)) {
                    tmp_mvar_value_8 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                }

                if (tmp_mvar_value_8 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                    exception_tb = NULL;

                    exception_lineno = 474;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_10;
                }

                tmp_source_name_57 = tmp_mvar_value_8;
                tmp_called_name_15 = LOOKUP_ATTRIBUTE(tmp_source_name_57, const_str_plain_remove);
                if (tmp_called_name_15 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 474;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_10;
                }
                tmp_left_name_57 = const_str_plain_datawrite;
                CHECK_OBJECT(par_ui);
                tmp_source_name_58 = par_ui;
                tmp_subscribed_name_35 = LOOKUP_ATTRIBUTE(tmp_source_name_58, const_str_plain_sn_list);
                if (tmp_subscribed_name_35 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_15);

                    exception_lineno = 474;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_10;
                }
                CHECK_OBJECT(var_d);
                tmp_subscript_name_35 = var_d;
                tmp_right_name_56 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_35, tmp_subscript_name_35);
                Py_DECREF(tmp_subscribed_name_35);
                if (tmp_right_name_56 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_15);

                    exception_lineno = 474;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_10;
                }
                tmp_left_name_56 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_57, tmp_right_name_56);
                Py_DECREF(tmp_right_name_56);
                if (tmp_left_name_56 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_15);

                    exception_lineno = 474;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_10;
                }
                tmp_right_name_57 = const_str_digest_038a28107205f832c6bf850b3119b5af;
                tmp_args_element_name_23 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_56, tmp_right_name_57);
                Py_DECREF(tmp_left_name_56);
                if (tmp_args_element_name_23 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_15);

                    exception_lineno = 474;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_10;
                }
                frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 474;
                tmp_call_result_28 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_15, tmp_args_element_name_23);
                Py_DECREF(tmp_called_name_15);
                Py_DECREF(tmp_args_element_name_23);
                if (tmp_call_result_28 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 474;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_10;
                }
                Py_DECREF(tmp_call_result_28);
            }
            goto try_end_8;
            // Exception handler code:
            try_except_handler_10:;
            exception_keeper_type_8 = exception_type;
            exception_keeper_value_8 = exception_value;
            exception_keeper_tb_8 = exception_tb;
            exception_keeper_lineno_8 = exception_lineno;
            exception_type = NULL;
            exception_value = NULL;
            exception_tb = NULL;
            exception_lineno = 0;

            // Preserve existing published exception.
            PRESERVE_FRAME_EXCEPTION(frame_18a0298f42cb14be9dbbaaa3575f4d00);
            if (exception_keeper_tb_8 == NULL) {
                exception_keeper_tb_8 = MAKE_TRACEBACK(frame_18a0298f42cb14be9dbbaaa3575f4d00, exception_keeper_lineno_8);
            } else if (exception_keeper_lineno_8 != 0) {
                exception_keeper_tb_8 = ADD_TRACEBACK(exception_keeper_tb_8, frame_18a0298f42cb14be9dbbaaa3575f4d00, exception_keeper_lineno_8);
            }

            NORMALIZE_EXCEPTION(&exception_keeper_type_8, &exception_keeper_value_8, &exception_keeper_tb_8);
            PUBLISH_EXCEPTION(&exception_keeper_type_8, &exception_keeper_value_8, &exception_keeper_tb_8);
            {
                nuitka_bool tmp_condition_result_40;
                PyObject *tmp_compexpr_left_29;
                PyObject *tmp_compexpr_right_29;
                tmp_compexpr_left_29 = EXC_TYPE(PyThreadState_GET());
                tmp_compexpr_right_29 = PyExc_WindowsError;
                tmp_res = EXCEPTION_MATCH_BOOL(tmp_compexpr_left_29, tmp_compexpr_right_29);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 475;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_9;
                }
                tmp_condition_result_40 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_40 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_40;
                } else {
                    goto branch_no_40;
                }
                branch_yes_40:;
                tmp_print_value = const_str_digest_ed4dd40ce7a801d6a9039029873747bc;
                tmp_result = PRINT_ITEM(tmp_print_value);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 476;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_9;
                }
                if (PRINT_NEW_LINE() == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 476;
                    type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_9;
                }
                goto branch_end_40;
                branch_no_40:;
                tmp_result = RERAISE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                if (unlikely(tmp_result == false)) {
                    exception_lineno = 473;
                }

                if (exception_tb && exception_tb->tb_frame == &frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame) frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = exception_tb->tb_lineno;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
                branch_end_40:;
            }
            goto try_end_8;
            // exception handler codes exits in all cases
            NUITKA_CANNOT_GET_HERE(cleanop$$$function_3_pbaWrite_cleanup);
            return NULL;
            // End of try:
            try_end_8:;
            branch_no_38:;
        }
        {
            PyObject *tmp_assign_source_86;
            PyObject *tmp_left_name_58;
            PyObject *tmp_right_name_58;
            CHECK_OBJECT(var_count);
            tmp_left_name_58 = var_count;
            tmp_right_name_58 = const_int_pos_1;
            tmp_assign_source_86 = BINARY_OPERATION_ADD_OBJECT_INT(tmp_left_name_58, tmp_right_name_58);
            assert(!(tmp_assign_source_86 == NULL));
            {
                PyObject *old = var_count;
                assert(old != NULL);
                var_count = tmp_assign_source_86;
                Py_DECREF(old);
            }

        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 457;
            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
            goto try_except_handler_9;
        }
        goto loop_start_7;
        loop_end_7:;
        goto try_end_9;
        // Exception handler code:
        try_except_handler_9:;
        exception_keeper_type_9 = exception_type;
        exception_keeper_value_9 = exception_value;
        exception_keeper_tb_9 = exception_tb;
        exception_keeper_lineno_9 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_7__iter_value);
        tmp_for_loop_7__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_7__for_iterator);
        Py_DECREF(tmp_for_loop_7__for_iterator);
        tmp_for_loop_7__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_9;
        exception_value = exception_keeper_value_9;
        exception_tb = exception_keeper_tb_9;
        exception_lineno = exception_keeper_lineno_9;

        goto frame_exception_exit_1;
        // End of try:
        try_end_9:;
        Py_XDECREF(tmp_for_loop_7__iter_value);
        tmp_for_loop_7__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_7__for_iterator);
        Py_DECREF(tmp_for_loop_7__for_iterator);
        tmp_for_loop_7__for_iterator = NULL;

        {
            PyObject *tmp_called_name_16;
            PyObject *tmp_source_name_59;
            PyObject *tmp_call_result_29;
            PyObject *tmp_args_element_name_24;
            PyObject *tmp_left_name_59;
            PyObject *tmp_left_name_60;
            PyObject *tmp_right_name_59;
            PyObject *tmp_right_name_60;
            CHECK_OBJECT(par_ui);
            tmp_source_name_59 = par_ui;
            tmp_called_name_16 = LOOKUP_ATTRIBUTE(tmp_source_name_59, const_str_plain_msg_ok);
            if (tmp_called_name_16 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 478;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_left_name_60 = const_str_digest_1ca43a76406b1a1f0549319504d044c1;
            CHECK_OBJECT(var_liststr);
            tmp_right_name_59 = var_liststr;
            tmp_left_name_59 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_60, tmp_right_name_59);
            if (tmp_left_name_59 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_16);

                exception_lineno = 478;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_right_name_60 = const_str_dot;
            tmp_args_element_name_24 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_59, tmp_right_name_60);
            Py_DECREF(tmp_left_name_59);
            if (tmp_args_element_name_24 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_16);

                exception_lineno = 478;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 478;
            tmp_call_result_29 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_16, tmp_args_element_name_24);
            Py_DECREF(tmp_called_name_16);
            Py_DECREF(tmp_args_element_name_24);
            if (tmp_call_result_29 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 478;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_29);
        }
        {
            PyObject *tmp_called_instance_22;
            PyObject *tmp_call_result_30;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_22 = par_ui;
            frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 479;
            tmp_call_result_30 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_22, const_str_plain_returnToMain, &PyTuple_GET_ITEM(const_tuple_none_false_tuple, 0));

            if (tmp_call_result_30 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 479;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_30);
        }
        branch_end_11:;
    }
    {
        PyObject *tmp_called_instance_23;
        PyObject *tmp_call_result_31;
        CHECK_OBJECT(par_ui);
        tmp_called_instance_23 = par_ui;
        frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 480;
        tmp_call_result_31 = CALL_METHOD_NO_ARGS(tmp_called_instance_23, const_str_plain_stop_spin);
        if (tmp_call_result_31 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 480;
            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_31);
    }
    {
        nuitka_bool tmp_condition_result_41;
        int tmp_truth_name_5;
        CHECK_OBJECT(par_rescan_needed);
        tmp_truth_name_5 = CHECK_IF_TRUE(par_rescan_needed);
        if (tmp_truth_name_5 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 481;
            type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_41 = tmp_truth_name_5 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_41 == NUITKA_BOOL_TRUE) {
            goto branch_yes_41;
        } else {
            goto branch_no_41;
        }
        branch_yes_41:;
        {
            PyObject *tmp_called_instance_24;
            PyObject *tmp_call_result_32;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_24 = par_ui;
            frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 482;
            tmp_call_result_32 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_24, const_str_plain_msg_ok, &PyTuple_GET_ITEM(const_tuple_str_digest_ae3b8b33bbb4f0816fc34e114de2f069_tuple, 0));

            if (tmp_call_result_32 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 482;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_32);
        }
        {
            PyObject *tmp_called_instance_25;
            PyObject *tmp_mvar_value_9;
            PyObject *tmp_call_result_33;
            PyObject *tmp_args_element_name_25;
            PyObject *tmp_args_element_name_26;
            PyObject *tmp_args_element_name_27;
            tmp_mvar_value_9 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_runscan);

            if (unlikely(tmp_mvar_value_9 == NULL)) {
                tmp_mvar_value_9 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runscan);
            }

            if (tmp_mvar_value_9 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 454 ], 36, 0);
                exception_tb = NULL;

                exception_lineno = 483;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_called_instance_25 = tmp_mvar_value_9;
            tmp_args_element_name_25 = Py_None;
            CHECK_OBJECT(par_ui);
            tmp_args_element_name_26 = par_ui;
            tmp_args_element_name_27 = Py_True;
            frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame.f_lineno = 483;
            {
                PyObject *call_args[] = {tmp_args_element_name_25, tmp_args_element_name_26, tmp_args_element_name_27};
                tmp_call_result_33 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_25, const_str_plain_run_scan, call_args);
            }

            if (tmp_call_result_33 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 483;
                type_description_1 = "ooooooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_33);
        }
        branch_no_41:;
    }

#if 1
    RESTORE_FRAME_EXCEPTION(frame_18a0298f42cb14be9dbbaaa3575f4d00);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_exception_exit_1:;

#if 1
    RESTORE_FRAME_EXCEPTION(frame_18a0298f42cb14be9dbbaaa3575f4d00);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_18a0298f42cb14be9dbbaaa3575f4d00, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_18a0298f42cb14be9dbbaaa3575f4d00->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_18a0298f42cb14be9dbbaaa3575f4d00, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_18a0298f42cb14be9dbbaaa3575f4d00,
        type_description_1,
        par_ui,
        par_max_time,
        par_start_time,
        par_op_threads,
        par_res_list,
        par_e_to,
        par_selected_list,
        par_status_list,
        par_rescan_needed,
        par_val2,
        par_val3,
        par_val4,
        var_list_p,
        var_list_miss,
        var_list_alo,
        var_start_miss,
        var_list_f,
        var_start_alo,
        var_start_na,
        var_pv,
        var_res_sum,
        var_list_to,
        var_elapsed_time,
        var_start,
        var_liststr,
        var_count_f,
        var_start_f,
        var_list_spb,
        var_start_to,
        var_op_thread,
        var_sf_txt,
        var_last_f,
        var_count,
        var_d,
        var_f,
        var_i,
        var_j,
        var_start_spb,
        var_p,
        var_act_idx,
        var_start_p,
        var_list_na,
        var_y,
        var_save_fail,
        var_curr_time
    );


    // Release cached frame.
    if (frame_18a0298f42cb14be9dbbaaa3575f4d00 == cache_frame_18a0298f42cb14be9dbbaaa3575f4d00) {
        Py_DECREF(frame_18a0298f42cb14be9dbbaaa3575f4d00);
    }
    cache_frame_18a0298f42cb14be9dbbaaa3575f4d00 = NULL;

    assertFrameObject(frame_18a0298f42cb14be9dbbaaa3575f4d00);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(cleanop$$$function_3_pbaWrite_cleanup);
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    Py_XDECREF(var_list_p);
    var_list_p = NULL;

    Py_XDECREF(var_list_miss);
    var_list_miss = NULL;

    Py_XDECREF(var_list_alo);
    var_list_alo = NULL;

    Py_XDECREF(var_start_miss);
    var_start_miss = NULL;

    Py_XDECREF(var_list_f);
    var_list_f = NULL;

    Py_XDECREF(var_start_alo);
    var_start_alo = NULL;

    Py_XDECREF(var_start_na);
    var_start_na = NULL;

    Py_XDECREF(var_pv);
    var_pv = NULL;

    CHECK_OBJECT((PyObject *)var_res_sum);
    Py_DECREF(var_res_sum);
    var_res_sum = NULL;

    Py_XDECREF(var_list_to);
    var_list_to = NULL;

    CHECK_OBJECT((PyObject *)var_elapsed_time);
    Py_DECREF(var_elapsed_time);
    var_elapsed_time = NULL;

    Py_XDECREF(var_start);
    var_start = NULL;

    Py_XDECREF(var_liststr);
    var_liststr = NULL;

    Py_XDECREF(var_count_f);
    var_count_f = NULL;

    Py_XDECREF(var_start_f);
    var_start_f = NULL;

    Py_XDECREF(var_list_spb);
    var_list_spb = NULL;

    Py_XDECREF(var_start_to);
    var_start_to = NULL;

    Py_XDECREF(var_op_thread);
    var_op_thread = NULL;

    Py_XDECREF(var_sf_txt);
    var_sf_txt = NULL;

    Py_XDECREF(var_last_f);
    var_last_f = NULL;

    Py_XDECREF(var_count);
    var_count = NULL;

    Py_XDECREF(var_d);
    var_d = NULL;

    Py_XDECREF(var_f);
    var_f = NULL;

    Py_XDECREF(var_i);
    var_i = NULL;

    Py_XDECREF(var_j);
    var_j = NULL;

    Py_XDECREF(var_start_spb);
    var_start_spb = NULL;

    Py_XDECREF(var_p);
    var_p = NULL;

    CHECK_OBJECT((PyObject *)var_act_idx);
    Py_DECREF(var_act_idx);
    var_act_idx = NULL;

    Py_XDECREF(var_start_p);
    var_start_p = NULL;

    Py_XDECREF(var_list_na);
    var_list_na = NULL;

    Py_XDECREF(var_y);
    var_y = NULL;

    CHECK_OBJECT((PyObject *)var_save_fail);
    Py_DECREF(var_save_fail);
    var_save_fail = NULL;

    CHECK_OBJECT((PyObject *)var_curr_time);
    Py_DECREF(var_curr_time);
    var_curr_time = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_10 = exception_type;
    exception_keeper_value_10 = exception_value;
    exception_keeper_tb_10 = exception_tb;
    exception_keeper_lineno_10 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_list_p);
    var_list_p = NULL;

    Py_XDECREF(var_list_miss);
    var_list_miss = NULL;

    Py_XDECREF(var_list_alo);
    var_list_alo = NULL;

    Py_XDECREF(var_start_miss);
    var_start_miss = NULL;

    Py_XDECREF(var_list_f);
    var_list_f = NULL;

    Py_XDECREF(var_start_alo);
    var_start_alo = NULL;

    Py_XDECREF(var_start_na);
    var_start_na = NULL;

    Py_XDECREF(var_pv);
    var_pv = NULL;

    Py_XDECREF(var_res_sum);
    var_res_sum = NULL;

    Py_XDECREF(var_list_to);
    var_list_to = NULL;

    Py_XDECREF(var_elapsed_time);
    var_elapsed_time = NULL;

    Py_XDECREF(var_start);
    var_start = NULL;

    Py_XDECREF(var_liststr);
    var_liststr = NULL;

    Py_XDECREF(var_count_f);
    var_count_f = NULL;

    Py_XDECREF(var_start_f);
    var_start_f = NULL;

    Py_XDECREF(var_list_spb);
    var_list_spb = NULL;

    Py_XDECREF(var_start_to);
    var_start_to = NULL;

    Py_XDECREF(var_op_thread);
    var_op_thread = NULL;

    Py_XDECREF(var_sf_txt);
    var_sf_txt = NULL;

    Py_XDECREF(var_last_f);
    var_last_f = NULL;

    Py_XDECREF(var_count);
    var_count = NULL;

    Py_XDECREF(var_d);
    var_d = NULL;

    Py_XDECREF(var_f);
    var_f = NULL;

    Py_XDECREF(var_i);
    var_i = NULL;

    Py_XDECREF(var_j);
    var_j = NULL;

    Py_XDECREF(var_start_spb);
    var_start_spb = NULL;

    Py_XDECREF(var_p);
    var_p = NULL;

    Py_XDECREF(var_act_idx);
    var_act_idx = NULL;

    Py_XDECREF(var_start_p);
    var_start_p = NULL;

    Py_XDECREF(var_list_na);
    var_list_na = NULL;

    Py_XDECREF(var_y);
    var_y = NULL;

    Py_XDECREF(var_save_fail);
    var_save_fail = NULL;

    Py_XDECREF(var_curr_time);
    var_curr_time = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_10;
    exception_value = exception_keeper_value_10;
    exception_tb = exception_keeper_tb_10;
    exception_lineno = exception_keeper_lineno_10;

    goto function_exception_exit;
    // End of try:

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(cleanop$$$function_3_pbaWrite_cleanup);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_res_list);
    Py_DECREF(par_res_list);
    CHECK_OBJECT(par_selected_list);
    Py_DECREF(par_selected_list);
    CHECK_OBJECT(par_val3);
    Py_DECREF(par_val3);
    CHECK_OBJECT(par_val2);
    Py_DECREF(par_val2);
    CHECK_OBJECT(par_val4);
    Py_DECREF(par_val4);
    CHECK_OBJECT(par_op_threads);
    Py_DECREF(par_op_threads);
    CHECK_OBJECT(par_rescan_needed);
    Py_DECREF(par_rescan_needed);
    CHECK_OBJECT(par_e_to);
    Py_DECREF(par_e_to);
    CHECK_OBJECT(par_start_time);
    Py_DECREF(par_start_time);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);
    CHECK_OBJECT(par_max_time);
    Py_DECREF(par_max_time);
    CHECK_OBJECT(par_status_list);
    Py_DECREF(par_status_list);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_res_list);
    Py_DECREF(par_res_list);
    CHECK_OBJECT(par_selected_list);
    Py_DECREF(par_selected_list);
    CHECK_OBJECT(par_val3);
    Py_DECREF(par_val3);
    CHECK_OBJECT(par_val2);
    Py_DECREF(par_val2);
    CHECK_OBJECT(par_val4);
    Py_DECREF(par_val4);
    CHECK_OBJECT(par_op_threads);
    Py_DECREF(par_op_threads);
    CHECK_OBJECT(par_rescan_needed);
    Py_DECREF(par_rescan_needed);
    CHECK_OBJECT(par_e_to);
    Py_DECREF(par_e_to);
    CHECK_OBJECT(par_start_time);
    Py_DECREF(par_start_time);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);
    CHECK_OBJECT(par_max_time);
    Py_DECREF(par_max_time);
    CHECK_OBJECT(par_status_list);
    Py_DECREF(par_status_list);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_cleanop$$$function_4_changePW_cleanup(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_ui = python_pars[0];
    PyObject *par_max_time = python_pars[1];
    PyObject *par_start_time = python_pars[2];
    PyObject *par_op_threads = python_pars[3];
    PyObject *par_res_list = python_pars[4];
    PyObject *par_e_to = python_pars[5];
    PyObject *par_selected_list = python_pars[6];
    PyObject *par_status_list = python_pars[7];
    PyObject *par_rescan_needed = python_pars[8];
    PyObject *par_val2 = python_pars[9];
    PyObject *par_val3 = python_pars[10];
    PyObject *par_val4 = python_pars[11];
    PyObject *var_list_p = NULL;
    PyObject *var_list_miss = NULL;
    PyObject *var_list_alo = NULL;
    PyObject *var_start_miss = NULL;
    PyObject *var_list_f = NULL;
    PyObject *var_start_alo = NULL;
    PyObject *var_start_na = NULL;
    PyObject *var_res_sum = NULL;
    PyObject *var_list_to = NULL;
    PyObject *var_elapsed_time = NULL;
    PyObject *var_start = NULL;
    PyObject *var_liststr = NULL;
    PyObject *var_count_f = NULL;
    PyObject *var_start_f = NULL;
    PyObject *var_list_spb = NULL;
    PyObject *var_start_to = NULL;
    PyObject *var_op_thread = NULL;
    PyObject *var_sf_txt = NULL;
    PyObject *var_last_f = NULL;
    PyObject *var_count = NULL;
    PyObject *var_d = NULL;
    PyObject *var_i = NULL;
    PyObject *var_j = NULL;
    PyObject *var_start_spb = NULL;
    PyObject *var_p = NULL;
    PyObject *var_start_p = NULL;
    PyObject *var_list_na = NULL;
    PyObject *var_y = NULL;
    PyObject *var_save_fail = NULL;
    PyObject *var_curr_time = NULL;
    PyObject *tmp_for_loop_1__for_iterator = NULL;
    PyObject *tmp_for_loop_1__iter_value = NULL;
    PyObject *tmp_for_loop_2__for_iterator = NULL;
    PyObject *tmp_for_loop_2__iter_value = NULL;
    PyObject *tmp_for_loop_3__for_iterator = NULL;
    PyObject *tmp_for_loop_3__iter_value = NULL;
    PyObject *tmp_for_loop_4__for_iterator = NULL;
    PyObject *tmp_for_loop_4__iter_value = NULL;
    PyObject *tmp_for_loop_5__for_iterator = NULL;
    PyObject *tmp_for_loop_5__iter_value = NULL;
    PyObject *tmp_for_loop_6__for_iterator = NULL;
    PyObject *tmp_for_loop_6__iter_value = NULL;
    struct Nuitka_FrameObject *frame_8c9c9b79392ff0b7698017d8497908ef;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    bool tmp_result;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;
    PyObject *exception_keeper_type_3;
    PyObject *exception_keeper_value_3;
    PyTracebackObject *exception_keeper_tb_3;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_3;
    PyObject *exception_keeper_type_4;
    PyObject *exception_keeper_value_4;
    PyTracebackObject *exception_keeper_tb_4;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_4;
    PyObject *exception_keeper_type_5;
    PyObject *exception_keeper_value_5;
    PyTracebackObject *exception_keeper_tb_5;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_5;
    PyObject *exception_keeper_type_6;
    PyObject *exception_keeper_value_6;
    PyTracebackObject *exception_keeper_tb_6;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_6;
    static struct Nuitka_FrameObject *cache_frame_8c9c9b79392ff0b7698017d8497908ef = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_keeper_type_7;
    PyObject *exception_keeper_value_7;
    PyTracebackObject *exception_keeper_tb_7;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_7;

    // Actual function body.
    // Tried code:
    MAKE_OR_REUSE_FRAME(cache_frame_8c9c9b79392ff0b7698017d8497908ef, codeobj_8c9c9b79392ff0b7698017d8497908ef, module_cleanop, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
    frame_8c9c9b79392ff0b7698017d8497908ef = cache_frame_8c9c9b79392ff0b7698017d8497908ef;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_8c9c9b79392ff0b7698017d8497908ef);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_8c9c9b79392ff0b7698017d8497908ef) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_called_instance_1;
        PyObject *tmp_mvar_value_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_time);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_time);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1164 ], 33, 0);
            exception_tb = NULL;

            exception_lineno = 486;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_1 = tmp_mvar_value_1;
        frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 486;
        tmp_assign_source_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_1, const_str_plain_time);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 486;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_curr_time == NULL);
        var_curr_time = tmp_assign_source_1;
    }
    {
        PyObject *tmp_assign_source_2;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        CHECK_OBJECT(var_curr_time);
        tmp_left_name_1 = var_curr_time;
        CHECK_OBJECT(par_start_time);
        tmp_right_name_1 = par_start_time;
        tmp_assign_source_2 = BINARY_OPERATION_SUB_OBJECT_OBJECT(tmp_left_name_1, tmp_right_name_1);
        if (tmp_assign_source_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 487;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_elapsed_time == NULL);
        var_elapsed_time = tmp_assign_source_2;
    }
    {
        nuitka_bool tmp_condition_result_1;
        PyObject *tmp_compexpr_left_1;
        PyObject *tmp_compexpr_right_1;
        CHECK_OBJECT(var_elapsed_time);
        tmp_compexpr_left_1 = var_elapsed_time;
        CHECK_OBJECT(par_max_time);
        tmp_compexpr_right_1 = par_max_time;
        tmp_res = RICH_COMPARE_BOOL_GTE_OBJECT_OBJECT(tmp_compexpr_left_1, tmp_compexpr_right_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 488;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        {
            PyObject *tmp_called_instance_2;
            PyObject *tmp_call_result_1;
            CHECK_OBJECT(par_e_to);
            tmp_called_instance_2 = par_e_to;
            frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 489;
            tmp_call_result_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_2, const_str_plain_set);
            if (tmp_call_result_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 489;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_1);
        }
        {
            PyObject *tmp_assign_source_3;
            PyObject *tmp_iter_arg_1;
            CHECK_OBJECT(par_op_threads);
            tmp_iter_arg_1 = par_op_threads;
            tmp_assign_source_3 = MAKE_ITERATOR(tmp_iter_arg_1);
            if (tmp_assign_source_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 490;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_1__for_iterator == NULL);
            tmp_for_loop_1__for_iterator = tmp_assign_source_3;
        }
        // Tried code:
        loop_start_1:;
        {
            PyObject *tmp_next_source_1;
            PyObject *tmp_assign_source_4;
            CHECK_OBJECT(tmp_for_loop_1__for_iterator);
            tmp_next_source_1 = tmp_for_loop_1__for_iterator;
            tmp_assign_source_4 = ITERATOR_NEXT(tmp_next_source_1);
            if (tmp_assign_source_4 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_1;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    exception_lineno = 490;
                    goto try_except_handler_2;
                }
            }

            {
                PyObject *old = tmp_for_loop_1__iter_value;
                tmp_for_loop_1__iter_value = tmp_assign_source_4;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_5;
            CHECK_OBJECT(tmp_for_loop_1__iter_value);
            tmp_assign_source_5 = tmp_for_loop_1__iter_value;
            {
                PyObject *old = var_op_thread;
                var_op_thread = tmp_assign_source_5;
                Py_INCREF(var_op_thread);
                Py_XDECREF(old);
            }

        }
        {
            nuitka_bool tmp_condition_result_2;
            PyObject *tmp_called_instance_3;
            PyObject *tmp_call_result_2;
            int tmp_truth_name_1;
            CHECK_OBJECT(var_op_thread);
            tmp_called_instance_3 = var_op_thread;
            frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 491;
            tmp_call_result_2 = CALL_METHOD_NO_ARGS(tmp_called_instance_3, const_str_plain_is_alive);
            if (tmp_call_result_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 491;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_2;
            }
            tmp_truth_name_1 = CHECK_IF_TRUE(tmp_call_result_2);
            if (tmp_truth_name_1 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_call_result_2);

                exception_lineno = 491;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_2;
            }
            tmp_condition_result_2 = tmp_truth_name_1 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            Py_DECREF(tmp_call_result_2);
            if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
                goto branch_yes_2;
            } else {
                goto branch_no_2;
            }
            branch_yes_2:;
            {
                nuitka_bool tmp_condition_result_3;
                PyObject *tmp_compexpr_left_2;
                PyObject *tmp_compexpr_right_2;
                PyObject *tmp_source_name_1;
                CHECK_OBJECT(par_ui);
                tmp_source_name_1 = par_ui;
                tmp_compexpr_left_2 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_process);
                if (tmp_compexpr_left_2 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 492;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_2;
                }
                tmp_compexpr_right_2 = Py_None;
                tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_2, tmp_compexpr_right_2);
                Py_DECREF(tmp_compexpr_left_2);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 492;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_2;
                }
                tmp_condition_result_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_3 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_3;
                } else {
                    goto branch_no_3;
                }
                branch_yes_3:;
                {
                    PyObject *tmp_called_instance_4;
                    PyObject *tmp_source_name_2;
                    PyObject *tmp_call_result_3;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_2 = par_ui;
                    tmp_called_instance_4 = LOOKUP_ATTRIBUTE(tmp_source_name_2, const_str_plain_process);
                    if (tmp_called_instance_4 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 493;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_2;
                    }
                    frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 493;
                    tmp_call_result_3 = CALL_METHOD_NO_ARGS(tmp_called_instance_4, const_str_plain_terminate);
                    Py_DECREF(tmp_called_instance_4);
                    if (tmp_call_result_3 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 493;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_2;
                    }
                    Py_DECREF(tmp_call_result_3);
                }
                {
                    PyObject *tmp_assattr_name_1;
                    PyObject *tmp_assattr_target_1;
                    tmp_assattr_name_1 = Py_None;
                    CHECK_OBJECT(par_ui);
                    tmp_assattr_target_1 = par_ui;
                    tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, const_str_plain_process, tmp_assattr_name_1);
                    if (tmp_result == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 494;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_2;
                    }
                }
                goto branch_end_3;
                branch_no_3:;
                {
                    nuitka_bool tmp_condition_result_4;
                    PyObject *tmp_compexpr_left_3;
                    PyObject *tmp_compexpr_right_3;
                    PyObject *tmp_source_name_3;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_3 = par_ui;
                    tmp_compexpr_left_3 = LOOKUP_ATTRIBUTE(tmp_source_name_3, const_str_plain_process_list);
                    if (tmp_compexpr_left_3 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 495;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_2;
                    }
                    tmp_compexpr_right_3 = PyList_New(0);
                    tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_3, tmp_compexpr_right_3);
                    Py_DECREF(tmp_compexpr_left_3);
                    Py_DECREF(tmp_compexpr_right_3);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 495;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_2;
                    }
                    tmp_condition_result_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_4 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_4;
                    } else {
                        goto branch_no_4;
                    }
                    branch_yes_4:;
                    {
                        PyObject *tmp_assign_source_6;
                        PyObject *tmp_iter_arg_2;
                        PyObject *tmp_source_name_4;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_4 = par_ui;
                        tmp_iter_arg_2 = LOOKUP_ATTRIBUTE(tmp_source_name_4, const_str_plain_process_list);
                        if (tmp_iter_arg_2 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 496;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_2;
                        }
                        tmp_assign_source_6 = MAKE_ITERATOR(tmp_iter_arg_2);
                        Py_DECREF(tmp_iter_arg_2);
                        if (tmp_assign_source_6 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 496;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_2;
                        }
                        {
                            PyObject *old = tmp_for_loop_2__for_iterator;
                            tmp_for_loop_2__for_iterator = tmp_assign_source_6;
                            Py_XDECREF(old);
                        }

                    }
                    // Tried code:
                    loop_start_2:;
                    {
                        PyObject *tmp_next_source_2;
                        PyObject *tmp_assign_source_7;
                        CHECK_OBJECT(tmp_for_loop_2__for_iterator);
                        tmp_next_source_2 = tmp_for_loop_2__for_iterator;
                        tmp_assign_source_7 = ITERATOR_NEXT(tmp_next_source_2);
                        if (tmp_assign_source_7 == NULL) {
                            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                                goto loop_end_2;
                            } else {

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                exception_lineno = 496;
                                goto try_except_handler_3;
                            }
                        }

                        {
                            PyObject *old = tmp_for_loop_2__iter_value;
                            tmp_for_loop_2__iter_value = tmp_assign_source_7;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assign_source_8;
                        CHECK_OBJECT(tmp_for_loop_2__iter_value);
                        tmp_assign_source_8 = tmp_for_loop_2__iter_value;
                        {
                            PyObject *old = var_p;
                            var_p = tmp_assign_source_8;
                            Py_INCREF(var_p);
                            Py_XDECREF(old);
                        }

                    }
                    {
                        nuitka_bool tmp_condition_result_5;
                        PyObject *tmp_compexpr_left_4;
                        PyObject *tmp_compexpr_right_4;
                        CHECK_OBJECT(var_p);
                        tmp_compexpr_left_4 = var_p;
                        tmp_compexpr_right_4 = Py_None;
                        tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_4, tmp_compexpr_right_4);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 497;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_3;
                        }
                        tmp_condition_result_5 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_5 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_5;
                        } else {
                            goto branch_no_5;
                        }
                        branch_yes_5:;
                        {
                            PyObject *tmp_called_instance_5;
                            PyObject *tmp_call_result_4;
                            CHECK_OBJECT(var_p);
                            tmp_called_instance_5 = var_p;
                            frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 498;
                            tmp_call_result_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_5, const_str_plain_terminate);
                            if (tmp_call_result_4 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 498;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_3;
                            }
                            Py_DECREF(tmp_call_result_4);
                        }
                        {
                            PyObject *tmp_assign_source_9;
                            tmp_assign_source_9 = Py_None;
                            {
                                PyObject *old = var_p;
                                assert(old != NULL);
                                var_p = tmp_assign_source_9;
                                Py_INCREF(var_p);
                                Py_DECREF(old);
                            }

                        }
                        branch_no_5:;
                    }
                    if (CONSIDER_THREADING() == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 496;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_3;
                    }
                    goto loop_start_2;
                    loop_end_2:;
                    goto try_end_1;
                    // Exception handler code:
                    try_except_handler_3:;
                    exception_keeper_type_1 = exception_type;
                    exception_keeper_value_1 = exception_value;
                    exception_keeper_tb_1 = exception_tb;
                    exception_keeper_lineno_1 = exception_lineno;
                    exception_type = NULL;
                    exception_value = NULL;
                    exception_tb = NULL;
                    exception_lineno = 0;

                    Py_XDECREF(tmp_for_loop_2__iter_value);
                    tmp_for_loop_2__iter_value = NULL;

                    CHECK_OBJECT((PyObject *)tmp_for_loop_2__for_iterator);
                    Py_DECREF(tmp_for_loop_2__for_iterator);
                    tmp_for_loop_2__for_iterator = NULL;

                    // Re-raise.
                    exception_type = exception_keeper_type_1;
                    exception_value = exception_keeper_value_1;
                    exception_tb = exception_keeper_tb_1;
                    exception_lineno = exception_keeper_lineno_1;

                    goto try_except_handler_2;
                    // End of try:
                    try_end_1:;
                    Py_XDECREF(tmp_for_loop_2__iter_value);
                    tmp_for_loop_2__iter_value = NULL;

                    CHECK_OBJECT((PyObject *)tmp_for_loop_2__for_iterator);
                    Py_DECREF(tmp_for_loop_2__for_iterator);
                    tmp_for_loop_2__for_iterator = NULL;

                    {
                        PyObject *tmp_assattr_name_2;
                        PyObject *tmp_assattr_target_2;
                        tmp_assattr_name_2 = PyList_New(0);
                        CHECK_OBJECT(par_ui);
                        tmp_assattr_target_2 = par_ui;
                        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_2, const_str_plain_process_list, tmp_assattr_name_2);
                        Py_DECREF(tmp_assattr_name_2);
                        if (tmp_result == false) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 500;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_2;
                        }
                    }
                    branch_no_4:;
                }
                branch_end_3:;
            }
            {
                PyObject *tmp_called_instance_6;
                PyObject *tmp_call_result_5;
                CHECK_OBJECT(var_op_thread);
                tmp_called_instance_6 = var_op_thread;
                frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 501;
                tmp_call_result_5 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_6, const_str_plain_join, &PyTuple_GET_ITEM(const_tuple_float_0_0_tuple, 0));

                if (tmp_call_result_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 501;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_2;
                }
                Py_DECREF(tmp_call_result_5);
            }
            branch_no_2:;
        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 490;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
            goto try_except_handler_2;
        }
        goto loop_start_1;
        loop_end_1:;
        goto try_end_2;
        // Exception handler code:
        try_except_handler_2:;
        exception_keeper_type_2 = exception_type;
        exception_keeper_value_2 = exception_value;
        exception_keeper_tb_2 = exception_tb;
        exception_keeper_lineno_2 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_1__iter_value);
        tmp_for_loop_1__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_1__for_iterator);
        Py_DECREF(tmp_for_loop_1__for_iterator);
        tmp_for_loop_1__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_2;
        exception_value = exception_keeper_value_2;
        exception_tb = exception_keeper_tb_2;
        exception_lineno = exception_keeper_lineno_2;

        goto frame_exception_exit_1;
        // End of try:
        try_end_2:;
        Py_XDECREF(tmp_for_loop_1__iter_value);
        tmp_for_loop_1__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_1__for_iterator);
        Py_DECREF(tmp_for_loop_1__for_iterator);
        tmp_for_loop_1__for_iterator = NULL;

        branch_no_1:;
    }
    {
        PyObject *tmp_assattr_name_3;
        PyObject *tmp_assattr_target_3;
        tmp_assattr_name_3 = Py_False;
        CHECK_OBJECT(par_ui);
        tmp_assattr_target_3 = par_ui;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_3, const_str_plain_op_inprogress, tmp_assattr_name_3);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 503;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
    }
    {
        PyObject *tmp_assign_source_10;
        tmp_assign_source_10 = PyList_New(0);
        assert(var_save_fail == NULL);
        var_save_fail = tmp_assign_source_10;
    }
    {
        PyObject *tmp_assign_source_11;
        PyObject *tmp_iter_arg_3;
        PyObject *tmp_range_arg_1;
        PyObject *tmp_len_arg_1;
        CHECK_OBJECT(par_res_list);
        tmp_len_arg_1 = par_res_list;
        tmp_range_arg_1 = BUILTIN_LEN(tmp_len_arg_1);
        if (tmp_range_arg_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 505;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_iter_arg_3 = BUILTIN_RANGE(tmp_range_arg_1);
        Py_DECREF(tmp_range_arg_1);
        if (tmp_iter_arg_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 505;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_11 = MAKE_ITERATOR(tmp_iter_arg_3);
        Py_DECREF(tmp_iter_arg_3);
        if (tmp_assign_source_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 505;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_3__for_iterator == NULL);
        tmp_for_loop_3__for_iterator = tmp_assign_source_11;
    }
    // Tried code:
    loop_start_3:;
    {
        PyObject *tmp_next_source_3;
        PyObject *tmp_assign_source_12;
        CHECK_OBJECT(tmp_for_loop_3__for_iterator);
        tmp_next_source_3 = tmp_for_loop_3__for_iterator;
        tmp_assign_source_12 = ITERATOR_NEXT(tmp_next_source_3);
        if (tmp_assign_source_12 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_3;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                exception_lineno = 505;
                goto try_except_handler_4;
            }
        }

        {
            PyObject *old = tmp_for_loop_3__iter_value;
            tmp_for_loop_3__iter_value = tmp_assign_source_12;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_13;
        CHECK_OBJECT(tmp_for_loop_3__iter_value);
        tmp_assign_source_13 = tmp_for_loop_3__iter_value;
        {
            PyObject *old = var_i;
            var_i = tmp_assign_source_13;
            Py_INCREF(var_i);
            Py_XDECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_6;
        PyObject *tmp_compexpr_left_5;
        PyObject *tmp_compexpr_right_5;
        PyObject *tmp_subscribed_name_1;
        PyObject *tmp_subscript_name_1;
        CHECK_OBJECT(par_res_list);
        tmp_subscribed_name_1 = par_res_list;
        CHECK_OBJECT(var_i);
        tmp_subscript_name_1 = var_i;
        tmp_compexpr_left_5 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_1, tmp_subscript_name_1);
        if (tmp_compexpr_left_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 506;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
            goto try_except_handler_4;
        }
        tmp_compexpr_right_5 = const_int_neg_1;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_5, tmp_compexpr_right_5);
        Py_DECREF(tmp_compexpr_left_5);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 506;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
            goto try_except_handler_4;
        }
        tmp_condition_result_6 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_6 == NUITKA_BOOL_TRUE) {
            goto branch_yes_6;
        } else {
            goto branch_no_6;
        }
        branch_yes_6:;
        {
            nuitka_bool tmp_condition_result_7;
            PyObject *tmp_called_instance_7;
            PyObject *tmp_call_result_6;
            int tmp_truth_name_2;
            CHECK_OBJECT(par_e_to);
            tmp_called_instance_7 = par_e_to;
            frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 507;
            tmp_call_result_6 = CALL_METHOD_NO_ARGS(tmp_called_instance_7, const_str_plain_is_set);
            if (tmp_call_result_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 507;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_4;
            }
            tmp_truth_name_2 = CHECK_IF_TRUE(tmp_call_result_6);
            if (tmp_truth_name_2 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_call_result_6);

                exception_lineno = 507;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_4;
            }
            tmp_condition_result_7 = tmp_truth_name_2 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            Py_DECREF(tmp_call_result_6);
            if (tmp_condition_result_7 == NUITKA_BOOL_TRUE) {
                goto branch_yes_7;
            } else {
                goto branch_no_7;
            }
            branch_yes_7:;
            {
                PyObject *tmp_ass_subvalue_1;
                PyObject *tmp_ass_subscribed_1;
                PyObject *tmp_ass_subscript_1;
                tmp_ass_subvalue_1 = const_int_pos_2;
                CHECK_OBJECT(par_res_list);
                tmp_ass_subscribed_1 = par_res_list;
                CHECK_OBJECT(var_i);
                tmp_ass_subscript_1 = var_i;
                tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_1, tmp_ass_subscript_1, tmp_ass_subvalue_1);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 508;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_4;
                }
            }
            goto branch_end_7;
            branch_no_7:;
            {
                PyObject *tmp_ass_subvalue_2;
                PyObject *tmp_ass_subscribed_2;
                PyObject *tmp_ass_subscript_2;
                tmp_ass_subvalue_2 = const_int_pos_3;
                CHECK_OBJECT(par_res_list);
                tmp_ass_subscribed_2 = par_res_list;
                CHECK_OBJECT(var_i);
                tmp_ass_subscript_2 = var_i;
                tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_2, tmp_ass_subscript_2, tmp_ass_subvalue_2);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 510;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_4;
                }
            }
            branch_end_7:;
        }
        goto branch_end_6;
        branch_no_6:;
        {
            nuitka_bool tmp_condition_result_8;
            PyObject *tmp_compexpr_left_6;
            PyObject *tmp_compexpr_right_6;
            PyObject *tmp_subscribed_name_2;
            PyObject *tmp_subscript_name_2;
            CHECK_OBJECT(par_res_list);
            tmp_subscribed_name_2 = par_res_list;
            CHECK_OBJECT(var_i);
            tmp_subscript_name_2 = var_i;
            tmp_compexpr_left_6 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_2, tmp_subscript_name_2);
            if (tmp_compexpr_left_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 511;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_4;
            }
            tmp_compexpr_right_6 = const_int_pos_5;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_6, tmp_compexpr_right_6);
            Py_DECREF(tmp_compexpr_left_6);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 511;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_4;
            }
            tmp_condition_result_8 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_8 == NUITKA_BOOL_TRUE) {
                goto branch_yes_8;
            } else {
                goto branch_no_8;
            }
            branch_yes_8:;
            {
                PyObject *tmp_called_instance_8;
                PyObject *tmp_call_result_7;
                PyObject *tmp_args_element_name_1;
                CHECK_OBJECT(var_save_fail);
                tmp_called_instance_8 = var_save_fail;
                CHECK_OBJECT(var_i);
                tmp_args_element_name_1 = var_i;
                frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 512;
                {
                    PyObject *call_args[] = {tmp_args_element_name_1};
                    tmp_call_result_7 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_8, const_str_plain_append, call_args);
                }

                if (tmp_call_result_7 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 512;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_4;
                }
                Py_DECREF(tmp_call_result_7);
            }
            {
                PyObject *tmp_ass_subvalue_3;
                PyObject *tmp_ass_subscribed_3;
                PyObject *tmp_ass_subscript_3;
                tmp_ass_subvalue_3 = const_int_0;
                CHECK_OBJECT(par_res_list);
                tmp_ass_subscribed_3 = par_res_list;
                CHECK_OBJECT(var_i);
                tmp_ass_subscript_3 = var_i;
                tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_3, tmp_ass_subscript_3, tmp_ass_subvalue_3);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 513;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_4;
                }
            }
            branch_no_8:;
        }
        branch_end_6:;
    }
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 505;
        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
        goto try_except_handler_4;
    }
    goto loop_start_3;
    loop_end_3:;
    goto try_end_3;
    // Exception handler code:
    try_except_handler_4:;
    exception_keeper_type_3 = exception_type;
    exception_keeper_value_3 = exception_value;
    exception_keeper_tb_3 = exception_tb;
    exception_keeper_lineno_3 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_3__iter_value);
    tmp_for_loop_3__iter_value = NULL;

    CHECK_OBJECT((PyObject *)tmp_for_loop_3__for_iterator);
    Py_DECREF(tmp_for_loop_3__for_iterator);
    tmp_for_loop_3__for_iterator = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_3;
    exception_value = exception_keeper_value_3;
    exception_tb = exception_keeper_tb_3;
    exception_lineno = exception_keeper_lineno_3;

    goto frame_exception_exit_1;
    // End of try:
    try_end_3:;
    Py_XDECREF(tmp_for_loop_3__iter_value);
    tmp_for_loop_3__iter_value = NULL;

    CHECK_OBJECT((PyObject *)tmp_for_loop_3__for_iterator);
    Py_DECREF(tmp_for_loop_3__for_iterator);
    tmp_for_loop_3__for_iterator = NULL;

    {
        nuitka_bool tmp_condition_result_9;
        PyObject *tmp_compexpr_left_7;
        PyObject *tmp_compexpr_right_7;
        PyObject *tmp_len_arg_2;
        CHECK_OBJECT(var_save_fail);
        tmp_len_arg_2 = var_save_fail;
        tmp_compexpr_left_7 = BUILTIN_LEN(tmp_len_arg_2);
        assert(!(tmp_compexpr_left_7 == NULL));
        tmp_compexpr_right_7 = const_int_0;
        tmp_res = RICH_COMPARE_BOOL_GT_OBJECT_INT(tmp_compexpr_left_7, tmp_compexpr_right_7);
        Py_DECREF(tmp_compexpr_left_7);
        assert(!(tmp_res == -1));
        tmp_condition_result_9 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_9 == NUITKA_BOOL_TRUE) {
            goto branch_yes_9;
        } else {
            goto branch_no_9;
        }
        branch_yes_9:;
        {
            PyObject *tmp_assign_source_14;
            tmp_assign_source_14 = Py_True;
            assert(var_start == NULL);
            Py_INCREF(tmp_assign_source_14);
            var_start = tmp_assign_source_14;
        }
        {
            PyObject *tmp_assign_source_15;
            tmp_assign_source_15 = const_str_empty;
            assert(var_sf_txt == NULL);
            Py_INCREF(tmp_assign_source_15);
            var_sf_txt = tmp_assign_source_15;
        }
        {
            PyObject *tmp_assign_source_16;
            PyObject *tmp_iter_arg_4;
            CHECK_OBJECT(var_save_fail);
            tmp_iter_arg_4 = var_save_fail;
            tmp_assign_source_16 = MAKE_ITERATOR(tmp_iter_arg_4);
            if (tmp_assign_source_16 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 518;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_4__for_iterator == NULL);
            tmp_for_loop_4__for_iterator = tmp_assign_source_16;
        }
        // Tried code:
        loop_start_4:;
        {
            PyObject *tmp_next_source_4;
            PyObject *tmp_assign_source_17;
            CHECK_OBJECT(tmp_for_loop_4__for_iterator);
            tmp_next_source_4 = tmp_for_loop_4__for_iterator;
            tmp_assign_source_17 = ITERATOR_NEXT(tmp_next_source_4);
            if (tmp_assign_source_17 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_4;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    exception_lineno = 518;
                    goto try_except_handler_5;
                }
            }

            {
                PyObject *old = tmp_for_loop_4__iter_value;
                tmp_for_loop_4__iter_value = tmp_assign_source_17;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_18;
            CHECK_OBJECT(tmp_for_loop_4__iter_value);
            tmp_assign_source_18 = tmp_for_loop_4__iter_value;
            {
                PyObject *old = var_j;
                var_j = tmp_assign_source_18;
                Py_INCREF(var_j);
                Py_XDECREF(old);
            }

        }
        {
            nuitka_bool tmp_condition_result_10;
            PyObject *tmp_operand_name_1;
            if (var_start == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start");
                exception_tb = NULL;

                exception_lineno = 519;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_5;
            }

            tmp_operand_name_1 = var_start;
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_1);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 519;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_5;
            }
            tmp_condition_result_10 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_10 == NUITKA_BOOL_TRUE) {
                goto branch_yes_10;
            } else {
                goto branch_no_10;
            }
            branch_yes_10:;
            {
                PyObject *tmp_assign_source_19;
                PyObject *tmp_left_name_2;
                PyObject *tmp_right_name_2;
                CHECK_OBJECT(var_sf_txt);
                tmp_left_name_2 = var_sf_txt;
                tmp_right_name_2 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                tmp_assign_source_19 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_2, tmp_right_name_2);
                if (tmp_assign_source_19 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 520;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_5;
                }
                {
                    PyObject *old = var_sf_txt;
                    assert(old != NULL);
                    var_sf_txt = tmp_assign_source_19;
                    Py_DECREF(old);
                }

            }
            goto branch_end_10;
            branch_no_10:;
            {
                PyObject *tmp_assign_source_20;
                tmp_assign_source_20 = Py_False;
                {
                    PyObject *old = var_start;
                    var_start = tmp_assign_source_20;
                    Py_INCREF(var_start);
                    Py_XDECREF(old);
                }

            }
            branch_end_10:;
        }
        {
            PyObject *tmp_assign_source_21;
            PyObject *tmp_left_name_3;
            PyObject *tmp_right_name_3;
            PyObject *tmp_subscribed_name_3;
            PyObject *tmp_source_name_5;
            PyObject *tmp_subscript_name_3;
            PyObject *tmp_subscribed_name_4;
            PyObject *tmp_subscript_name_4;
            if (var_sf_txt == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "sf_txt");
                exception_tb = NULL;

                exception_lineno = 523;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_5;
            }

            tmp_left_name_3 = var_sf_txt;
            CHECK_OBJECT(par_ui);
            tmp_source_name_5 = par_ui;
            tmp_subscribed_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_5, const_str_plain_devs_list);
            if (tmp_subscribed_name_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 523;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_5;
            }
            CHECK_OBJECT(par_selected_list);
            tmp_subscribed_name_4 = par_selected_list;
            CHECK_OBJECT(var_j);
            tmp_subscript_name_4 = var_j;
            tmp_subscript_name_3 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_4, tmp_subscript_name_4);
            if (tmp_subscript_name_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_subscribed_name_3);

                exception_lineno = 523;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_5;
            }
            tmp_right_name_3 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_3, tmp_subscript_name_3);
            Py_DECREF(tmp_subscribed_name_3);
            Py_DECREF(tmp_subscript_name_3);
            if (tmp_right_name_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 523;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_5;
            }
            tmp_assign_source_21 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_3, tmp_right_name_3);
            Py_DECREF(tmp_right_name_3);
            if (tmp_assign_source_21 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 523;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_5;
            }
            {
                PyObject *old = var_sf_txt;
                var_sf_txt = tmp_assign_source_21;
                Py_XDECREF(old);
            }

        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 518;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
            goto try_except_handler_5;
        }
        goto loop_start_4;
        loop_end_4:;
        goto try_end_4;
        // Exception handler code:
        try_except_handler_5:;
        exception_keeper_type_4 = exception_type;
        exception_keeper_value_4 = exception_value;
        exception_keeper_tb_4 = exception_tb;
        exception_keeper_lineno_4 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_4__iter_value);
        tmp_for_loop_4__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_4__for_iterator);
        Py_DECREF(tmp_for_loop_4__for_iterator);
        tmp_for_loop_4__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_4;
        exception_value = exception_keeper_value_4;
        exception_tb = exception_keeper_tb_4;
        exception_lineno = exception_keeper_lineno_4;

        goto frame_exception_exit_1;
        // End of try:
        try_end_4:;
        Py_XDECREF(tmp_for_loop_4__iter_value);
        tmp_for_loop_4__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_4__for_iterator);
        Py_DECREF(tmp_for_loop_4__for_iterator);
        tmp_for_loop_4__for_iterator = NULL;

        {
            PyObject *tmp_called_name_1;
            PyObject *tmp_source_name_6;
            PyObject *tmp_call_result_8;
            PyObject *tmp_args_element_name_2;
            PyObject *tmp_left_name_4;
            PyObject *tmp_left_name_5;
            PyObject *tmp_right_name_4;
            PyObject *tmp_right_name_5;
            CHECK_OBJECT(par_ui);
            tmp_source_name_6 = par_ui;
            tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_6, const_str_plain_msg_err);
            if (tmp_called_name_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 524;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_left_name_5 = const_str_digest_6c563c0332df6661a8e4db7513182d71;
            CHECK_OBJECT(var_sf_txt);
            tmp_right_name_4 = var_sf_txt;
            tmp_left_name_4 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_5, tmp_right_name_4);
            if (tmp_left_name_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_1);

                exception_lineno = 524;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_right_name_5 = const_str_dot;
            tmp_args_element_name_2 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_4, tmp_right_name_5);
            Py_DECREF(tmp_left_name_4);
            if (tmp_args_element_name_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_1);

                exception_lineno = 524;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 524;
            tmp_call_result_8 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_1, tmp_args_element_name_2);
            Py_DECREF(tmp_called_name_1);
            Py_DECREF(tmp_args_element_name_2);
            if (tmp_call_result_8 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 524;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_8);
        }
        branch_no_9:;
    }
    {
        PyObject *tmp_assign_source_22;
        PyObject *tmp_sum_sequence_1;
        CHECK_OBJECT(par_res_list);
        tmp_sum_sequence_1 = par_res_list;
        tmp_assign_source_22 = BUILTIN_SUM1(tmp_sum_sequence_1);
        if (tmp_assign_source_22 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 526;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_res_sum == NULL);
        var_res_sum = tmp_assign_source_22;
    }
    {
        nuitka_bool tmp_condition_result_11;
        PyObject *tmp_compexpr_left_8;
        PyObject *tmp_compexpr_right_8;
        CHECK_OBJECT(var_res_sum);
        tmp_compexpr_left_8 = var_res_sum;
        tmp_compexpr_right_8 = const_int_0;
        tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_INT(tmp_compexpr_left_8, tmp_compexpr_right_8);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 528;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_11 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_11 == NUITKA_BOOL_TRUE) {
            goto branch_yes_11;
        } else {
            goto branch_no_11;
        }
        branch_yes_11:;
        {
            PyObject *tmp_assign_source_23;
            tmp_assign_source_23 = Py_True;
            assert(var_start_f == NULL);
            Py_INCREF(tmp_assign_source_23);
            var_start_f = tmp_assign_source_23;
        }
        {
            PyObject *tmp_assign_source_24;
            tmp_assign_source_24 = Py_True;
            assert(var_start_p == NULL);
            Py_INCREF(tmp_assign_source_24);
            var_start_p = tmp_assign_source_24;
        }
        {
            PyObject *tmp_assign_source_25;
            tmp_assign_source_25 = Py_True;
            assert(var_start_alo == NULL);
            Py_INCREF(tmp_assign_source_25);
            var_start_alo = tmp_assign_source_25;
        }
        {
            PyObject *tmp_assign_source_26;
            tmp_assign_source_26 = Py_True;
            assert(var_start_to == NULL);
            Py_INCREF(tmp_assign_source_26);
            var_start_to = tmp_assign_source_26;
        }
        {
            PyObject *tmp_assign_source_27;
            tmp_assign_source_27 = Py_True;
            assert(var_start_na == NULL);
            Py_INCREF(tmp_assign_source_27);
            var_start_na = tmp_assign_source_27;
        }
        {
            PyObject *tmp_assign_source_28;
            tmp_assign_source_28 = Py_True;
            assert(var_start_spb == NULL);
            Py_INCREF(tmp_assign_source_28);
            var_start_spb = tmp_assign_source_28;
        }
        {
            PyObject *tmp_assign_source_29;
            tmp_assign_source_29 = Py_True;
            assert(var_start_miss == NULL);
            Py_INCREF(tmp_assign_source_29);
            var_start_miss = tmp_assign_source_29;
        }
        {
            PyObject *tmp_assign_source_30;
            tmp_assign_source_30 = const_str_empty;
            assert(var_list_f == NULL);
            Py_INCREF(tmp_assign_source_30);
            var_list_f = tmp_assign_source_30;
        }
        {
            PyObject *tmp_assign_source_31;
            tmp_assign_source_31 = const_str_empty;
            assert(var_list_p == NULL);
            Py_INCREF(tmp_assign_source_31);
            var_list_p = tmp_assign_source_31;
        }
        {
            PyObject *tmp_assign_source_32;
            tmp_assign_source_32 = const_str_empty;
            assert(var_list_alo == NULL);
            Py_INCREF(tmp_assign_source_32);
            var_list_alo = tmp_assign_source_32;
        }
        {
            PyObject *tmp_assign_source_33;
            tmp_assign_source_33 = const_str_empty;
            assert(var_list_to == NULL);
            Py_INCREF(tmp_assign_source_33);
            var_list_to = tmp_assign_source_33;
        }
        {
            PyObject *tmp_assign_source_34;
            tmp_assign_source_34 = const_str_empty;
            assert(var_list_na == NULL);
            Py_INCREF(tmp_assign_source_34);
            var_list_na = tmp_assign_source_34;
        }
        {
            PyObject *tmp_assign_source_35;
            tmp_assign_source_35 = const_str_empty;
            assert(var_list_spb == NULL);
            Py_INCREF(tmp_assign_source_35);
            var_list_spb = tmp_assign_source_35;
        }
        {
            PyObject *tmp_assign_source_36;
            tmp_assign_source_36 = const_str_empty;
            assert(var_list_miss == NULL);
            Py_INCREF(tmp_assign_source_36);
            var_list_miss = tmp_assign_source_36;
        }
        {
            PyObject *tmp_assign_source_37;
            tmp_assign_source_37 = const_int_0;
            assert(var_count == NULL);
            Py_INCREF(tmp_assign_source_37);
            var_count = tmp_assign_source_37;
        }
        {
            PyObject *tmp_assign_source_38;
            tmp_assign_source_38 = const_int_0;
            assert(var_count_f == NULL);
            Py_INCREF(tmp_assign_source_38);
            var_count_f = tmp_assign_source_38;
        }
        {
            PyObject *tmp_assign_source_39;
            tmp_assign_source_39 = const_int_neg_1;
            assert(var_last_f == NULL);
            Py_INCREF(tmp_assign_source_39);
            var_last_f = tmp_assign_source_39;
        }
        {
            PyObject *tmp_assign_source_40;
            PyObject *tmp_iter_arg_5;
            CHECK_OBJECT(par_selected_list);
            tmp_iter_arg_5 = par_selected_list;
            tmp_assign_source_40 = MAKE_ITERATOR(tmp_iter_arg_5);
            if (tmp_assign_source_40 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 546;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_5__for_iterator == NULL);
            tmp_for_loop_5__for_iterator = tmp_assign_source_40;
        }
        // Tried code:
        loop_start_5:;
        {
            PyObject *tmp_next_source_5;
            PyObject *tmp_assign_source_41;
            CHECK_OBJECT(tmp_for_loop_5__for_iterator);
            tmp_next_source_5 = tmp_for_loop_5__for_iterator;
            tmp_assign_source_41 = ITERATOR_NEXT(tmp_next_source_5);
            if (tmp_assign_source_41 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_5;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    exception_lineno = 546;
                    goto try_except_handler_6;
                }
            }

            {
                PyObject *old = tmp_for_loop_5__iter_value;
                tmp_for_loop_5__iter_value = tmp_assign_source_41;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_42;
            CHECK_OBJECT(tmp_for_loop_5__iter_value);
            tmp_assign_source_42 = tmp_for_loop_5__iter_value;
            {
                PyObject *old = var_y;
                var_y = tmp_assign_source_42;
                Py_INCREF(var_y);
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assattr_name_4;
            PyObject *tmp_subscribed_name_5;
            PyObject *tmp_source_name_7;
            PyObject *tmp_subscript_name_5;
            PyObject *tmp_assattr_target_4;
            CHECK_OBJECT(par_ui);
            tmp_source_name_7 = par_ui;
            tmp_subscribed_name_5 = LOOKUP_ATTRIBUTE(tmp_source_name_7, const_str_plain_devs_list);
            if (tmp_subscribed_name_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 547;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_6;
            }
            CHECK_OBJECT(var_y);
            tmp_subscript_name_5 = var_y;
            tmp_assattr_name_4 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_5, tmp_subscript_name_5);
            Py_DECREF(tmp_subscribed_name_5);
            if (tmp_assattr_name_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 547;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_6;
            }
            CHECK_OBJECT(par_ui);
            tmp_assattr_target_4 = par_ui;
            tmp_result = SET_ATTRIBUTE(tmp_assattr_target_4, const_str_plain_devname, tmp_assattr_name_4);
            Py_DECREF(tmp_assattr_name_4);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 547;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_6;
            }
        }
        {
            nuitka_bool tmp_condition_result_12;
            PyObject *tmp_compexpr_left_9;
            PyObject *tmp_compexpr_right_9;
            PyObject *tmp_subscribed_name_6;
            PyObject *tmp_subscript_name_6;
            CHECK_OBJECT(par_res_list);
            tmp_subscribed_name_6 = par_res_list;
            CHECK_OBJECT(var_count);
            tmp_subscript_name_6 = var_count;
            tmp_compexpr_left_9 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_6, tmp_subscript_name_6);
            if (tmp_compexpr_left_9 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 548;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_6;
            }
            tmp_compexpr_right_9 = const_int_0;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_9, tmp_compexpr_right_9);
            Py_DECREF(tmp_compexpr_left_9);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 548;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_6;
            }
            tmp_condition_result_12 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_12 == NUITKA_BOOL_TRUE) {
                goto branch_yes_12;
            } else {
                goto branch_no_12;
            }
            branch_yes_12:;
            {
                PyObject *tmp_called_instance_9;
                PyObject *tmp_mvar_value_2;
                PyObject *tmp_call_result_9;
                PyObject *tmp_args_element_name_3;
                PyObject *tmp_args_element_name_4;
                PyObject *tmp_args_element_name_5;
                tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_dialogs);

                if (unlikely(tmp_mvar_value_2 == NULL)) {
                    tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_dialogs);
                }

                if (tmp_mvar_value_2 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 418 ], 36, 0);
                    exception_tb = NULL;

                    exception_lineno = 549;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_6;
                }

                tmp_called_instance_9 = tmp_mvar_value_2;
                tmp_args_element_name_3 = Py_None;
                CHECK_OBJECT(par_ui);
                tmp_args_element_name_4 = par_ui;
                tmp_args_element_name_5 = const_int_pos_1;
                frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 549;
                {
                    PyObject *call_args[] = {tmp_args_element_name_3, tmp_args_element_name_4, tmp_args_element_name_5};
                    tmp_call_result_9 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_9, const_str_plain_query, call_args);
                }

                if (tmp_call_result_9 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 549;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_6;
                }
                Py_DECREF(tmp_call_result_9);
            }
            {
                nuitka_bool tmp_condition_result_13;
                PyObject *tmp_operand_name_2;
                if (var_start_p == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_p");
                    exception_tb = NULL;

                    exception_lineno = 550;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_6;
                }

                tmp_operand_name_2 = var_start_p;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_2);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 550;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_6;
                }
                tmp_condition_result_13 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_13 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_13;
                } else {
                    goto branch_no_13;
                }
                branch_yes_13:;
                {
                    PyObject *tmp_assign_source_43;
                    PyObject *tmp_left_name_6;
                    PyObject *tmp_right_name_6;
                    if (var_list_p == NULL) {

                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p");
                        exception_tb = NULL;

                        exception_lineno = 551;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_6;
                    }

                    tmp_left_name_6 = var_list_p;
                    tmp_right_name_6 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                    tmp_assign_source_43 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_6, tmp_right_name_6);
                    if (tmp_assign_source_43 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 551;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_6;
                    }
                    {
                        PyObject *old = var_list_p;
                        var_list_p = tmp_assign_source_43;
                        Py_XDECREF(old);
                    }

                }
                goto branch_end_13;
                branch_no_13:;
                {
                    PyObject *tmp_assign_source_44;
                    tmp_assign_source_44 = Py_False;
                    {
                        PyObject *old = var_start_p;
                        var_start_p = tmp_assign_source_44;
                        Py_INCREF(var_start_p);
                        Py_XDECREF(old);
                    }

                }
                branch_end_13:;
            }
            {
                PyObject *tmp_assign_source_45;
                PyObject *tmp_left_name_7;
                PyObject *tmp_right_name_7;
                PyObject *tmp_subscribed_name_7;
                PyObject *tmp_source_name_8;
                PyObject *tmp_subscript_name_7;
                if (var_list_p == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p");
                    exception_tb = NULL;

                    exception_lineno = 554;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_6;
                }

                tmp_left_name_7 = var_list_p;
                CHECK_OBJECT(par_ui);
                tmp_source_name_8 = par_ui;
                tmp_subscribed_name_7 = LOOKUP_ATTRIBUTE(tmp_source_name_8, const_str_plain_devs_list);
                if (tmp_subscribed_name_7 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 554;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_6;
                }
                CHECK_OBJECT(var_y);
                tmp_subscript_name_7 = var_y;
                tmp_right_name_7 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_7, tmp_subscript_name_7);
                Py_DECREF(tmp_subscribed_name_7);
                if (tmp_right_name_7 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 554;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_6;
                }
                tmp_assign_source_45 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_7, tmp_right_name_7);
                Py_DECREF(tmp_right_name_7);
                if (tmp_assign_source_45 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 554;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_6;
                }
                {
                    PyObject *old = var_list_p;
                    var_list_p = tmp_assign_source_45;
                    Py_XDECREF(old);
                }

            }
            goto branch_end_12;
            branch_no_12:;
            {
                nuitka_bool tmp_condition_result_14;
                PyObject *tmp_compexpr_left_10;
                PyObject *tmp_compexpr_right_10;
                PyObject *tmp_subscribed_name_8;
                PyObject *tmp_subscript_name_8;
                CHECK_OBJECT(par_res_list);
                tmp_subscribed_name_8 = par_res_list;
                CHECK_OBJECT(var_count);
                tmp_subscript_name_8 = var_count;
                tmp_compexpr_left_10 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_8, tmp_subscript_name_8);
                if (tmp_compexpr_left_10 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 555;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_6;
                }
                tmp_compexpr_right_10 = const_int_pos_1;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_10, tmp_compexpr_right_10);
                Py_DECREF(tmp_compexpr_left_10);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 555;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_6;
                }
                tmp_condition_result_14 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_14 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_14;
                } else {
                    goto branch_no_14;
                }
                branch_yes_14:;
                {
                    nuitka_bool tmp_condition_result_15;
                    int tmp_and_left_truth_1;
                    nuitka_bool tmp_and_left_value_1;
                    nuitka_bool tmp_and_right_value_1;
                    PyObject *tmp_compexpr_left_11;
                    PyObject *tmp_compexpr_right_11;
                    PyObject *tmp_subscribed_name_9;
                    PyObject *tmp_subscript_name_9;
                    PyObject *tmp_source_name_9;
                    int tmp_or_left_truth_1;
                    nuitka_bool tmp_or_left_value_1;
                    nuitka_bool tmp_or_right_value_1;
                    int tmp_and_left_truth_2;
                    nuitka_bool tmp_and_left_value_2;
                    nuitka_bool tmp_and_right_value_2;
                    PyObject *tmp_compexpr_left_12;
                    PyObject *tmp_compexpr_right_12;
                    PyObject *tmp_called_instance_10;
                    PyObject *tmp_source_name_10;
                    PyObject *tmp_compexpr_left_13;
                    PyObject *tmp_compexpr_right_13;
                    PyObject *tmp_subscribed_name_10;
                    PyObject *tmp_source_name_11;
                    PyObject *tmp_subscript_name_10;
                    PyObject *tmp_subscribed_name_11;
                    PyObject *tmp_source_name_12;
                    PyObject *tmp_subscript_name_11;
                    int tmp_and_left_truth_3;
                    nuitka_bool tmp_and_left_value_3;
                    nuitka_bool tmp_and_right_value_3;
                    PyObject *tmp_compexpr_left_14;
                    PyObject *tmp_compexpr_right_14;
                    PyObject *tmp_called_instance_11;
                    PyObject *tmp_source_name_13;
                    PyObject *tmp_compexpr_left_15;
                    PyObject *tmp_compexpr_right_15;
                    PyObject *tmp_subscribed_name_12;
                    PyObject *tmp_source_name_14;
                    PyObject *tmp_subscript_name_12;
                    PyObject *tmp_subscribed_name_13;
                    PyObject *tmp_source_name_15;
                    PyObject *tmp_subscript_name_13;
                    CHECK_OBJECT(par_status_list);
                    tmp_subscribed_name_9 = par_status_list;
                    CHECK_OBJECT(var_count);
                    tmp_subscript_name_9 = var_count;
                    tmp_compexpr_left_11 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_9, tmp_subscript_name_9);
                    if (tmp_compexpr_left_11 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 556;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_6;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_9 = par_ui;
                    tmp_compexpr_right_11 = LOOKUP_ATTRIBUTE(tmp_source_name_9, const_str_plain_NOT_AUTHORIZED);
                    if (tmp_compexpr_right_11 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_compexpr_left_11);

                        exception_lineno = 556;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_6;
                    }
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_11, tmp_compexpr_right_11);
                    Py_DECREF(tmp_compexpr_left_11);
                    Py_DECREF(tmp_compexpr_right_11);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 556;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_6;
                    }
                    tmp_and_left_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_and_left_truth_1 = tmp_and_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
                    if (tmp_and_left_truth_1 == 1) {
                        goto and_right_1;
                    } else {
                        goto and_left_1;
                    }
                    and_right_1:;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_10 = par_ui;
                    tmp_called_instance_10 = LOOKUP_ATTRIBUTE(tmp_source_name_10, const_str_plain_auth_menu);
                    if (tmp_called_instance_10 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 556;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_6;
                    }
                    frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 556;
                    tmp_compexpr_left_12 = CALL_METHOD_NO_ARGS(tmp_called_instance_10, const_str_plain_get_active);
                    Py_DECREF(tmp_called_instance_10);
                    if (tmp_compexpr_left_12 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 556;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_6;
                    }
                    tmp_compexpr_right_12 = const_int_0;
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_12, tmp_compexpr_right_12);
                    Py_DECREF(tmp_compexpr_left_12);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 556;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_6;
                    }
                    tmp_and_left_value_2 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_and_left_truth_2 = tmp_and_left_value_2 == NUITKA_BOOL_TRUE ? 1 : 0;
                    if (tmp_and_left_truth_2 == 1) {
                        goto and_right_2;
                    } else {
                        goto and_left_2;
                    }
                    and_right_2:;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_11 = par_ui;
                    tmp_subscribed_name_10 = LOOKUP_ATTRIBUTE(tmp_source_name_11, const_str_plain_admin_aol_list);
                    if (tmp_subscribed_name_10 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 556;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_6;
                    }
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_10 = var_y;
                    tmp_compexpr_left_13 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_10, tmp_subscript_name_10);
                    Py_DECREF(tmp_subscribed_name_10);
                    if (tmp_compexpr_left_13 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 556;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_6;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_12 = par_ui;
                    tmp_subscribed_name_11 = LOOKUP_ATTRIBUTE(tmp_source_name_12, const_str_plain_retrylimit_list);
                    if (tmp_subscribed_name_11 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_compexpr_left_13);

                        exception_lineno = 556;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_6;
                    }
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_11 = var_y;
                    tmp_compexpr_right_13 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_11, tmp_subscript_name_11);
                    Py_DECREF(tmp_subscribed_name_11);
                    if (tmp_compexpr_right_13 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_compexpr_left_13);

                        exception_lineno = 556;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_6;
                    }
                    tmp_res = RICH_COMPARE_BOOL_LTE_OBJECT_OBJECT(tmp_compexpr_left_13, tmp_compexpr_right_13);
                    Py_DECREF(tmp_compexpr_left_13);
                    Py_DECREF(tmp_compexpr_right_13);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 556;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_6;
                    }
                    tmp_and_right_value_2 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_or_left_value_1 = tmp_and_right_value_2;
                    goto and_end_2;
                    and_left_2:;
                    tmp_or_left_value_1 = tmp_and_left_value_2;
                    and_end_2:;
                    tmp_or_left_truth_1 = tmp_or_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
                    if (tmp_or_left_truth_1 == 1) {
                        goto or_left_1;
                    } else {
                        goto or_right_1;
                    }
                    or_right_1:;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_13 = par_ui;
                    tmp_called_instance_11 = LOOKUP_ATTRIBUTE(tmp_source_name_13, const_str_plain_auth_menu);
                    if (tmp_called_instance_11 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 556;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_6;
                    }
                    frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 556;
                    tmp_compexpr_left_14 = CALL_METHOD_NO_ARGS(tmp_called_instance_11, const_str_plain_get_active);
                    Py_DECREF(tmp_called_instance_11);
                    if (tmp_compexpr_left_14 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 556;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_6;
                    }
                    tmp_compexpr_right_14 = const_int_pos_1;
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_14, tmp_compexpr_right_14);
                    Py_DECREF(tmp_compexpr_left_14);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 556;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_6;
                    }
                    tmp_and_left_value_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_and_left_truth_3 = tmp_and_left_value_3 == NUITKA_BOOL_TRUE ? 1 : 0;
                    if (tmp_and_left_truth_3 == 1) {
                        goto and_right_3;
                    } else {
                        goto and_left_3;
                    }
                    and_right_3:;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_14 = par_ui;
                    tmp_subscribed_name_12 = LOOKUP_ATTRIBUTE(tmp_source_name_14, const_str_plain_user_aol_list);
                    if (tmp_subscribed_name_12 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 556;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_6;
                    }
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_12 = var_y;
                    tmp_compexpr_left_15 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_12, tmp_subscript_name_12);
                    Py_DECREF(tmp_subscribed_name_12);
                    if (tmp_compexpr_left_15 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 556;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_6;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_15 = par_ui;
                    tmp_subscribed_name_13 = LOOKUP_ATTRIBUTE(tmp_source_name_15, const_str_plain_retrylimit_list);
                    if (tmp_subscribed_name_13 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_compexpr_left_15);

                        exception_lineno = 556;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_6;
                    }
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_13 = var_y;
                    tmp_compexpr_right_15 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_13, tmp_subscript_name_13);
                    Py_DECREF(tmp_subscribed_name_13);
                    if (tmp_compexpr_right_15 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_compexpr_left_15);

                        exception_lineno = 556;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_6;
                    }
                    tmp_res = RICH_COMPARE_BOOL_LTE_OBJECT_OBJECT(tmp_compexpr_left_15, tmp_compexpr_right_15);
                    Py_DECREF(tmp_compexpr_left_15);
                    Py_DECREF(tmp_compexpr_right_15);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 556;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_6;
                    }
                    tmp_and_right_value_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_or_right_value_1 = tmp_and_right_value_3;
                    goto and_end_3;
                    and_left_3:;
                    tmp_or_right_value_1 = tmp_and_left_value_3;
                    and_end_3:;
                    tmp_and_right_value_1 = tmp_or_right_value_1;
                    goto or_end_1;
                    or_left_1:;
                    tmp_and_right_value_1 = tmp_or_left_value_1;
                    or_end_1:;
                    tmp_condition_result_15 = tmp_and_right_value_1;
                    goto and_end_1;
                    and_left_1:;
                    tmp_condition_result_15 = tmp_and_left_value_1;
                    and_end_1:;
                    if (tmp_condition_result_15 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_15;
                    } else {
                        goto branch_no_15;
                    }
                    branch_yes_15:;
                    {
                        nuitka_bool tmp_condition_result_16;
                        PyObject *tmp_operand_name_3;
                        if (var_start_f == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_f");
                            exception_tb = NULL;

                            exception_lineno = 557;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }

                        tmp_operand_name_3 = var_start_f;
                        tmp_res = CHECK_IF_TRUE(tmp_operand_name_3);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 557;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        tmp_condition_result_16 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_16 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_16;
                        } else {
                            goto branch_no_16;
                        }
                        branch_yes_16:;
                        {
                            PyObject *tmp_assign_source_46;
                            PyObject *tmp_left_name_8;
                            PyObject *tmp_right_name_8;
                            if (var_list_f == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                                exception_tb = NULL;

                                exception_lineno = 558;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_6;
                            }

                            tmp_left_name_8 = var_list_f;
                            tmp_right_name_8 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                            tmp_assign_source_46 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_8, tmp_right_name_8);
                            if (tmp_assign_source_46 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 558;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_6;
                            }
                            {
                                PyObject *old = var_list_f;
                                var_list_f = tmp_assign_source_46;
                                Py_XDECREF(old);
                            }

                        }
                        goto branch_end_16;
                        branch_no_16:;
                        {
                            PyObject *tmp_assign_source_47;
                            tmp_assign_source_47 = Py_False;
                            {
                                PyObject *old = var_start_f;
                                var_start_f = tmp_assign_source_47;
                                Py_INCREF(var_start_f);
                                Py_XDECREF(old);
                            }

                        }
                        branch_end_16:;
                    }
                    {
                        PyObject *tmp_assign_source_48;
                        PyObject *tmp_left_name_9;
                        PyObject *tmp_right_name_9;
                        PyObject *tmp_subscribed_name_14;
                        PyObject *tmp_source_name_16;
                        PyObject *tmp_subscript_name_14;
                        if (var_list_f == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                            exception_tb = NULL;

                            exception_lineno = 561;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }

                        tmp_left_name_9 = var_list_f;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_16 = par_ui;
                        tmp_subscribed_name_14 = LOOKUP_ATTRIBUTE(tmp_source_name_16, const_str_plain_devs_list);
                        if (tmp_subscribed_name_14 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 561;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_14 = var_y;
                        tmp_right_name_9 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_14, tmp_subscript_name_14);
                        Py_DECREF(tmp_subscribed_name_14);
                        if (tmp_right_name_9 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 561;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        tmp_assign_source_48 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_9, tmp_right_name_9);
                        Py_DECREF(tmp_right_name_9);
                        if (tmp_assign_source_48 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 561;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        {
                            PyObject *old = var_list_f;
                            var_list_f = tmp_assign_source_48;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assign_source_49;
                        PyObject *tmp_left_name_10;
                        PyObject *tmp_right_name_10;
                        if (var_count_f == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "count_f");
                            exception_tb = NULL;

                            exception_lineno = 562;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }

                        tmp_left_name_10 = var_count_f;
                        tmp_right_name_10 = const_int_pos_1;
                        tmp_assign_source_49 = BINARY_OPERATION_ADD_OBJECT_INT(tmp_left_name_10, tmp_right_name_10);
                        if (tmp_assign_source_49 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 562;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        {
                            PyObject *old = var_count_f;
                            var_count_f = tmp_assign_source_49;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assign_source_50;
                        CHECK_OBJECT(var_y);
                        tmp_assign_source_50 = var_y;
                        {
                            PyObject *old = var_last_f;
                            var_last_f = tmp_assign_source_50;
                            Py_INCREF(var_last_f);
                            Py_XDECREF(old);
                        }

                    }
                    goto branch_end_15;
                    branch_no_15:;
                    {
                        nuitka_bool tmp_condition_result_17;
                        int tmp_or_left_truth_2;
                        nuitka_bool tmp_or_left_value_2;
                        nuitka_bool tmp_or_right_value_2;
                        PyObject *tmp_compexpr_left_16;
                        PyObject *tmp_compexpr_right_16;
                        PyObject *tmp_subscribed_name_15;
                        PyObject *tmp_subscript_name_15;
                        PyObject *tmp_source_name_17;
                        int tmp_or_left_truth_3;
                        nuitka_bool tmp_or_left_value_3;
                        nuitka_bool tmp_or_right_value_3;
                        int tmp_and_left_truth_4;
                        nuitka_bool tmp_and_left_value_4;
                        nuitka_bool tmp_and_right_value_4;
                        PyObject *tmp_compexpr_left_17;
                        PyObject *tmp_compexpr_right_17;
                        PyObject *tmp_called_instance_12;
                        PyObject *tmp_source_name_18;
                        PyObject *tmp_compexpr_left_18;
                        PyObject *tmp_compexpr_right_18;
                        PyObject *tmp_subscribed_name_16;
                        PyObject *tmp_source_name_19;
                        PyObject *tmp_subscript_name_16;
                        PyObject *tmp_subscribed_name_17;
                        PyObject *tmp_source_name_20;
                        PyObject *tmp_subscript_name_17;
                        int tmp_and_left_truth_5;
                        nuitka_bool tmp_and_left_value_5;
                        nuitka_bool tmp_and_right_value_5;
                        PyObject *tmp_compexpr_left_19;
                        PyObject *tmp_compexpr_right_19;
                        PyObject *tmp_called_instance_13;
                        PyObject *tmp_source_name_21;
                        PyObject *tmp_compexpr_left_20;
                        PyObject *tmp_compexpr_right_20;
                        PyObject *tmp_subscribed_name_18;
                        PyObject *tmp_source_name_22;
                        PyObject *tmp_subscript_name_18;
                        PyObject *tmp_subscribed_name_19;
                        PyObject *tmp_source_name_23;
                        PyObject *tmp_subscript_name_19;
                        CHECK_OBJECT(par_status_list);
                        tmp_subscribed_name_15 = par_status_list;
                        CHECK_OBJECT(var_count);
                        tmp_subscript_name_15 = var_count;
                        tmp_compexpr_left_16 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_15, tmp_subscript_name_15);
                        if (tmp_compexpr_left_16 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 564;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_17 = par_ui;
                        tmp_compexpr_right_16 = LOOKUP_ATTRIBUTE(tmp_source_name_17, const_str_plain_AUTHORITY_LOCKED_OUT);
                        if (tmp_compexpr_right_16 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_compexpr_left_16);

                            exception_lineno = 564;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_16, tmp_compexpr_right_16);
                        Py_DECREF(tmp_compexpr_left_16);
                        Py_DECREF(tmp_compexpr_right_16);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 564;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        tmp_or_left_value_2 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        tmp_or_left_truth_2 = tmp_or_left_value_2 == NUITKA_BOOL_TRUE ? 1 : 0;
                        if (tmp_or_left_truth_2 == 1) {
                            goto or_left_2;
                        } else {
                            goto or_right_2;
                        }
                        or_right_2:;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_18 = par_ui;
                        tmp_called_instance_12 = LOOKUP_ATTRIBUTE(tmp_source_name_18, const_str_plain_auth_menu);
                        if (tmp_called_instance_12 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 564;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 564;
                        tmp_compexpr_left_17 = CALL_METHOD_NO_ARGS(tmp_called_instance_12, const_str_plain_get_active);
                        Py_DECREF(tmp_called_instance_12);
                        if (tmp_compexpr_left_17 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 564;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        tmp_compexpr_right_17 = const_int_0;
                        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_17, tmp_compexpr_right_17);
                        Py_DECREF(tmp_compexpr_left_17);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 564;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        tmp_and_left_value_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        tmp_and_left_truth_4 = tmp_and_left_value_4 == NUITKA_BOOL_TRUE ? 1 : 0;
                        if (tmp_and_left_truth_4 == 1) {
                            goto and_right_4;
                        } else {
                            goto and_left_4;
                        }
                        and_right_4:;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_19 = par_ui;
                        tmp_subscribed_name_16 = LOOKUP_ATTRIBUTE(tmp_source_name_19, const_str_plain_admin_aol_list);
                        if (tmp_subscribed_name_16 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 564;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_16 = var_y;
                        tmp_compexpr_left_18 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_16, tmp_subscript_name_16);
                        Py_DECREF(tmp_subscribed_name_16);
                        if (tmp_compexpr_left_18 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 564;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_20 = par_ui;
                        tmp_subscribed_name_17 = LOOKUP_ATTRIBUTE(tmp_source_name_20, const_str_plain_retrylimit_list);
                        if (tmp_subscribed_name_17 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_compexpr_left_18);

                            exception_lineno = 564;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_17 = var_y;
                        tmp_compexpr_right_18 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_17, tmp_subscript_name_17);
                        Py_DECREF(tmp_subscribed_name_17);
                        if (tmp_compexpr_right_18 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_compexpr_left_18);

                            exception_lineno = 564;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        tmp_res = RICH_COMPARE_BOOL_GT_OBJECT_OBJECT(tmp_compexpr_left_18, tmp_compexpr_right_18);
                        Py_DECREF(tmp_compexpr_left_18);
                        Py_DECREF(tmp_compexpr_right_18);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 564;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        tmp_and_right_value_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        tmp_or_left_value_3 = tmp_and_right_value_4;
                        goto and_end_4;
                        and_left_4:;
                        tmp_or_left_value_3 = tmp_and_left_value_4;
                        and_end_4:;
                        tmp_or_left_truth_3 = tmp_or_left_value_3 == NUITKA_BOOL_TRUE ? 1 : 0;
                        if (tmp_or_left_truth_3 == 1) {
                            goto or_left_3;
                        } else {
                            goto or_right_3;
                        }
                        or_right_3:;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_21 = par_ui;
                        tmp_called_instance_13 = LOOKUP_ATTRIBUTE(tmp_source_name_21, const_str_plain_auth_menu);
                        if (tmp_called_instance_13 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 564;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 564;
                        tmp_compexpr_left_19 = CALL_METHOD_NO_ARGS(tmp_called_instance_13, const_str_plain_get_active);
                        Py_DECREF(tmp_called_instance_13);
                        if (tmp_compexpr_left_19 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 564;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        tmp_compexpr_right_19 = const_int_pos_1;
                        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_19, tmp_compexpr_right_19);
                        Py_DECREF(tmp_compexpr_left_19);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 564;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        tmp_and_left_value_5 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        tmp_and_left_truth_5 = tmp_and_left_value_5 == NUITKA_BOOL_TRUE ? 1 : 0;
                        if (tmp_and_left_truth_5 == 1) {
                            goto and_right_5;
                        } else {
                            goto and_left_5;
                        }
                        and_right_5:;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_22 = par_ui;
                        tmp_subscribed_name_18 = LOOKUP_ATTRIBUTE(tmp_source_name_22, const_str_plain_user_aol_list);
                        if (tmp_subscribed_name_18 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 564;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_18 = var_y;
                        tmp_compexpr_left_20 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_18, tmp_subscript_name_18);
                        Py_DECREF(tmp_subscribed_name_18);
                        if (tmp_compexpr_left_20 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 564;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_23 = par_ui;
                        tmp_subscribed_name_19 = LOOKUP_ATTRIBUTE(tmp_source_name_23, const_str_plain_retrylimit_list);
                        if (tmp_subscribed_name_19 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_compexpr_left_20);

                            exception_lineno = 564;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_19 = var_y;
                        tmp_compexpr_right_20 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_19, tmp_subscript_name_19);
                        Py_DECREF(tmp_subscribed_name_19);
                        if (tmp_compexpr_right_20 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_compexpr_left_20);

                            exception_lineno = 564;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        tmp_res = RICH_COMPARE_BOOL_GT_OBJECT_OBJECT(tmp_compexpr_left_20, tmp_compexpr_right_20);
                        Py_DECREF(tmp_compexpr_left_20);
                        Py_DECREF(tmp_compexpr_right_20);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 564;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        tmp_and_right_value_5 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        tmp_or_right_value_3 = tmp_and_right_value_5;
                        goto and_end_5;
                        and_left_5:;
                        tmp_or_right_value_3 = tmp_and_left_value_5;
                        and_end_5:;
                        tmp_or_right_value_2 = tmp_or_right_value_3;
                        goto or_end_3;
                        or_left_3:;
                        tmp_or_right_value_2 = tmp_or_left_value_3;
                        or_end_3:;
                        tmp_condition_result_17 = tmp_or_right_value_2;
                        goto or_end_2;
                        or_left_2:;
                        tmp_condition_result_17 = tmp_or_left_value_2;
                        or_end_2:;
                        if (tmp_condition_result_17 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_17;
                        } else {
                            goto branch_no_17;
                        }
                        branch_yes_17:;
                        {
                            nuitka_bool tmp_condition_result_18;
                            PyObject *tmp_operand_name_4;
                            if (var_start_alo == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_alo");
                                exception_tb = NULL;

                                exception_lineno = 565;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_6;
                            }

                            tmp_operand_name_4 = var_start_alo;
                            tmp_res = CHECK_IF_TRUE(tmp_operand_name_4);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 565;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_6;
                            }
                            tmp_condition_result_18 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            if (tmp_condition_result_18 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_18;
                            } else {
                                goto branch_no_18;
                            }
                            branch_yes_18:;
                            {
                                PyObject *tmp_assign_source_51;
                                PyObject *tmp_left_name_11;
                                PyObject *tmp_right_name_11;
                                if (var_list_alo == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_alo");
                                    exception_tb = NULL;

                                    exception_lineno = 566;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_6;
                                }

                                tmp_left_name_11 = var_list_alo;
                                tmp_right_name_11 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                                tmp_assign_source_51 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_11, tmp_right_name_11);
                                if (tmp_assign_source_51 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 566;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_6;
                                }
                                {
                                    PyObject *old = var_list_alo;
                                    var_list_alo = tmp_assign_source_51;
                                    Py_XDECREF(old);
                                }

                            }
                            goto branch_end_18;
                            branch_no_18:;
                            {
                                PyObject *tmp_assign_source_52;
                                tmp_assign_source_52 = Py_False;
                                {
                                    PyObject *old = var_start_alo;
                                    var_start_alo = tmp_assign_source_52;
                                    Py_INCREF(var_start_alo);
                                    Py_XDECREF(old);
                                }

                            }
                            branch_end_18:;
                        }
                        {
                            PyObject *tmp_assign_source_53;
                            PyObject *tmp_left_name_12;
                            PyObject *tmp_right_name_12;
                            PyObject *tmp_subscribed_name_20;
                            PyObject *tmp_source_name_24;
                            PyObject *tmp_subscript_name_20;
                            if (var_list_alo == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_alo");
                                exception_tb = NULL;

                                exception_lineno = 569;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_6;
                            }

                            tmp_left_name_12 = var_list_alo;
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_24 = par_ui;
                            tmp_subscribed_name_20 = LOOKUP_ATTRIBUTE(tmp_source_name_24, const_str_plain_devs_list);
                            if (tmp_subscribed_name_20 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 569;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_6;
                            }
                            CHECK_OBJECT(var_y);
                            tmp_subscript_name_20 = var_y;
                            tmp_right_name_12 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_20, tmp_subscript_name_20);
                            Py_DECREF(tmp_subscribed_name_20);
                            if (tmp_right_name_12 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 569;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_6;
                            }
                            tmp_assign_source_53 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_12, tmp_right_name_12);
                            Py_DECREF(tmp_right_name_12);
                            if (tmp_assign_source_53 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 569;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_6;
                            }
                            {
                                PyObject *old = var_list_alo;
                                var_list_alo = tmp_assign_source_53;
                                Py_XDECREF(old);
                            }

                        }
                        branch_no_17:;
                    }
                    branch_end_15:;
                }
                goto branch_end_14;
                branch_no_14:;
                {
                    nuitka_bool tmp_condition_result_19;
                    PyObject *tmp_compexpr_left_21;
                    PyObject *tmp_compexpr_right_21;
                    PyObject *tmp_subscribed_name_21;
                    PyObject *tmp_subscript_name_21;
                    CHECK_OBJECT(par_res_list);
                    tmp_subscribed_name_21 = par_res_list;
                    CHECK_OBJECT(var_count);
                    tmp_subscript_name_21 = var_count;
                    tmp_compexpr_left_21 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_21, tmp_subscript_name_21);
                    if (tmp_compexpr_left_21 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 570;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_6;
                    }
                    tmp_compexpr_right_21 = const_int_pos_3;
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_21, tmp_compexpr_right_21);
                    Py_DECREF(tmp_compexpr_left_21);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 570;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_6;
                    }
                    tmp_condition_result_19 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_19 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_19;
                    } else {
                        goto branch_no_19;
                    }
                    branch_yes_19:;
                    {
                        nuitka_bool tmp_condition_result_20;
                        PyObject *tmp_operand_name_5;
                        if (var_start_na == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_na");
                            exception_tb = NULL;

                            exception_lineno = 571;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }

                        tmp_operand_name_5 = var_start_na;
                        tmp_res = CHECK_IF_TRUE(tmp_operand_name_5);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 571;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        tmp_condition_result_20 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_20 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_20;
                        } else {
                            goto branch_no_20;
                        }
                        branch_yes_20:;
                        {
                            PyObject *tmp_assign_source_54;
                            PyObject *tmp_left_name_13;
                            PyObject *tmp_right_name_13;
                            if (var_list_na == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_na");
                                exception_tb = NULL;

                                exception_lineno = 572;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_6;
                            }

                            tmp_left_name_13 = var_list_na;
                            tmp_right_name_13 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                            tmp_assign_source_54 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_13, tmp_right_name_13);
                            if (tmp_assign_source_54 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 572;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_6;
                            }
                            {
                                PyObject *old = var_list_na;
                                var_list_na = tmp_assign_source_54;
                                Py_XDECREF(old);
                            }

                        }
                        goto branch_end_20;
                        branch_no_20:;
                        {
                            PyObject *tmp_assign_source_55;
                            tmp_assign_source_55 = Py_False;
                            {
                                PyObject *old = var_start_na;
                                var_start_na = tmp_assign_source_55;
                                Py_INCREF(var_start_na);
                                Py_XDECREF(old);
                            }

                        }
                        branch_end_20:;
                    }
                    {
                        PyObject *tmp_assign_source_56;
                        PyObject *tmp_left_name_14;
                        PyObject *tmp_right_name_14;
                        PyObject *tmp_subscribed_name_22;
                        PyObject *tmp_source_name_25;
                        PyObject *tmp_subscript_name_22;
                        if (var_list_na == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_na");
                            exception_tb = NULL;

                            exception_lineno = 575;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }

                        tmp_left_name_14 = var_list_na;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_25 = par_ui;
                        tmp_subscribed_name_22 = LOOKUP_ATTRIBUTE(tmp_source_name_25, const_str_plain_devs_list);
                        if (tmp_subscribed_name_22 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 575;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_22 = var_y;
                        tmp_right_name_14 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_22, tmp_subscript_name_22);
                        Py_DECREF(tmp_subscribed_name_22);
                        if (tmp_right_name_14 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 575;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        tmp_assign_source_56 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_14, tmp_right_name_14);
                        Py_DECREF(tmp_right_name_14);
                        if (tmp_assign_source_56 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 575;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        {
                            PyObject *old = var_list_na;
                            var_list_na = tmp_assign_source_56;
                            Py_XDECREF(old);
                        }

                    }
                    goto branch_end_19;
                    branch_no_19:;
                    {
                        nuitka_bool tmp_condition_result_21;
                        PyObject *tmp_compexpr_left_22;
                        PyObject *tmp_compexpr_right_22;
                        PyObject *tmp_subscribed_name_23;
                        PyObject *tmp_subscript_name_23;
                        CHECK_OBJECT(par_res_list);
                        tmp_subscribed_name_23 = par_res_list;
                        CHECK_OBJECT(var_count);
                        tmp_subscript_name_23 = var_count;
                        tmp_compexpr_left_22 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_23, tmp_subscript_name_23);
                        if (tmp_compexpr_left_22 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 576;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        tmp_compexpr_right_22 = const_int_pos_4;
                        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_22, tmp_compexpr_right_22);
                        Py_DECREF(tmp_compexpr_left_22);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 576;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_6;
                        }
                        tmp_condition_result_21 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_21 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_21;
                        } else {
                            goto branch_no_21;
                        }
                        branch_yes_21:;
                        {
                            nuitka_bool tmp_condition_result_22;
                            PyObject *tmp_operand_name_6;
                            PyObject *tmp_mvar_value_3;
                            tmp_mvar_value_3 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_start_);

                            if (unlikely(tmp_mvar_value_3 == NULL)) {
                                tmp_mvar_value_3 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_start_);
                            }

                            if (tmp_mvar_value_3 == NULL) {

                                exception_type = PyExc_NameError;
                                Py_INCREF(exception_type);
                                exception_value = UNSTREAM_STRING(&constant_bin[ 1197 ], 35, 0);
                                exception_tb = NULL;

                                exception_lineno = 577;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_6;
                            }

                            tmp_operand_name_6 = tmp_mvar_value_3;
                            tmp_res = CHECK_IF_TRUE(tmp_operand_name_6);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 577;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_6;
                            }
                            tmp_condition_result_22 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            if (tmp_condition_result_22 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_22;
                            } else {
                                goto branch_no_22;
                            }
                            branch_yes_22:;
                            {
                                PyObject *tmp_assign_source_57;
                                PyObject *tmp_left_name_15;
                                PyObject *tmp_right_name_15;
                                if (var_list_spb == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_spb");
                                    exception_tb = NULL;

                                    exception_lineno = 578;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_6;
                                }

                                tmp_left_name_15 = var_list_spb;
                                tmp_right_name_15 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                                tmp_assign_source_57 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_15, tmp_right_name_15);
                                if (tmp_assign_source_57 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 578;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_6;
                                }
                                {
                                    PyObject *old = var_list_spb;
                                    var_list_spb = tmp_assign_source_57;
                                    Py_XDECREF(old);
                                }

                            }
                            goto branch_end_22;
                            branch_no_22:;
                            {
                                PyObject *tmp_assign_source_58;
                                tmp_assign_source_58 = Py_False;
                                {
                                    PyObject *old = var_start_spb;
                                    var_start_spb = tmp_assign_source_58;
                                    Py_INCREF(var_start_spb);
                                    Py_XDECREF(old);
                                }

                            }
                            branch_end_22:;
                        }
                        {
                            PyObject *tmp_assign_source_59;
                            PyObject *tmp_left_name_16;
                            PyObject *tmp_right_name_16;
                            PyObject *tmp_subscribed_name_24;
                            PyObject *tmp_source_name_26;
                            PyObject *tmp_subscript_name_24;
                            if (var_list_spb == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_spb");
                                exception_tb = NULL;

                                exception_lineno = 581;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_6;
                            }

                            tmp_left_name_16 = var_list_spb;
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_26 = par_ui;
                            tmp_subscribed_name_24 = LOOKUP_ATTRIBUTE(tmp_source_name_26, const_str_plain_devs_list);
                            if (tmp_subscribed_name_24 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 581;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_6;
                            }
                            CHECK_OBJECT(var_y);
                            tmp_subscript_name_24 = var_y;
                            tmp_right_name_16 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_24, tmp_subscript_name_24);
                            Py_DECREF(tmp_subscribed_name_24);
                            if (tmp_right_name_16 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 581;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_6;
                            }
                            tmp_assign_source_59 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_16, tmp_right_name_16);
                            Py_DECREF(tmp_right_name_16);
                            if (tmp_assign_source_59 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 581;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_6;
                            }
                            {
                                PyObject *old = var_list_spb;
                                var_list_spb = tmp_assign_source_59;
                                Py_XDECREF(old);
                            }

                        }
                        goto branch_end_21;
                        branch_no_21:;
                        {
                            nuitka_bool tmp_condition_result_23;
                            PyObject *tmp_compexpr_left_23;
                            PyObject *tmp_compexpr_right_23;
                            PyObject *tmp_subscribed_name_25;
                            PyObject *tmp_subscript_name_25;
                            CHECK_OBJECT(par_res_list);
                            tmp_subscribed_name_25 = par_res_list;
                            CHECK_OBJECT(var_count);
                            tmp_subscript_name_25 = var_count;
                            tmp_compexpr_left_23 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_25, tmp_subscript_name_25);
                            if (tmp_compexpr_left_23 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 582;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_6;
                            }
                            tmp_compexpr_right_23 = const_int_pos_6;
                            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_23, tmp_compexpr_right_23);
                            Py_DECREF(tmp_compexpr_left_23);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 582;
                                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_6;
                            }
                            tmp_condition_result_23 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            if (tmp_condition_result_23 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_23;
                            } else {
                                goto branch_no_23;
                            }
                            branch_yes_23:;
                            {
                                nuitka_bool tmp_condition_result_24;
                                PyObject *tmp_operand_name_7;
                                if (var_start_miss == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_miss");
                                    exception_tb = NULL;

                                    exception_lineno = 583;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_6;
                                }

                                tmp_operand_name_7 = var_start_miss;
                                tmp_res = CHECK_IF_TRUE(tmp_operand_name_7);
                                if (tmp_res == -1) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 583;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_6;
                                }
                                tmp_condition_result_24 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                                if (tmp_condition_result_24 == NUITKA_BOOL_TRUE) {
                                    goto branch_yes_24;
                                } else {
                                    goto branch_no_24;
                                }
                                branch_yes_24:;
                                {
                                    PyObject *tmp_assign_source_60;
                                    PyObject *tmp_left_name_17;
                                    PyObject *tmp_right_name_17;
                                    if (var_list_miss == NULL) {

                                        exception_type = PyExc_UnboundLocalError;
                                        Py_INCREF(exception_type);
                                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_miss");
                                        exception_tb = NULL;

                                        exception_lineno = 584;
                                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                        goto try_except_handler_6;
                                    }

                                    tmp_left_name_17 = var_list_miss;
                                    tmp_right_name_17 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                                    tmp_assign_source_60 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_17, tmp_right_name_17);
                                    if (tmp_assign_source_60 == NULL) {
                                        assert(ERROR_OCCURRED());

                                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                        exception_lineno = 584;
                                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                        goto try_except_handler_6;
                                    }
                                    {
                                        PyObject *old = var_list_miss;
                                        var_list_miss = tmp_assign_source_60;
                                        Py_XDECREF(old);
                                    }

                                }
                                goto branch_end_24;
                                branch_no_24:;
                                {
                                    PyObject *tmp_assign_source_61;
                                    tmp_assign_source_61 = Py_False;
                                    {
                                        PyObject *old = var_start_miss;
                                        var_start_miss = tmp_assign_source_61;
                                        Py_INCREF(var_start_miss);
                                        Py_XDECREF(old);
                                    }

                                }
                                branch_end_24:;
                            }
                            {
                                PyObject *tmp_assign_source_62;
                                PyObject *tmp_left_name_18;
                                PyObject *tmp_right_name_18;
                                PyObject *tmp_subscribed_name_26;
                                PyObject *tmp_source_name_27;
                                PyObject *tmp_subscript_name_26;
                                if (var_list_miss == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_miss");
                                    exception_tb = NULL;

                                    exception_lineno = 587;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_6;
                                }

                                tmp_left_name_18 = var_list_miss;
                                CHECK_OBJECT(par_ui);
                                tmp_source_name_27 = par_ui;
                                tmp_subscribed_name_26 = LOOKUP_ATTRIBUTE(tmp_source_name_27, const_str_plain_devs_list);
                                if (tmp_subscribed_name_26 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 587;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_6;
                                }
                                CHECK_OBJECT(var_y);
                                tmp_subscript_name_26 = var_y;
                                tmp_right_name_18 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_26, tmp_subscript_name_26);
                                Py_DECREF(tmp_subscribed_name_26);
                                if (tmp_right_name_18 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 587;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_6;
                                }
                                tmp_assign_source_62 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_18, tmp_right_name_18);
                                Py_DECREF(tmp_right_name_18);
                                if (tmp_assign_source_62 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 587;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_6;
                                }
                                {
                                    PyObject *old = var_list_miss;
                                    var_list_miss = tmp_assign_source_62;
                                    Py_XDECREF(old);
                                }

                            }
                            goto branch_end_23;
                            branch_no_23:;
                            {
                                nuitka_bool tmp_condition_result_25;
                                PyObject *tmp_operand_name_8;
                                if (var_start_to == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_to");
                                    exception_tb = NULL;

                                    exception_lineno = 589;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_6;
                                }

                                tmp_operand_name_8 = var_start_to;
                                tmp_res = CHECK_IF_TRUE(tmp_operand_name_8);
                                if (tmp_res == -1) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 589;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_6;
                                }
                                tmp_condition_result_25 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                                if (tmp_condition_result_25 == NUITKA_BOOL_TRUE) {
                                    goto branch_yes_25;
                                } else {
                                    goto branch_no_25;
                                }
                                branch_yes_25:;
                                {
                                    PyObject *tmp_assign_source_63;
                                    PyObject *tmp_left_name_19;
                                    PyObject *tmp_right_name_19;
                                    if (var_list_to == NULL) {

                                        exception_type = PyExc_UnboundLocalError;
                                        Py_INCREF(exception_type);
                                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_to");
                                        exception_tb = NULL;

                                        exception_lineno = 590;
                                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                        goto try_except_handler_6;
                                    }

                                    tmp_left_name_19 = var_list_to;
                                    tmp_right_name_19 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                                    tmp_assign_source_63 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_19, tmp_right_name_19);
                                    if (tmp_assign_source_63 == NULL) {
                                        assert(ERROR_OCCURRED());

                                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                        exception_lineno = 590;
                                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                        goto try_except_handler_6;
                                    }
                                    {
                                        PyObject *old = var_list_to;
                                        var_list_to = tmp_assign_source_63;
                                        Py_XDECREF(old);
                                    }

                                }
                                goto branch_end_25;
                                branch_no_25:;
                                {
                                    PyObject *tmp_assign_source_64;
                                    tmp_assign_source_64 = Py_False;
                                    {
                                        PyObject *old = var_start_to;
                                        var_start_to = tmp_assign_source_64;
                                        Py_INCREF(var_start_to);
                                        Py_XDECREF(old);
                                    }

                                }
                                branch_end_25:;
                            }
                            {
                                PyObject *tmp_assign_source_65;
                                PyObject *tmp_left_name_20;
                                PyObject *tmp_right_name_20;
                                PyObject *tmp_subscribed_name_27;
                                PyObject *tmp_source_name_28;
                                PyObject *tmp_subscript_name_27;
                                if (var_list_to == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_to");
                                    exception_tb = NULL;

                                    exception_lineno = 593;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_6;
                                }

                                tmp_left_name_20 = var_list_to;
                                CHECK_OBJECT(par_ui);
                                tmp_source_name_28 = par_ui;
                                tmp_subscribed_name_27 = LOOKUP_ATTRIBUTE(tmp_source_name_28, const_str_plain_devs_list);
                                if (tmp_subscribed_name_27 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 593;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_6;
                                }
                                CHECK_OBJECT(var_y);
                                tmp_subscript_name_27 = var_y;
                                tmp_right_name_20 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_27, tmp_subscript_name_27);
                                Py_DECREF(tmp_subscribed_name_27);
                                if (tmp_right_name_20 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 593;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_6;
                                }
                                tmp_assign_source_65 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_20, tmp_right_name_20);
                                Py_DECREF(tmp_right_name_20);
                                if (tmp_assign_source_65 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 593;
                                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_6;
                                }
                                {
                                    PyObject *old = var_list_to;
                                    var_list_to = tmp_assign_source_65;
                                    Py_XDECREF(old);
                                }

                            }
                            branch_end_23:;
                        }
                        branch_end_21:;
                    }
                    branch_end_19:;
                }
                branch_end_14:;
            }
            branch_end_12:;
        }
        {
            PyObject *tmp_assign_source_66;
            PyObject *tmp_left_name_21;
            PyObject *tmp_right_name_21;
            CHECK_OBJECT(var_count);
            tmp_left_name_21 = var_count;
            tmp_right_name_21 = const_int_pos_1;
            tmp_assign_source_66 = BINARY_OPERATION_ADD_OBJECT_INT(tmp_left_name_21, tmp_right_name_21);
            assert(!(tmp_assign_source_66 == NULL));
            {
                PyObject *old = var_count;
                assert(old != NULL);
                var_count = tmp_assign_source_66;
                Py_DECREF(old);
            }

        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 546;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
            goto try_except_handler_6;
        }
        goto loop_start_5;
        loop_end_5:;
        goto try_end_5;
        // Exception handler code:
        try_except_handler_6:;
        exception_keeper_type_5 = exception_type;
        exception_keeper_value_5 = exception_value;
        exception_keeper_tb_5 = exception_tb;
        exception_keeper_lineno_5 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_5__iter_value);
        tmp_for_loop_5__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_5__for_iterator);
        Py_DECREF(tmp_for_loop_5__for_iterator);
        tmp_for_loop_5__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_5;
        exception_value = exception_keeper_value_5;
        exception_tb = exception_keeper_tb_5;
        exception_lineno = exception_keeper_lineno_5;

        goto frame_exception_exit_1;
        // End of try:
        try_end_5:;
        Py_XDECREF(tmp_for_loop_5__iter_value);
        tmp_for_loop_5__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_5__for_iterator);
        Py_DECREF(tmp_for_loop_5__for_iterator);
        tmp_for_loop_5__for_iterator = NULL;

        {
            nuitka_bool tmp_condition_result_26;
            PyObject *tmp_compexpr_left_24;
            PyObject *tmp_compexpr_right_24;
            if (var_list_miss == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_miss");
                exception_tb = NULL;

                exception_lineno = 595;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_24 = var_list_miss;
            tmp_compexpr_right_24 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_24, tmp_compexpr_right_24);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 595;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_26 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_26 == NUITKA_BOOL_TRUE) {
                goto branch_yes_26;
            } else {
                goto branch_no_26;
            }
            branch_yes_26:;
            {
                PyObject *tmp_called_name_2;
                PyObject *tmp_source_name_29;
                PyObject *tmp_call_result_10;
                PyObject *tmp_args_element_name_6;
                PyObject *tmp_left_name_22;
                PyObject *tmp_right_name_22;
                CHECK_OBJECT(par_ui);
                tmp_source_name_29 = par_ui;
                tmp_called_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_29, const_str_plain_msg_err);
                if (tmp_called_name_2 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 596;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                if (var_list_miss == NULL) {
                    Py_DECREF(tmp_called_name_2);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_miss");
                    exception_tb = NULL;

                    exception_lineno = 596;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_left_name_22 = var_list_miss;
                tmp_right_name_22 = const_str_digest_21cdd10f62cd6949a9d1866524676a91;
                tmp_args_element_name_6 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_22, tmp_right_name_22);
                if (tmp_args_element_name_6 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_2);

                    exception_lineno = 596;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 596;
                tmp_call_result_10 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_2, tmp_args_element_name_6);
                Py_DECREF(tmp_called_name_2);
                Py_DECREF(tmp_args_element_name_6);
                if (tmp_call_result_10 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 596;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_10);
            }
            branch_no_26:;
        }
        {
            nuitka_bool tmp_condition_result_27;
            PyObject *tmp_compexpr_left_25;
            PyObject *tmp_compexpr_right_25;
            if (var_list_na == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_na");
                exception_tb = NULL;

                exception_lineno = 597;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_25 = var_list_na;
            tmp_compexpr_right_25 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_25, tmp_compexpr_right_25);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 597;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_27 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_27 == NUITKA_BOOL_TRUE) {
                goto branch_yes_27;
            } else {
                goto branch_no_27;
            }
            branch_yes_27:;
            {
                PyObject *tmp_called_name_3;
                PyObject *tmp_source_name_30;
                PyObject *tmp_call_result_11;
                PyObject *tmp_args_element_name_7;
                PyObject *tmp_left_name_23;
                PyObject *tmp_left_name_24;
                PyObject *tmp_right_name_23;
                PyObject *tmp_right_name_24;
                CHECK_OBJECT(par_ui);
                tmp_source_name_30 = par_ui;
                tmp_called_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_30, const_str_plain_msg_err);
                if (tmp_called_name_3 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 598;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_left_name_24 = const_str_digest_a453153347baafa6689efd2042ec2cf4;
                if (var_list_na == NULL) {
                    Py_DECREF(tmp_called_name_3);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_na");
                    exception_tb = NULL;

                    exception_lineno = 598;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_right_name_23 = var_list_na;
                tmp_left_name_23 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_24, tmp_right_name_23);
                if (tmp_left_name_23 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_3);

                    exception_lineno = 598;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_right_name_24 = const_str_dot;
                tmp_args_element_name_7 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_23, tmp_right_name_24);
                Py_DECREF(tmp_left_name_23);
                if (tmp_args_element_name_7 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_3);

                    exception_lineno = 598;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 598;
                tmp_call_result_11 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_3, tmp_args_element_name_7);
                Py_DECREF(tmp_called_name_3);
                Py_DECREF(tmp_args_element_name_7);
                if (tmp_call_result_11 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 598;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_11);
            }
            branch_no_27:;
        }
        {
            nuitka_bool tmp_condition_result_28;
            PyObject *tmp_compexpr_left_26;
            PyObject *tmp_compexpr_right_26;
            if (var_list_spb == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_spb");
                exception_tb = NULL;

                exception_lineno = 599;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_26 = var_list_spb;
            tmp_compexpr_right_26 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_26, tmp_compexpr_right_26);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 599;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_28 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_28 == NUITKA_BOOL_TRUE) {
                goto branch_yes_28;
            } else {
                goto branch_no_28;
            }
            branch_yes_28:;
            {
                PyObject *tmp_called_name_4;
                PyObject *tmp_source_name_31;
                PyObject *tmp_call_result_12;
                PyObject *tmp_args_element_name_8;
                PyObject *tmp_left_name_25;
                PyObject *tmp_left_name_26;
                PyObject *tmp_right_name_25;
                PyObject *tmp_right_name_26;
                CHECK_OBJECT(par_ui);
                tmp_source_name_31 = par_ui;
                tmp_called_name_4 = LOOKUP_ATTRIBUTE(tmp_source_name_31, const_str_plain_msg_err);
                if (tmp_called_name_4 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 600;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_left_name_26 = const_str_digest_a453153347baafa6689efd2042ec2cf4;
                if (var_list_spb == NULL) {
                    Py_DECREF(tmp_called_name_4);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_spb");
                    exception_tb = NULL;

                    exception_lineno = 600;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_right_name_25 = var_list_spb;
                tmp_left_name_25 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_26, tmp_right_name_25);
                if (tmp_left_name_25 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_4);

                    exception_lineno = 600;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_right_name_26 = const_str_digest_6f9d3b8c1c22c69a4d23112bae2b5acb;
                tmp_args_element_name_8 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_25, tmp_right_name_26);
                Py_DECREF(tmp_left_name_25);
                if (tmp_args_element_name_8 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_4);

                    exception_lineno = 600;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 600;
                tmp_call_result_12 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_4, tmp_args_element_name_8);
                Py_DECREF(tmp_called_name_4);
                Py_DECREF(tmp_args_element_name_8);
                if (tmp_call_result_12 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 600;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_12);
            }
            branch_no_28:;
        }
        {
            nuitka_bool tmp_condition_result_29;
            PyObject *tmp_compexpr_left_27;
            PyObject *tmp_compexpr_right_27;
            if (var_list_to == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_to");
                exception_tb = NULL;

                exception_lineno = 602;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_27 = var_list_to;
            tmp_compexpr_right_27 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_27, tmp_compexpr_right_27);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 602;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_29 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_29 == NUITKA_BOOL_TRUE) {
                goto branch_yes_29;
            } else {
                goto branch_no_29;
            }
            branch_yes_29:;
            {
                PyObject *tmp_called_name_5;
                PyObject *tmp_source_name_32;
                PyObject *tmp_call_result_13;
                PyObject *tmp_args_element_name_9;
                PyObject *tmp_left_name_27;
                PyObject *tmp_left_name_28;
                PyObject *tmp_right_name_27;
                PyObject *tmp_right_name_28;
                CHECK_OBJECT(par_ui);
                tmp_source_name_32 = par_ui;
                tmp_called_name_5 = LOOKUP_ATTRIBUTE(tmp_source_name_32, const_str_plain_msg_err);
                if (tmp_called_name_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 603;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_left_name_28 = const_str_digest_321286e6d2e61a53029fdc47a4469cb5;
                if (var_list_to == NULL) {
                    Py_DECREF(tmp_called_name_5);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_to");
                    exception_tb = NULL;

                    exception_lineno = 603;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_right_name_27 = var_list_to;
                tmp_left_name_27 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_28, tmp_right_name_27);
                if (tmp_left_name_27 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_5);

                    exception_lineno = 603;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_right_name_28 = const_str_dot;
                tmp_args_element_name_9 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_27, tmp_right_name_28);
                Py_DECREF(tmp_left_name_27);
                if (tmp_args_element_name_9 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_5);

                    exception_lineno = 603;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 603;
                tmp_call_result_13 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_5, tmp_args_element_name_9);
                Py_DECREF(tmp_called_name_5);
                Py_DECREF(tmp_args_element_name_9);
                if (tmp_call_result_13 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 603;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_13);
            }
            branch_no_29:;
        }
        {
            nuitka_bool tmp_condition_result_30;
            PyObject *tmp_compexpr_left_28;
            PyObject *tmp_compexpr_right_28;
            if (var_list_f == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                exception_tb = NULL;

                exception_lineno = 604;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_28 = var_list_f;
            tmp_compexpr_right_28 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_28, tmp_compexpr_right_28);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 604;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_30 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_30 == NUITKA_BOOL_TRUE) {
                goto branch_yes_30;
            } else {
                goto branch_no_30;
            }
            branch_yes_30:;
            {
                nuitka_bool tmp_condition_result_31;
                PyObject *tmp_compexpr_left_29;
                PyObject *tmp_compexpr_right_29;
                if (var_count_f == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "count_f");
                    exception_tb = NULL;

                    exception_lineno = 605;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_compexpr_left_29 = var_count_f;
                tmp_compexpr_right_29 = const_int_pos_1;
                tmp_res = RICH_COMPARE_BOOL_GT_OBJECT_INT(tmp_compexpr_left_29, tmp_compexpr_right_29);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 605;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_condition_result_31 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_31 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_31;
                } else {
                    goto branch_no_31;
                }
                branch_yes_31:;
                {
                    PyObject *tmp_called_name_6;
                    PyObject *tmp_source_name_33;
                    PyObject *tmp_call_result_14;
                    PyObject *tmp_args_element_name_10;
                    PyObject *tmp_left_name_29;
                    PyObject *tmp_left_name_30;
                    PyObject *tmp_right_name_29;
                    PyObject *tmp_right_name_30;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_33 = par_ui;
                    tmp_called_name_6 = LOOKUP_ATTRIBUTE(tmp_source_name_33, const_str_plain_msg_err);
                    if (tmp_called_name_6 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 606;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_left_name_30 = const_str_digest_a453153347baafa6689efd2042ec2cf4;
                    if (var_list_f == NULL) {
                        Py_DECREF(tmp_called_name_6);
                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                        exception_tb = NULL;

                        exception_lineno = 606;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_right_name_29 = var_list_f;
                    tmp_left_name_29 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_30, tmp_right_name_29);
                    if (tmp_left_name_29 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_6);

                        exception_lineno = 606;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_30 = const_str_digest_fcb3f707055a45843f9f5f984a177a66;
                    tmp_args_element_name_10 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_29, tmp_right_name_30);
                    Py_DECREF(tmp_left_name_29);
                    if (tmp_args_element_name_10 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_6);

                        exception_lineno = 606;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 606;
                    tmp_call_result_14 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_6, tmp_args_element_name_10);
                    Py_DECREF(tmp_called_name_6);
                    Py_DECREF(tmp_args_element_name_10);
                    if (tmp_call_result_14 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 606;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_14);
                }
                goto branch_end_31;
                branch_no_31:;
                {
                    nuitka_bool tmp_condition_result_32;
                    PyObject *tmp_compexpr_left_30;
                    PyObject *tmp_compexpr_right_30;
                    PyObject *tmp_called_instance_14;
                    PyObject *tmp_source_name_34;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_34 = par_ui;
                    tmp_called_instance_14 = LOOKUP_ATTRIBUTE(tmp_source_name_34, const_str_plain_auth_menu);
                    if (tmp_called_instance_14 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 607;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 607;
                    tmp_compexpr_left_30 = CALL_METHOD_NO_ARGS(tmp_called_instance_14, const_str_plain_get_active);
                    Py_DECREF(tmp_called_instance_14);
                    if (tmp_compexpr_left_30 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 607;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_compexpr_right_30 = const_int_0;
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_30, tmp_compexpr_right_30);
                    Py_DECREF(tmp_compexpr_left_30);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 607;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_condition_result_32 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_32 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_32;
                    } else {
                        goto branch_no_32;
                    }
                    branch_yes_32:;
                    {
                        PyObject *tmp_called_name_7;
                        PyObject *tmp_source_name_35;
                        PyObject *tmp_call_result_15;
                        PyObject *tmp_args_element_name_11;
                        PyObject *tmp_left_name_31;
                        PyObject *tmp_left_name_32;
                        PyObject *tmp_left_name_33;
                        PyObject *tmp_left_name_34;
                        PyObject *tmp_left_name_35;
                        PyObject *tmp_left_name_36;
                        PyObject *tmp_right_name_31;
                        PyObject *tmp_right_name_32;
                        PyObject *tmp_right_name_33;
                        PyObject *tmp_str_arg_1;
                        PyObject *tmp_subscribed_name_28;
                        PyObject *tmp_source_name_36;
                        PyObject *tmp_subscript_name_28;
                        PyObject *tmp_right_name_34;
                        PyObject *tmp_right_name_35;
                        PyObject *tmp_str_arg_2;
                        PyObject *tmp_subscribed_name_29;
                        PyObject *tmp_source_name_37;
                        PyObject *tmp_subscript_name_29;
                        PyObject *tmp_right_name_36;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_35 = par_ui;
                        tmp_called_name_7 = LOOKUP_ATTRIBUTE(tmp_source_name_35, const_str_plain_msg_err);
                        if (tmp_called_name_7 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 608;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_left_name_36 = const_str_digest_a453153347baafa6689efd2042ec2cf4;
                        if (var_list_f == NULL) {
                            Py_DECREF(tmp_called_name_7);
                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                            exception_tb = NULL;

                            exception_lineno = 608;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_right_name_31 = var_list_f;
                        tmp_left_name_35 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_36, tmp_right_name_31);
                        if (tmp_left_name_35 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_7);

                            exception_lineno = 608;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_32 = const_str_digest_2d5ab67f28a1f8ea7de7b4da8d17a7c2;
                        tmp_left_name_34 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_35, tmp_right_name_32);
                        Py_DECREF(tmp_left_name_35);
                        if (tmp_left_name_34 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_7);

                            exception_lineno = 608;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_36 = par_ui;
                        tmp_subscribed_name_28 = LOOKUP_ATTRIBUTE(tmp_source_name_36, const_str_plain_admin_aol_list);
                        if (tmp_subscribed_name_28 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_7);
                            Py_DECREF(tmp_left_name_34);

                            exception_lineno = 608;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        if (var_last_f == NULL) {
                            Py_DECREF(tmp_called_name_7);
                            Py_DECREF(tmp_left_name_34);
                            Py_DECREF(tmp_subscribed_name_28);
                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "last_f");
                            exception_tb = NULL;

                            exception_lineno = 608;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_subscript_name_28 = var_last_f;
                        tmp_str_arg_1 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_28, tmp_subscript_name_28);
                        Py_DECREF(tmp_subscribed_name_28);
                        if (tmp_str_arg_1 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_7);
                            Py_DECREF(tmp_left_name_34);

                            exception_lineno = 608;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_33 = PyObject_Str(tmp_str_arg_1);
                        Py_DECREF(tmp_str_arg_1);
                        if (tmp_right_name_33 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_7);
                            Py_DECREF(tmp_left_name_34);

                            exception_lineno = 608;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_left_name_33 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_34, tmp_right_name_33);
                        Py_DECREF(tmp_left_name_34);
                        Py_DECREF(tmp_right_name_33);
                        if (tmp_left_name_33 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_7);

                            exception_lineno = 608;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_34 = const_str_digest_557fe80a6c273179b39f6cacbcbc5fdc;
                        tmp_left_name_32 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_33, tmp_right_name_34);
                        Py_DECREF(tmp_left_name_33);
                        if (tmp_left_name_32 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_7);

                            exception_lineno = 608;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_37 = par_ui;
                        tmp_subscribed_name_29 = LOOKUP_ATTRIBUTE(tmp_source_name_37, const_str_plain_retrylimit_list);
                        if (tmp_subscribed_name_29 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_7);
                            Py_DECREF(tmp_left_name_32);

                            exception_lineno = 608;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        if (var_last_f == NULL) {
                            Py_DECREF(tmp_called_name_7);
                            Py_DECREF(tmp_left_name_32);
                            Py_DECREF(tmp_subscribed_name_29);
                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "last_f");
                            exception_tb = NULL;

                            exception_lineno = 608;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_subscript_name_29 = var_last_f;
                        tmp_str_arg_2 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_29, tmp_subscript_name_29);
                        Py_DECREF(tmp_subscribed_name_29);
                        if (tmp_str_arg_2 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_7);
                            Py_DECREF(tmp_left_name_32);

                            exception_lineno = 608;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_35 = PyObject_Str(tmp_str_arg_2);
                        Py_DECREF(tmp_str_arg_2);
                        if (tmp_right_name_35 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_7);
                            Py_DECREF(tmp_left_name_32);

                            exception_lineno = 608;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_left_name_31 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_32, tmp_right_name_35);
                        Py_DECREF(tmp_left_name_32);
                        Py_DECREF(tmp_right_name_35);
                        if (tmp_left_name_31 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_7);

                            exception_lineno = 608;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_36 = const_str_dot;
                        tmp_args_element_name_11 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_31, tmp_right_name_36);
                        Py_DECREF(tmp_left_name_31);
                        if (tmp_args_element_name_11 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_7);

                            exception_lineno = 608;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 608;
                        tmp_call_result_15 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_7, tmp_args_element_name_11);
                        Py_DECREF(tmp_called_name_7);
                        Py_DECREF(tmp_args_element_name_11);
                        if (tmp_call_result_15 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 608;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        Py_DECREF(tmp_call_result_15);
                    }
                    goto branch_end_32;
                    branch_no_32:;
                    {
                        PyObject *tmp_called_name_8;
                        PyObject *tmp_source_name_38;
                        PyObject *tmp_call_result_16;
                        PyObject *tmp_args_element_name_12;
                        PyObject *tmp_left_name_37;
                        PyObject *tmp_left_name_38;
                        PyObject *tmp_left_name_39;
                        PyObject *tmp_left_name_40;
                        PyObject *tmp_left_name_41;
                        PyObject *tmp_left_name_42;
                        PyObject *tmp_right_name_37;
                        PyObject *tmp_right_name_38;
                        PyObject *tmp_right_name_39;
                        PyObject *tmp_str_arg_3;
                        PyObject *tmp_subscribed_name_30;
                        PyObject *tmp_source_name_39;
                        PyObject *tmp_subscript_name_30;
                        PyObject *tmp_right_name_40;
                        PyObject *tmp_right_name_41;
                        PyObject *tmp_str_arg_4;
                        PyObject *tmp_subscribed_name_31;
                        PyObject *tmp_source_name_40;
                        PyObject *tmp_subscript_name_31;
                        PyObject *tmp_right_name_42;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_38 = par_ui;
                        tmp_called_name_8 = LOOKUP_ATTRIBUTE(tmp_source_name_38, const_str_plain_msg_err);
                        if (tmp_called_name_8 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 610;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_left_name_42 = const_str_digest_a453153347baafa6689efd2042ec2cf4;
                        if (var_list_f == NULL) {
                            Py_DECREF(tmp_called_name_8);
                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                            exception_tb = NULL;

                            exception_lineno = 610;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_right_name_37 = var_list_f;
                        tmp_left_name_41 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_42, tmp_right_name_37);
                        if (tmp_left_name_41 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_8);

                            exception_lineno = 610;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_38 = const_str_digest_2d5ab67f28a1f8ea7de7b4da8d17a7c2;
                        tmp_left_name_40 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_41, tmp_right_name_38);
                        Py_DECREF(tmp_left_name_41);
                        if (tmp_left_name_40 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_8);

                            exception_lineno = 610;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_39 = par_ui;
                        tmp_subscribed_name_30 = LOOKUP_ATTRIBUTE(tmp_source_name_39, const_str_plain_user_aol_list);
                        if (tmp_subscribed_name_30 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_8);
                            Py_DECREF(tmp_left_name_40);

                            exception_lineno = 610;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        if (var_last_f == NULL) {
                            Py_DECREF(tmp_called_name_8);
                            Py_DECREF(tmp_left_name_40);
                            Py_DECREF(tmp_subscribed_name_30);
                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "last_f");
                            exception_tb = NULL;

                            exception_lineno = 610;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_subscript_name_30 = var_last_f;
                        tmp_str_arg_3 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_30, tmp_subscript_name_30);
                        Py_DECREF(tmp_subscribed_name_30);
                        if (tmp_str_arg_3 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_8);
                            Py_DECREF(tmp_left_name_40);

                            exception_lineno = 610;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_39 = PyObject_Str(tmp_str_arg_3);
                        Py_DECREF(tmp_str_arg_3);
                        if (tmp_right_name_39 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_8);
                            Py_DECREF(tmp_left_name_40);

                            exception_lineno = 610;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_left_name_39 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_40, tmp_right_name_39);
                        Py_DECREF(tmp_left_name_40);
                        Py_DECREF(tmp_right_name_39);
                        if (tmp_left_name_39 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_8);

                            exception_lineno = 610;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_40 = const_str_digest_557fe80a6c273179b39f6cacbcbc5fdc;
                        tmp_left_name_38 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_39, tmp_right_name_40);
                        Py_DECREF(tmp_left_name_39);
                        if (tmp_left_name_38 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_8);

                            exception_lineno = 610;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_40 = par_ui;
                        tmp_subscribed_name_31 = LOOKUP_ATTRIBUTE(tmp_source_name_40, const_str_plain_retrylimit_list);
                        if (tmp_subscribed_name_31 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_8);
                            Py_DECREF(tmp_left_name_38);

                            exception_lineno = 610;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        if (var_last_f == NULL) {
                            Py_DECREF(tmp_called_name_8);
                            Py_DECREF(tmp_left_name_38);
                            Py_DECREF(tmp_subscribed_name_31);
                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "last_f");
                            exception_tb = NULL;

                            exception_lineno = 610;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_subscript_name_31 = var_last_f;
                        tmp_str_arg_4 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_31, tmp_subscript_name_31);
                        Py_DECREF(tmp_subscribed_name_31);
                        if (tmp_str_arg_4 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_8);
                            Py_DECREF(tmp_left_name_38);

                            exception_lineno = 610;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_41 = PyObject_Str(tmp_str_arg_4);
                        Py_DECREF(tmp_str_arg_4);
                        if (tmp_right_name_41 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_8);
                            Py_DECREF(tmp_left_name_38);

                            exception_lineno = 610;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_left_name_37 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_38, tmp_right_name_41);
                        Py_DECREF(tmp_left_name_38);
                        Py_DECREF(tmp_right_name_41);
                        if (tmp_left_name_37 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_8);

                            exception_lineno = 610;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_42 = const_str_dot;
                        tmp_args_element_name_12 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_37, tmp_right_name_42);
                        Py_DECREF(tmp_left_name_37);
                        if (tmp_args_element_name_12 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_8);

                            exception_lineno = 610;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 610;
                        tmp_call_result_16 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_8, tmp_args_element_name_12);
                        Py_DECREF(tmp_called_name_8);
                        Py_DECREF(tmp_args_element_name_12);
                        if (tmp_call_result_16 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 610;
                            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        Py_DECREF(tmp_call_result_16);
                    }
                    branch_end_32:;
                }
                branch_end_31:;
            }
            branch_no_30:;
        }
        {
            nuitka_bool tmp_condition_result_33;
            PyObject *tmp_compexpr_left_31;
            PyObject *tmp_compexpr_right_31;
            if (var_list_alo == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_alo");
                exception_tb = NULL;

                exception_lineno = 611;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_31 = var_list_alo;
            tmp_compexpr_right_31 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_31, tmp_compexpr_right_31);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 611;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_33 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_33 == NUITKA_BOOL_TRUE) {
                goto branch_yes_33;
            } else {
                goto branch_no_33;
            }
            branch_yes_33:;
            {
                nuitka_bool tmp_condition_result_34;
                PyObject *tmp_compexpr_left_32;
                PyObject *tmp_compexpr_right_32;
                PyObject *tmp_called_instance_15;
                PyObject *tmp_source_name_41;
                CHECK_OBJECT(par_ui);
                tmp_source_name_41 = par_ui;
                tmp_called_instance_15 = LOOKUP_ATTRIBUTE(tmp_source_name_41, const_str_plain_auth_menu);
                if (tmp_called_instance_15 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 612;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 612;
                tmp_compexpr_left_32 = CALL_METHOD_NO_ARGS(tmp_called_instance_15, const_str_plain_get_active);
                Py_DECREF(tmp_called_instance_15);
                if (tmp_compexpr_left_32 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 612;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_compexpr_right_32 = const_int_0;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_32, tmp_compexpr_right_32);
                Py_DECREF(tmp_compexpr_left_32);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 612;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_condition_result_34 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_34 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_34;
                } else {
                    goto branch_no_34;
                }
                branch_yes_34:;
                {
                    PyObject *tmp_called_name_9;
                    PyObject *tmp_source_name_42;
                    PyObject *tmp_call_result_17;
                    PyObject *tmp_args_element_name_13;
                    PyObject *tmp_left_name_43;
                    PyObject *tmp_left_name_44;
                    PyObject *tmp_right_name_43;
                    PyObject *tmp_right_name_44;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_42 = par_ui;
                    tmp_called_name_9 = LOOKUP_ATTRIBUTE(tmp_source_name_42, const_str_plain_msg_err);
                    if (tmp_called_name_9 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 613;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_left_name_44 = const_str_digest_65e9196bd4c730b537e5cdf8fe311777;
                    if (var_list_alo == NULL) {
                        Py_DECREF(tmp_called_name_9);
                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_alo");
                        exception_tb = NULL;

                        exception_lineno = 613;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_right_name_43 = var_list_alo;
                    tmp_left_name_43 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_44, tmp_right_name_43);
                    if (tmp_left_name_43 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_9);

                        exception_lineno = 613;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_44 = const_str_digest_8da2f7ce80b0ea01448ac4bbab6c01ae;
                    tmp_args_element_name_13 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_43, tmp_right_name_44);
                    Py_DECREF(tmp_left_name_43);
                    if (tmp_args_element_name_13 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_9);

                        exception_lineno = 613;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 613;
                    tmp_call_result_17 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_9, tmp_args_element_name_13);
                    Py_DECREF(tmp_called_name_9);
                    Py_DECREF(tmp_args_element_name_13);
                    if (tmp_call_result_17 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 613;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_17);
                }
                goto branch_end_34;
                branch_no_34:;
                {
                    PyObject *tmp_called_name_10;
                    PyObject *tmp_source_name_43;
                    PyObject *tmp_call_result_18;
                    PyObject *tmp_args_element_name_14;
                    PyObject *tmp_left_name_45;
                    PyObject *tmp_left_name_46;
                    PyObject *tmp_right_name_45;
                    PyObject *tmp_right_name_46;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_43 = par_ui;
                    tmp_called_name_10 = LOOKUP_ATTRIBUTE(tmp_source_name_43, const_str_plain_msg_err);
                    if (tmp_called_name_10 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 615;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_left_name_46 = const_str_digest_8e9bcfdd45060137ba638f543f425301;
                    if (var_list_alo == NULL) {
                        Py_DECREF(tmp_called_name_10);
                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_alo");
                        exception_tb = NULL;

                        exception_lineno = 615;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_right_name_45 = var_list_alo;
                    tmp_left_name_45 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_46, tmp_right_name_45);
                    if (tmp_left_name_45 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_10);

                        exception_lineno = 615;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_46 = const_str_digest_8da2f7ce80b0ea01448ac4bbab6c01ae;
                    tmp_args_element_name_14 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_45, tmp_right_name_46);
                    Py_DECREF(tmp_left_name_45);
                    if (tmp_args_element_name_14 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_10);

                        exception_lineno = 615;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 615;
                    tmp_call_result_18 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_10, tmp_args_element_name_14);
                    Py_DECREF(tmp_called_name_10);
                    Py_DECREF(tmp_args_element_name_14);
                    if (tmp_call_result_18 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 615;
                        type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_18);
                }
                branch_end_34:;
            }
            branch_no_33:;
        }
        {
            nuitka_bool tmp_condition_result_35;
            PyObject *tmp_compexpr_left_33;
            PyObject *tmp_compexpr_right_33;
            if (var_list_p == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p");
                exception_tb = NULL;

                exception_lineno = 616;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_33 = var_list_p;
            tmp_compexpr_right_33 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_33, tmp_compexpr_right_33);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 616;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_35 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_35 == NUITKA_BOOL_TRUE) {
                goto branch_yes_35;
            } else {
                goto branch_no_35;
            }
            branch_yes_35:;
            {
                PyObject *tmp_called_name_11;
                PyObject *tmp_source_name_44;
                PyObject *tmp_call_result_19;
                PyObject *tmp_args_element_name_15;
                PyObject *tmp_left_name_47;
                PyObject *tmp_left_name_48;
                PyObject *tmp_right_name_47;
                PyObject *tmp_right_name_48;
                CHECK_OBJECT(par_ui);
                tmp_source_name_44 = par_ui;
                tmp_called_name_11 = LOOKUP_ATTRIBUTE(tmp_source_name_44, const_str_plain_msg_ok);
                if (tmp_called_name_11 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 617;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_left_name_48 = const_str_digest_62298f9949ee2e40c47e630d66965330;
                if (var_list_p == NULL) {
                    Py_DECREF(tmp_called_name_11);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p");
                    exception_tb = NULL;

                    exception_lineno = 617;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_right_name_47 = var_list_p;
                tmp_left_name_47 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_48, tmp_right_name_47);
                if (tmp_left_name_47 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_11);

                    exception_lineno = 617;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_right_name_48 = const_str_dot;
                tmp_args_element_name_15 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_47, tmp_right_name_48);
                Py_DECREF(tmp_left_name_47);
                if (tmp_args_element_name_15 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_11);

                    exception_lineno = 617;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 617;
                tmp_call_result_19 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_11, tmp_args_element_name_15);
                Py_DECREF(tmp_called_name_11);
                Py_DECREF(tmp_args_element_name_15);
                if (tmp_call_result_19 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 617;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_19);
            }
            branch_no_35:;
        }
        {
            PyObject *tmp_called_instance_16;
            PyObject *tmp_call_result_20;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_16 = par_ui;
            frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 618;
            tmp_call_result_20 = CALL_METHOD_NO_ARGS(tmp_called_instance_16, const_str_plain_changePW_prompt);
            if (tmp_call_result_20 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 618;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_20);
        }
        goto branch_end_11;
        branch_no_11:;
        {
            PyObject *tmp_assign_source_67;
            tmp_assign_source_67 = Py_True;
            {
                PyObject *old = var_start;
                var_start = tmp_assign_source_67;
                Py_INCREF(var_start);
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_68;
            tmp_assign_source_68 = const_str_empty;
            assert(var_liststr == NULL);
            Py_INCREF(tmp_assign_source_68);
            var_liststr = tmp_assign_source_68;
        }
        {
            PyObject *tmp_assign_source_69;
            PyObject *tmp_iter_arg_6;
            CHECK_OBJECT(par_selected_list);
            tmp_iter_arg_6 = par_selected_list;
            tmp_assign_source_69 = MAKE_ITERATOR(tmp_iter_arg_6);
            if (tmp_assign_source_69 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 622;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_6__for_iterator == NULL);
            tmp_for_loop_6__for_iterator = tmp_assign_source_69;
        }
        // Tried code:
        loop_start_6:;
        {
            PyObject *tmp_next_source_6;
            PyObject *tmp_assign_source_70;
            CHECK_OBJECT(tmp_for_loop_6__for_iterator);
            tmp_next_source_6 = tmp_for_loop_6__for_iterator;
            tmp_assign_source_70 = ITERATOR_NEXT(tmp_next_source_6);
            if (tmp_assign_source_70 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_6;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    exception_lineno = 622;
                    goto try_except_handler_7;
                }
            }

            {
                PyObject *old = tmp_for_loop_6__iter_value;
                tmp_for_loop_6__iter_value = tmp_assign_source_70;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_71;
            CHECK_OBJECT(tmp_for_loop_6__iter_value);
            tmp_assign_source_71 = tmp_for_loop_6__iter_value;
            {
                PyObject *old = var_d;
                var_d = tmp_assign_source_71;
                Py_INCREF(var_d);
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assattr_name_5;
            PyObject *tmp_subscribed_name_32;
            PyObject *tmp_source_name_45;
            PyObject *tmp_subscript_name_32;
            PyObject *tmp_assattr_target_5;
            CHECK_OBJECT(par_ui);
            tmp_source_name_45 = par_ui;
            tmp_subscribed_name_32 = LOOKUP_ATTRIBUTE(tmp_source_name_45, const_str_plain_devs_list);
            if (tmp_subscribed_name_32 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 623;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }
            CHECK_OBJECT(var_d);
            tmp_subscript_name_32 = var_d;
            tmp_assattr_name_5 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_32, tmp_subscript_name_32);
            Py_DECREF(tmp_subscribed_name_32);
            if (tmp_assattr_name_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 623;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }
            CHECK_OBJECT(par_ui);
            tmp_assattr_target_5 = par_ui;
            tmp_result = SET_ATTRIBUTE(tmp_assattr_target_5, const_str_plain_devname, tmp_assattr_name_5);
            Py_DECREF(tmp_assattr_name_5);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 623;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }
        }
        {
            PyObject *tmp_called_instance_17;
            PyObject *tmp_mvar_value_4;
            PyObject *tmp_call_result_21;
            PyObject *tmp_args_element_name_16;
            PyObject *tmp_args_element_name_17;
            PyObject *tmp_args_element_name_18;
            tmp_mvar_value_4 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_dialogs);

            if (unlikely(tmp_mvar_value_4 == NULL)) {
                tmp_mvar_value_4 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_dialogs);
            }

            if (tmp_mvar_value_4 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 418 ], 36, 0);
                exception_tb = NULL;

                exception_lineno = 624;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }

            tmp_called_instance_17 = tmp_mvar_value_4;
            tmp_args_element_name_16 = Py_None;
            CHECK_OBJECT(par_ui);
            tmp_args_element_name_17 = par_ui;
            tmp_args_element_name_18 = const_int_pos_1;
            frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 624;
            {
                PyObject *call_args[] = {tmp_args_element_name_16, tmp_args_element_name_17, tmp_args_element_name_18};
                tmp_call_result_21 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_17, const_str_plain_query, call_args);
            }

            if (tmp_call_result_21 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 624;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }
            Py_DECREF(tmp_call_result_21);
        }
        {
            nuitka_bool tmp_condition_result_36;
            PyObject *tmp_operand_name_9;
            if (var_start == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start");
                exception_tb = NULL;

                exception_lineno = 625;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }

            tmp_operand_name_9 = var_start;
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_9);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 625;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }
            tmp_condition_result_36 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_36 == NUITKA_BOOL_TRUE) {
                goto branch_yes_36;
            } else {
                goto branch_no_36;
            }
            branch_yes_36:;
            {
                PyObject *tmp_assign_source_72;
                PyObject *tmp_left_name_49;
                PyObject *tmp_right_name_49;
                CHECK_OBJECT(var_liststr);
                tmp_left_name_49 = var_liststr;
                tmp_right_name_49 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                tmp_assign_source_72 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_49, tmp_right_name_49);
                if (tmp_assign_source_72 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 626;
                    type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_7;
                }
                {
                    PyObject *old = var_liststr;
                    assert(old != NULL);
                    var_liststr = tmp_assign_source_72;
                    Py_DECREF(old);
                }

            }
            goto branch_end_36;
            branch_no_36:;
            {
                PyObject *tmp_assign_source_73;
                tmp_assign_source_73 = Py_False;
                {
                    PyObject *old = var_start;
                    var_start = tmp_assign_source_73;
                    Py_INCREF(var_start);
                    Py_XDECREF(old);
                }

            }
            branch_end_36:;
        }
        {
            PyObject *tmp_assign_source_74;
            PyObject *tmp_left_name_50;
            PyObject *tmp_right_name_50;
            PyObject *tmp_subscribed_name_33;
            PyObject *tmp_source_name_46;
            PyObject *tmp_subscript_name_33;
            if (var_liststr == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "liststr");
                exception_tb = NULL;

                exception_lineno = 629;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }

            tmp_left_name_50 = var_liststr;
            CHECK_OBJECT(par_ui);
            tmp_source_name_46 = par_ui;
            tmp_subscribed_name_33 = LOOKUP_ATTRIBUTE(tmp_source_name_46, const_str_plain_devs_list);
            if (tmp_subscribed_name_33 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 629;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }
            CHECK_OBJECT(var_d);
            tmp_subscript_name_33 = var_d;
            tmp_right_name_50 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_33, tmp_subscript_name_33);
            Py_DECREF(tmp_subscribed_name_33);
            if (tmp_right_name_50 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 629;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }
            tmp_assign_source_74 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_50, tmp_right_name_50);
            Py_DECREF(tmp_right_name_50);
            if (tmp_assign_source_74 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 629;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }
            {
                PyObject *old = var_liststr;
                var_liststr = tmp_assign_source_74;
                Py_XDECREF(old);
            }

        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 622;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
            goto try_except_handler_7;
        }
        goto loop_start_6;
        loop_end_6:;
        goto try_end_6;
        // Exception handler code:
        try_except_handler_7:;
        exception_keeper_type_6 = exception_type;
        exception_keeper_value_6 = exception_value;
        exception_keeper_tb_6 = exception_tb;
        exception_keeper_lineno_6 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_6__iter_value);
        tmp_for_loop_6__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_6__for_iterator);
        Py_DECREF(tmp_for_loop_6__for_iterator);
        tmp_for_loop_6__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_6;
        exception_value = exception_keeper_value_6;
        exception_tb = exception_keeper_tb_6;
        exception_lineno = exception_keeper_lineno_6;

        goto frame_exception_exit_1;
        // End of try:
        try_end_6:;
        Py_XDECREF(tmp_for_loop_6__iter_value);
        tmp_for_loop_6__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_6__for_iterator);
        Py_DECREF(tmp_for_loop_6__for_iterator);
        tmp_for_loop_6__for_iterator = NULL;

        {
            PyObject *tmp_called_name_12;
            PyObject *tmp_source_name_47;
            PyObject *tmp_call_result_22;
            PyObject *tmp_args_element_name_19;
            PyObject *tmp_left_name_51;
            PyObject *tmp_left_name_52;
            PyObject *tmp_right_name_51;
            PyObject *tmp_right_name_52;
            CHECK_OBJECT(par_ui);
            tmp_source_name_47 = par_ui;
            tmp_called_name_12 = LOOKUP_ATTRIBUTE(tmp_source_name_47, const_str_plain_msg_ok);
            if (tmp_called_name_12 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 630;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_left_name_52 = const_str_digest_62298f9949ee2e40c47e630d66965330;
            CHECK_OBJECT(var_liststr);
            tmp_right_name_51 = var_liststr;
            tmp_left_name_51 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_52, tmp_right_name_51);
            if (tmp_left_name_51 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_12);

                exception_lineno = 630;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_right_name_52 = const_str_dot;
            tmp_args_element_name_19 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_51, tmp_right_name_52);
            Py_DECREF(tmp_left_name_51);
            if (tmp_args_element_name_19 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_12);

                exception_lineno = 630;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 630;
            tmp_call_result_22 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_12, tmp_args_element_name_19);
            Py_DECREF(tmp_called_name_12);
            Py_DECREF(tmp_args_element_name_19);
            if (tmp_call_result_22 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 630;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_22);
        }
        {
            PyObject *tmp_called_instance_18;
            PyObject *tmp_call_result_23;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_18 = par_ui;
            frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 632;
            tmp_call_result_23 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_18, const_str_plain_returnToMain, &PyTuple_GET_ITEM(const_tuple_none_false_tuple, 0));

            if (tmp_call_result_23 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 632;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_23);
        }
        branch_end_11:;
    }
    {
        PyObject *tmp_called_instance_19;
        PyObject *tmp_call_result_24;
        CHECK_OBJECT(par_ui);
        tmp_called_instance_19 = par_ui;
        frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 633;
        tmp_call_result_24 = CALL_METHOD_NO_ARGS(tmp_called_instance_19, const_str_plain_stop_spin);
        if (tmp_call_result_24 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 633;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_24);
    }
    {
        nuitka_bool tmp_condition_result_37;
        int tmp_truth_name_3;
        CHECK_OBJECT(par_rescan_needed);
        tmp_truth_name_3 = CHECK_IF_TRUE(par_rescan_needed);
        if (tmp_truth_name_3 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 634;
            type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_37 = tmp_truth_name_3 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_37 == NUITKA_BOOL_TRUE) {
            goto branch_yes_37;
        } else {
            goto branch_no_37;
        }
        branch_yes_37:;
        {
            PyObject *tmp_called_instance_20;
            PyObject *tmp_call_result_25;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_20 = par_ui;
            frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 635;
            tmp_call_result_25 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_20, const_str_plain_msg_ok, &PyTuple_GET_ITEM(const_tuple_str_digest_ae3b8b33bbb4f0816fc34e114de2f069_tuple, 0));

            if (tmp_call_result_25 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 635;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_25);
        }
        {
            PyObject *tmp_called_instance_21;
            PyObject *tmp_mvar_value_5;
            PyObject *tmp_call_result_26;
            PyObject *tmp_args_element_name_20;
            PyObject *tmp_args_element_name_21;
            PyObject *tmp_args_element_name_22;
            tmp_mvar_value_5 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_runscan);

            if (unlikely(tmp_mvar_value_5 == NULL)) {
                tmp_mvar_value_5 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runscan);
            }

            if (tmp_mvar_value_5 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 454 ], 36, 0);
                exception_tb = NULL;

                exception_lineno = 636;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_called_instance_21 = tmp_mvar_value_5;
            tmp_args_element_name_20 = Py_None;
            CHECK_OBJECT(par_ui);
            tmp_args_element_name_21 = par_ui;
            tmp_args_element_name_22 = Py_True;
            frame_8c9c9b79392ff0b7698017d8497908ef->m_frame.f_lineno = 636;
            {
                PyObject *call_args[] = {tmp_args_element_name_20, tmp_args_element_name_21, tmp_args_element_name_22};
                tmp_call_result_26 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_21, const_str_plain_run_scan, call_args);
            }

            if (tmp_call_result_26 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 636;
                type_description_1 = "oooooooooooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_26);
        }
        branch_no_37:;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_8c9c9b79392ff0b7698017d8497908ef);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_8c9c9b79392ff0b7698017d8497908ef);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_8c9c9b79392ff0b7698017d8497908ef, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_8c9c9b79392ff0b7698017d8497908ef->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_8c9c9b79392ff0b7698017d8497908ef, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_8c9c9b79392ff0b7698017d8497908ef,
        type_description_1,
        par_ui,
        par_max_time,
        par_start_time,
        par_op_threads,
        par_res_list,
        par_e_to,
        par_selected_list,
        par_status_list,
        par_rescan_needed,
        par_val2,
        par_val3,
        par_val4,
        var_list_p,
        var_list_miss,
        var_list_alo,
        var_start_miss,
        var_list_f,
        var_start_alo,
        var_start_na,
        var_res_sum,
        var_list_to,
        var_elapsed_time,
        var_start,
        var_liststr,
        var_count_f,
        var_start_f,
        var_list_spb,
        var_start_to,
        var_op_thread,
        var_sf_txt,
        var_last_f,
        var_count,
        var_d,
        var_i,
        var_j,
        var_start_spb,
        var_p,
        var_start_p,
        var_list_na,
        var_y,
        var_save_fail,
        var_curr_time
    );


    // Release cached frame.
    if (frame_8c9c9b79392ff0b7698017d8497908ef == cache_frame_8c9c9b79392ff0b7698017d8497908ef) {
        Py_DECREF(frame_8c9c9b79392ff0b7698017d8497908ef);
    }
    cache_frame_8c9c9b79392ff0b7698017d8497908ef = NULL;

    assertFrameObject(frame_8c9c9b79392ff0b7698017d8497908ef);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(cleanop$$$function_4_changePW_cleanup);
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    Py_XDECREF(var_list_p);
    var_list_p = NULL;

    Py_XDECREF(var_list_miss);
    var_list_miss = NULL;

    Py_XDECREF(var_list_alo);
    var_list_alo = NULL;

    Py_XDECREF(var_start_miss);
    var_start_miss = NULL;

    Py_XDECREF(var_list_f);
    var_list_f = NULL;

    Py_XDECREF(var_start_alo);
    var_start_alo = NULL;

    Py_XDECREF(var_start_na);
    var_start_na = NULL;

    CHECK_OBJECT((PyObject *)var_res_sum);
    Py_DECREF(var_res_sum);
    var_res_sum = NULL;

    Py_XDECREF(var_list_to);
    var_list_to = NULL;

    CHECK_OBJECT((PyObject *)var_elapsed_time);
    Py_DECREF(var_elapsed_time);
    var_elapsed_time = NULL;

    Py_XDECREF(var_start);
    var_start = NULL;

    Py_XDECREF(var_liststr);
    var_liststr = NULL;

    Py_XDECREF(var_count_f);
    var_count_f = NULL;

    Py_XDECREF(var_start_f);
    var_start_f = NULL;

    Py_XDECREF(var_list_spb);
    var_list_spb = NULL;

    Py_XDECREF(var_start_to);
    var_start_to = NULL;

    Py_XDECREF(var_op_thread);
    var_op_thread = NULL;

    Py_XDECREF(var_sf_txt);
    var_sf_txt = NULL;

    Py_XDECREF(var_last_f);
    var_last_f = NULL;

    Py_XDECREF(var_count);
    var_count = NULL;

    Py_XDECREF(var_d);
    var_d = NULL;

    Py_XDECREF(var_i);
    var_i = NULL;

    Py_XDECREF(var_j);
    var_j = NULL;

    Py_XDECREF(var_start_spb);
    var_start_spb = NULL;

    Py_XDECREF(var_p);
    var_p = NULL;

    Py_XDECREF(var_start_p);
    var_start_p = NULL;

    Py_XDECREF(var_list_na);
    var_list_na = NULL;

    Py_XDECREF(var_y);
    var_y = NULL;

    CHECK_OBJECT((PyObject *)var_save_fail);
    Py_DECREF(var_save_fail);
    var_save_fail = NULL;

    CHECK_OBJECT((PyObject *)var_curr_time);
    Py_DECREF(var_curr_time);
    var_curr_time = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_7 = exception_type;
    exception_keeper_value_7 = exception_value;
    exception_keeper_tb_7 = exception_tb;
    exception_keeper_lineno_7 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_list_p);
    var_list_p = NULL;

    Py_XDECREF(var_list_miss);
    var_list_miss = NULL;

    Py_XDECREF(var_list_alo);
    var_list_alo = NULL;

    Py_XDECREF(var_start_miss);
    var_start_miss = NULL;

    Py_XDECREF(var_list_f);
    var_list_f = NULL;

    Py_XDECREF(var_start_alo);
    var_start_alo = NULL;

    Py_XDECREF(var_start_na);
    var_start_na = NULL;

    Py_XDECREF(var_res_sum);
    var_res_sum = NULL;

    Py_XDECREF(var_list_to);
    var_list_to = NULL;

    Py_XDECREF(var_elapsed_time);
    var_elapsed_time = NULL;

    Py_XDECREF(var_start);
    var_start = NULL;

    Py_XDECREF(var_liststr);
    var_liststr = NULL;

    Py_XDECREF(var_count_f);
    var_count_f = NULL;

    Py_XDECREF(var_start_f);
    var_start_f = NULL;

    Py_XDECREF(var_list_spb);
    var_list_spb = NULL;

    Py_XDECREF(var_start_to);
    var_start_to = NULL;

    Py_XDECREF(var_op_thread);
    var_op_thread = NULL;

    Py_XDECREF(var_sf_txt);
    var_sf_txt = NULL;

    Py_XDECREF(var_last_f);
    var_last_f = NULL;

    Py_XDECREF(var_count);
    var_count = NULL;

    Py_XDECREF(var_d);
    var_d = NULL;

    Py_XDECREF(var_i);
    var_i = NULL;

    Py_XDECREF(var_j);
    var_j = NULL;

    Py_XDECREF(var_start_spb);
    var_start_spb = NULL;

    Py_XDECREF(var_p);
    var_p = NULL;

    Py_XDECREF(var_start_p);
    var_start_p = NULL;

    Py_XDECREF(var_list_na);
    var_list_na = NULL;

    Py_XDECREF(var_y);
    var_y = NULL;

    Py_XDECREF(var_save_fail);
    var_save_fail = NULL;

    Py_XDECREF(var_curr_time);
    var_curr_time = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_7;
    exception_value = exception_keeper_value_7;
    exception_tb = exception_keeper_tb_7;
    exception_lineno = exception_keeper_lineno_7;

    goto function_exception_exit;
    // End of try:

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(cleanop$$$function_4_changePW_cleanup);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_res_list);
    Py_DECREF(par_res_list);
    CHECK_OBJECT(par_selected_list);
    Py_DECREF(par_selected_list);
    CHECK_OBJECT(par_val3);
    Py_DECREF(par_val3);
    CHECK_OBJECT(par_val2);
    Py_DECREF(par_val2);
    CHECK_OBJECT(par_val4);
    Py_DECREF(par_val4);
    CHECK_OBJECT(par_op_threads);
    Py_DECREF(par_op_threads);
    CHECK_OBJECT(par_rescan_needed);
    Py_DECREF(par_rescan_needed);
    CHECK_OBJECT(par_e_to);
    Py_DECREF(par_e_to);
    CHECK_OBJECT(par_start_time);
    Py_DECREF(par_start_time);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);
    CHECK_OBJECT(par_max_time);
    Py_DECREF(par_max_time);
    CHECK_OBJECT(par_status_list);
    Py_DECREF(par_status_list);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_res_list);
    Py_DECREF(par_res_list);
    CHECK_OBJECT(par_selected_list);
    Py_DECREF(par_selected_list);
    CHECK_OBJECT(par_val3);
    Py_DECREF(par_val3);
    CHECK_OBJECT(par_val2);
    Py_DECREF(par_val2);
    CHECK_OBJECT(par_val4);
    Py_DECREF(par_val4);
    CHECK_OBJECT(par_op_threads);
    Py_DECREF(par_op_threads);
    CHECK_OBJECT(par_rescan_needed);
    Py_DECREF(par_rescan_needed);
    CHECK_OBJECT(par_e_to);
    Py_DECREF(par_e_to);
    CHECK_OBJECT(par_start_time);
    Py_DECREF(par_start_time);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);
    CHECK_OBJECT(par_max_time);
    Py_DECREF(par_max_time);
    CHECK_OBJECT(par_status_list);
    Py_DECREF(par_status_list);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_cleanop$$$function_5_unlockPBA_cleanup(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_ui = python_pars[0];
    PyObject *par_max_time = python_pars[1];
    PyObject *par_start_time = python_pars[2];
    PyObject *par_op_threads = python_pars[3];
    PyObject *par_res_list = python_pars[4];
    PyObject *par_e_to = python_pars[5];
    PyObject *par_selected_list = python_pars[6];
    PyObject *par_status_list = python_pars[7];
    PyObject *par_reboot = python_pars[8];
    PyObject *par_rescan_needed = python_pars[9];
    PyObject *par_val3 = python_pars[10];
    PyObject *par_val4 = python_pars[11];
    PyObject *var_list_p = NULL;
    PyObject *var_list_miss = NULL;
    PyObject *var_list_alo = NULL;
    PyObject *var_start_miss = NULL;
    PyObject *var_list_f = NULL;
    PyObject *var_start_alo = NULL;
    PyObject *var_start_na = NULL;
    PyObject *var_res_sum = NULL;
    PyObject *var_list_to = NULL;
    PyObject *var_any_unlocked = NULL;
    PyObject *var_elapsed_time = NULL;
    PyObject *var_start = NULL;
    PyObject *var_sel_idx = NULL;
    PyObject *var_dl_len = NULL;
    PyObject *var_count_f = NULL;
    PyObject *var_start_f = NULL;
    PyObject *var_list_spb = NULL;
    PyObject *var_start_to = NULL;
    PyObject *var_op_thread = NULL;
    PyObject *var_sf_txt = NULL;
    PyObject *var_last_f = NULL;
    PyObject *var_count = NULL;
    PyObject *var_d = NULL;
    PyObject *var_f = NULL;
    PyObject *var_i = NULL;
    PyObject *var_j = NULL;
    PyObject *var_start_spb = NULL;
    PyObject *var_pipe = NULL;
    PyObject *var_p = NULL;
    PyObject *var_start_p = NULL;
    PyObject *var_list_na = NULL;
    PyObject *var_y = NULL;
    PyObject *var_x = NULL;
    PyObject *var_save_fail = NULL;
    PyObject *var_liststr = NULL;
    PyObject *var_curr_time = NULL;
    PyObject *tmp_for_loop_1__for_iterator = NULL;
    PyObject *tmp_for_loop_1__iter_value = NULL;
    PyObject *tmp_for_loop_2__for_iterator = NULL;
    PyObject *tmp_for_loop_2__iter_value = NULL;
    PyObject *tmp_for_loop_3__for_iterator = NULL;
    PyObject *tmp_for_loop_3__iter_value = NULL;
    PyObject *tmp_for_loop_4__for_iterator = NULL;
    PyObject *tmp_for_loop_4__iter_value = NULL;
    PyObject *tmp_for_loop_5__for_iterator = NULL;
    PyObject *tmp_for_loop_5__iter_value = NULL;
    PyObject *tmp_for_loop_6__for_iterator = NULL;
    PyObject *tmp_for_loop_6__iter_value = NULL;
    PyObject *tmp_for_loop_7__for_iterator = NULL;
    PyObject *tmp_for_loop_7__iter_value = NULL;
    PyObject *tmp_for_loop_8__for_iterator = NULL;
    PyObject *tmp_for_loop_8__iter_value = NULL;
    PyObject *tmp_for_loop_9__for_iterator = NULL;
    PyObject *tmp_for_loop_9__iter_value = NULL;
    PyObject *tmp_with_1__enter = NULL;
    PyObject *tmp_with_1__exit = NULL;
    nuitka_bool tmp_with_1__indicator = NUITKA_BOOL_UNASSIGNED;
    PyObject *tmp_with_1__source = NULL;
    struct Nuitka_FrameObject *frame_c55d069b0e2db5de0f9b503ec621c80b;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    bool tmp_result;
    int tmp_res;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;
    PyObject *exception_keeper_type_3;
    PyObject *exception_keeper_value_3;
    PyTracebackObject *exception_keeper_tb_3;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_3;
    PyObject *exception_keeper_type_4;
    PyObject *exception_keeper_value_4;
    PyTracebackObject *exception_keeper_tb_4;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_4;
    PyObject *exception_keeper_type_5;
    PyObject *exception_keeper_value_5;
    PyTracebackObject *exception_keeper_tb_5;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_5;
    PyObject *exception_keeper_type_6;
    PyObject *exception_keeper_value_6;
    PyTracebackObject *exception_keeper_tb_6;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_6;
    PyObject *exception_keeper_type_7;
    PyObject *exception_keeper_value_7;
    PyTracebackObject *exception_keeper_tb_7;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_7;
    PyObject *exception_keeper_type_8;
    PyObject *exception_keeper_value_8;
    PyTracebackObject *exception_keeper_tb_8;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_8;
    PyObject *exception_keeper_type_9;
    PyObject *exception_keeper_value_9;
    PyTracebackObject *exception_keeper_tb_9;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_9;
    PyObject *exception_keeper_type_10;
    PyObject *exception_keeper_value_10;
    PyTracebackObject *exception_keeper_tb_10;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_10;
    PyObject *exception_keeper_type_11;
    PyObject *exception_keeper_value_11;
    PyTracebackObject *exception_keeper_tb_11;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_11;
    PyObject *exception_keeper_type_12;
    PyObject *exception_keeper_value_12;
    PyTracebackObject *exception_keeper_tb_12;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_12;
    static struct Nuitka_FrameObject *cache_frame_c55d069b0e2db5de0f9b503ec621c80b = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_keeper_type_13;
    PyObject *exception_keeper_value_13;
    PyTracebackObject *exception_keeper_tb_13;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_13;

    // Actual function body.
    // Tried code:
    MAKE_OR_REUSE_FRAME(cache_frame_c55d069b0e2db5de0f9b503ec621c80b, codeobj_c55d069b0e2db5de0f9b503ec621c80b, module_cleanop, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
    frame_c55d069b0e2db5de0f9b503ec621c80b = cache_frame_c55d069b0e2db5de0f9b503ec621c80b;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_c55d069b0e2db5de0f9b503ec621c80b);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_c55d069b0e2db5de0f9b503ec621c80b) == 2); // Frame stack

    // Framed code:
    {
        nuitka_bool tmp_condition_result_1;
        int tmp_truth_name_1;
        CHECK_OBJECT(par_rescan_needed);
        tmp_truth_name_1 = CHECK_IF_TRUE(par_rescan_needed);
        if (tmp_truth_name_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 640;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_1 = tmp_truth_name_1 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        {
            PyObject *tmp_assattr_name_1;
            PyObject *tmp_assattr_target_1;
            tmp_assattr_name_1 = Py_True;
            CHECK_OBJECT(par_ui);
            tmp_assattr_target_1 = par_ui;
            tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, const_str_plain_scan_ip, tmp_assattr_name_1);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 641;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
        }
        branch_no_1:;
    }
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_called_instance_1;
        PyObject *tmp_mvar_value_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_time);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_time);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1164 ], 33, 0);
            exception_tb = NULL;

            exception_lineno = 642;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_1 = tmp_mvar_value_1;
        frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 642;
        tmp_assign_source_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_1, const_str_plain_time);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 642;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_curr_time == NULL);
        var_curr_time = tmp_assign_source_1;
    }
    {
        PyObject *tmp_assign_source_2;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        CHECK_OBJECT(var_curr_time);
        tmp_left_name_1 = var_curr_time;
        CHECK_OBJECT(par_start_time);
        tmp_right_name_1 = par_start_time;
        tmp_assign_source_2 = BINARY_OPERATION_SUB_OBJECT_OBJECT(tmp_left_name_1, tmp_right_name_1);
        if (tmp_assign_source_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 643;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_elapsed_time == NULL);
        var_elapsed_time = tmp_assign_source_2;
    }
    {
        nuitka_bool tmp_condition_result_2;
        PyObject *tmp_compexpr_left_1;
        PyObject *tmp_compexpr_right_1;
        CHECK_OBJECT(var_elapsed_time);
        tmp_compexpr_left_1 = var_elapsed_time;
        CHECK_OBJECT(par_max_time);
        tmp_compexpr_right_1 = par_max_time;
        tmp_res = RICH_COMPARE_BOOL_GTE_OBJECT_OBJECT(tmp_compexpr_left_1, tmp_compexpr_right_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 645;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_2 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
            goto branch_yes_2;
        } else {
            goto branch_no_2;
        }
        branch_yes_2:;
        {
            PyObject *tmp_called_instance_2;
            PyObject *tmp_call_result_1;
            CHECK_OBJECT(par_e_to);
            tmp_called_instance_2 = par_e_to;
            frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 646;
            tmp_call_result_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_2, const_str_plain_set);
            if (tmp_call_result_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 646;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_1);
        }
        {
            PyObject *tmp_assign_source_3;
            PyObject *tmp_iter_arg_1;
            CHECK_OBJECT(par_op_threads);
            tmp_iter_arg_1 = par_op_threads;
            tmp_assign_source_3 = MAKE_ITERATOR(tmp_iter_arg_1);
            if (tmp_assign_source_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 647;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_1__for_iterator == NULL);
            tmp_for_loop_1__for_iterator = tmp_assign_source_3;
        }
        // Tried code:
        loop_start_1:;
        {
            PyObject *tmp_next_source_1;
            PyObject *tmp_assign_source_4;
            CHECK_OBJECT(tmp_for_loop_1__for_iterator);
            tmp_next_source_1 = tmp_for_loop_1__for_iterator;
            tmp_assign_source_4 = ITERATOR_NEXT(tmp_next_source_1);
            if (tmp_assign_source_4 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_1;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    exception_lineno = 647;
                    goto try_except_handler_2;
                }
            }

            {
                PyObject *old = tmp_for_loop_1__iter_value;
                tmp_for_loop_1__iter_value = tmp_assign_source_4;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_5;
            CHECK_OBJECT(tmp_for_loop_1__iter_value);
            tmp_assign_source_5 = tmp_for_loop_1__iter_value;
            {
                PyObject *old = var_op_thread;
                var_op_thread = tmp_assign_source_5;
                Py_INCREF(var_op_thread);
                Py_XDECREF(old);
            }

        }
        {
            nuitka_bool tmp_condition_result_3;
            PyObject *tmp_called_instance_3;
            PyObject *tmp_call_result_2;
            int tmp_truth_name_2;
            CHECK_OBJECT(var_op_thread);
            tmp_called_instance_3 = var_op_thread;
            frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 648;
            tmp_call_result_2 = CALL_METHOD_NO_ARGS(tmp_called_instance_3, const_str_plain_is_alive);
            if (tmp_call_result_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 648;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_2;
            }
            tmp_truth_name_2 = CHECK_IF_TRUE(tmp_call_result_2);
            if (tmp_truth_name_2 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_call_result_2);

                exception_lineno = 648;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_2;
            }
            tmp_condition_result_3 = tmp_truth_name_2 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            Py_DECREF(tmp_call_result_2);
            if (tmp_condition_result_3 == NUITKA_BOOL_TRUE) {
                goto branch_yes_3;
            } else {
                goto branch_no_3;
            }
            branch_yes_3:;
            {
                nuitka_bool tmp_condition_result_4;
                PyObject *tmp_compexpr_left_2;
                PyObject *tmp_compexpr_right_2;
                PyObject *tmp_source_name_1;
                CHECK_OBJECT(par_ui);
                tmp_source_name_1 = par_ui;
                tmp_compexpr_left_2 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_process);
                if (tmp_compexpr_left_2 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 649;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_2;
                }
                tmp_compexpr_right_2 = Py_None;
                tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_2, tmp_compexpr_right_2);
                Py_DECREF(tmp_compexpr_left_2);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 649;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_2;
                }
                tmp_condition_result_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_4 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_4;
                } else {
                    goto branch_no_4;
                }
                branch_yes_4:;
                {
                    PyObject *tmp_called_instance_4;
                    PyObject *tmp_source_name_2;
                    PyObject *tmp_call_result_3;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_2 = par_ui;
                    tmp_called_instance_4 = LOOKUP_ATTRIBUTE(tmp_source_name_2, const_str_plain_process);
                    if (tmp_called_instance_4 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 650;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_2;
                    }
                    frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 650;
                    tmp_call_result_3 = CALL_METHOD_NO_ARGS(tmp_called_instance_4, const_str_plain_terminate);
                    Py_DECREF(tmp_called_instance_4);
                    if (tmp_call_result_3 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 650;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_2;
                    }
                    Py_DECREF(tmp_call_result_3);
                }
                {
                    PyObject *tmp_assattr_name_2;
                    PyObject *tmp_assattr_target_2;
                    tmp_assattr_name_2 = Py_None;
                    CHECK_OBJECT(par_ui);
                    tmp_assattr_target_2 = par_ui;
                    tmp_result = SET_ATTRIBUTE(tmp_assattr_target_2, const_str_plain_process, tmp_assattr_name_2);
                    if (tmp_result == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 651;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_2;
                    }
                }
                goto branch_end_4;
                branch_no_4:;
                {
                    nuitka_bool tmp_condition_result_5;
                    PyObject *tmp_compexpr_left_3;
                    PyObject *tmp_compexpr_right_3;
                    PyObject *tmp_source_name_3;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_3 = par_ui;
                    tmp_compexpr_left_3 = LOOKUP_ATTRIBUTE(tmp_source_name_3, const_str_plain_process_list);
                    if (tmp_compexpr_left_3 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 652;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_2;
                    }
                    tmp_compexpr_right_3 = PyList_New(0);
                    tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_3, tmp_compexpr_right_3);
                    Py_DECREF(tmp_compexpr_left_3);
                    Py_DECREF(tmp_compexpr_right_3);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 652;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_2;
                    }
                    tmp_condition_result_5 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_5 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_5;
                    } else {
                        goto branch_no_5;
                    }
                    branch_yes_5:;
                    {
                        PyObject *tmp_assign_source_6;
                        PyObject *tmp_iter_arg_2;
                        PyObject *tmp_source_name_4;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_4 = par_ui;
                        tmp_iter_arg_2 = LOOKUP_ATTRIBUTE(tmp_source_name_4, const_str_plain_process_list);
                        if (tmp_iter_arg_2 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 653;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_2;
                        }
                        tmp_assign_source_6 = MAKE_ITERATOR(tmp_iter_arg_2);
                        Py_DECREF(tmp_iter_arg_2);
                        if (tmp_assign_source_6 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 653;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_2;
                        }
                        {
                            PyObject *old = tmp_for_loop_2__for_iterator;
                            tmp_for_loop_2__for_iterator = tmp_assign_source_6;
                            Py_XDECREF(old);
                        }

                    }
                    // Tried code:
                    loop_start_2:;
                    {
                        PyObject *tmp_next_source_2;
                        PyObject *tmp_assign_source_7;
                        CHECK_OBJECT(tmp_for_loop_2__for_iterator);
                        tmp_next_source_2 = tmp_for_loop_2__for_iterator;
                        tmp_assign_source_7 = ITERATOR_NEXT(tmp_next_source_2);
                        if (tmp_assign_source_7 == NULL) {
                            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                                goto loop_end_2;
                            } else {

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                exception_lineno = 653;
                                goto try_except_handler_3;
                            }
                        }

                        {
                            PyObject *old = tmp_for_loop_2__iter_value;
                            tmp_for_loop_2__iter_value = tmp_assign_source_7;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assign_source_8;
                        CHECK_OBJECT(tmp_for_loop_2__iter_value);
                        tmp_assign_source_8 = tmp_for_loop_2__iter_value;
                        {
                            PyObject *old = var_p;
                            var_p = tmp_assign_source_8;
                            Py_INCREF(var_p);
                            Py_XDECREF(old);
                        }

                    }
                    {
                        nuitka_bool tmp_condition_result_6;
                        PyObject *tmp_compexpr_left_4;
                        PyObject *tmp_compexpr_right_4;
                        CHECK_OBJECT(var_p);
                        tmp_compexpr_left_4 = var_p;
                        tmp_compexpr_right_4 = Py_None;
                        tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_4, tmp_compexpr_right_4);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 654;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_3;
                        }
                        tmp_condition_result_6 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_6 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_6;
                        } else {
                            goto branch_no_6;
                        }
                        branch_yes_6:;
                        {
                            PyObject *tmp_called_instance_5;
                            PyObject *tmp_call_result_4;
                            CHECK_OBJECT(var_p);
                            tmp_called_instance_5 = var_p;
                            frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 655;
                            tmp_call_result_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_5, const_str_plain_terminate);
                            if (tmp_call_result_4 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 655;
                                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_3;
                            }
                            Py_DECREF(tmp_call_result_4);
                        }
                        {
                            PyObject *tmp_assign_source_9;
                            tmp_assign_source_9 = Py_None;
                            {
                                PyObject *old = var_p;
                                assert(old != NULL);
                                var_p = tmp_assign_source_9;
                                Py_INCREF(var_p);
                                Py_DECREF(old);
                            }

                        }
                        branch_no_6:;
                    }
                    if (CONSIDER_THREADING() == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 653;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_3;
                    }
                    goto loop_start_2;
                    loop_end_2:;
                    goto try_end_1;
                    // Exception handler code:
                    try_except_handler_3:;
                    exception_keeper_type_1 = exception_type;
                    exception_keeper_value_1 = exception_value;
                    exception_keeper_tb_1 = exception_tb;
                    exception_keeper_lineno_1 = exception_lineno;
                    exception_type = NULL;
                    exception_value = NULL;
                    exception_tb = NULL;
                    exception_lineno = 0;

                    Py_XDECREF(tmp_for_loop_2__iter_value);
                    tmp_for_loop_2__iter_value = NULL;

                    CHECK_OBJECT((PyObject *)tmp_for_loop_2__for_iterator);
                    Py_DECREF(tmp_for_loop_2__for_iterator);
                    tmp_for_loop_2__for_iterator = NULL;

                    // Re-raise.
                    exception_type = exception_keeper_type_1;
                    exception_value = exception_keeper_value_1;
                    exception_tb = exception_keeper_tb_1;
                    exception_lineno = exception_keeper_lineno_1;

                    goto try_except_handler_2;
                    // End of try:
                    try_end_1:;
                    Py_XDECREF(tmp_for_loop_2__iter_value);
                    tmp_for_loop_2__iter_value = NULL;

                    CHECK_OBJECT((PyObject *)tmp_for_loop_2__for_iterator);
                    Py_DECREF(tmp_for_loop_2__for_iterator);
                    tmp_for_loop_2__for_iterator = NULL;

                    {
                        PyObject *tmp_assattr_name_3;
                        PyObject *tmp_assattr_target_3;
                        tmp_assattr_name_3 = PyList_New(0);
                        CHECK_OBJECT(par_ui);
                        tmp_assattr_target_3 = par_ui;
                        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_3, const_str_plain_process_list, tmp_assattr_name_3);
                        Py_DECREF(tmp_assattr_name_3);
                        if (tmp_result == false) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 657;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_2;
                        }
                    }
                    branch_no_5:;
                }
                branch_end_4:;
            }
            {
                PyObject *tmp_called_instance_6;
                PyObject *tmp_call_result_5;
                CHECK_OBJECT(var_op_thread);
                tmp_called_instance_6 = var_op_thread;
                frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 658;
                tmp_call_result_5 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_6, const_str_plain_join, &PyTuple_GET_ITEM(const_tuple_float_0_0_tuple, 0));

                if (tmp_call_result_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 658;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_2;
                }
                Py_DECREF(tmp_call_result_5);
            }
            branch_no_3:;
        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 647;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto try_except_handler_2;
        }
        goto loop_start_1;
        loop_end_1:;
        goto try_end_2;
        // Exception handler code:
        try_except_handler_2:;
        exception_keeper_type_2 = exception_type;
        exception_keeper_value_2 = exception_value;
        exception_keeper_tb_2 = exception_tb;
        exception_keeper_lineno_2 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_1__iter_value);
        tmp_for_loop_1__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_1__for_iterator);
        Py_DECREF(tmp_for_loop_1__for_iterator);
        tmp_for_loop_1__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_2;
        exception_value = exception_keeper_value_2;
        exception_tb = exception_keeper_tb_2;
        exception_lineno = exception_keeper_lineno_2;

        goto frame_exception_exit_1;
        // End of try:
        try_end_2:;
        Py_XDECREF(tmp_for_loop_1__iter_value);
        tmp_for_loop_1__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_1__for_iterator);
        Py_DECREF(tmp_for_loop_1__for_iterator);
        tmp_for_loop_1__for_iterator = NULL;

        branch_no_2:;
    }
    {
        PyObject *tmp_assattr_name_4;
        PyObject *tmp_assattr_target_4;
        tmp_assattr_name_4 = Py_False;
        CHECK_OBJECT(par_ui);
        tmp_assattr_target_4 = par_ui;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_4, const_str_plain_op_inprogress, tmp_assattr_name_4);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 660;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
    }
    {
        PyObject *tmp_assign_source_10;
        tmp_assign_source_10 = PyList_New(0);
        assert(var_save_fail == NULL);
        var_save_fail = tmp_assign_source_10;
    }
    {
        PyObject *tmp_assign_source_11;
        PyObject *tmp_iter_arg_3;
        PyObject *tmp_range_arg_1;
        PyObject *tmp_len_arg_1;
        CHECK_OBJECT(par_res_list);
        tmp_len_arg_1 = par_res_list;
        tmp_range_arg_1 = BUILTIN_LEN(tmp_len_arg_1);
        if (tmp_range_arg_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 662;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_iter_arg_3 = BUILTIN_RANGE(tmp_range_arg_1);
        Py_DECREF(tmp_range_arg_1);
        if (tmp_iter_arg_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 662;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_11 = MAKE_ITERATOR(tmp_iter_arg_3);
        Py_DECREF(tmp_iter_arg_3);
        if (tmp_assign_source_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 662;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_3__for_iterator == NULL);
        tmp_for_loop_3__for_iterator = tmp_assign_source_11;
    }
    // Tried code:
    loop_start_3:;
    {
        PyObject *tmp_next_source_3;
        PyObject *tmp_assign_source_12;
        CHECK_OBJECT(tmp_for_loop_3__for_iterator);
        tmp_next_source_3 = tmp_for_loop_3__for_iterator;
        tmp_assign_source_12 = ITERATOR_NEXT(tmp_next_source_3);
        if (tmp_assign_source_12 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_3;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                exception_lineno = 662;
                goto try_except_handler_4;
            }
        }

        {
            PyObject *old = tmp_for_loop_3__iter_value;
            tmp_for_loop_3__iter_value = tmp_assign_source_12;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_13;
        CHECK_OBJECT(tmp_for_loop_3__iter_value);
        tmp_assign_source_13 = tmp_for_loop_3__iter_value;
        {
            PyObject *old = var_i;
            var_i = tmp_assign_source_13;
            Py_INCREF(var_i);
            Py_XDECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_7;
        PyObject *tmp_compexpr_left_5;
        PyObject *tmp_compexpr_right_5;
        PyObject *tmp_subscribed_name_1;
        PyObject *tmp_subscript_name_1;
        CHECK_OBJECT(par_res_list);
        tmp_subscribed_name_1 = par_res_list;
        CHECK_OBJECT(var_i);
        tmp_subscript_name_1 = var_i;
        tmp_compexpr_left_5 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_1, tmp_subscript_name_1);
        if (tmp_compexpr_left_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 663;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto try_except_handler_4;
        }
        tmp_compexpr_right_5 = const_int_neg_1;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_5, tmp_compexpr_right_5);
        Py_DECREF(tmp_compexpr_left_5);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 663;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto try_except_handler_4;
        }
        tmp_condition_result_7 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_7 == NUITKA_BOOL_TRUE) {
            goto branch_yes_7;
        } else {
            goto branch_no_7;
        }
        branch_yes_7:;
        {
            nuitka_bool tmp_condition_result_8;
            PyObject *tmp_called_instance_7;
            PyObject *tmp_call_result_6;
            int tmp_truth_name_3;
            CHECK_OBJECT(par_e_to);
            tmp_called_instance_7 = par_e_to;
            frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 664;
            tmp_call_result_6 = CALL_METHOD_NO_ARGS(tmp_called_instance_7, const_str_plain_is_set);
            if (tmp_call_result_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 664;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_4;
            }
            tmp_truth_name_3 = CHECK_IF_TRUE(tmp_call_result_6);
            if (tmp_truth_name_3 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_call_result_6);

                exception_lineno = 664;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_4;
            }
            tmp_condition_result_8 = tmp_truth_name_3 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            Py_DECREF(tmp_call_result_6);
            if (tmp_condition_result_8 == NUITKA_BOOL_TRUE) {
                goto branch_yes_8;
            } else {
                goto branch_no_8;
            }
            branch_yes_8:;
            {
                PyObject *tmp_ass_subvalue_1;
                PyObject *tmp_ass_subscribed_1;
                PyObject *tmp_ass_subscript_1;
                tmp_ass_subvalue_1 = const_int_pos_2;
                CHECK_OBJECT(par_res_list);
                tmp_ass_subscribed_1 = par_res_list;
                CHECK_OBJECT(var_i);
                tmp_ass_subscript_1 = var_i;
                tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_1, tmp_ass_subscript_1, tmp_ass_subvalue_1);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 665;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_4;
                }
            }
            goto branch_end_8;
            branch_no_8:;
            {
                PyObject *tmp_ass_subvalue_2;
                PyObject *tmp_ass_subscribed_2;
                PyObject *tmp_ass_subscript_2;
                tmp_ass_subvalue_2 = const_int_pos_3;
                CHECK_OBJECT(par_res_list);
                tmp_ass_subscribed_2 = par_res_list;
                CHECK_OBJECT(var_i);
                tmp_ass_subscript_2 = var_i;
                tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_2, tmp_ass_subscript_2, tmp_ass_subvalue_2);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 667;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_4;
                }
            }
            branch_end_8:;
        }
        goto branch_end_7;
        branch_no_7:;
        {
            nuitka_bool tmp_condition_result_9;
            PyObject *tmp_compexpr_left_6;
            PyObject *tmp_compexpr_right_6;
            PyObject *tmp_subscribed_name_2;
            PyObject *tmp_subscript_name_2;
            CHECK_OBJECT(par_res_list);
            tmp_subscribed_name_2 = par_res_list;
            CHECK_OBJECT(var_i);
            tmp_subscript_name_2 = var_i;
            tmp_compexpr_left_6 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_2, tmp_subscript_name_2);
            if (tmp_compexpr_left_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 668;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_4;
            }
            tmp_compexpr_right_6 = const_int_pos_5;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_6, tmp_compexpr_right_6);
            Py_DECREF(tmp_compexpr_left_6);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 668;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_4;
            }
            tmp_condition_result_9 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_9 == NUITKA_BOOL_TRUE) {
                goto branch_yes_9;
            } else {
                goto branch_no_9;
            }
            branch_yes_9:;
            {
                PyObject *tmp_called_instance_8;
                PyObject *tmp_call_result_7;
                PyObject *tmp_args_element_name_1;
                CHECK_OBJECT(var_save_fail);
                tmp_called_instance_8 = var_save_fail;
                CHECK_OBJECT(var_i);
                tmp_args_element_name_1 = var_i;
                frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 669;
                {
                    PyObject *call_args[] = {tmp_args_element_name_1};
                    tmp_call_result_7 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_8, const_str_plain_append, call_args);
                }

                if (tmp_call_result_7 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 669;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_4;
                }
                Py_DECREF(tmp_call_result_7);
            }
            {
                PyObject *tmp_ass_subvalue_3;
                PyObject *tmp_ass_subscribed_3;
                PyObject *tmp_ass_subscript_3;
                tmp_ass_subvalue_3 = const_int_0;
                CHECK_OBJECT(par_res_list);
                tmp_ass_subscribed_3 = par_res_list;
                CHECK_OBJECT(var_i);
                tmp_ass_subscript_3 = var_i;
                tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_3, tmp_ass_subscript_3, tmp_ass_subvalue_3);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 670;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_4;
                }
            }
            branch_no_9:;
        }
        branch_end_7:;
    }
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 662;
        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
        goto try_except_handler_4;
    }
    goto loop_start_3;
    loop_end_3:;
    goto try_end_3;
    // Exception handler code:
    try_except_handler_4:;
    exception_keeper_type_3 = exception_type;
    exception_keeper_value_3 = exception_value;
    exception_keeper_tb_3 = exception_tb;
    exception_keeper_lineno_3 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_3__iter_value);
    tmp_for_loop_3__iter_value = NULL;

    CHECK_OBJECT((PyObject *)tmp_for_loop_3__for_iterator);
    Py_DECREF(tmp_for_loop_3__for_iterator);
    tmp_for_loop_3__for_iterator = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_3;
    exception_value = exception_keeper_value_3;
    exception_tb = exception_keeper_tb_3;
    exception_lineno = exception_keeper_lineno_3;

    goto frame_exception_exit_1;
    // End of try:
    try_end_3:;
    Py_XDECREF(tmp_for_loop_3__iter_value);
    tmp_for_loop_3__iter_value = NULL;

    CHECK_OBJECT((PyObject *)tmp_for_loop_3__for_iterator);
    Py_DECREF(tmp_for_loop_3__for_iterator);
    tmp_for_loop_3__for_iterator = NULL;

    {
        nuitka_bool tmp_condition_result_10;
        PyObject *tmp_compexpr_left_7;
        PyObject *tmp_compexpr_right_7;
        PyObject *tmp_len_arg_2;
        CHECK_OBJECT(var_save_fail);
        tmp_len_arg_2 = var_save_fail;
        tmp_compexpr_left_7 = BUILTIN_LEN(tmp_len_arg_2);
        assert(!(tmp_compexpr_left_7 == NULL));
        tmp_compexpr_right_7 = const_int_0;
        tmp_res = RICH_COMPARE_BOOL_GT_OBJECT_INT(tmp_compexpr_left_7, tmp_compexpr_right_7);
        Py_DECREF(tmp_compexpr_left_7);
        assert(!(tmp_res == -1));
        tmp_condition_result_10 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_10 == NUITKA_BOOL_TRUE) {
            goto branch_yes_10;
        } else {
            goto branch_no_10;
        }
        branch_yes_10:;
        {
            PyObject *tmp_assign_source_14;
            tmp_assign_source_14 = Py_True;
            assert(var_start == NULL);
            Py_INCREF(tmp_assign_source_14);
            var_start = tmp_assign_source_14;
        }
        {
            PyObject *tmp_assign_source_15;
            tmp_assign_source_15 = const_str_empty;
            assert(var_sf_txt == NULL);
            Py_INCREF(tmp_assign_source_15);
            var_sf_txt = tmp_assign_source_15;
        }
        {
            PyObject *tmp_assign_source_16;
            PyObject *tmp_iter_arg_4;
            CHECK_OBJECT(var_save_fail);
            tmp_iter_arg_4 = var_save_fail;
            tmp_assign_source_16 = MAKE_ITERATOR(tmp_iter_arg_4);
            if (tmp_assign_source_16 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 675;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_4__for_iterator == NULL);
            tmp_for_loop_4__for_iterator = tmp_assign_source_16;
        }
        // Tried code:
        loop_start_4:;
        {
            PyObject *tmp_next_source_4;
            PyObject *tmp_assign_source_17;
            CHECK_OBJECT(tmp_for_loop_4__for_iterator);
            tmp_next_source_4 = tmp_for_loop_4__for_iterator;
            tmp_assign_source_17 = ITERATOR_NEXT(tmp_next_source_4);
            if (tmp_assign_source_17 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_4;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    exception_lineno = 675;
                    goto try_except_handler_5;
                }
            }

            {
                PyObject *old = tmp_for_loop_4__iter_value;
                tmp_for_loop_4__iter_value = tmp_assign_source_17;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_18;
            CHECK_OBJECT(tmp_for_loop_4__iter_value);
            tmp_assign_source_18 = tmp_for_loop_4__iter_value;
            {
                PyObject *old = var_j;
                var_j = tmp_assign_source_18;
                Py_INCREF(var_j);
                Py_XDECREF(old);
            }

        }
        {
            nuitka_bool tmp_condition_result_11;
            PyObject *tmp_operand_name_1;
            if (var_start == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start");
                exception_tb = NULL;

                exception_lineno = 676;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_5;
            }

            tmp_operand_name_1 = var_start;
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_1);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 676;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_5;
            }
            tmp_condition_result_11 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_11 == NUITKA_BOOL_TRUE) {
                goto branch_yes_11;
            } else {
                goto branch_no_11;
            }
            branch_yes_11:;
            {
                PyObject *tmp_assign_source_19;
                PyObject *tmp_left_name_2;
                PyObject *tmp_right_name_2;
                CHECK_OBJECT(var_sf_txt);
                tmp_left_name_2 = var_sf_txt;
                tmp_right_name_2 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                tmp_assign_source_19 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_2, tmp_right_name_2);
                if (tmp_assign_source_19 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 677;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_5;
                }
                {
                    PyObject *old = var_sf_txt;
                    assert(old != NULL);
                    var_sf_txt = tmp_assign_source_19;
                    Py_DECREF(old);
                }

            }
            goto branch_end_11;
            branch_no_11:;
            {
                PyObject *tmp_assign_source_20;
                tmp_assign_source_20 = Py_False;
                {
                    PyObject *old = var_start;
                    var_start = tmp_assign_source_20;
                    Py_INCREF(var_start);
                    Py_XDECREF(old);
                }

            }
            branch_end_11:;
        }
        {
            PyObject *tmp_assign_source_21;
            PyObject *tmp_left_name_3;
            PyObject *tmp_right_name_3;
            PyObject *tmp_subscribed_name_3;
            PyObject *tmp_source_name_5;
            PyObject *tmp_subscript_name_3;
            PyObject *tmp_subscribed_name_4;
            PyObject *tmp_subscript_name_4;
            if (var_sf_txt == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "sf_txt");
                exception_tb = NULL;

                exception_lineno = 680;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_5;
            }

            tmp_left_name_3 = var_sf_txt;
            CHECK_OBJECT(par_ui);
            tmp_source_name_5 = par_ui;
            tmp_subscribed_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_5, const_str_plain_devs_list);
            if (tmp_subscribed_name_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 680;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_5;
            }
            CHECK_OBJECT(par_selected_list);
            tmp_subscribed_name_4 = par_selected_list;
            CHECK_OBJECT(var_j);
            tmp_subscript_name_4 = var_j;
            tmp_subscript_name_3 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_4, tmp_subscript_name_4);
            if (tmp_subscript_name_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_subscribed_name_3);

                exception_lineno = 680;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_5;
            }
            tmp_right_name_3 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_3, tmp_subscript_name_3);
            Py_DECREF(tmp_subscribed_name_3);
            Py_DECREF(tmp_subscript_name_3);
            if (tmp_right_name_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 680;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_5;
            }
            tmp_assign_source_21 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_3, tmp_right_name_3);
            Py_DECREF(tmp_right_name_3);
            if (tmp_assign_source_21 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 680;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_5;
            }
            {
                PyObject *old = var_sf_txt;
                var_sf_txt = tmp_assign_source_21;
                Py_XDECREF(old);
            }

        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 675;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto try_except_handler_5;
        }
        goto loop_start_4;
        loop_end_4:;
        goto try_end_4;
        // Exception handler code:
        try_except_handler_5:;
        exception_keeper_type_4 = exception_type;
        exception_keeper_value_4 = exception_value;
        exception_keeper_tb_4 = exception_tb;
        exception_keeper_lineno_4 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_4__iter_value);
        tmp_for_loop_4__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_4__for_iterator);
        Py_DECREF(tmp_for_loop_4__for_iterator);
        tmp_for_loop_4__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_4;
        exception_value = exception_keeper_value_4;
        exception_tb = exception_keeper_tb_4;
        exception_lineno = exception_keeper_lineno_4;

        goto frame_exception_exit_1;
        // End of try:
        try_end_4:;
        Py_XDECREF(tmp_for_loop_4__iter_value);
        tmp_for_loop_4__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_4__for_iterator);
        Py_DECREF(tmp_for_loop_4__for_iterator);
        tmp_for_loop_4__for_iterator = NULL;

        {
            PyObject *tmp_called_name_1;
            PyObject *tmp_source_name_6;
            PyObject *tmp_call_result_8;
            PyObject *tmp_args_element_name_2;
            PyObject *tmp_left_name_4;
            PyObject *tmp_left_name_5;
            PyObject *tmp_right_name_4;
            PyObject *tmp_right_name_5;
            CHECK_OBJECT(par_ui);
            tmp_source_name_6 = par_ui;
            tmp_called_name_1 = LOOKUP_ATTRIBUTE(tmp_source_name_6, const_str_plain_msg_err);
            if (tmp_called_name_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 681;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_left_name_5 = const_str_digest_6c563c0332df6661a8e4db7513182d71;
            CHECK_OBJECT(var_sf_txt);
            tmp_right_name_4 = var_sf_txt;
            tmp_left_name_4 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_5, tmp_right_name_4);
            if (tmp_left_name_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_1);

                exception_lineno = 681;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_right_name_5 = const_str_dot;
            tmp_args_element_name_2 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_4, tmp_right_name_5);
            Py_DECREF(tmp_left_name_4);
            if (tmp_args_element_name_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_1);

                exception_lineno = 681;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 681;
            tmp_call_result_8 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_1, tmp_args_element_name_2);
            Py_DECREF(tmp_called_name_1);
            Py_DECREF(tmp_args_element_name_2);
            if (tmp_call_result_8 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 681;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_8);
        }
        branch_no_10:;
    }
    {
        PyObject *tmp_assign_source_22;
        PyObject *tmp_sum_sequence_1;
        CHECK_OBJECT(par_res_list);
        tmp_sum_sequence_1 = par_res_list;
        tmp_assign_source_22 = BUILTIN_SUM1(tmp_sum_sequence_1);
        if (tmp_assign_source_22 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 684;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_res_sum == NULL);
        var_res_sum = tmp_assign_source_22;
    }
    {
        PyObject *tmp_assign_source_23;
        tmp_assign_source_23 = Py_False;
        assert(var_any_unlocked == NULL);
        Py_INCREF(tmp_assign_source_23);
        var_any_unlocked = tmp_assign_source_23;
    }
    {
        PyObject *tmp_assign_source_24;
        tmp_assign_source_24 = const_int_0;
        assert(var_sel_idx == NULL);
        Py_INCREF(tmp_assign_source_24);
        var_sel_idx = tmp_assign_source_24;
    }
    {
        PyObject *tmp_assign_source_25;
        PyObject *tmp_iter_arg_5;
        CHECK_OBJECT(par_selected_list);
        tmp_iter_arg_5 = par_selected_list;
        tmp_assign_source_25 = MAKE_ITERATOR(tmp_iter_arg_5);
        if (tmp_assign_source_25 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 689;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_5__for_iterator == NULL);
        tmp_for_loop_5__for_iterator = tmp_assign_source_25;
    }
    // Tried code:
    loop_start_5:;
    {
        PyObject *tmp_next_source_5;
        PyObject *tmp_assign_source_26;
        CHECK_OBJECT(tmp_for_loop_5__for_iterator);
        tmp_next_source_5 = tmp_for_loop_5__for_iterator;
        tmp_assign_source_26 = ITERATOR_NEXT(tmp_next_source_5);
        if (tmp_assign_source_26 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_5;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                exception_lineno = 689;
                goto try_except_handler_6;
            }
        }

        {
            PyObject *old = tmp_for_loop_5__iter_value;
            tmp_for_loop_5__iter_value = tmp_assign_source_26;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_27;
        CHECK_OBJECT(tmp_for_loop_5__iter_value);
        tmp_assign_source_27 = tmp_for_loop_5__iter_value;
        {
            PyObject *old = var_x;
            var_x = tmp_assign_source_27;
            Py_INCREF(var_x);
            Py_XDECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_12;
        int tmp_and_left_truth_1;
        nuitka_bool tmp_and_left_value_1;
        nuitka_bool tmp_and_right_value_1;
        PyObject *tmp_compexpr_left_8;
        PyObject *tmp_compexpr_right_8;
        PyObject *tmp_source_name_7;
        PyObject *tmp_compexpr_left_9;
        PyObject *tmp_compexpr_right_9;
        PyObject *tmp_subscribed_name_5;
        PyObject *tmp_subscript_name_5;
        CHECK_OBJECT(var_x);
        tmp_compexpr_left_8 = var_x;
        CHECK_OBJECT(par_ui);
        tmp_source_name_7 = par_ui;
        tmp_compexpr_right_8 = LOOKUP_ATTRIBUTE(tmp_source_name_7, const_str_plain_locked_list);
        if (tmp_compexpr_right_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 690;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto try_except_handler_6;
        }
        tmp_res = PySequence_Contains(tmp_compexpr_right_8, tmp_compexpr_left_8);
        Py_DECREF(tmp_compexpr_right_8);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 690;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto try_except_handler_6;
        }
        tmp_and_left_value_1 = (tmp_res == 1) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_1 = tmp_and_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_1 == 1) {
            goto and_right_1;
        } else {
            goto and_left_1;
        }
        and_right_1:;
        CHECK_OBJECT(par_res_list);
        tmp_subscribed_name_5 = par_res_list;
        CHECK_OBJECT(var_sel_idx);
        tmp_subscript_name_5 = var_sel_idx;
        tmp_compexpr_left_9 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_5, tmp_subscript_name_5);
        if (tmp_compexpr_left_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 690;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto try_except_handler_6;
        }
        tmp_compexpr_right_9 = const_int_0;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_9, tmp_compexpr_right_9);
        Py_DECREF(tmp_compexpr_left_9);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 690;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto try_except_handler_6;
        }
        tmp_and_right_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_condition_result_12 = tmp_and_right_value_1;
        goto and_end_1;
        and_left_1:;
        tmp_condition_result_12 = tmp_and_left_value_1;
        and_end_1:;
        if (tmp_condition_result_12 == NUITKA_BOOL_TRUE) {
            goto branch_yes_12;
        } else {
            goto branch_no_12;
        }
        branch_yes_12:;
        {
            PyObject *tmp_assign_source_28;
            tmp_assign_source_28 = Py_True;
            {
                PyObject *old = var_any_unlocked;
                var_any_unlocked = tmp_assign_source_28;
                Py_INCREF(var_any_unlocked);
                Py_XDECREF(old);
            }

        }
        branch_no_12:;
    }
    {
        PyObject *tmp_assign_source_29;
        PyObject *tmp_left_name_6;
        PyObject *tmp_right_name_6;
        CHECK_OBJECT(var_sel_idx);
        tmp_left_name_6 = var_sel_idx;
        tmp_right_name_6 = const_int_pos_1;
        tmp_assign_source_29 = BINARY_OPERATION_ADD_OBJECT_INT(tmp_left_name_6, tmp_right_name_6);
        assert(!(tmp_assign_source_29 == NULL));
        {
            PyObject *old = var_sel_idx;
            assert(old != NULL);
            var_sel_idx = tmp_assign_source_29;
            Py_DECREF(old);
        }

    }
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 689;
        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
        goto try_except_handler_6;
    }
    goto loop_start_5;
    loop_end_5:;
    goto try_end_5;
    // Exception handler code:
    try_except_handler_6:;
    exception_keeper_type_5 = exception_type;
    exception_keeper_value_5 = exception_value;
    exception_keeper_tb_5 = exception_tb;
    exception_keeper_lineno_5 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_5__iter_value);
    tmp_for_loop_5__iter_value = NULL;

    CHECK_OBJECT((PyObject *)tmp_for_loop_5__for_iterator);
    Py_DECREF(tmp_for_loop_5__for_iterator);
    tmp_for_loop_5__for_iterator = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_5;
    exception_value = exception_keeper_value_5;
    exception_tb = exception_keeper_tb_5;
    exception_lineno = exception_keeper_lineno_5;

    goto frame_exception_exit_1;
    // End of try:
    try_end_5:;
    Py_XDECREF(tmp_for_loop_5__iter_value);
    tmp_for_loop_5__iter_value = NULL;

    CHECK_OBJECT((PyObject *)tmp_for_loop_5__for_iterator);
    Py_DECREF(tmp_for_loop_5__for_iterator);
    tmp_for_loop_5__for_iterator = NULL;

    {
        nuitka_bool tmp_condition_result_13;
        int tmp_and_left_truth_2;
        nuitka_bool tmp_and_left_value_2;
        nuitka_bool tmp_and_right_value_2;
        int tmp_truth_name_4;
        PyObject *tmp_compexpr_left_10;
        PyObject *tmp_compexpr_right_10;
        PyObject *tmp_source_name_8;
        if (var_any_unlocked == NULL) {

            exception_type = PyExc_UnboundLocalError;
            Py_INCREF(exception_type);
            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "any_unlocked");
            exception_tb = NULL;

            exception_lineno = 693;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_truth_name_4 = CHECK_IF_TRUE(var_any_unlocked);
        if (tmp_truth_name_4 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 693;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_2 = tmp_truth_name_4 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_2 = tmp_and_left_value_2 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_2 == 1) {
            goto and_right_2;
        } else {
            goto and_left_2;
        }
        and_right_2:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_8 = par_ui;
        tmp_compexpr_left_10 = LOOKUP_ATTRIBUTE(tmp_source_name_8, const_str_plain_DEV_OS);
        if (tmp_compexpr_left_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 693;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_10 = const_str_plain_Windows;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_10, tmp_compexpr_right_10);
        Py_DECREF(tmp_compexpr_left_10);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 693;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_2 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_condition_result_13 = tmp_and_right_value_2;
        goto and_end_2;
        and_left_2:;
        tmp_condition_result_13 = tmp_and_left_value_2;
        and_end_2:;
        if (tmp_condition_result_13 == NUITKA_BOOL_TRUE) {
            goto branch_yes_13;
        } else {
            goto branch_no_13;
        }
        branch_yes_13:;
        {
            PyObject *tmp_assign_source_30;
            PyObject *tmp_len_arg_3;
            PyObject *tmp_source_name_9;
            CHECK_OBJECT(par_ui);
            tmp_source_name_9 = par_ui;
            tmp_len_arg_3 = LOOKUP_ATTRIBUTE(tmp_source_name_9, const_str_plain_devs_list);
            if (tmp_len_arg_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 694;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_assign_source_30 = BUILTIN_LEN(tmp_len_arg_3);
            Py_DECREF(tmp_len_arg_3);
            if (tmp_assign_source_30 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 694;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(var_dl_len == NULL);
            var_dl_len = tmp_assign_source_30;
        }
        {
            PyObject *tmp_assign_source_31;
            PyObject *tmp_iter_arg_6;
            PyObject *tmp_range_arg_2;
            CHECK_OBJECT(var_dl_len);
            tmp_range_arg_2 = var_dl_len;
            tmp_iter_arg_6 = BUILTIN_RANGE(tmp_range_arg_2);
            if (tmp_iter_arg_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 695;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_assign_source_31 = MAKE_ITERATOR(tmp_iter_arg_6);
            Py_DECREF(tmp_iter_arg_6);
            if (tmp_assign_source_31 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 695;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_6__for_iterator == NULL);
            tmp_for_loop_6__for_iterator = tmp_assign_source_31;
        }
        // Tried code:
        loop_start_6:;
        {
            PyObject *tmp_next_source_6;
            PyObject *tmp_assign_source_32;
            CHECK_OBJECT(tmp_for_loop_6__for_iterator);
            tmp_next_source_6 = tmp_for_loop_6__for_iterator;
            tmp_assign_source_32 = ITERATOR_NEXT(tmp_next_source_6);
            if (tmp_assign_source_32 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_6;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    exception_lineno = 695;
                    goto try_except_handler_7;
                }
            }

            {
                PyObject *old = tmp_for_loop_6__iter_value;
                tmp_for_loop_6__iter_value = tmp_assign_source_32;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_33;
            CHECK_OBJECT(tmp_for_loop_6__iter_value);
            tmp_assign_source_33 = tmp_for_loop_6__iter_value;
            {
                PyObject *old = var_i;
                var_i = tmp_assign_source_33;
                Py_INCREF(var_i);
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_called_instance_9;
            PyObject *tmp_mvar_value_2;
            PyObject *tmp_call_result_9;
            PyObject *tmp_args_element_name_3;
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_runop);

            if (unlikely(tmp_mvar_value_2 == NULL)) {
                tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runop);
            }

            if (tmp_mvar_value_2 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 490 ], 34, 0);
                exception_tb = NULL;

                exception_lineno = 696;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }

            tmp_called_instance_9 = tmp_mvar_value_2;
            CHECK_OBJECT(var_i);
            tmp_args_element_name_3 = var_i;
            frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 696;
            {
                PyObject *call_args[] = {tmp_args_element_name_3};
                tmp_call_result_9 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_9, const_str_plain_prelock, call_args);
            }

            if (tmp_call_result_9 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 696;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }
            Py_DECREF(tmp_call_result_9);
        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 695;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto try_except_handler_7;
        }
        goto loop_start_6;
        loop_end_6:;
        goto try_end_6;
        // Exception handler code:
        try_except_handler_7:;
        exception_keeper_type_6 = exception_type;
        exception_keeper_value_6 = exception_value;
        exception_keeper_tb_6 = exception_tb;
        exception_keeper_lineno_6 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_6__iter_value);
        tmp_for_loop_6__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_6__for_iterator);
        Py_DECREF(tmp_for_loop_6__for_iterator);
        tmp_for_loop_6__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_6;
        exception_value = exception_keeper_value_6;
        exception_tb = exception_keeper_tb_6;
        exception_lineno = exception_keeper_lineno_6;

        goto frame_exception_exit_1;
        // End of try:
        try_end_6:;
        Py_XDECREF(tmp_for_loop_6__iter_value);
        tmp_for_loop_6__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_6__for_iterator);
        Py_DECREF(tmp_for_loop_6__for_iterator);
        tmp_for_loop_6__for_iterator = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_34;
            PyObject *tmp_open_filename_1;
            PyObject *tmp_source_name_10;
            PyObject *tmp_mvar_value_3;
            PyObject *tmp_open_mode_1;
            tmp_mvar_value_3 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_os);

            if (unlikely(tmp_mvar_value_3 == NULL)) {
                tmp_mvar_value_3 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
            }

            if (tmp_mvar_value_3 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                exception_tb = NULL;

                exception_lineno = 697;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_8;
            }

            tmp_source_name_10 = tmp_mvar_value_3;
            tmp_open_filename_1 = LOOKUP_ATTRIBUTE(tmp_source_name_10, const_str_plain_devnull);
            if (tmp_open_filename_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 697;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_8;
            }
            tmp_open_mode_1 = const_str_plain_w;
            tmp_assign_source_34 = BUILTIN_OPEN(tmp_open_filename_1, tmp_open_mode_1, NULL);
            Py_DECREF(tmp_open_filename_1);
            if (tmp_assign_source_34 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 697;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_8;
            }
            assert(tmp_with_1__source == NULL);
            tmp_with_1__source = tmp_assign_source_34;
        }
        {
            PyObject *tmp_assign_source_35;
            PyObject *tmp_source_name_11;
            CHECK_OBJECT(tmp_with_1__source);
            tmp_source_name_11 = tmp_with_1__source;
            tmp_assign_source_35 = LOOKUP_SPECIAL(tmp_source_name_11, const_str_plain___exit__);
            if (tmp_assign_source_35 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 697;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_8;
            }
            assert(tmp_with_1__exit == NULL);
            tmp_with_1__exit = tmp_assign_source_35;
        }
        {
            PyObject *tmp_assign_source_36;
            PyObject *tmp_called_name_2;
            PyObject *tmp_source_name_12;
            CHECK_OBJECT(tmp_with_1__source);
            tmp_source_name_12 = tmp_with_1__source;
            tmp_called_name_2 = LOOKUP_SPECIAL(tmp_source_name_12, const_str_plain___enter__);
            if (tmp_called_name_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 697;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_8;
            }
            frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 697;
            tmp_assign_source_36 = CALL_FUNCTION_NO_ARGS(tmp_called_name_2);
            Py_DECREF(tmp_called_name_2);
            if (tmp_assign_source_36 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 697;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_8;
            }
            assert(tmp_with_1__enter == NULL);
            tmp_with_1__enter = tmp_assign_source_36;
        }
        {
            nuitka_bool tmp_assign_source_37;
            tmp_assign_source_37 = NUITKA_BOOL_TRUE;
            tmp_with_1__indicator = tmp_assign_source_37;
        }
        {
            PyObject *tmp_assign_source_38;
            CHECK_OBJECT(tmp_with_1__enter);
            tmp_assign_source_38 = tmp_with_1__enter;
            assert(var_pipe == NULL);
            Py_INCREF(tmp_assign_source_38);
            var_pipe = tmp_assign_source_38;
        }
        // Tried code:
        // Tried code:
        {
            PyObject *tmp_assign_source_39;
            PyObject *tmp_open_filename_2;
            PyObject *tmp_open_mode_2;
            tmp_open_filename_2 = const_str_digest_2d85cb53b7a3787dd8780d68a265e952;
            tmp_open_mode_2 = const_str_plain_w;
            tmp_assign_source_39 = BUILTIN_OPEN(tmp_open_filename_2, tmp_open_mode_2, NULL);
            if (tmp_assign_source_39 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 698;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_10;
            }
            assert(var_f == NULL);
            var_f = tmp_assign_source_39;
        }
        {
            PyObject *tmp_called_instance_10;
            PyObject *tmp_call_result_10;
            CHECK_OBJECT(var_f);
            tmp_called_instance_10 = var_f;
            frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 699;
            tmp_call_result_10 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_10, const_str_plain_write, &PyTuple_GET_ITEM(const_tuple_str_plain_rescan_tuple, 0));

            if (tmp_call_result_10 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 699;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_10;
            }
            Py_DECREF(tmp_call_result_10);
        }
        {
            PyObject *tmp_called_instance_11;
            PyObject *tmp_call_result_11;
            CHECK_OBJECT(var_f);
            tmp_called_instance_11 = var_f;
            frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 700;
            tmp_call_result_11 = CALL_METHOD_NO_ARGS(tmp_called_instance_11, const_str_plain_close);
            if (tmp_call_result_11 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 700;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_10;
            }
            Py_DECREF(tmp_call_result_11);
        }
        {
            PyObject *tmp_called_name_3;
            PyObject *tmp_source_name_13;
            PyObject *tmp_mvar_value_4;
            PyObject *tmp_call_result_12;
            PyObject *tmp_args_name_1;
            PyObject *tmp_kw_name_1;
            PyObject *tmp_dict_key_1;
            PyObject *tmp_dict_value_1;
            tmp_mvar_value_4 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_subprocess);

            if (unlikely(tmp_mvar_value_4 == NULL)) {
                tmp_mvar_value_4 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_subprocess);
            }

            if (tmp_mvar_value_4 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 835 ], 39, 0);
                exception_tb = NULL;

                exception_lineno = 701;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_10;
            }

            tmp_source_name_13 = tmp_mvar_value_4;
            tmp_called_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_13, const_str_plain_call);
            if (tmp_called_name_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 701;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_10;
            }
            tmp_args_name_1 = DEEP_COPY(const_tuple_list_02be30ce96f2e63d8ca972f37079a88b_list_tuple);
            CHECK_OBJECT(var_pipe);
            tmp_dict_value_1 = var_pipe;
            tmp_dict_key_1 = const_str_plain_stdout;
            tmp_kw_name_1 = _PyDict_NewPresized( 1 );
            tmp_res = PyDict_SetItem(tmp_kw_name_1, tmp_dict_key_1, tmp_dict_value_1);
            assert(!(tmp_res != 0));
            frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 701;
            tmp_call_result_12 = CALL_FUNCTION(tmp_called_name_3, tmp_args_name_1, tmp_kw_name_1);
            Py_DECREF(tmp_called_name_3);
            Py_DECREF(tmp_args_name_1);
            Py_DECREF(tmp_kw_name_1);
            if (tmp_call_result_12 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 701;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_10;
            }
            Py_DECREF(tmp_call_result_12);
        }
        {
            PyObject *tmp_called_instance_12;
            PyObject *tmp_mvar_value_5;
            PyObject *tmp_call_result_13;
            tmp_mvar_value_5 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_os);

            if (unlikely(tmp_mvar_value_5 == NULL)) {
                tmp_mvar_value_5 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
            }

            if (tmp_mvar_value_5 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                exception_tb = NULL;

                exception_lineno = 702;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_10;
            }

            tmp_called_instance_12 = tmp_mvar_value_5;
            frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 702;
            tmp_call_result_13 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_12, const_str_plain_remove, &PyTuple_GET_ITEM(const_tuple_str_digest_2d85cb53b7a3787dd8780d68a265e952_tuple, 0));

            if (tmp_call_result_13 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 702;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_10;
            }
            Py_DECREF(tmp_call_result_13);
        }
        goto try_end_7;
        // Exception handler code:
        try_except_handler_10:;
        exception_keeper_type_7 = exception_type;
        exception_keeper_value_7 = exception_value;
        exception_keeper_tb_7 = exception_tb;
        exception_keeper_lineno_7 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Preserve existing published exception.
        PRESERVE_FRAME_EXCEPTION(frame_c55d069b0e2db5de0f9b503ec621c80b);
        if (exception_keeper_tb_7 == NULL) {
            exception_keeper_tb_7 = MAKE_TRACEBACK(frame_c55d069b0e2db5de0f9b503ec621c80b, exception_keeper_lineno_7);
        } else if (exception_keeper_lineno_7 != 0) {
            exception_keeper_tb_7 = ADD_TRACEBACK(exception_keeper_tb_7, frame_c55d069b0e2db5de0f9b503ec621c80b, exception_keeper_lineno_7);
        }

        NORMALIZE_EXCEPTION(&exception_keeper_type_7, &exception_keeper_value_7, &exception_keeper_tb_7);
        PUBLISH_EXCEPTION(&exception_keeper_type_7, &exception_keeper_value_7, &exception_keeper_tb_7);
        {
            nuitka_bool tmp_condition_result_14;
            PyObject *tmp_compexpr_left_11;
            PyObject *tmp_compexpr_right_11;
            tmp_compexpr_left_11 = EXC_TYPE(PyThreadState_GET());
            tmp_compexpr_right_11 = PyExc_BaseException;
            tmp_res = EXCEPTION_MATCH_BOOL(tmp_compexpr_left_11, tmp_compexpr_right_11);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 697;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            tmp_condition_result_14 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_14 == NUITKA_BOOL_TRUE) {
                goto branch_yes_14;
            } else {
                goto branch_no_14;
            }
            branch_yes_14:;
            {
                nuitka_bool tmp_assign_source_40;
                tmp_assign_source_40 = NUITKA_BOOL_FALSE;
                tmp_with_1__indicator = tmp_assign_source_40;
            }
            {
                nuitka_bool tmp_condition_result_15;
                PyObject *tmp_operand_name_2;
                PyObject *tmp_called_name_4;
                PyObject *tmp_args_element_name_4;
                PyObject *tmp_args_element_name_5;
                PyObject *tmp_args_element_name_6;
                CHECK_OBJECT(tmp_with_1__exit);
                tmp_called_name_4 = tmp_with_1__exit;
                tmp_args_element_name_4 = EXC_TYPE(PyThreadState_GET());
                tmp_args_element_name_5 = EXC_VALUE(PyThreadState_GET());
                tmp_args_element_name_6 = EXC_TRACEBACK(PyThreadState_GET());
                frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 702;
                {
                    PyObject *call_args[] = {tmp_args_element_name_4, tmp_args_element_name_5, tmp_args_element_name_6};
                    tmp_operand_name_2 = CALL_FUNCTION_WITH_ARGS3(tmp_called_name_4, call_args);
                }

                if (tmp_operand_name_2 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 702;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_9;
                }
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_2);
                Py_DECREF(tmp_operand_name_2);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 702;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_9;
                }
                tmp_condition_result_15 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_15 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_15;
                } else {
                    goto branch_no_15;
                }
                branch_yes_15:;
                tmp_result = RERAISE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                if (unlikely(tmp_result == false)) {
                    exception_lineno = 702;
                }

                if (exception_tb && exception_tb->tb_frame == &frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame) frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = exception_tb->tb_lineno;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
                branch_no_15:;
            }
            goto branch_end_14;
            branch_no_14:;
            tmp_result = RERAISE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            if (unlikely(tmp_result == false)) {
                exception_lineno = 697;
            }

            if (exception_tb && exception_tb->tb_frame == &frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame) frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = exception_tb->tb_lineno;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto try_except_handler_9;
            branch_end_14:;
        }
        goto try_end_7;
        // exception handler codes exits in all cases
        NUITKA_CANNOT_GET_HERE(cleanop$$$function_5_unlockPBA_cleanup);
        return NULL;
        // End of try:
        try_end_7:;
        goto try_end_8;
        // Exception handler code:
        try_except_handler_9:;
        exception_keeper_type_8 = exception_type;
        exception_keeper_value_8 = exception_value;
        exception_keeper_tb_8 = exception_tb;
        exception_keeper_lineno_8 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        {
            nuitka_bool tmp_condition_result_16;
            nuitka_bool tmp_compexpr_left_12;
            nuitka_bool tmp_compexpr_right_12;
            assert(tmp_with_1__indicator != NUITKA_BOOL_UNASSIGNED);
            tmp_compexpr_left_12 = tmp_with_1__indicator;
            tmp_compexpr_right_12 = NUITKA_BOOL_TRUE;
            tmp_condition_result_16 = (tmp_compexpr_left_12 == tmp_compexpr_right_12) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_16 == NUITKA_BOOL_TRUE) {
                goto branch_yes_16;
            } else {
                goto branch_no_16;
            }
            branch_yes_16:;
            {
                PyObject *tmp_called_name_5;
                PyObject *tmp_call_result_14;
                CHECK_OBJECT(tmp_with_1__exit);
                tmp_called_name_5 = tmp_with_1__exit;
                frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 702;
                tmp_call_result_14 = CALL_FUNCTION_WITH_ARGS3(tmp_called_name_5, &PyTuple_GET_ITEM(const_tuple_none_none_none_tuple, 0));

                if (tmp_call_result_14 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);

                    Py_DECREF(exception_keeper_type_8);
                    Py_XDECREF(exception_keeper_value_8);
                    Py_XDECREF(exception_keeper_tb_8);

                    exception_lineno = 702;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_8;
                }
                Py_DECREF(tmp_call_result_14);
            }
            branch_no_16:;
        }
        // Re-raise.
        exception_type = exception_keeper_type_8;
        exception_value = exception_keeper_value_8;
        exception_tb = exception_keeper_tb_8;
        exception_lineno = exception_keeper_lineno_8;

        goto try_except_handler_8;
        // End of try:
        try_end_8:;
        {
            nuitka_bool tmp_condition_result_17;
            nuitka_bool tmp_compexpr_left_13;
            nuitka_bool tmp_compexpr_right_13;
            assert(tmp_with_1__indicator != NUITKA_BOOL_UNASSIGNED);
            tmp_compexpr_left_13 = tmp_with_1__indicator;
            tmp_compexpr_right_13 = NUITKA_BOOL_TRUE;
            tmp_condition_result_17 = (tmp_compexpr_left_13 == tmp_compexpr_right_13) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_17 == NUITKA_BOOL_TRUE) {
                goto branch_yes_17;
            } else {
                goto branch_no_17;
            }
            branch_yes_17:;
            {
                PyObject *tmp_called_name_6;
                PyObject *tmp_call_result_15;
                CHECK_OBJECT(tmp_with_1__exit);
                tmp_called_name_6 = tmp_with_1__exit;
                frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 702;
                tmp_call_result_15 = CALL_FUNCTION_WITH_ARGS3(tmp_called_name_6, &PyTuple_GET_ITEM(const_tuple_none_none_none_tuple, 0));

                if (tmp_call_result_15 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 702;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_8;
                }
                Py_DECREF(tmp_call_result_15);
            }
            branch_no_17:;
        }
        goto try_end_9;
        // Exception handler code:
        try_except_handler_8:;
        exception_keeper_type_9 = exception_type;
        exception_keeper_value_9 = exception_value;
        exception_keeper_tb_9 = exception_tb;
        exception_keeper_lineno_9 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_with_1__source);
        tmp_with_1__source = NULL;

        Py_XDECREF(tmp_with_1__enter);
        tmp_with_1__enter = NULL;

        Py_XDECREF(tmp_with_1__exit);
        tmp_with_1__exit = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_9;
        exception_value = exception_keeper_value_9;
        exception_tb = exception_keeper_tb_9;
        exception_lineno = exception_keeper_lineno_9;

        goto frame_exception_exit_1;
        // End of try:
        try_end_9:;
        CHECK_OBJECT((PyObject *)tmp_with_1__source);
        Py_DECREF(tmp_with_1__source);
        tmp_with_1__source = NULL;

        CHECK_OBJECT((PyObject *)tmp_with_1__enter);
        Py_DECREF(tmp_with_1__enter);
        tmp_with_1__enter = NULL;

        CHECK_OBJECT((PyObject *)tmp_with_1__exit);
        Py_DECREF(tmp_with_1__exit);
        tmp_with_1__exit = NULL;

        {
            PyObject *tmp_assign_source_41;
            PyObject *tmp_iter_arg_7;
            PyObject *tmp_range_arg_3;
            CHECK_OBJECT(var_dl_len);
            tmp_range_arg_3 = var_dl_len;
            tmp_iter_arg_7 = BUILTIN_RANGE(tmp_range_arg_3);
            if (tmp_iter_arg_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 703;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_assign_source_41 = MAKE_ITERATOR(tmp_iter_arg_7);
            Py_DECREF(tmp_iter_arg_7);
            if (tmp_assign_source_41 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 703;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_7__for_iterator == NULL);
            tmp_for_loop_7__for_iterator = tmp_assign_source_41;
        }
        // Tried code:
        loop_start_7:;
        {
            PyObject *tmp_next_source_7;
            PyObject *tmp_assign_source_42;
            CHECK_OBJECT(tmp_for_loop_7__for_iterator);
            tmp_next_source_7 = tmp_for_loop_7__for_iterator;
            tmp_assign_source_42 = ITERATOR_NEXT(tmp_next_source_7);
            if (tmp_assign_source_42 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_7;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    exception_lineno = 703;
                    goto try_except_handler_11;
                }
            }

            {
                PyObject *old = tmp_for_loop_7__iter_value;
                tmp_for_loop_7__iter_value = tmp_assign_source_42;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_43;
            CHECK_OBJECT(tmp_for_loop_7__iter_value);
            tmp_assign_source_43 = tmp_for_loop_7__iter_value;
            {
                PyObject *old = var_i;
                var_i = tmp_assign_source_43;
                Py_INCREF(var_i);
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_called_instance_13;
            PyObject *tmp_mvar_value_6;
            PyObject *tmp_call_result_16;
            PyObject *tmp_args_element_name_7;
            tmp_mvar_value_6 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_runop);

            if (unlikely(tmp_mvar_value_6 == NULL)) {
                tmp_mvar_value_6 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runop);
            }

            if (tmp_mvar_value_6 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 490 ], 34, 0);
                exception_tb = NULL;

                exception_lineno = 704;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_11;
            }

            tmp_called_instance_13 = tmp_mvar_value_6;
            CHECK_OBJECT(var_i);
            tmp_args_element_name_7 = var_i;
            frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 704;
            {
                PyObject *call_args[] = {tmp_args_element_name_7};
                tmp_call_result_16 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_13, const_str_plain_postlock, call_args);
            }

            if (tmp_call_result_16 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 704;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_11;
            }
            Py_DECREF(tmp_call_result_16);
        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 703;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto try_except_handler_11;
        }
        goto loop_start_7;
        loop_end_7:;
        goto try_end_10;
        // Exception handler code:
        try_except_handler_11:;
        exception_keeper_type_10 = exception_type;
        exception_keeper_value_10 = exception_value;
        exception_keeper_tb_10 = exception_tb;
        exception_keeper_lineno_10 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_7__iter_value);
        tmp_for_loop_7__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_7__for_iterator);
        Py_DECREF(tmp_for_loop_7__for_iterator);
        tmp_for_loop_7__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_10;
        exception_value = exception_keeper_value_10;
        exception_tb = exception_keeper_tb_10;
        exception_lineno = exception_keeper_lineno_10;

        goto frame_exception_exit_1;
        // End of try:
        try_end_10:;
        Py_XDECREF(tmp_for_loop_7__iter_value);
        tmp_for_loop_7__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_7__for_iterator);
        Py_DECREF(tmp_for_loop_7__for_iterator);
        tmp_for_loop_7__for_iterator = NULL;

        branch_no_13:;
    }
    {
        nuitka_bool tmp_condition_result_18;
        PyObject *tmp_compexpr_left_14;
        PyObject *tmp_compexpr_right_14;
        CHECK_OBJECT(var_res_sum);
        tmp_compexpr_left_14 = var_res_sum;
        tmp_compexpr_right_14 = const_int_0;
        tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_INT(tmp_compexpr_left_14, tmp_compexpr_right_14);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 706;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_18 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_18 == NUITKA_BOOL_TRUE) {
            goto branch_yes_18;
        } else {
            goto branch_no_18;
        }
        branch_yes_18:;
        {
            PyObject *tmp_assign_source_44;
            tmp_assign_source_44 = Py_True;
            assert(var_start_f == NULL);
            Py_INCREF(tmp_assign_source_44);
            var_start_f = tmp_assign_source_44;
        }
        {
            PyObject *tmp_assign_source_45;
            tmp_assign_source_45 = Py_True;
            assert(var_start_p == NULL);
            Py_INCREF(tmp_assign_source_45);
            var_start_p = tmp_assign_source_45;
        }
        {
            PyObject *tmp_assign_source_46;
            tmp_assign_source_46 = Py_True;
            assert(var_start_alo == NULL);
            Py_INCREF(tmp_assign_source_46);
            var_start_alo = tmp_assign_source_46;
        }
        {
            PyObject *tmp_assign_source_47;
            tmp_assign_source_47 = Py_True;
            assert(var_start_to == NULL);
            Py_INCREF(tmp_assign_source_47);
            var_start_to = tmp_assign_source_47;
        }
        {
            PyObject *tmp_assign_source_48;
            tmp_assign_source_48 = Py_True;
            assert(var_start_spb == NULL);
            Py_INCREF(tmp_assign_source_48);
            var_start_spb = tmp_assign_source_48;
        }
        {
            PyObject *tmp_assign_source_49;
            tmp_assign_source_49 = Py_True;
            assert(var_start_na == NULL);
            Py_INCREF(tmp_assign_source_49);
            var_start_na = tmp_assign_source_49;
        }
        {
            PyObject *tmp_assign_source_50;
            tmp_assign_source_50 = Py_True;
            assert(var_start_miss == NULL);
            Py_INCREF(tmp_assign_source_50);
            var_start_miss = tmp_assign_source_50;
        }
        {
            PyObject *tmp_assign_source_51;
            tmp_assign_source_51 = const_str_empty;
            assert(var_list_f == NULL);
            Py_INCREF(tmp_assign_source_51);
            var_list_f = tmp_assign_source_51;
        }
        {
            PyObject *tmp_assign_source_52;
            tmp_assign_source_52 = const_str_empty;
            assert(var_list_p == NULL);
            Py_INCREF(tmp_assign_source_52);
            var_list_p = tmp_assign_source_52;
        }
        {
            PyObject *tmp_assign_source_53;
            tmp_assign_source_53 = const_str_empty;
            assert(var_list_alo == NULL);
            Py_INCREF(tmp_assign_source_53);
            var_list_alo = tmp_assign_source_53;
        }
        {
            PyObject *tmp_assign_source_54;
            tmp_assign_source_54 = const_str_empty;
            assert(var_list_to == NULL);
            Py_INCREF(tmp_assign_source_54);
            var_list_to = tmp_assign_source_54;
        }
        {
            PyObject *tmp_assign_source_55;
            tmp_assign_source_55 = const_str_empty;
            assert(var_list_spb == NULL);
            Py_INCREF(tmp_assign_source_55);
            var_list_spb = tmp_assign_source_55;
        }
        {
            PyObject *tmp_assign_source_56;
            tmp_assign_source_56 = const_str_empty;
            assert(var_list_na == NULL);
            Py_INCREF(tmp_assign_source_56);
            var_list_na = tmp_assign_source_56;
        }
        {
            PyObject *tmp_assign_source_57;
            tmp_assign_source_57 = const_str_empty;
            assert(var_list_miss == NULL);
            Py_INCREF(tmp_assign_source_57);
            var_list_miss = tmp_assign_source_57;
        }
        {
            PyObject *tmp_assign_source_58;
            tmp_assign_source_58 = const_int_0;
            assert(var_count == NULL);
            Py_INCREF(tmp_assign_source_58);
            var_count = tmp_assign_source_58;
        }
        {
            PyObject *tmp_assign_source_59;
            tmp_assign_source_59 = const_int_0;
            assert(var_count_f == NULL);
            Py_INCREF(tmp_assign_source_59);
            var_count_f = tmp_assign_source_59;
        }
        {
            PyObject *tmp_assign_source_60;
            tmp_assign_source_60 = const_int_neg_1;
            assert(var_last_f == NULL);
            Py_INCREF(tmp_assign_source_60);
            var_last_f = tmp_assign_source_60;
        }
        {
            PyObject *tmp_assign_source_61;
            PyObject *tmp_iter_arg_8;
            CHECK_OBJECT(par_selected_list);
            tmp_iter_arg_8 = par_selected_list;
            tmp_assign_source_61 = MAKE_ITERATOR(tmp_iter_arg_8);
            if (tmp_assign_source_61 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 724;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_8__for_iterator == NULL);
            tmp_for_loop_8__for_iterator = tmp_assign_source_61;
        }
        // Tried code:
        loop_start_8:;
        {
            PyObject *tmp_next_source_8;
            PyObject *tmp_assign_source_62;
            CHECK_OBJECT(tmp_for_loop_8__for_iterator);
            tmp_next_source_8 = tmp_for_loop_8__for_iterator;
            tmp_assign_source_62 = ITERATOR_NEXT(tmp_next_source_8);
            if (tmp_assign_source_62 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_8;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    exception_lineno = 724;
                    goto try_except_handler_12;
                }
            }

            {
                PyObject *old = tmp_for_loop_8__iter_value;
                tmp_for_loop_8__iter_value = tmp_assign_source_62;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_63;
            CHECK_OBJECT(tmp_for_loop_8__iter_value);
            tmp_assign_source_63 = tmp_for_loop_8__iter_value;
            {
                PyObject *old = var_y;
                var_y = tmp_assign_source_63;
                Py_INCREF(var_y);
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assattr_name_5;
            PyObject *tmp_subscribed_name_6;
            PyObject *tmp_source_name_14;
            PyObject *tmp_subscript_name_6;
            PyObject *tmp_assattr_target_5;
            CHECK_OBJECT(par_ui);
            tmp_source_name_14 = par_ui;
            tmp_subscribed_name_6 = LOOKUP_ATTRIBUTE(tmp_source_name_14, const_str_plain_devs_list);
            if (tmp_subscribed_name_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 725;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }
            CHECK_OBJECT(var_y);
            tmp_subscript_name_6 = var_y;
            tmp_assattr_name_5 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_6, tmp_subscript_name_6);
            Py_DECREF(tmp_subscribed_name_6);
            if (tmp_assattr_name_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 725;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }
            CHECK_OBJECT(par_ui);
            tmp_assattr_target_5 = par_ui;
            tmp_result = SET_ATTRIBUTE(tmp_assattr_target_5, const_str_plain_devname, tmp_assattr_name_5);
            Py_DECREF(tmp_assattr_name_5);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 725;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }
        }
        {
            nuitka_bool tmp_condition_result_19;
            PyObject *tmp_compexpr_left_15;
            PyObject *tmp_compexpr_right_15;
            PyObject *tmp_subscribed_name_7;
            PyObject *tmp_subscript_name_7;
            CHECK_OBJECT(par_res_list);
            tmp_subscribed_name_7 = par_res_list;
            CHECK_OBJECT(var_count);
            tmp_subscript_name_7 = var_count;
            tmp_compexpr_left_15 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_7, tmp_subscript_name_7);
            if (tmp_compexpr_left_15 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 726;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }
            tmp_compexpr_right_15 = const_int_0;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_15, tmp_compexpr_right_15);
            Py_DECREF(tmp_compexpr_left_15);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 726;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }
            tmp_condition_result_19 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_19 == NUITKA_BOOL_TRUE) {
                goto branch_yes_19;
            } else {
                goto branch_no_19;
            }
            branch_yes_19:;
            {
                PyObject *tmp_called_instance_14;
                PyObject *tmp_mvar_value_7;
                PyObject *tmp_call_result_17;
                PyObject *tmp_args_element_name_8;
                PyObject *tmp_args_element_name_9;
                PyObject *tmp_args_element_name_10;
                tmp_mvar_value_7 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_dialogs);

                if (unlikely(tmp_mvar_value_7 == NULL)) {
                    tmp_mvar_value_7 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_dialogs);
                }

                if (tmp_mvar_value_7 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 418 ], 36, 0);
                    exception_tb = NULL;

                    exception_lineno = 727;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_12;
                }

                tmp_called_instance_14 = tmp_mvar_value_7;
                tmp_args_element_name_8 = Py_None;
                CHECK_OBJECT(par_ui);
                tmp_args_element_name_9 = par_ui;
                tmp_args_element_name_10 = const_int_pos_1;
                frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 727;
                {
                    PyObject *call_args[] = {tmp_args_element_name_8, tmp_args_element_name_9, tmp_args_element_name_10};
                    tmp_call_result_17 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_14, const_str_plain_query, call_args);
                }

                if (tmp_call_result_17 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 727;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_12;
                }
                Py_DECREF(tmp_call_result_17);
            }
            {
                nuitka_bool tmp_condition_result_20;
                PyObject *tmp_operand_name_3;
                if (var_start_p == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_p");
                    exception_tb = NULL;

                    exception_lineno = 728;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_12;
                }

                tmp_operand_name_3 = var_start_p;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_3);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 728;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_12;
                }
                tmp_condition_result_20 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_20 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_20;
                } else {
                    goto branch_no_20;
                }
                branch_yes_20:;
                {
                    PyObject *tmp_assign_source_64;
                    PyObject *tmp_left_name_7;
                    PyObject *tmp_right_name_7;
                    if (var_list_p == NULL) {

                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p");
                        exception_tb = NULL;

                        exception_lineno = 729;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }

                    tmp_left_name_7 = var_list_p;
                    tmp_right_name_7 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                    tmp_assign_source_64 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_7, tmp_right_name_7);
                    if (tmp_assign_source_64 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 729;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }
                    {
                        PyObject *old = var_list_p;
                        var_list_p = tmp_assign_source_64;
                        Py_XDECREF(old);
                    }

                }
                goto branch_end_20;
                branch_no_20:;
                {
                    PyObject *tmp_assign_source_65;
                    tmp_assign_source_65 = Py_False;
                    {
                        PyObject *old = var_start_p;
                        var_start_p = tmp_assign_source_65;
                        Py_INCREF(var_start_p);
                        Py_XDECREF(old);
                    }

                }
                branch_end_20:;
            }
            {
                PyObject *tmp_assign_source_66;
                PyObject *tmp_left_name_8;
                PyObject *tmp_right_name_8;
                PyObject *tmp_subscribed_name_8;
                PyObject *tmp_source_name_15;
                PyObject *tmp_subscript_name_8;
                if (var_list_p == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p");
                    exception_tb = NULL;

                    exception_lineno = 732;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_12;
                }

                tmp_left_name_8 = var_list_p;
                CHECK_OBJECT(par_ui);
                tmp_source_name_15 = par_ui;
                tmp_subscribed_name_8 = LOOKUP_ATTRIBUTE(tmp_source_name_15, const_str_plain_devs_list);
                if (tmp_subscribed_name_8 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 732;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_12;
                }
                CHECK_OBJECT(var_y);
                tmp_subscript_name_8 = var_y;
                tmp_right_name_8 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_8, tmp_subscript_name_8);
                Py_DECREF(tmp_subscribed_name_8);
                if (tmp_right_name_8 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 732;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_12;
                }
                tmp_assign_source_66 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_8, tmp_right_name_8);
                Py_DECREF(tmp_right_name_8);
                if (tmp_assign_source_66 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 732;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_12;
                }
                {
                    PyObject *old = var_list_p;
                    var_list_p = tmp_assign_source_66;
                    Py_XDECREF(old);
                }

            }
            {
                nuitka_bool tmp_condition_result_21;
                PyObject *tmp_compexpr_left_16;
                PyObject *tmp_compexpr_right_16;
                PyObject *tmp_source_name_16;
                CHECK_OBJECT(par_ui);
                tmp_source_name_16 = par_ui;
                tmp_compexpr_left_16 = LOOKUP_ATTRIBUTE(tmp_source_name_16, const_str_plain_DEV_OS);
                if (tmp_compexpr_left_16 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 733;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_12;
                }
                tmp_compexpr_right_16 = const_str_plain_Windows;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_16, tmp_compexpr_right_16);
                Py_DECREF(tmp_compexpr_left_16);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 733;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_12;
                }
                tmp_condition_result_21 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_21 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_21;
                } else {
                    goto branch_no_21;
                }
                branch_yes_21:;
                {
                    PyObject *tmp_called_instance_15;
                    PyObject *tmp_mvar_value_8;
                    PyObject *tmp_call_result_18;
                    PyObject *tmp_args_element_name_11;
                    PyObject *tmp_args_element_name_12;
                    tmp_mvar_value_8 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_background);

                    if (unlikely(tmp_mvar_value_8 == NULL)) {
                        tmp_mvar_value_8 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_background);
                    }

                    if (tmp_mvar_value_8 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 379 ], 39, 0);
                        exception_tb = NULL;

                        exception_lineno = 734;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }

                    tmp_called_instance_15 = tmp_mvar_value_8;
                    CHECK_OBJECT(par_ui);
                    tmp_args_element_name_11 = par_ui;
                    CHECK_OBJECT(var_y);
                    tmp_args_element_name_12 = var_y;
                    frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 734;
                    {
                        PyObject *call_args[] = {tmp_args_element_name_11, tmp_args_element_name_12};
                        tmp_call_result_18 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_15, const_str_plain_remount, call_args);
                    }

                    if (tmp_call_result_18 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 734;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }
                    Py_DECREF(tmp_call_result_18);
                }
                branch_no_21:;
            }
            {
                PyObject *tmp_ass_subvalue_4;
                PyObject *tmp_ass_subscribed_4;
                PyObject *tmp_source_name_17;
                PyObject *tmp_ass_subscript_4;
                tmp_ass_subvalue_4 = const_str_plain_Unlocked;
                CHECK_OBJECT(par_ui);
                tmp_source_name_17 = par_ui;
                tmp_ass_subscribed_4 = LOOKUP_ATTRIBUTE(tmp_source_name_17, const_str_plain_lockstatus_list);
                if (tmp_ass_subscribed_4 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 735;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_12;
                }
                CHECK_OBJECT(var_y);
                tmp_ass_subscript_4 = var_y;
                tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_4, tmp_ass_subscript_4, tmp_ass_subvalue_4);
                Py_DECREF(tmp_ass_subscribed_4);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 735;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_12;
                }
            }
            {
                PyObject *tmp_called_instance_16;
                PyObject *tmp_call_result_19;
                PyObject *tmp_args_element_name_13;
                PyObject *tmp_args_element_name_14;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_16 = par_ui;
                CHECK_OBJECT(var_y);
                tmp_args_element_name_13 = var_y;
                tmp_args_element_name_14 = LIST_COPY(const_list_int_pos_2_list);
                frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 737;
                {
                    PyObject *call_args[] = {tmp_args_element_name_13, tmp_args_element_name_14};
                    tmp_call_result_19 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_16, const_str_plain_updateDevs, call_args);
                }

                Py_DECREF(tmp_args_element_name_14);
                if (tmp_call_result_19 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 737;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_12;
                }
                Py_DECREF(tmp_call_result_19);
            }
            goto branch_end_19;
            branch_no_19:;
            {
                nuitka_bool tmp_condition_result_22;
                PyObject *tmp_compexpr_left_17;
                PyObject *tmp_compexpr_right_17;
                PyObject *tmp_subscribed_name_9;
                PyObject *tmp_subscript_name_9;
                CHECK_OBJECT(par_res_list);
                tmp_subscribed_name_9 = par_res_list;
                CHECK_OBJECT(var_count);
                tmp_subscript_name_9 = var_count;
                tmp_compexpr_left_17 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_9, tmp_subscript_name_9);
                if (tmp_compexpr_left_17 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 740;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_12;
                }
                tmp_compexpr_right_17 = const_int_pos_1;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_17, tmp_compexpr_right_17);
                Py_DECREF(tmp_compexpr_left_17);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 740;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_12;
                }
                tmp_condition_result_22 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_22 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_22;
                } else {
                    goto branch_no_22;
                }
                branch_yes_22:;
                {
                    nuitka_bool tmp_condition_result_23;
                    int tmp_and_left_truth_3;
                    nuitka_bool tmp_and_left_value_3;
                    nuitka_bool tmp_and_right_value_3;
                    PyObject *tmp_compexpr_left_18;
                    PyObject *tmp_compexpr_right_18;
                    PyObject *tmp_subscribed_name_10;
                    PyObject *tmp_subscript_name_10;
                    PyObject *tmp_source_name_18;
                    int tmp_or_left_truth_1;
                    nuitka_bool tmp_or_left_value_1;
                    nuitka_bool tmp_or_right_value_1;
                    int tmp_and_left_truth_4;
                    nuitka_bool tmp_and_left_value_4;
                    nuitka_bool tmp_and_right_value_4;
                    PyObject *tmp_compexpr_left_19;
                    PyObject *tmp_compexpr_right_19;
                    PyObject *tmp_called_instance_17;
                    PyObject *tmp_source_name_19;
                    PyObject *tmp_compexpr_left_20;
                    PyObject *tmp_compexpr_right_20;
                    PyObject *tmp_subscribed_name_11;
                    PyObject *tmp_source_name_20;
                    PyObject *tmp_subscript_name_11;
                    PyObject *tmp_subscribed_name_12;
                    PyObject *tmp_source_name_21;
                    PyObject *tmp_subscript_name_12;
                    int tmp_and_left_truth_5;
                    nuitka_bool tmp_and_left_value_5;
                    nuitka_bool tmp_and_right_value_5;
                    PyObject *tmp_compexpr_left_21;
                    PyObject *tmp_compexpr_right_21;
                    PyObject *tmp_called_instance_18;
                    PyObject *tmp_source_name_22;
                    PyObject *tmp_compexpr_left_22;
                    PyObject *tmp_compexpr_right_22;
                    PyObject *tmp_subscribed_name_13;
                    PyObject *tmp_source_name_23;
                    PyObject *tmp_subscript_name_13;
                    PyObject *tmp_subscribed_name_14;
                    PyObject *tmp_source_name_24;
                    PyObject *tmp_subscript_name_14;
                    CHECK_OBJECT(par_status_list);
                    tmp_subscribed_name_10 = par_status_list;
                    CHECK_OBJECT(var_count);
                    tmp_subscript_name_10 = var_count;
                    tmp_compexpr_left_18 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_10, tmp_subscript_name_10);
                    if (tmp_compexpr_left_18 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 741;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_18 = par_ui;
                    tmp_compexpr_right_18 = LOOKUP_ATTRIBUTE(tmp_source_name_18, const_str_plain_NOT_AUTHORIZED);
                    if (tmp_compexpr_right_18 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_compexpr_left_18);

                        exception_lineno = 741;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_18, tmp_compexpr_right_18);
                    Py_DECREF(tmp_compexpr_left_18);
                    Py_DECREF(tmp_compexpr_right_18);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 741;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }
                    tmp_and_left_value_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_and_left_truth_3 = tmp_and_left_value_3 == NUITKA_BOOL_TRUE ? 1 : 0;
                    if (tmp_and_left_truth_3 == 1) {
                        goto and_right_3;
                    } else {
                        goto and_left_3;
                    }
                    and_right_3:;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_19 = par_ui;
                    tmp_called_instance_17 = LOOKUP_ATTRIBUTE(tmp_source_name_19, const_str_plain_auth_menu);
                    if (tmp_called_instance_17 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 741;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }
                    frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 741;
                    tmp_compexpr_left_19 = CALL_METHOD_NO_ARGS(tmp_called_instance_17, const_str_plain_get_active);
                    Py_DECREF(tmp_called_instance_17);
                    if (tmp_compexpr_left_19 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 741;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }
                    tmp_compexpr_right_19 = const_int_0;
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_19, tmp_compexpr_right_19);
                    Py_DECREF(tmp_compexpr_left_19);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 741;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }
                    tmp_and_left_value_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_and_left_truth_4 = tmp_and_left_value_4 == NUITKA_BOOL_TRUE ? 1 : 0;
                    if (tmp_and_left_truth_4 == 1) {
                        goto and_right_4;
                    } else {
                        goto and_left_4;
                    }
                    and_right_4:;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_20 = par_ui;
                    tmp_subscribed_name_11 = LOOKUP_ATTRIBUTE(tmp_source_name_20, const_str_plain_admin_aol_list);
                    if (tmp_subscribed_name_11 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 741;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_11 = var_y;
                    tmp_compexpr_left_20 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_11, tmp_subscript_name_11);
                    Py_DECREF(tmp_subscribed_name_11);
                    if (tmp_compexpr_left_20 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 741;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_21 = par_ui;
                    tmp_subscribed_name_12 = LOOKUP_ATTRIBUTE(tmp_source_name_21, const_str_plain_retrylimit_list);
                    if (tmp_subscribed_name_12 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_compexpr_left_20);

                        exception_lineno = 741;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_12 = var_y;
                    tmp_compexpr_right_20 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_12, tmp_subscript_name_12);
                    Py_DECREF(tmp_subscribed_name_12);
                    if (tmp_compexpr_right_20 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_compexpr_left_20);

                        exception_lineno = 741;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }
                    tmp_res = RICH_COMPARE_BOOL_LTE_OBJECT_OBJECT(tmp_compexpr_left_20, tmp_compexpr_right_20);
                    Py_DECREF(tmp_compexpr_left_20);
                    Py_DECREF(tmp_compexpr_right_20);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 741;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }
                    tmp_and_right_value_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_or_left_value_1 = tmp_and_right_value_4;
                    goto and_end_4;
                    and_left_4:;
                    tmp_or_left_value_1 = tmp_and_left_value_4;
                    and_end_4:;
                    tmp_or_left_truth_1 = tmp_or_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
                    if (tmp_or_left_truth_1 == 1) {
                        goto or_left_1;
                    } else {
                        goto or_right_1;
                    }
                    or_right_1:;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_22 = par_ui;
                    tmp_called_instance_18 = LOOKUP_ATTRIBUTE(tmp_source_name_22, const_str_plain_auth_menu);
                    if (tmp_called_instance_18 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 741;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }
                    frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 741;
                    tmp_compexpr_left_21 = CALL_METHOD_NO_ARGS(tmp_called_instance_18, const_str_plain_get_active);
                    Py_DECREF(tmp_called_instance_18);
                    if (tmp_compexpr_left_21 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 741;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }
                    tmp_compexpr_right_21 = const_int_pos_1;
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_21, tmp_compexpr_right_21);
                    Py_DECREF(tmp_compexpr_left_21);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 741;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }
                    tmp_and_left_value_5 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_and_left_truth_5 = tmp_and_left_value_5 == NUITKA_BOOL_TRUE ? 1 : 0;
                    if (tmp_and_left_truth_5 == 1) {
                        goto and_right_5;
                    } else {
                        goto and_left_5;
                    }
                    and_right_5:;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_23 = par_ui;
                    tmp_subscribed_name_13 = LOOKUP_ATTRIBUTE(tmp_source_name_23, const_str_plain_user_aol_list);
                    if (tmp_subscribed_name_13 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 741;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_13 = var_y;
                    tmp_compexpr_left_22 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_13, tmp_subscript_name_13);
                    Py_DECREF(tmp_subscribed_name_13);
                    if (tmp_compexpr_left_22 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 741;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_24 = par_ui;
                    tmp_subscribed_name_14 = LOOKUP_ATTRIBUTE(tmp_source_name_24, const_str_plain_retrylimit_list);
                    if (tmp_subscribed_name_14 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_compexpr_left_22);

                        exception_lineno = 741;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_14 = var_y;
                    tmp_compexpr_right_22 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_14, tmp_subscript_name_14);
                    Py_DECREF(tmp_subscribed_name_14);
                    if (tmp_compexpr_right_22 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_compexpr_left_22);

                        exception_lineno = 741;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }
                    tmp_res = RICH_COMPARE_BOOL_LTE_OBJECT_OBJECT(tmp_compexpr_left_22, tmp_compexpr_right_22);
                    Py_DECREF(tmp_compexpr_left_22);
                    Py_DECREF(tmp_compexpr_right_22);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 741;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }
                    tmp_and_right_value_5 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_or_right_value_1 = tmp_and_right_value_5;
                    goto and_end_5;
                    and_left_5:;
                    tmp_or_right_value_1 = tmp_and_left_value_5;
                    and_end_5:;
                    tmp_and_right_value_3 = tmp_or_right_value_1;
                    goto or_end_1;
                    or_left_1:;
                    tmp_and_right_value_3 = tmp_or_left_value_1;
                    or_end_1:;
                    tmp_condition_result_23 = tmp_and_right_value_3;
                    goto and_end_3;
                    and_left_3:;
                    tmp_condition_result_23 = tmp_and_left_value_3;
                    and_end_3:;
                    if (tmp_condition_result_23 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_23;
                    } else {
                        goto branch_no_23;
                    }
                    branch_yes_23:;
                    {
                        nuitka_bool tmp_condition_result_24;
                        PyObject *tmp_operand_name_4;
                        if (var_start_f == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_f");
                            exception_tb = NULL;

                            exception_lineno = 742;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }

                        tmp_operand_name_4 = var_start_f;
                        tmp_res = CHECK_IF_TRUE(tmp_operand_name_4);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 742;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        tmp_condition_result_24 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_24 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_24;
                        } else {
                            goto branch_no_24;
                        }
                        branch_yes_24:;
                        {
                            PyObject *tmp_assign_source_67;
                            PyObject *tmp_left_name_9;
                            PyObject *tmp_right_name_9;
                            if (var_list_f == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                                exception_tb = NULL;

                                exception_lineno = 743;
                                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_12;
                            }

                            tmp_left_name_9 = var_list_f;
                            tmp_right_name_9 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                            tmp_assign_source_67 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_9, tmp_right_name_9);
                            if (tmp_assign_source_67 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 743;
                                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_12;
                            }
                            {
                                PyObject *old = var_list_f;
                                var_list_f = tmp_assign_source_67;
                                Py_XDECREF(old);
                            }

                        }
                        goto branch_end_24;
                        branch_no_24:;
                        {
                            PyObject *tmp_assign_source_68;
                            tmp_assign_source_68 = Py_False;
                            {
                                PyObject *old = var_start_f;
                                var_start_f = tmp_assign_source_68;
                                Py_INCREF(var_start_f);
                                Py_XDECREF(old);
                            }

                        }
                        branch_end_24:;
                    }
                    {
                        PyObject *tmp_assign_source_69;
                        PyObject *tmp_left_name_10;
                        PyObject *tmp_right_name_10;
                        PyObject *tmp_subscribed_name_15;
                        PyObject *tmp_source_name_25;
                        PyObject *tmp_subscript_name_15;
                        if (var_list_f == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                            exception_tb = NULL;

                            exception_lineno = 746;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }

                        tmp_left_name_10 = var_list_f;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_25 = par_ui;
                        tmp_subscribed_name_15 = LOOKUP_ATTRIBUTE(tmp_source_name_25, const_str_plain_devs_list);
                        if (tmp_subscribed_name_15 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 746;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_15 = var_y;
                        tmp_right_name_10 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_15, tmp_subscript_name_15);
                        Py_DECREF(tmp_subscribed_name_15);
                        if (tmp_right_name_10 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 746;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        tmp_assign_source_69 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_10, tmp_right_name_10);
                        Py_DECREF(tmp_right_name_10);
                        if (tmp_assign_source_69 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 746;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        {
                            PyObject *old = var_list_f;
                            var_list_f = tmp_assign_source_69;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assign_source_70;
                        PyObject *tmp_left_name_11;
                        PyObject *tmp_right_name_11;
                        if (var_count_f == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "count_f");
                            exception_tb = NULL;

                            exception_lineno = 747;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }

                        tmp_left_name_11 = var_count_f;
                        tmp_right_name_11 = const_int_pos_1;
                        tmp_assign_source_70 = BINARY_OPERATION_ADD_OBJECT_INT(tmp_left_name_11, tmp_right_name_11);
                        if (tmp_assign_source_70 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 747;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        {
                            PyObject *old = var_count_f;
                            var_count_f = tmp_assign_source_70;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assign_source_71;
                        CHECK_OBJECT(var_y);
                        tmp_assign_source_71 = var_y;
                        {
                            PyObject *old = var_last_f;
                            var_last_f = tmp_assign_source_71;
                            Py_INCREF(var_last_f);
                            Py_XDECREF(old);
                        }

                    }
                    goto branch_end_23;
                    branch_no_23:;
                    {
                        nuitka_bool tmp_condition_result_25;
                        int tmp_or_left_truth_2;
                        nuitka_bool tmp_or_left_value_2;
                        nuitka_bool tmp_or_right_value_2;
                        PyObject *tmp_compexpr_left_23;
                        PyObject *tmp_compexpr_right_23;
                        PyObject *tmp_subscribed_name_16;
                        PyObject *tmp_subscript_name_16;
                        PyObject *tmp_source_name_26;
                        int tmp_or_left_truth_3;
                        nuitka_bool tmp_or_left_value_3;
                        nuitka_bool tmp_or_right_value_3;
                        int tmp_and_left_truth_6;
                        nuitka_bool tmp_and_left_value_6;
                        nuitka_bool tmp_and_right_value_6;
                        PyObject *tmp_compexpr_left_24;
                        PyObject *tmp_compexpr_right_24;
                        PyObject *tmp_called_instance_19;
                        PyObject *tmp_source_name_27;
                        PyObject *tmp_compexpr_left_25;
                        PyObject *tmp_compexpr_right_25;
                        PyObject *tmp_subscribed_name_17;
                        PyObject *tmp_source_name_28;
                        PyObject *tmp_subscript_name_17;
                        PyObject *tmp_subscribed_name_18;
                        PyObject *tmp_source_name_29;
                        PyObject *tmp_subscript_name_18;
                        int tmp_and_left_truth_7;
                        nuitka_bool tmp_and_left_value_7;
                        nuitka_bool tmp_and_right_value_7;
                        PyObject *tmp_compexpr_left_26;
                        PyObject *tmp_compexpr_right_26;
                        PyObject *tmp_called_instance_20;
                        PyObject *tmp_source_name_30;
                        PyObject *tmp_compexpr_left_27;
                        PyObject *tmp_compexpr_right_27;
                        PyObject *tmp_subscribed_name_19;
                        PyObject *tmp_source_name_31;
                        PyObject *tmp_subscript_name_19;
                        PyObject *tmp_subscribed_name_20;
                        PyObject *tmp_source_name_32;
                        PyObject *tmp_subscript_name_20;
                        CHECK_OBJECT(par_status_list);
                        tmp_subscribed_name_16 = par_status_list;
                        CHECK_OBJECT(var_count);
                        tmp_subscript_name_16 = var_count;
                        tmp_compexpr_left_23 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_16, tmp_subscript_name_16);
                        if (tmp_compexpr_left_23 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 749;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_26 = par_ui;
                        tmp_compexpr_right_23 = LOOKUP_ATTRIBUTE(tmp_source_name_26, const_str_plain_AUTHORITY_LOCKED_OUT);
                        if (tmp_compexpr_right_23 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_compexpr_left_23);

                            exception_lineno = 749;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_23, tmp_compexpr_right_23);
                        Py_DECREF(tmp_compexpr_left_23);
                        Py_DECREF(tmp_compexpr_right_23);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 749;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        tmp_or_left_value_2 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        tmp_or_left_truth_2 = tmp_or_left_value_2 == NUITKA_BOOL_TRUE ? 1 : 0;
                        if (tmp_or_left_truth_2 == 1) {
                            goto or_left_2;
                        } else {
                            goto or_right_2;
                        }
                        or_right_2:;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_27 = par_ui;
                        tmp_called_instance_19 = LOOKUP_ATTRIBUTE(tmp_source_name_27, const_str_plain_auth_menu);
                        if (tmp_called_instance_19 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 749;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 749;
                        tmp_compexpr_left_24 = CALL_METHOD_NO_ARGS(tmp_called_instance_19, const_str_plain_get_active);
                        Py_DECREF(tmp_called_instance_19);
                        if (tmp_compexpr_left_24 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 749;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        tmp_compexpr_right_24 = const_int_0;
                        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_24, tmp_compexpr_right_24);
                        Py_DECREF(tmp_compexpr_left_24);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 749;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        tmp_and_left_value_6 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        tmp_and_left_truth_6 = tmp_and_left_value_6 == NUITKA_BOOL_TRUE ? 1 : 0;
                        if (tmp_and_left_truth_6 == 1) {
                            goto and_right_6;
                        } else {
                            goto and_left_6;
                        }
                        and_right_6:;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_28 = par_ui;
                        tmp_subscribed_name_17 = LOOKUP_ATTRIBUTE(tmp_source_name_28, const_str_plain_admin_aol_list);
                        if (tmp_subscribed_name_17 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 749;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_17 = var_y;
                        tmp_compexpr_left_25 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_17, tmp_subscript_name_17);
                        Py_DECREF(tmp_subscribed_name_17);
                        if (tmp_compexpr_left_25 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 749;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_29 = par_ui;
                        tmp_subscribed_name_18 = LOOKUP_ATTRIBUTE(tmp_source_name_29, const_str_plain_retrylimit_list);
                        if (tmp_subscribed_name_18 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_compexpr_left_25);

                            exception_lineno = 749;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_18 = var_y;
                        tmp_compexpr_right_25 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_18, tmp_subscript_name_18);
                        Py_DECREF(tmp_subscribed_name_18);
                        if (tmp_compexpr_right_25 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_compexpr_left_25);

                            exception_lineno = 749;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        tmp_res = RICH_COMPARE_BOOL_GT_OBJECT_OBJECT(tmp_compexpr_left_25, tmp_compexpr_right_25);
                        Py_DECREF(tmp_compexpr_left_25);
                        Py_DECREF(tmp_compexpr_right_25);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 749;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        tmp_and_right_value_6 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        tmp_or_left_value_3 = tmp_and_right_value_6;
                        goto and_end_6;
                        and_left_6:;
                        tmp_or_left_value_3 = tmp_and_left_value_6;
                        and_end_6:;
                        tmp_or_left_truth_3 = tmp_or_left_value_3 == NUITKA_BOOL_TRUE ? 1 : 0;
                        if (tmp_or_left_truth_3 == 1) {
                            goto or_left_3;
                        } else {
                            goto or_right_3;
                        }
                        or_right_3:;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_30 = par_ui;
                        tmp_called_instance_20 = LOOKUP_ATTRIBUTE(tmp_source_name_30, const_str_plain_auth_menu);
                        if (tmp_called_instance_20 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 749;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 749;
                        tmp_compexpr_left_26 = CALL_METHOD_NO_ARGS(tmp_called_instance_20, const_str_plain_get_active);
                        Py_DECREF(tmp_called_instance_20);
                        if (tmp_compexpr_left_26 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 749;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        tmp_compexpr_right_26 = const_int_pos_1;
                        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_26, tmp_compexpr_right_26);
                        Py_DECREF(tmp_compexpr_left_26);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 749;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        tmp_and_left_value_7 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        tmp_and_left_truth_7 = tmp_and_left_value_7 == NUITKA_BOOL_TRUE ? 1 : 0;
                        if (tmp_and_left_truth_7 == 1) {
                            goto and_right_7;
                        } else {
                            goto and_left_7;
                        }
                        and_right_7:;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_31 = par_ui;
                        tmp_subscribed_name_19 = LOOKUP_ATTRIBUTE(tmp_source_name_31, const_str_plain_user_aol_list);
                        if (tmp_subscribed_name_19 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 749;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_19 = var_y;
                        tmp_compexpr_left_27 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_19, tmp_subscript_name_19);
                        Py_DECREF(tmp_subscribed_name_19);
                        if (tmp_compexpr_left_27 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 749;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_32 = par_ui;
                        tmp_subscribed_name_20 = LOOKUP_ATTRIBUTE(tmp_source_name_32, const_str_plain_retrylimit_list);
                        if (tmp_subscribed_name_20 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_compexpr_left_27);

                            exception_lineno = 749;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_20 = var_y;
                        tmp_compexpr_right_27 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_20, tmp_subscript_name_20);
                        Py_DECREF(tmp_subscribed_name_20);
                        if (tmp_compexpr_right_27 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_compexpr_left_27);

                            exception_lineno = 749;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        tmp_res = RICH_COMPARE_BOOL_GT_OBJECT_OBJECT(tmp_compexpr_left_27, tmp_compexpr_right_27);
                        Py_DECREF(tmp_compexpr_left_27);
                        Py_DECREF(tmp_compexpr_right_27);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 749;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        tmp_and_right_value_7 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        tmp_or_right_value_3 = tmp_and_right_value_7;
                        goto and_end_7;
                        and_left_7:;
                        tmp_or_right_value_3 = tmp_and_left_value_7;
                        and_end_7:;
                        tmp_or_right_value_2 = tmp_or_right_value_3;
                        goto or_end_3;
                        or_left_3:;
                        tmp_or_right_value_2 = tmp_or_left_value_3;
                        or_end_3:;
                        tmp_condition_result_25 = tmp_or_right_value_2;
                        goto or_end_2;
                        or_left_2:;
                        tmp_condition_result_25 = tmp_or_left_value_2;
                        or_end_2:;
                        if (tmp_condition_result_25 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_25;
                        } else {
                            goto branch_no_25;
                        }
                        branch_yes_25:;
                        {
                            nuitka_bool tmp_condition_result_26;
                            PyObject *tmp_operand_name_5;
                            if (var_start_alo == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_alo");
                                exception_tb = NULL;

                                exception_lineno = 750;
                                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_12;
                            }

                            tmp_operand_name_5 = var_start_alo;
                            tmp_res = CHECK_IF_TRUE(tmp_operand_name_5);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 750;
                                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_12;
                            }
                            tmp_condition_result_26 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            if (tmp_condition_result_26 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_26;
                            } else {
                                goto branch_no_26;
                            }
                            branch_yes_26:;
                            {
                                PyObject *tmp_assign_source_72;
                                PyObject *tmp_left_name_12;
                                PyObject *tmp_right_name_12;
                                if (var_list_alo == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_alo");
                                    exception_tb = NULL;

                                    exception_lineno = 751;
                                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_12;
                                }

                                tmp_left_name_12 = var_list_alo;
                                tmp_right_name_12 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                                tmp_assign_source_72 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_12, tmp_right_name_12);
                                if (tmp_assign_source_72 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 751;
                                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_12;
                                }
                                {
                                    PyObject *old = var_list_alo;
                                    var_list_alo = tmp_assign_source_72;
                                    Py_XDECREF(old);
                                }

                            }
                            goto branch_end_26;
                            branch_no_26:;
                            {
                                PyObject *tmp_assign_source_73;
                                tmp_assign_source_73 = Py_False;
                                {
                                    PyObject *old = var_start_alo;
                                    var_start_alo = tmp_assign_source_73;
                                    Py_INCREF(var_start_alo);
                                    Py_XDECREF(old);
                                }

                            }
                            branch_end_26:;
                        }
                        {
                            PyObject *tmp_assign_source_74;
                            PyObject *tmp_left_name_13;
                            PyObject *tmp_right_name_13;
                            PyObject *tmp_subscribed_name_21;
                            PyObject *tmp_source_name_33;
                            PyObject *tmp_subscript_name_21;
                            if (var_list_alo == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_alo");
                                exception_tb = NULL;

                                exception_lineno = 754;
                                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_12;
                            }

                            tmp_left_name_13 = var_list_alo;
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_33 = par_ui;
                            tmp_subscribed_name_21 = LOOKUP_ATTRIBUTE(tmp_source_name_33, const_str_plain_devs_list);
                            if (tmp_subscribed_name_21 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 754;
                                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_12;
                            }
                            CHECK_OBJECT(var_y);
                            tmp_subscript_name_21 = var_y;
                            tmp_right_name_13 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_21, tmp_subscript_name_21);
                            Py_DECREF(tmp_subscribed_name_21);
                            if (tmp_right_name_13 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 754;
                                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_12;
                            }
                            tmp_assign_source_74 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_13, tmp_right_name_13);
                            Py_DECREF(tmp_right_name_13);
                            if (tmp_assign_source_74 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 754;
                                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_12;
                            }
                            {
                                PyObject *old = var_list_alo;
                                var_list_alo = tmp_assign_source_74;
                                Py_XDECREF(old);
                            }

                        }
                        branch_no_25:;
                    }
                    branch_end_23:;
                }
                goto branch_end_22;
                branch_no_22:;
                {
                    nuitka_bool tmp_condition_result_27;
                    PyObject *tmp_compexpr_left_28;
                    PyObject *tmp_compexpr_right_28;
                    PyObject *tmp_subscribed_name_22;
                    PyObject *tmp_subscript_name_22;
                    CHECK_OBJECT(par_res_list);
                    tmp_subscribed_name_22 = par_res_list;
                    CHECK_OBJECT(var_count);
                    tmp_subscript_name_22 = var_count;
                    tmp_compexpr_left_28 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_22, tmp_subscript_name_22);
                    if (tmp_compexpr_left_28 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 755;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }
                    tmp_compexpr_right_28 = const_int_pos_3;
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_28, tmp_compexpr_right_28);
                    Py_DECREF(tmp_compexpr_left_28);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 755;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }
                    tmp_condition_result_27 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_27 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_27;
                    } else {
                        goto branch_no_27;
                    }
                    branch_yes_27:;
                    {
                        nuitka_bool tmp_condition_result_28;
                        PyObject *tmp_operand_name_6;
                        if (var_start_na == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_na");
                            exception_tb = NULL;

                            exception_lineno = 756;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }

                        tmp_operand_name_6 = var_start_na;
                        tmp_res = CHECK_IF_TRUE(tmp_operand_name_6);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 756;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        tmp_condition_result_28 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_28 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_28;
                        } else {
                            goto branch_no_28;
                        }
                        branch_yes_28:;
                        {
                            PyObject *tmp_assign_source_75;
                            PyObject *tmp_left_name_14;
                            PyObject *tmp_right_name_14;
                            if (var_list_na == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_na");
                                exception_tb = NULL;

                                exception_lineno = 757;
                                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_12;
                            }

                            tmp_left_name_14 = var_list_na;
                            tmp_right_name_14 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                            tmp_assign_source_75 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_14, tmp_right_name_14);
                            if (tmp_assign_source_75 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 757;
                                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_12;
                            }
                            {
                                PyObject *old = var_list_na;
                                var_list_na = tmp_assign_source_75;
                                Py_XDECREF(old);
                            }

                        }
                        goto branch_end_28;
                        branch_no_28:;
                        {
                            PyObject *tmp_assign_source_76;
                            tmp_assign_source_76 = Py_False;
                            {
                                PyObject *old = var_start_na;
                                var_start_na = tmp_assign_source_76;
                                Py_INCREF(var_start_na);
                                Py_XDECREF(old);
                            }

                        }
                        branch_end_28:;
                    }
                    {
                        PyObject *tmp_assign_source_77;
                        PyObject *tmp_left_name_15;
                        PyObject *tmp_right_name_15;
                        PyObject *tmp_subscribed_name_23;
                        PyObject *tmp_source_name_34;
                        PyObject *tmp_subscript_name_23;
                        if (var_list_na == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_na");
                            exception_tb = NULL;

                            exception_lineno = 760;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }

                        tmp_left_name_15 = var_list_na;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_34 = par_ui;
                        tmp_subscribed_name_23 = LOOKUP_ATTRIBUTE(tmp_source_name_34, const_str_plain_devs_list);
                        if (tmp_subscribed_name_23 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 760;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_23 = var_y;
                        tmp_right_name_15 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_23, tmp_subscript_name_23);
                        Py_DECREF(tmp_subscribed_name_23);
                        if (tmp_right_name_15 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 760;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        tmp_assign_source_77 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_15, tmp_right_name_15);
                        Py_DECREF(tmp_right_name_15);
                        if (tmp_assign_source_77 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 760;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        {
                            PyObject *old = var_list_na;
                            var_list_na = tmp_assign_source_77;
                            Py_XDECREF(old);
                        }

                    }
                    goto branch_end_27;
                    branch_no_27:;
                    {
                        nuitka_bool tmp_condition_result_29;
                        PyObject *tmp_compexpr_left_29;
                        PyObject *tmp_compexpr_right_29;
                        PyObject *tmp_subscribed_name_24;
                        PyObject *tmp_subscript_name_24;
                        CHECK_OBJECT(par_res_list);
                        tmp_subscribed_name_24 = par_res_list;
                        CHECK_OBJECT(var_count);
                        tmp_subscript_name_24 = var_count;
                        tmp_compexpr_left_29 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_24, tmp_subscript_name_24);
                        if (tmp_compexpr_left_29 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 761;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        tmp_compexpr_right_29 = const_int_pos_4;
                        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_29, tmp_compexpr_right_29);
                        Py_DECREF(tmp_compexpr_left_29);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 761;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        tmp_condition_result_29 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_29 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_29;
                        } else {
                            goto branch_no_29;
                        }
                        branch_yes_29:;
                        {
                            nuitka_bool tmp_condition_result_30;
                            PyObject *tmp_operand_name_7;
                            if (var_start_spb == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_spb");
                                exception_tb = NULL;

                                exception_lineno = 762;
                                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_12;
                            }

                            tmp_operand_name_7 = var_start_spb;
                            tmp_res = CHECK_IF_TRUE(tmp_operand_name_7);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 762;
                                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_12;
                            }
                            tmp_condition_result_30 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            if (tmp_condition_result_30 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_30;
                            } else {
                                goto branch_no_30;
                            }
                            branch_yes_30:;
                            {
                                PyObject *tmp_assign_source_78;
                                PyObject *tmp_left_name_16;
                                PyObject *tmp_right_name_16;
                                if (var_list_spb == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_spb");
                                    exception_tb = NULL;

                                    exception_lineno = 763;
                                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_12;
                                }

                                tmp_left_name_16 = var_list_spb;
                                tmp_right_name_16 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                                tmp_assign_source_78 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_16, tmp_right_name_16);
                                if (tmp_assign_source_78 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 763;
                                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_12;
                                }
                                {
                                    PyObject *old = var_list_spb;
                                    var_list_spb = tmp_assign_source_78;
                                    Py_XDECREF(old);
                                }

                            }
                            goto branch_end_30;
                            branch_no_30:;
                            {
                                PyObject *tmp_assign_source_79;
                                tmp_assign_source_79 = Py_False;
                                {
                                    PyObject *old = var_start_spb;
                                    var_start_spb = tmp_assign_source_79;
                                    Py_INCREF(var_start_spb);
                                    Py_XDECREF(old);
                                }

                            }
                            branch_end_30:;
                        }
                        {
                            PyObject *tmp_assign_source_80;
                            PyObject *tmp_left_name_17;
                            PyObject *tmp_right_name_17;
                            PyObject *tmp_subscribed_name_25;
                            PyObject *tmp_source_name_35;
                            PyObject *tmp_subscript_name_25;
                            if (var_list_spb == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_spb");
                                exception_tb = NULL;

                                exception_lineno = 766;
                                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_12;
                            }

                            tmp_left_name_17 = var_list_spb;
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_35 = par_ui;
                            tmp_subscribed_name_25 = LOOKUP_ATTRIBUTE(tmp_source_name_35, const_str_plain_devs_list);
                            if (tmp_subscribed_name_25 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 766;
                                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_12;
                            }
                            CHECK_OBJECT(var_y);
                            tmp_subscript_name_25 = var_y;
                            tmp_right_name_17 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_25, tmp_subscript_name_25);
                            Py_DECREF(tmp_subscribed_name_25);
                            if (tmp_right_name_17 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 766;
                                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_12;
                            }
                            tmp_assign_source_80 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_17, tmp_right_name_17);
                            Py_DECREF(tmp_right_name_17);
                            if (tmp_assign_source_80 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 766;
                                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_12;
                            }
                            {
                                PyObject *old = var_list_spb;
                                var_list_spb = tmp_assign_source_80;
                                Py_XDECREF(old);
                            }

                        }
                        goto branch_end_29;
                        branch_no_29:;
                        {
                            nuitka_bool tmp_condition_result_31;
                            PyObject *tmp_compexpr_left_30;
                            PyObject *tmp_compexpr_right_30;
                            PyObject *tmp_subscribed_name_26;
                            PyObject *tmp_subscript_name_26;
                            CHECK_OBJECT(par_res_list);
                            tmp_subscribed_name_26 = par_res_list;
                            CHECK_OBJECT(var_count);
                            tmp_subscript_name_26 = var_count;
                            tmp_compexpr_left_30 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_26, tmp_subscript_name_26);
                            if (tmp_compexpr_left_30 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 767;
                                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_12;
                            }
                            tmp_compexpr_right_30 = const_int_pos_6;
                            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_30, tmp_compexpr_right_30);
                            Py_DECREF(tmp_compexpr_left_30);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 767;
                                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                goto try_except_handler_12;
                            }
                            tmp_condition_result_31 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            if (tmp_condition_result_31 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_31;
                            } else {
                                goto branch_no_31;
                            }
                            branch_yes_31:;
                            {
                                nuitka_bool tmp_condition_result_32;
                                PyObject *tmp_operand_name_8;
                                if (var_start_miss == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_miss");
                                    exception_tb = NULL;

                                    exception_lineno = 768;
                                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_12;
                                }

                                tmp_operand_name_8 = var_start_miss;
                                tmp_res = CHECK_IF_TRUE(tmp_operand_name_8);
                                if (tmp_res == -1) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 768;
                                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_12;
                                }
                                tmp_condition_result_32 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                                if (tmp_condition_result_32 == NUITKA_BOOL_TRUE) {
                                    goto branch_yes_32;
                                } else {
                                    goto branch_no_32;
                                }
                                branch_yes_32:;
                                {
                                    PyObject *tmp_assign_source_81;
                                    PyObject *tmp_left_name_18;
                                    PyObject *tmp_right_name_18;
                                    if (var_list_miss == NULL) {

                                        exception_type = PyExc_UnboundLocalError;
                                        Py_INCREF(exception_type);
                                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_miss");
                                        exception_tb = NULL;

                                        exception_lineno = 769;
                                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                        goto try_except_handler_12;
                                    }

                                    tmp_left_name_18 = var_list_miss;
                                    tmp_right_name_18 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                                    tmp_assign_source_81 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_18, tmp_right_name_18);
                                    if (tmp_assign_source_81 == NULL) {
                                        assert(ERROR_OCCURRED());

                                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                        exception_lineno = 769;
                                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                        goto try_except_handler_12;
                                    }
                                    {
                                        PyObject *old = var_list_miss;
                                        var_list_miss = tmp_assign_source_81;
                                        Py_XDECREF(old);
                                    }

                                }
                                goto branch_end_32;
                                branch_no_32:;
                                {
                                    PyObject *tmp_assign_source_82;
                                    tmp_assign_source_82 = Py_False;
                                    {
                                        PyObject *old = var_start_miss;
                                        var_start_miss = tmp_assign_source_82;
                                        Py_INCREF(var_start_miss);
                                        Py_XDECREF(old);
                                    }

                                }
                                branch_end_32:;
                            }
                            {
                                PyObject *tmp_assign_source_83;
                                PyObject *tmp_left_name_19;
                                PyObject *tmp_right_name_19;
                                PyObject *tmp_subscribed_name_27;
                                PyObject *tmp_source_name_36;
                                PyObject *tmp_subscript_name_27;
                                if (var_list_miss == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_miss");
                                    exception_tb = NULL;

                                    exception_lineno = 772;
                                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_12;
                                }

                                tmp_left_name_19 = var_list_miss;
                                CHECK_OBJECT(par_ui);
                                tmp_source_name_36 = par_ui;
                                tmp_subscribed_name_27 = LOOKUP_ATTRIBUTE(tmp_source_name_36, const_str_plain_devs_list);
                                if (tmp_subscribed_name_27 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 772;
                                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_12;
                                }
                                CHECK_OBJECT(var_y);
                                tmp_subscript_name_27 = var_y;
                                tmp_right_name_19 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_27, tmp_subscript_name_27);
                                Py_DECREF(tmp_subscribed_name_27);
                                if (tmp_right_name_19 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 772;
                                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_12;
                                }
                                tmp_assign_source_83 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_19, tmp_right_name_19);
                                Py_DECREF(tmp_right_name_19);
                                if (tmp_assign_source_83 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 772;
                                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_12;
                                }
                                {
                                    PyObject *old = var_list_miss;
                                    var_list_miss = tmp_assign_source_83;
                                    Py_XDECREF(old);
                                }

                            }
                            goto branch_end_31;
                            branch_no_31:;
                            {
                                nuitka_bool tmp_condition_result_33;
                                PyObject *tmp_operand_name_9;
                                if (var_start_to == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_to");
                                    exception_tb = NULL;

                                    exception_lineno = 774;
                                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_12;
                                }

                                tmp_operand_name_9 = var_start_to;
                                tmp_res = CHECK_IF_TRUE(tmp_operand_name_9);
                                if (tmp_res == -1) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 774;
                                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_12;
                                }
                                tmp_condition_result_33 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                                if (tmp_condition_result_33 == NUITKA_BOOL_TRUE) {
                                    goto branch_yes_33;
                                } else {
                                    goto branch_no_33;
                                }
                                branch_yes_33:;
                                {
                                    PyObject *tmp_assign_source_84;
                                    PyObject *tmp_left_name_20;
                                    PyObject *tmp_right_name_20;
                                    if (var_list_to == NULL) {

                                        exception_type = PyExc_UnboundLocalError;
                                        Py_INCREF(exception_type);
                                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_to");
                                        exception_tb = NULL;

                                        exception_lineno = 775;
                                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                        goto try_except_handler_12;
                                    }

                                    tmp_left_name_20 = var_list_to;
                                    tmp_right_name_20 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                                    tmp_assign_source_84 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_20, tmp_right_name_20);
                                    if (tmp_assign_source_84 == NULL) {
                                        assert(ERROR_OCCURRED());

                                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                        exception_lineno = 775;
                                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                        goto try_except_handler_12;
                                    }
                                    {
                                        PyObject *old = var_list_to;
                                        var_list_to = tmp_assign_source_84;
                                        Py_XDECREF(old);
                                    }

                                }
                                goto branch_end_33;
                                branch_no_33:;
                                {
                                    PyObject *tmp_assign_source_85;
                                    tmp_assign_source_85 = Py_False;
                                    {
                                        PyObject *old = var_start_to;
                                        var_start_to = tmp_assign_source_85;
                                        Py_INCREF(var_start_to);
                                        Py_XDECREF(old);
                                    }

                                }
                                branch_end_33:;
                            }
                            {
                                PyObject *tmp_assign_source_86;
                                PyObject *tmp_left_name_21;
                                PyObject *tmp_right_name_21;
                                PyObject *tmp_subscribed_name_28;
                                PyObject *tmp_source_name_37;
                                PyObject *tmp_subscript_name_28;
                                if (var_list_to == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_to");
                                    exception_tb = NULL;

                                    exception_lineno = 778;
                                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_12;
                                }

                                tmp_left_name_21 = var_list_to;
                                CHECK_OBJECT(par_ui);
                                tmp_source_name_37 = par_ui;
                                tmp_subscribed_name_28 = LOOKUP_ATTRIBUTE(tmp_source_name_37, const_str_plain_devs_list);
                                if (tmp_subscribed_name_28 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 778;
                                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_12;
                                }
                                CHECK_OBJECT(var_y);
                                tmp_subscript_name_28 = var_y;
                                tmp_right_name_21 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_28, tmp_subscript_name_28);
                                Py_DECREF(tmp_subscribed_name_28);
                                if (tmp_right_name_21 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 778;
                                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_12;
                                }
                                tmp_assign_source_86 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_21, tmp_right_name_21);
                                Py_DECREF(tmp_right_name_21);
                                if (tmp_assign_source_86 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 778;
                                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                                    goto try_except_handler_12;
                                }
                                {
                                    PyObject *old = var_list_to;
                                    var_list_to = tmp_assign_source_86;
                                    Py_XDECREF(old);
                                }

                            }
                            branch_end_31:;
                        }
                        branch_end_29:;
                    }
                    branch_end_27:;
                }
                branch_end_22:;
            }
            branch_end_19:;
        }
        {
            PyObject *tmp_assign_source_87;
            PyObject *tmp_left_name_22;
            PyObject *tmp_right_name_22;
            CHECK_OBJECT(var_count);
            tmp_left_name_22 = var_count;
            tmp_right_name_22 = const_int_pos_1;
            tmp_assign_source_87 = BINARY_OPERATION_ADD_OBJECT_INT(tmp_left_name_22, tmp_right_name_22);
            assert(!(tmp_assign_source_87 == NULL));
            {
                PyObject *old = var_count;
                assert(old != NULL);
                var_count = tmp_assign_source_87;
                Py_DECREF(old);
            }

        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 724;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto try_except_handler_12;
        }
        goto loop_start_8;
        loop_end_8:;
        goto try_end_11;
        // Exception handler code:
        try_except_handler_12:;
        exception_keeper_type_11 = exception_type;
        exception_keeper_value_11 = exception_value;
        exception_keeper_tb_11 = exception_tb;
        exception_keeper_lineno_11 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_8__iter_value);
        tmp_for_loop_8__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_8__for_iterator);
        Py_DECREF(tmp_for_loop_8__for_iterator);
        tmp_for_loop_8__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_11;
        exception_value = exception_keeper_value_11;
        exception_tb = exception_keeper_tb_11;
        exception_lineno = exception_keeper_lineno_11;

        goto frame_exception_exit_1;
        // End of try:
        try_end_11:;
        Py_XDECREF(tmp_for_loop_8__iter_value);
        tmp_for_loop_8__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_8__for_iterator);
        Py_DECREF(tmp_for_loop_8__for_iterator);
        tmp_for_loop_8__for_iterator = NULL;

        {
            nuitka_bool tmp_condition_result_34;
            PyObject *tmp_compexpr_left_31;
            PyObject *tmp_compexpr_right_31;
            if (var_list_miss == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_miss");
                exception_tb = NULL;

                exception_lineno = 781;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_31 = var_list_miss;
            tmp_compexpr_right_31 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_31, tmp_compexpr_right_31);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 781;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_34 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_34 == NUITKA_BOOL_TRUE) {
                goto branch_yes_34;
            } else {
                goto branch_no_34;
            }
            branch_yes_34:;
            {
                PyObject *tmp_called_name_7;
                PyObject *tmp_source_name_38;
                PyObject *tmp_call_result_20;
                PyObject *tmp_args_element_name_15;
                PyObject *tmp_left_name_23;
                PyObject *tmp_right_name_23;
                CHECK_OBJECT(par_ui);
                tmp_source_name_38 = par_ui;
                tmp_called_name_7 = LOOKUP_ATTRIBUTE(tmp_source_name_38, const_str_plain_msg_err);
                if (tmp_called_name_7 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 782;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                if (var_list_miss == NULL) {
                    Py_DECREF(tmp_called_name_7);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_miss");
                    exception_tb = NULL;

                    exception_lineno = 782;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_left_name_23 = var_list_miss;
                tmp_right_name_23 = const_str_digest_21cdd10f62cd6949a9d1866524676a91;
                tmp_args_element_name_15 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_23, tmp_right_name_23);
                if (tmp_args_element_name_15 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_7);

                    exception_lineno = 782;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 782;
                tmp_call_result_20 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_7, tmp_args_element_name_15);
                Py_DECREF(tmp_called_name_7);
                Py_DECREF(tmp_args_element_name_15);
                if (tmp_call_result_20 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 782;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_20);
            }
            branch_no_34:;
        }
        {
            nuitka_bool tmp_condition_result_35;
            PyObject *tmp_compexpr_left_32;
            PyObject *tmp_compexpr_right_32;
            if (var_list_na == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_na");
                exception_tb = NULL;

                exception_lineno = 783;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_32 = var_list_na;
            tmp_compexpr_right_32 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_32, tmp_compexpr_right_32);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 783;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_35 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_35 == NUITKA_BOOL_TRUE) {
                goto branch_yes_35;
            } else {
                goto branch_no_35;
            }
            branch_yes_35:;
            {
                PyObject *tmp_called_name_8;
                PyObject *tmp_source_name_39;
                PyObject *tmp_call_result_21;
                PyObject *tmp_args_element_name_16;
                PyObject *tmp_left_name_24;
                PyObject *tmp_left_name_25;
                PyObject *tmp_right_name_24;
                PyObject *tmp_right_name_25;
                CHECK_OBJECT(par_ui);
                tmp_source_name_39 = par_ui;
                tmp_called_name_8 = LOOKUP_ATTRIBUTE(tmp_source_name_39, const_str_plain_msg_err);
                if (tmp_called_name_8 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 784;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_left_name_25 = const_str_digest_23a1042e713f9c373e043d78fc7c713f;
                if (var_list_na == NULL) {
                    Py_DECREF(tmp_called_name_8);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_na");
                    exception_tb = NULL;

                    exception_lineno = 784;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_right_name_24 = var_list_na;
                tmp_left_name_24 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_25, tmp_right_name_24);
                if (tmp_left_name_24 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_8);

                    exception_lineno = 784;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_right_name_25 = const_str_dot;
                tmp_args_element_name_16 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_24, tmp_right_name_25);
                Py_DECREF(tmp_left_name_24);
                if (tmp_args_element_name_16 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_8);

                    exception_lineno = 784;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 784;
                tmp_call_result_21 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_8, tmp_args_element_name_16);
                Py_DECREF(tmp_called_name_8);
                Py_DECREF(tmp_args_element_name_16);
                if (tmp_call_result_21 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 784;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_21);
            }
            branch_no_35:;
        }
        {
            nuitka_bool tmp_condition_result_36;
            PyObject *tmp_compexpr_left_33;
            PyObject *tmp_compexpr_right_33;
            if (var_list_spb == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_spb");
                exception_tb = NULL;

                exception_lineno = 785;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_33 = var_list_spb;
            tmp_compexpr_right_33 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_33, tmp_compexpr_right_33);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 785;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_36 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_36 == NUITKA_BOOL_TRUE) {
                goto branch_yes_36;
            } else {
                goto branch_no_36;
            }
            branch_yes_36:;
            {
                PyObject *tmp_called_name_9;
                PyObject *tmp_source_name_40;
                PyObject *tmp_call_result_22;
                PyObject *tmp_args_element_name_17;
                PyObject *tmp_left_name_26;
                PyObject *tmp_left_name_27;
                PyObject *tmp_right_name_26;
                PyObject *tmp_right_name_27;
                CHECK_OBJECT(par_ui);
                tmp_source_name_40 = par_ui;
                tmp_called_name_9 = LOOKUP_ATTRIBUTE(tmp_source_name_40, const_str_plain_msg_err);
                if (tmp_called_name_9 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 786;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_left_name_27 = const_str_digest_23a1042e713f9c373e043d78fc7c713f;
                if (var_list_spb == NULL) {
                    Py_DECREF(tmp_called_name_9);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_spb");
                    exception_tb = NULL;

                    exception_lineno = 786;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_right_name_26 = var_list_spb;
                tmp_left_name_26 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_27, tmp_right_name_26);
                if (tmp_left_name_26 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_9);

                    exception_lineno = 786;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_right_name_27 = const_str_digest_6f9d3b8c1c22c69a4d23112bae2b5acb;
                tmp_args_element_name_17 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_26, tmp_right_name_27);
                Py_DECREF(tmp_left_name_26);
                if (tmp_args_element_name_17 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_9);

                    exception_lineno = 786;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 786;
                tmp_call_result_22 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_9, tmp_args_element_name_17);
                Py_DECREF(tmp_called_name_9);
                Py_DECREF(tmp_args_element_name_17);
                if (tmp_call_result_22 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 786;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_22);
            }
            branch_no_36:;
        }
        {
            nuitka_bool tmp_condition_result_37;
            PyObject *tmp_compexpr_left_34;
            PyObject *tmp_compexpr_right_34;
            if (var_list_to == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_to");
                exception_tb = NULL;

                exception_lineno = 788;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_34 = var_list_to;
            tmp_compexpr_right_34 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_34, tmp_compexpr_right_34);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 788;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_37 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_37 == NUITKA_BOOL_TRUE) {
                goto branch_yes_37;
            } else {
                goto branch_no_37;
            }
            branch_yes_37:;
            {
                PyObject *tmp_called_name_10;
                PyObject *tmp_source_name_41;
                PyObject *tmp_call_result_23;
                PyObject *tmp_args_element_name_18;
                PyObject *tmp_left_name_28;
                PyObject *tmp_left_name_29;
                PyObject *tmp_right_name_28;
                PyObject *tmp_right_name_29;
                CHECK_OBJECT(par_ui);
                tmp_source_name_41 = par_ui;
                tmp_called_name_10 = LOOKUP_ATTRIBUTE(tmp_source_name_41, const_str_plain_msg_err);
                if (tmp_called_name_10 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 789;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_left_name_29 = const_str_digest_a02329ab09aa85c0ab8749a60da6e42f;
                if (var_list_to == NULL) {
                    Py_DECREF(tmp_called_name_10);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_to");
                    exception_tb = NULL;

                    exception_lineno = 789;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_right_name_28 = var_list_to;
                tmp_left_name_28 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_29, tmp_right_name_28);
                if (tmp_left_name_28 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_10);

                    exception_lineno = 789;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_right_name_29 = const_str_dot;
                tmp_args_element_name_18 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_28, tmp_right_name_29);
                Py_DECREF(tmp_left_name_28);
                if (tmp_args_element_name_18 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_10);

                    exception_lineno = 789;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 789;
                tmp_call_result_23 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_10, tmp_args_element_name_18);
                Py_DECREF(tmp_called_name_10);
                Py_DECREF(tmp_args_element_name_18);
                if (tmp_call_result_23 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 789;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_23);
            }
            branch_no_37:;
        }
        {
            nuitka_bool tmp_condition_result_38;
            PyObject *tmp_compexpr_left_35;
            PyObject *tmp_compexpr_right_35;
            if (var_list_f == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                exception_tb = NULL;

                exception_lineno = 790;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_35 = var_list_f;
            tmp_compexpr_right_35 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_35, tmp_compexpr_right_35);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 790;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_38 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_38 == NUITKA_BOOL_TRUE) {
                goto branch_yes_38;
            } else {
                goto branch_no_38;
            }
            branch_yes_38:;
            {
                nuitka_bool tmp_condition_result_39;
                PyObject *tmp_compexpr_left_36;
                PyObject *tmp_compexpr_right_36;
                if (var_count_f == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "count_f");
                    exception_tb = NULL;

                    exception_lineno = 791;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_compexpr_left_36 = var_count_f;
                tmp_compexpr_right_36 = const_int_pos_1;
                tmp_res = RICH_COMPARE_BOOL_GT_OBJECT_INT(tmp_compexpr_left_36, tmp_compexpr_right_36);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 791;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_condition_result_39 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_39 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_39;
                } else {
                    goto branch_no_39;
                }
                branch_yes_39:;
                {
                    PyObject *tmp_called_name_11;
                    PyObject *tmp_source_name_42;
                    PyObject *tmp_call_result_24;
                    PyObject *tmp_args_element_name_19;
                    PyObject *tmp_left_name_30;
                    PyObject *tmp_left_name_31;
                    PyObject *tmp_right_name_30;
                    PyObject *tmp_right_name_31;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_42 = par_ui;
                    tmp_called_name_11 = LOOKUP_ATTRIBUTE(tmp_source_name_42, const_str_plain_msg_err);
                    if (tmp_called_name_11 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 792;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_left_name_31 = const_str_digest_23a1042e713f9c373e043d78fc7c713f;
                    if (var_list_f == NULL) {
                        Py_DECREF(tmp_called_name_11);
                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                        exception_tb = NULL;

                        exception_lineno = 792;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_right_name_30 = var_list_f;
                    tmp_left_name_30 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_31, tmp_right_name_30);
                    if (tmp_left_name_30 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_11);

                        exception_lineno = 792;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_31 = const_str_digest_fcb3f707055a45843f9f5f984a177a66;
                    tmp_args_element_name_19 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_30, tmp_right_name_31);
                    Py_DECREF(tmp_left_name_30);
                    if (tmp_args_element_name_19 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_11);

                        exception_lineno = 792;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 792;
                    tmp_call_result_24 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_11, tmp_args_element_name_19);
                    Py_DECREF(tmp_called_name_11);
                    Py_DECREF(tmp_args_element_name_19);
                    if (tmp_call_result_24 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 792;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_24);
                }
                goto branch_end_39;
                branch_no_39:;
                {
                    nuitka_bool tmp_condition_result_40;
                    PyObject *tmp_compexpr_left_37;
                    PyObject *tmp_compexpr_right_37;
                    PyObject *tmp_called_instance_21;
                    PyObject *tmp_source_name_43;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_43 = par_ui;
                    tmp_called_instance_21 = LOOKUP_ATTRIBUTE(tmp_source_name_43, const_str_plain_auth_menu);
                    if (tmp_called_instance_21 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 793;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 793;
                    tmp_compexpr_left_37 = CALL_METHOD_NO_ARGS(tmp_called_instance_21, const_str_plain_get_active);
                    Py_DECREF(tmp_called_instance_21);
                    if (tmp_compexpr_left_37 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 793;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_compexpr_right_37 = const_int_0;
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_37, tmp_compexpr_right_37);
                    Py_DECREF(tmp_compexpr_left_37);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 793;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_condition_result_40 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_40 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_40;
                    } else {
                        goto branch_no_40;
                    }
                    branch_yes_40:;
                    {
                        PyObject *tmp_called_name_12;
                        PyObject *tmp_source_name_44;
                        PyObject *tmp_call_result_25;
                        PyObject *tmp_args_element_name_20;
                        PyObject *tmp_left_name_32;
                        PyObject *tmp_left_name_33;
                        PyObject *tmp_left_name_34;
                        PyObject *tmp_left_name_35;
                        PyObject *tmp_left_name_36;
                        PyObject *tmp_left_name_37;
                        PyObject *tmp_right_name_32;
                        PyObject *tmp_right_name_33;
                        PyObject *tmp_right_name_34;
                        PyObject *tmp_str_arg_1;
                        PyObject *tmp_subscribed_name_29;
                        PyObject *tmp_source_name_45;
                        PyObject *tmp_subscript_name_29;
                        PyObject *tmp_right_name_35;
                        PyObject *tmp_right_name_36;
                        PyObject *tmp_str_arg_2;
                        PyObject *tmp_subscribed_name_30;
                        PyObject *tmp_source_name_46;
                        PyObject *tmp_subscript_name_30;
                        PyObject *tmp_right_name_37;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_44 = par_ui;
                        tmp_called_name_12 = LOOKUP_ATTRIBUTE(tmp_source_name_44, const_str_plain_msg_err);
                        if (tmp_called_name_12 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 794;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_left_name_37 = const_str_digest_23a1042e713f9c373e043d78fc7c713f;
                        if (var_list_f == NULL) {
                            Py_DECREF(tmp_called_name_12);
                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                            exception_tb = NULL;

                            exception_lineno = 794;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_right_name_32 = var_list_f;
                        tmp_left_name_36 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_37, tmp_right_name_32);
                        if (tmp_left_name_36 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_12);

                            exception_lineno = 794;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_33 = const_str_digest_2d5ab67f28a1f8ea7de7b4da8d17a7c2;
                        tmp_left_name_35 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_36, tmp_right_name_33);
                        Py_DECREF(tmp_left_name_36);
                        if (tmp_left_name_35 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_12);

                            exception_lineno = 794;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_45 = par_ui;
                        tmp_subscribed_name_29 = LOOKUP_ATTRIBUTE(tmp_source_name_45, const_str_plain_admin_aol_list);
                        if (tmp_subscribed_name_29 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_12);
                            Py_DECREF(tmp_left_name_35);

                            exception_lineno = 794;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        if (var_last_f == NULL) {
                            Py_DECREF(tmp_called_name_12);
                            Py_DECREF(tmp_left_name_35);
                            Py_DECREF(tmp_subscribed_name_29);
                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "last_f");
                            exception_tb = NULL;

                            exception_lineno = 794;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_subscript_name_29 = var_last_f;
                        tmp_str_arg_1 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_29, tmp_subscript_name_29);
                        Py_DECREF(tmp_subscribed_name_29);
                        if (tmp_str_arg_1 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_12);
                            Py_DECREF(tmp_left_name_35);

                            exception_lineno = 794;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_34 = PyObject_Str(tmp_str_arg_1);
                        Py_DECREF(tmp_str_arg_1);
                        if (tmp_right_name_34 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_12);
                            Py_DECREF(tmp_left_name_35);

                            exception_lineno = 794;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_left_name_34 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_35, tmp_right_name_34);
                        Py_DECREF(tmp_left_name_35);
                        Py_DECREF(tmp_right_name_34);
                        if (tmp_left_name_34 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_12);

                            exception_lineno = 794;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_35 = const_str_digest_557fe80a6c273179b39f6cacbcbc5fdc;
                        tmp_left_name_33 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_34, tmp_right_name_35);
                        Py_DECREF(tmp_left_name_34);
                        if (tmp_left_name_33 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_12);

                            exception_lineno = 794;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_46 = par_ui;
                        tmp_subscribed_name_30 = LOOKUP_ATTRIBUTE(tmp_source_name_46, const_str_plain_retrylimit_list);
                        if (tmp_subscribed_name_30 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_12);
                            Py_DECREF(tmp_left_name_33);

                            exception_lineno = 794;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        if (var_last_f == NULL) {
                            Py_DECREF(tmp_called_name_12);
                            Py_DECREF(tmp_left_name_33);
                            Py_DECREF(tmp_subscribed_name_30);
                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "last_f");
                            exception_tb = NULL;

                            exception_lineno = 794;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_subscript_name_30 = var_last_f;
                        tmp_str_arg_2 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_30, tmp_subscript_name_30);
                        Py_DECREF(tmp_subscribed_name_30);
                        if (tmp_str_arg_2 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_12);
                            Py_DECREF(tmp_left_name_33);

                            exception_lineno = 794;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_36 = PyObject_Str(tmp_str_arg_2);
                        Py_DECREF(tmp_str_arg_2);
                        if (tmp_right_name_36 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_12);
                            Py_DECREF(tmp_left_name_33);

                            exception_lineno = 794;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_left_name_32 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_33, tmp_right_name_36);
                        Py_DECREF(tmp_left_name_33);
                        Py_DECREF(tmp_right_name_36);
                        if (tmp_left_name_32 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_12);

                            exception_lineno = 794;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_37 = const_str_dot;
                        tmp_args_element_name_20 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_32, tmp_right_name_37);
                        Py_DECREF(tmp_left_name_32);
                        if (tmp_args_element_name_20 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_12);

                            exception_lineno = 794;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 794;
                        tmp_call_result_25 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_12, tmp_args_element_name_20);
                        Py_DECREF(tmp_called_name_12);
                        Py_DECREF(tmp_args_element_name_20);
                        if (tmp_call_result_25 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 794;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        Py_DECREF(tmp_call_result_25);
                    }
                    goto branch_end_40;
                    branch_no_40:;
                    {
                        PyObject *tmp_called_name_13;
                        PyObject *tmp_source_name_47;
                        PyObject *tmp_call_result_26;
                        PyObject *tmp_args_element_name_21;
                        PyObject *tmp_left_name_38;
                        PyObject *tmp_left_name_39;
                        PyObject *tmp_left_name_40;
                        PyObject *tmp_left_name_41;
                        PyObject *tmp_left_name_42;
                        PyObject *tmp_left_name_43;
                        PyObject *tmp_right_name_38;
                        PyObject *tmp_right_name_39;
                        PyObject *tmp_right_name_40;
                        PyObject *tmp_str_arg_3;
                        PyObject *tmp_subscribed_name_31;
                        PyObject *tmp_source_name_48;
                        PyObject *tmp_subscript_name_31;
                        PyObject *tmp_right_name_41;
                        PyObject *tmp_right_name_42;
                        PyObject *tmp_str_arg_4;
                        PyObject *tmp_subscribed_name_32;
                        PyObject *tmp_source_name_49;
                        PyObject *tmp_subscript_name_32;
                        PyObject *tmp_right_name_43;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_47 = par_ui;
                        tmp_called_name_13 = LOOKUP_ATTRIBUTE(tmp_source_name_47, const_str_plain_msg_err);
                        if (tmp_called_name_13 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 796;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_left_name_43 = const_str_digest_23a1042e713f9c373e043d78fc7c713f;
                        if (var_list_f == NULL) {
                            Py_DECREF(tmp_called_name_13);
                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                            exception_tb = NULL;

                            exception_lineno = 796;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_right_name_38 = var_list_f;
                        tmp_left_name_42 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_43, tmp_right_name_38);
                        if (tmp_left_name_42 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_13);

                            exception_lineno = 796;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_39 = const_str_digest_2d5ab67f28a1f8ea7de7b4da8d17a7c2;
                        tmp_left_name_41 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_42, tmp_right_name_39);
                        Py_DECREF(tmp_left_name_42);
                        if (tmp_left_name_41 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_13);

                            exception_lineno = 796;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_48 = par_ui;
                        tmp_subscribed_name_31 = LOOKUP_ATTRIBUTE(tmp_source_name_48, const_str_plain_user_aol_list);
                        if (tmp_subscribed_name_31 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_13);
                            Py_DECREF(tmp_left_name_41);

                            exception_lineno = 796;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        if (var_last_f == NULL) {
                            Py_DECREF(tmp_called_name_13);
                            Py_DECREF(tmp_left_name_41);
                            Py_DECREF(tmp_subscribed_name_31);
                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "last_f");
                            exception_tb = NULL;

                            exception_lineno = 796;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_subscript_name_31 = var_last_f;
                        tmp_str_arg_3 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_31, tmp_subscript_name_31);
                        Py_DECREF(tmp_subscribed_name_31);
                        if (tmp_str_arg_3 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_13);
                            Py_DECREF(tmp_left_name_41);

                            exception_lineno = 796;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_40 = PyObject_Str(tmp_str_arg_3);
                        Py_DECREF(tmp_str_arg_3);
                        if (tmp_right_name_40 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_13);
                            Py_DECREF(tmp_left_name_41);

                            exception_lineno = 796;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_left_name_40 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_41, tmp_right_name_40);
                        Py_DECREF(tmp_left_name_41);
                        Py_DECREF(tmp_right_name_40);
                        if (tmp_left_name_40 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_13);

                            exception_lineno = 796;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_41 = const_str_digest_557fe80a6c273179b39f6cacbcbc5fdc;
                        tmp_left_name_39 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_40, tmp_right_name_41);
                        Py_DECREF(tmp_left_name_40);
                        if (tmp_left_name_39 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_13);

                            exception_lineno = 796;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_49 = par_ui;
                        tmp_subscribed_name_32 = LOOKUP_ATTRIBUTE(tmp_source_name_49, const_str_plain_retrylimit_list);
                        if (tmp_subscribed_name_32 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_13);
                            Py_DECREF(tmp_left_name_39);

                            exception_lineno = 796;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        if (var_last_f == NULL) {
                            Py_DECREF(tmp_called_name_13);
                            Py_DECREF(tmp_left_name_39);
                            Py_DECREF(tmp_subscribed_name_32);
                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "last_f");
                            exception_tb = NULL;

                            exception_lineno = 796;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }

                        tmp_subscript_name_32 = var_last_f;
                        tmp_str_arg_4 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_32, tmp_subscript_name_32);
                        Py_DECREF(tmp_subscribed_name_32);
                        if (tmp_str_arg_4 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_13);
                            Py_DECREF(tmp_left_name_39);

                            exception_lineno = 796;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_42 = PyObject_Str(tmp_str_arg_4);
                        Py_DECREF(tmp_str_arg_4);
                        if (tmp_right_name_42 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_13);
                            Py_DECREF(tmp_left_name_39);

                            exception_lineno = 796;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_left_name_38 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_39, tmp_right_name_42);
                        Py_DECREF(tmp_left_name_39);
                        Py_DECREF(tmp_right_name_42);
                        if (tmp_left_name_38 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_13);

                            exception_lineno = 796;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        tmp_right_name_43 = const_str_dot;
                        tmp_args_element_name_21 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_38, tmp_right_name_43);
                        Py_DECREF(tmp_left_name_38);
                        if (tmp_args_element_name_21 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_called_name_13);

                            exception_lineno = 796;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 796;
                        tmp_call_result_26 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_13, tmp_args_element_name_21);
                        Py_DECREF(tmp_called_name_13);
                        Py_DECREF(tmp_args_element_name_21);
                        if (tmp_call_result_26 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 796;
                            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                            goto frame_exception_exit_1;
                        }
                        Py_DECREF(tmp_call_result_26);
                    }
                    branch_end_40:;
                }
                branch_end_39:;
            }
            branch_no_38:;
        }
        {
            nuitka_bool tmp_condition_result_41;
            PyObject *tmp_compexpr_left_38;
            PyObject *tmp_compexpr_right_38;
            if (var_list_alo == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_alo");
                exception_tb = NULL;

                exception_lineno = 797;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_38 = var_list_alo;
            tmp_compexpr_right_38 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_38, tmp_compexpr_right_38);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 797;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_41 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_41 == NUITKA_BOOL_TRUE) {
                goto branch_yes_41;
            } else {
                goto branch_no_41;
            }
            branch_yes_41:;
            {
                nuitka_bool tmp_condition_result_42;
                PyObject *tmp_compexpr_left_39;
                PyObject *tmp_compexpr_right_39;
                PyObject *tmp_called_instance_22;
                PyObject *tmp_source_name_50;
                CHECK_OBJECT(par_ui);
                tmp_source_name_50 = par_ui;
                tmp_called_instance_22 = LOOKUP_ATTRIBUTE(tmp_source_name_50, const_str_plain_auth_menu);
                if (tmp_called_instance_22 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 798;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 798;
                tmp_compexpr_left_39 = CALL_METHOD_NO_ARGS(tmp_called_instance_22, const_str_plain_get_active);
                Py_DECREF(tmp_called_instance_22);
                if (tmp_compexpr_left_39 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 798;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_compexpr_right_39 = const_int_0;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_39, tmp_compexpr_right_39);
                Py_DECREF(tmp_compexpr_left_39);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 798;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_condition_result_42 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_42 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_42;
                } else {
                    goto branch_no_42;
                }
                branch_yes_42:;
                {
                    PyObject *tmp_called_name_14;
                    PyObject *tmp_source_name_51;
                    PyObject *tmp_call_result_27;
                    PyObject *tmp_args_element_name_22;
                    PyObject *tmp_left_name_44;
                    PyObject *tmp_left_name_45;
                    PyObject *tmp_right_name_44;
                    PyObject *tmp_right_name_45;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_51 = par_ui;
                    tmp_called_name_14 = LOOKUP_ATTRIBUTE(tmp_source_name_51, const_str_plain_msg_err);
                    if (tmp_called_name_14 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 799;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_left_name_45 = const_str_digest_65e9196bd4c730b537e5cdf8fe311777;
                    if (var_list_alo == NULL) {
                        Py_DECREF(tmp_called_name_14);
                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_alo");
                        exception_tb = NULL;

                        exception_lineno = 799;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_right_name_44 = var_list_alo;
                    tmp_left_name_44 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_45, tmp_right_name_44);
                    if (tmp_left_name_44 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_14);

                        exception_lineno = 799;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_45 = const_str_digest_8da2f7ce80b0ea01448ac4bbab6c01ae;
                    tmp_args_element_name_22 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_44, tmp_right_name_45);
                    Py_DECREF(tmp_left_name_44);
                    if (tmp_args_element_name_22 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_14);

                        exception_lineno = 799;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 799;
                    tmp_call_result_27 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_14, tmp_args_element_name_22);
                    Py_DECREF(tmp_called_name_14);
                    Py_DECREF(tmp_args_element_name_22);
                    if (tmp_call_result_27 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 799;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_27);
                }
                goto branch_end_42;
                branch_no_42:;
                {
                    PyObject *tmp_called_name_15;
                    PyObject *tmp_source_name_52;
                    PyObject *tmp_call_result_28;
                    PyObject *tmp_args_element_name_23;
                    PyObject *tmp_left_name_46;
                    PyObject *tmp_left_name_47;
                    PyObject *tmp_right_name_46;
                    PyObject *tmp_right_name_47;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_52 = par_ui;
                    tmp_called_name_15 = LOOKUP_ATTRIBUTE(tmp_source_name_52, const_str_plain_msg_err);
                    if (tmp_called_name_15 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 801;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_left_name_47 = const_str_digest_8e9bcfdd45060137ba638f543f425301;
                    if (var_list_alo == NULL) {
                        Py_DECREF(tmp_called_name_15);
                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_alo");
                        exception_tb = NULL;

                        exception_lineno = 801;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_right_name_46 = var_list_alo;
                    tmp_left_name_46 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_47, tmp_right_name_46);
                    if (tmp_left_name_46 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_15);

                        exception_lineno = 801;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_47 = const_str_digest_8da2f7ce80b0ea01448ac4bbab6c01ae;
                    tmp_args_element_name_23 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_46, tmp_right_name_47);
                    Py_DECREF(tmp_left_name_46);
                    if (tmp_args_element_name_23 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_15);

                        exception_lineno = 801;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 801;
                    tmp_call_result_28 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_15, tmp_args_element_name_23);
                    Py_DECREF(tmp_called_name_15);
                    Py_DECREF(tmp_args_element_name_23);
                    if (tmp_call_result_28 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 801;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_28);
                }
                branch_end_42:;
            }
            branch_no_41:;
        }
        {
            nuitka_bool tmp_condition_result_43;
            PyObject *tmp_compexpr_left_40;
            PyObject *tmp_compexpr_right_40;
            if (var_list_p == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p");
                exception_tb = NULL;

                exception_lineno = 803;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_40 = var_list_p;
            tmp_compexpr_right_40 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_40, tmp_compexpr_right_40);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 803;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_43 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_43 == NUITKA_BOOL_TRUE) {
                goto branch_yes_43;
            } else {
                goto branch_no_43;
            }
            branch_yes_43:;
            {
                PyObject *tmp_called_name_16;
                PyObject *tmp_source_name_53;
                PyObject *tmp_call_result_29;
                PyObject *tmp_args_element_name_24;
                PyObject *tmp_left_name_48;
                PyObject *tmp_right_name_48;
                CHECK_OBJECT(par_ui);
                tmp_source_name_53 = par_ui;
                tmp_called_name_16 = LOOKUP_ATTRIBUTE(tmp_source_name_53, const_str_plain_msg_ok);
                if (tmp_called_name_16 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 804;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                if (var_list_p == NULL) {
                    Py_DECREF(tmp_called_name_16);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p");
                    exception_tb = NULL;

                    exception_lineno = 804;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_left_name_48 = var_list_p;
                tmp_right_name_48 = const_str_digest_988469b196e452a23f29bba1dfcc46c1;
                tmp_args_element_name_24 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_48, tmp_right_name_48);
                if (tmp_args_element_name_24 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_16);

                    exception_lineno = 804;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 804;
                tmp_call_result_29 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_16, tmp_args_element_name_24);
                Py_DECREF(tmp_called_name_16);
                Py_DECREF(tmp_args_element_name_24);
                if (tmp_call_result_29 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 804;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_29);
            }
            branch_no_43:;
        }
        {
            PyObject *tmp_called_instance_23;
            PyObject *tmp_call_result_30;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_23 = par_ui;
            frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 805;
            tmp_call_result_30 = CALL_METHOD_NO_ARGS(tmp_called_instance_23, const_str_plain_stop_spin);
            if (tmp_call_result_30 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 805;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_30);
        }
        {
            PyObject *tmp_called_instance_24;
            PyObject *tmp_call_result_31;
            PyObject *tmp_args_element_name_25;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_24 = par_ui;
            CHECK_OBJECT(par_ui);
            tmp_args_element_name_25 = par_ui;
            frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 806;
            {
                PyObject *call_args[] = {tmp_args_element_name_25};
                tmp_call_result_31 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_24, const_str_plain_unlock_prompt, call_args);
            }

            if (tmp_call_result_31 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 806;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_31);
        }
        goto branch_end_18;
        branch_no_18:;
        {
            nuitka_bool tmp_condition_result_44;
            PyObject *tmp_operand_name_10;
            CHECK_OBJECT(par_reboot);
            tmp_operand_name_10 = par_reboot;
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_10);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 810;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_44 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_44 == NUITKA_BOOL_TRUE) {
                goto branch_yes_44;
            } else {
                goto branch_no_44;
            }
            branch_yes_44:;
            {
                PyObject *tmp_assign_source_88;
                tmp_assign_source_88 = Py_True;
                {
                    PyObject *old = var_start;
                    var_start = tmp_assign_source_88;
                    Py_INCREF(var_start);
                    Py_XDECREF(old);
                }

            }
            {
                PyObject *tmp_assign_source_89;
                tmp_assign_source_89 = const_str_empty;
                assert(var_liststr == NULL);
                Py_INCREF(tmp_assign_source_89);
                var_liststr = tmp_assign_source_89;
            }
            {
                PyObject *tmp_assign_source_90;
                PyObject *tmp_iter_arg_9;
                CHECK_OBJECT(par_selected_list);
                tmp_iter_arg_9 = par_selected_list;
                tmp_assign_source_90 = MAKE_ITERATOR(tmp_iter_arg_9);
                if (tmp_assign_source_90 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 813;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                assert(tmp_for_loop_9__for_iterator == NULL);
                tmp_for_loop_9__for_iterator = tmp_assign_source_90;
            }
            // Tried code:
            loop_start_9:;
            {
                PyObject *tmp_next_source_9;
                PyObject *tmp_assign_source_91;
                CHECK_OBJECT(tmp_for_loop_9__for_iterator);
                tmp_next_source_9 = tmp_for_loop_9__for_iterator;
                tmp_assign_source_91 = ITERATOR_NEXT(tmp_next_source_9);
                if (tmp_assign_source_91 == NULL) {
                    if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                        goto loop_end_9;
                    } else {

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        exception_lineno = 813;
                        goto try_except_handler_13;
                    }
                }

                {
                    PyObject *old = tmp_for_loop_9__iter_value;
                    tmp_for_loop_9__iter_value = tmp_assign_source_91;
                    Py_XDECREF(old);
                }

            }
            {
                PyObject *tmp_assign_source_92;
                CHECK_OBJECT(tmp_for_loop_9__iter_value);
                tmp_assign_source_92 = tmp_for_loop_9__iter_value;
                {
                    PyObject *old = var_d;
                    var_d = tmp_assign_source_92;
                    Py_INCREF(var_d);
                    Py_XDECREF(old);
                }

            }
            {
                PyObject *tmp_assattr_name_6;
                PyObject *tmp_subscribed_name_33;
                PyObject *tmp_source_name_54;
                PyObject *tmp_subscript_name_33;
                PyObject *tmp_assattr_target_6;
                CHECK_OBJECT(par_ui);
                tmp_source_name_54 = par_ui;
                tmp_subscribed_name_33 = LOOKUP_ATTRIBUTE(tmp_source_name_54, const_str_plain_devs_list);
                if (tmp_subscribed_name_33 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 814;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
                CHECK_OBJECT(var_d);
                tmp_subscript_name_33 = var_d;
                tmp_assattr_name_6 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_33, tmp_subscript_name_33);
                Py_DECREF(tmp_subscribed_name_33);
                if (tmp_assattr_name_6 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 814;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
                CHECK_OBJECT(par_ui);
                tmp_assattr_target_6 = par_ui;
                tmp_result = SET_ATTRIBUTE(tmp_assattr_target_6, const_str_plain_devname, tmp_assattr_name_6);
                Py_DECREF(tmp_assattr_name_6);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 814;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
            }
            {
                PyObject *tmp_called_instance_25;
                PyObject *tmp_mvar_value_9;
                PyObject *tmp_call_result_32;
                PyObject *tmp_args_element_name_26;
                PyObject *tmp_args_element_name_27;
                PyObject *tmp_args_element_name_28;
                tmp_mvar_value_9 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_dialogs);

                if (unlikely(tmp_mvar_value_9 == NULL)) {
                    tmp_mvar_value_9 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_dialogs);
                }

                if (tmp_mvar_value_9 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 418 ], 36, 0);
                    exception_tb = NULL;

                    exception_lineno = 815;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }

                tmp_called_instance_25 = tmp_mvar_value_9;
                tmp_args_element_name_26 = Py_None;
                CHECK_OBJECT(par_ui);
                tmp_args_element_name_27 = par_ui;
                tmp_args_element_name_28 = const_int_pos_1;
                frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 815;
                {
                    PyObject *call_args[] = {tmp_args_element_name_26, tmp_args_element_name_27, tmp_args_element_name_28};
                    tmp_call_result_32 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_25, const_str_plain_query, call_args);
                }

                if (tmp_call_result_32 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 815;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
                Py_DECREF(tmp_call_result_32);
            }
            {
                nuitka_bool tmp_condition_result_45;
                PyObject *tmp_operand_name_11;
                if (var_start == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start");
                    exception_tb = NULL;

                    exception_lineno = 816;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }

                tmp_operand_name_11 = var_start;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_11);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 816;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
                tmp_condition_result_45 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_45 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_45;
                } else {
                    goto branch_no_45;
                }
                branch_yes_45:;
                {
                    PyObject *tmp_assign_source_93;
                    PyObject *tmp_left_name_49;
                    PyObject *tmp_right_name_49;
                    CHECK_OBJECT(var_liststr);
                    tmp_left_name_49 = var_liststr;
                    tmp_right_name_49 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                    tmp_assign_source_93 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_49, tmp_right_name_49);
                    if (tmp_assign_source_93 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 817;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_13;
                    }
                    {
                        PyObject *old = var_liststr;
                        assert(old != NULL);
                        var_liststr = tmp_assign_source_93;
                        Py_DECREF(old);
                    }

                }
                goto branch_end_45;
                branch_no_45:;
                {
                    PyObject *tmp_assign_source_94;
                    tmp_assign_source_94 = Py_False;
                    {
                        PyObject *old = var_start;
                        var_start = tmp_assign_source_94;
                        Py_INCREF(var_start);
                        Py_XDECREF(old);
                    }

                }
                branch_end_45:;
            }
            {
                PyObject *tmp_assign_source_95;
                PyObject *tmp_left_name_50;
                PyObject *tmp_right_name_50;
                PyObject *tmp_subscribed_name_34;
                PyObject *tmp_source_name_55;
                PyObject *tmp_subscript_name_34;
                if (var_liststr == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "liststr");
                    exception_tb = NULL;

                    exception_lineno = 820;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }

                tmp_left_name_50 = var_liststr;
                CHECK_OBJECT(par_ui);
                tmp_source_name_55 = par_ui;
                tmp_subscribed_name_34 = LOOKUP_ATTRIBUTE(tmp_source_name_55, const_str_plain_devs_list);
                if (tmp_subscribed_name_34 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 820;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
                CHECK_OBJECT(var_d);
                tmp_subscript_name_34 = var_d;
                tmp_right_name_50 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_34, tmp_subscript_name_34);
                Py_DECREF(tmp_subscribed_name_34);
                if (tmp_right_name_50 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 820;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
                tmp_assign_source_95 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_50, tmp_right_name_50);
                Py_DECREF(tmp_right_name_50);
                if (tmp_assign_source_95 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 820;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
                {
                    PyObject *old = var_liststr;
                    var_liststr = tmp_assign_source_95;
                    Py_XDECREF(old);
                }

            }
            {
                nuitka_bool tmp_condition_result_46;
                PyObject *tmp_compexpr_left_41;
                PyObject *tmp_compexpr_right_41;
                PyObject *tmp_source_name_56;
                CHECK_OBJECT(par_ui);
                tmp_source_name_56 = par_ui;
                tmp_compexpr_left_41 = LOOKUP_ATTRIBUTE(tmp_source_name_56, const_str_plain_DEV_OS);
                if (tmp_compexpr_left_41 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 822;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
                tmp_compexpr_right_41 = const_str_plain_Windows;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_41, tmp_compexpr_right_41);
                Py_DECREF(tmp_compexpr_left_41);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 822;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
                tmp_condition_result_46 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_46 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_46;
                } else {
                    goto branch_no_46;
                }
                branch_yes_46:;
                {
                    PyObject *tmp_called_instance_26;
                    PyObject *tmp_mvar_value_10;
                    PyObject *tmp_call_result_33;
                    PyObject *tmp_args_element_name_29;
                    PyObject *tmp_args_element_name_30;
                    tmp_mvar_value_10 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_background);

                    if (unlikely(tmp_mvar_value_10 == NULL)) {
                        tmp_mvar_value_10 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_background);
                    }

                    if (tmp_mvar_value_10 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 379 ], 39, 0);
                        exception_tb = NULL;

                        exception_lineno = 823;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_13;
                    }

                    tmp_called_instance_26 = tmp_mvar_value_10;
                    CHECK_OBJECT(par_ui);
                    tmp_args_element_name_29 = par_ui;
                    CHECK_OBJECT(var_d);
                    tmp_args_element_name_30 = var_d;
                    frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 823;
                    {
                        PyObject *call_args[] = {tmp_args_element_name_29, tmp_args_element_name_30};
                        tmp_call_result_33 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_26, const_str_plain_remount, call_args);
                    }

                    if (tmp_call_result_33 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 823;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_13;
                    }
                    Py_DECREF(tmp_call_result_33);
                }
                branch_no_46:;
            }
            {
                PyObject *tmp_ass_subvalue_5;
                PyObject *tmp_ass_subscribed_5;
                PyObject *tmp_source_name_57;
                PyObject *tmp_ass_subscript_5;
                tmp_ass_subvalue_5 = const_str_plain_Unlocked;
                CHECK_OBJECT(par_ui);
                tmp_source_name_57 = par_ui;
                tmp_ass_subscribed_5 = LOOKUP_ATTRIBUTE(tmp_source_name_57, const_str_plain_lockstatus_list);
                if (tmp_ass_subscribed_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 825;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
                CHECK_OBJECT(var_d);
                tmp_ass_subscript_5 = var_d;
                tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_5, tmp_ass_subscript_5, tmp_ass_subvalue_5);
                Py_DECREF(tmp_ass_subscribed_5);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 825;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
            }
            {
                PyObject *tmp_called_instance_27;
                PyObject *tmp_call_result_34;
                PyObject *tmp_args_element_name_31;
                PyObject *tmp_args_element_name_32;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_27 = par_ui;
                CHECK_OBJECT(var_d);
                tmp_args_element_name_31 = var_d;
                tmp_args_element_name_32 = LIST_COPY(const_list_int_pos_2_list);
                frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 826;
                {
                    PyObject *call_args[] = {tmp_args_element_name_31, tmp_args_element_name_32};
                    tmp_call_result_34 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_27, const_str_plain_updateDevs, call_args);
                }

                Py_DECREF(tmp_args_element_name_32);
                if (tmp_call_result_34 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 826;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
                Py_DECREF(tmp_call_result_34);
            }
            {
                nuitka_bool tmp_condition_result_47;
                PyObject *tmp_compexpr_left_42;
                PyObject *tmp_compexpr_right_42;
                PyObject *tmp_source_name_58;
                CHECK_OBJECT(var_d);
                tmp_compexpr_left_42 = var_d;
                CHECK_OBJECT(par_ui);
                tmp_source_name_58 = par_ui;
                tmp_compexpr_right_42 = LOOKUP_ATTRIBUTE(tmp_source_name_58, const_str_plain_ulocked_list);
                if (tmp_compexpr_right_42 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 827;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
                tmp_res = PySequence_Contains(tmp_compexpr_right_42, tmp_compexpr_left_42);
                Py_DECREF(tmp_compexpr_right_42);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 827;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
                tmp_condition_result_47 = (tmp_res == 1) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_47 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_47;
                } else {
                    goto branch_no_47;
                }
                branch_yes_47:;
                {
                    PyObject *tmp_called_instance_28;
                    PyObject *tmp_source_name_59;
                    PyObject *tmp_call_result_35;
                    PyObject *tmp_args_element_name_33;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_59 = par_ui;
                    tmp_called_instance_28 = LOOKUP_ATTRIBUTE(tmp_source_name_59, const_str_plain_ulocked_list);
                    if (tmp_called_instance_28 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 828;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_13;
                    }
                    CHECK_OBJECT(var_d);
                    tmp_args_element_name_33 = var_d;
                    frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 828;
                    {
                        PyObject *call_args[] = {tmp_args_element_name_33};
                        tmp_call_result_35 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_28, const_str_plain_remove, call_args);
                    }

                    Py_DECREF(tmp_called_instance_28);
                    if (tmp_call_result_35 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 828;
                        type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                        goto try_except_handler_13;
                    }
                    Py_DECREF(tmp_call_result_35);
                }
                branch_no_47:;
            }
            if (CONSIDER_THREADING() == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 813;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto try_except_handler_13;
            }
            goto loop_start_9;
            loop_end_9:;
            goto try_end_12;
            // Exception handler code:
            try_except_handler_13:;
            exception_keeper_type_12 = exception_type;
            exception_keeper_value_12 = exception_value;
            exception_keeper_tb_12 = exception_tb;
            exception_keeper_lineno_12 = exception_lineno;
            exception_type = NULL;
            exception_value = NULL;
            exception_tb = NULL;
            exception_lineno = 0;

            Py_XDECREF(tmp_for_loop_9__iter_value);
            tmp_for_loop_9__iter_value = NULL;

            CHECK_OBJECT((PyObject *)tmp_for_loop_9__for_iterator);
            Py_DECREF(tmp_for_loop_9__for_iterator);
            tmp_for_loop_9__for_iterator = NULL;

            // Re-raise.
            exception_type = exception_keeper_type_12;
            exception_value = exception_keeper_value_12;
            exception_tb = exception_keeper_tb_12;
            exception_lineno = exception_keeper_lineno_12;

            goto frame_exception_exit_1;
            // End of try:
            try_end_12:;
            Py_XDECREF(tmp_for_loop_9__iter_value);
            tmp_for_loop_9__iter_value = NULL;

            CHECK_OBJECT((PyObject *)tmp_for_loop_9__for_iterator);
            Py_DECREF(tmp_for_loop_9__for_iterator);
            tmp_for_loop_9__for_iterator = NULL;

            {
                PyObject *tmp_called_name_17;
                PyObject *tmp_source_name_60;
                PyObject *tmp_call_result_36;
                PyObject *tmp_args_element_name_34;
                PyObject *tmp_left_name_51;
                PyObject *tmp_right_name_51;
                CHECK_OBJECT(par_ui);
                tmp_source_name_60 = par_ui;
                tmp_called_name_17 = LOOKUP_ATTRIBUTE(tmp_source_name_60, const_str_plain_msg_ok);
                if (tmp_called_name_17 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 830;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                CHECK_OBJECT(var_liststr);
                tmp_left_name_51 = var_liststr;
                tmp_right_name_51 = const_str_digest_988469b196e452a23f29bba1dfcc46c1;
                tmp_args_element_name_34 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_51, tmp_right_name_51);
                if (tmp_args_element_name_34 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_17);

                    exception_lineno = 830;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 830;
                tmp_call_result_36 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_17, tmp_args_element_name_34);
                Py_DECREF(tmp_called_name_17);
                Py_DECREF(tmp_args_element_name_34);
                if (tmp_call_result_36 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 830;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_36);
            }
            {
                PyObject *tmp_called_instance_29;
                PyObject *tmp_call_result_37;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_29 = par_ui;
                frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 831;
                tmp_call_result_37 = CALL_METHOD_NO_ARGS(tmp_called_instance_29, const_str_plain_stop_spin);
                if (tmp_call_result_37 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 831;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_37);
            }
            {
                PyObject *tmp_called_instance_30;
                PyObject *tmp_call_result_38;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_30 = par_ui;
                frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 832;
                tmp_call_result_38 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_30, const_str_plain_returnToMain, &PyTuple_GET_ITEM(const_tuple_none_false_tuple, 0));

                if (tmp_call_result_38 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 832;
                    type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_38);
            }
            branch_no_44:;
        }
        branch_end_18:;
    }
    {
        nuitka_bool tmp_condition_result_48;
        int tmp_truth_name_5;
        CHECK_OBJECT(par_rescan_needed);
        tmp_truth_name_5 = CHECK_IF_TRUE(par_rescan_needed);
        if (tmp_truth_name_5 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 835;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_48 = tmp_truth_name_5 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_48 == NUITKA_BOOL_TRUE) {
            goto branch_yes_48;
        } else {
            goto branch_no_48;
        }
        branch_yes_48:;
        {
            PyObject *tmp_called_instance_31;
            PyObject *tmp_call_result_39;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_31 = par_ui;
            frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 836;
            tmp_call_result_39 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_31, const_str_plain_msg_ok, &PyTuple_GET_ITEM(const_tuple_str_digest_ae3b8b33bbb4f0816fc34e114de2f069_tuple, 0));

            if (tmp_call_result_39 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 836;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_39);
        }
        {
            PyObject *tmp_called_instance_32;
            PyObject *tmp_mvar_value_11;
            PyObject *tmp_call_result_40;
            PyObject *tmp_args_element_name_35;
            PyObject *tmp_args_element_name_36;
            PyObject *tmp_args_element_name_37;
            tmp_mvar_value_11 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_runscan);

            if (unlikely(tmp_mvar_value_11 == NULL)) {
                tmp_mvar_value_11 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runscan);
            }

            if (tmp_mvar_value_11 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 454 ], 36, 0);
                exception_tb = NULL;

                exception_lineno = 837;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_called_instance_32 = tmp_mvar_value_11;
            tmp_args_element_name_35 = Py_None;
            CHECK_OBJECT(par_ui);
            tmp_args_element_name_36 = par_ui;
            tmp_args_element_name_37 = Py_True;
            frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 837;
            {
                PyObject *call_args[] = {tmp_args_element_name_35, tmp_args_element_name_36, tmp_args_element_name_37};
                tmp_call_result_40 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_32, const_str_plain_run_scan, call_args);
            }

            if (tmp_call_result_40 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 837;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_40);
        }
        branch_no_48:;
    }
    {
        nuitka_bool tmp_condition_result_49;
        int tmp_and_left_truth_8;
        nuitka_bool tmp_and_left_value_8;
        nuitka_bool tmp_and_right_value_8;
        PyObject *tmp_compexpr_left_43;
        PyObject *tmp_compexpr_right_43;
        int tmp_truth_name_6;
        CHECK_OBJECT(var_res_sum);
        tmp_compexpr_left_43 = var_res_sum;
        tmp_compexpr_right_43 = const_int_0;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_43, tmp_compexpr_right_43);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 839;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_8 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_8 = tmp_and_left_value_8 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_8 == 1) {
            goto and_right_8;
        } else {
            goto and_left_8;
        }
        and_right_8:;
        CHECK_OBJECT(par_reboot);
        tmp_truth_name_6 = CHECK_IF_TRUE(par_reboot);
        if (tmp_truth_name_6 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 839;
            type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_8 = tmp_truth_name_6 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_condition_result_49 = tmp_and_right_value_8;
        goto and_end_8;
        and_left_8:;
        tmp_condition_result_49 = tmp_and_left_value_8;
        and_end_8:;
        if (tmp_condition_result_49 == NUITKA_BOOL_TRUE) {
            goto branch_yes_49;
        } else {
            goto branch_no_49;
        }
        branch_yes_49:;
        {
            PyObject *tmp_called_instance_33;
            PyObject *tmp_call_result_41;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_33 = par_ui;
            frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 840;
            tmp_call_result_41 = CALL_METHOD_NO_ARGS(tmp_called_instance_33, const_str_plain_stop_spin);
            if (tmp_call_result_41 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 840;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_41);
        }
        {
            PyObject *tmp_called_instance_34;
            PyObject *tmp_call_result_42;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_34 = par_ui;
            frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame.f_lineno = 841;
            tmp_call_result_42 = CALL_METHOD_NO_ARGS(tmp_called_instance_34, const_str_plain_reboot);
            if (tmp_call_result_42 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 841;
                type_description_1 = "ooooooooooooooNoooooooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_42);
        }
        branch_no_49:;
    }

#if 1
    RESTORE_FRAME_EXCEPTION(frame_c55d069b0e2db5de0f9b503ec621c80b);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_exception_exit_1:;

#if 1
    RESTORE_FRAME_EXCEPTION(frame_c55d069b0e2db5de0f9b503ec621c80b);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_c55d069b0e2db5de0f9b503ec621c80b, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_c55d069b0e2db5de0f9b503ec621c80b->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_c55d069b0e2db5de0f9b503ec621c80b, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_c55d069b0e2db5de0f9b503ec621c80b,
        type_description_1,
        par_ui,
        par_max_time,
        par_start_time,
        par_op_threads,
        par_res_list,
        par_e_to,
        par_selected_list,
        par_status_list,
        par_reboot,
        par_rescan_needed,
        par_val3,
        par_val4,
        var_list_p,
        var_list_miss,
        NULL,
        var_list_alo,
        var_start_miss,
        var_list_f,
        var_start_alo,
        var_start_na,
        var_res_sum,
        var_list_to,
        var_any_unlocked,
        var_elapsed_time,
        var_start,
        var_sel_idx,
        var_dl_len,
        var_count_f,
        var_start_f,
        var_list_spb,
        var_start_to,
        var_op_thread,
        var_sf_txt,
        var_last_f,
        var_count,
        var_d,
        var_f,
        var_i,
        var_j,
        var_start_spb,
        var_pipe,
        var_p,
        var_start_p,
        var_list_na,
        var_y,
        var_x,
        var_save_fail,
        var_liststr,
        var_curr_time
    );


    // Release cached frame.
    if (frame_c55d069b0e2db5de0f9b503ec621c80b == cache_frame_c55d069b0e2db5de0f9b503ec621c80b) {
        Py_DECREF(frame_c55d069b0e2db5de0f9b503ec621c80b);
    }
    cache_frame_c55d069b0e2db5de0f9b503ec621c80b = NULL;

    assertFrameObject(frame_c55d069b0e2db5de0f9b503ec621c80b);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(cleanop$$$function_5_unlockPBA_cleanup);
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    Py_XDECREF(var_list_p);
    var_list_p = NULL;

    Py_XDECREF(var_list_miss);
    var_list_miss = NULL;

    Py_XDECREF(var_list_alo);
    var_list_alo = NULL;

    Py_XDECREF(var_start_miss);
    var_start_miss = NULL;

    Py_XDECREF(var_list_f);
    var_list_f = NULL;

    Py_XDECREF(var_start_alo);
    var_start_alo = NULL;

    Py_XDECREF(var_start_na);
    var_start_na = NULL;

    CHECK_OBJECT((PyObject *)var_res_sum);
    Py_DECREF(var_res_sum);
    var_res_sum = NULL;

    Py_XDECREF(var_list_to);
    var_list_to = NULL;

    Py_XDECREF(var_any_unlocked);
    var_any_unlocked = NULL;

    CHECK_OBJECT((PyObject *)var_elapsed_time);
    Py_DECREF(var_elapsed_time);
    var_elapsed_time = NULL;

    Py_XDECREF(var_start);
    var_start = NULL;

    CHECK_OBJECT((PyObject *)var_sel_idx);
    Py_DECREF(var_sel_idx);
    var_sel_idx = NULL;

    Py_XDECREF(var_dl_len);
    var_dl_len = NULL;

    Py_XDECREF(var_count_f);
    var_count_f = NULL;

    Py_XDECREF(var_start_f);
    var_start_f = NULL;

    Py_XDECREF(var_list_spb);
    var_list_spb = NULL;

    Py_XDECREF(var_start_to);
    var_start_to = NULL;

    Py_XDECREF(var_op_thread);
    var_op_thread = NULL;

    Py_XDECREF(var_sf_txt);
    var_sf_txt = NULL;

    Py_XDECREF(var_last_f);
    var_last_f = NULL;

    Py_XDECREF(var_count);
    var_count = NULL;

    Py_XDECREF(var_d);
    var_d = NULL;

    Py_XDECREF(var_f);
    var_f = NULL;

    Py_XDECREF(var_i);
    var_i = NULL;

    Py_XDECREF(var_j);
    var_j = NULL;

    Py_XDECREF(var_start_spb);
    var_start_spb = NULL;

    Py_XDECREF(var_pipe);
    var_pipe = NULL;

    Py_XDECREF(var_p);
    var_p = NULL;

    Py_XDECREF(var_start_p);
    var_start_p = NULL;

    Py_XDECREF(var_list_na);
    var_list_na = NULL;

    Py_XDECREF(var_y);
    var_y = NULL;

    Py_XDECREF(var_x);
    var_x = NULL;

    CHECK_OBJECT((PyObject *)var_save_fail);
    Py_DECREF(var_save_fail);
    var_save_fail = NULL;

    Py_XDECREF(var_liststr);
    var_liststr = NULL;

    CHECK_OBJECT((PyObject *)var_curr_time);
    Py_DECREF(var_curr_time);
    var_curr_time = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_13 = exception_type;
    exception_keeper_value_13 = exception_value;
    exception_keeper_tb_13 = exception_tb;
    exception_keeper_lineno_13 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_list_p);
    var_list_p = NULL;

    Py_XDECREF(var_list_miss);
    var_list_miss = NULL;

    Py_XDECREF(var_list_alo);
    var_list_alo = NULL;

    Py_XDECREF(var_start_miss);
    var_start_miss = NULL;

    Py_XDECREF(var_list_f);
    var_list_f = NULL;

    Py_XDECREF(var_start_alo);
    var_start_alo = NULL;

    Py_XDECREF(var_start_na);
    var_start_na = NULL;

    Py_XDECREF(var_res_sum);
    var_res_sum = NULL;

    Py_XDECREF(var_list_to);
    var_list_to = NULL;

    Py_XDECREF(var_any_unlocked);
    var_any_unlocked = NULL;

    Py_XDECREF(var_elapsed_time);
    var_elapsed_time = NULL;

    Py_XDECREF(var_start);
    var_start = NULL;

    Py_XDECREF(var_sel_idx);
    var_sel_idx = NULL;

    Py_XDECREF(var_dl_len);
    var_dl_len = NULL;

    Py_XDECREF(var_count_f);
    var_count_f = NULL;

    Py_XDECREF(var_start_f);
    var_start_f = NULL;

    Py_XDECREF(var_list_spb);
    var_list_spb = NULL;

    Py_XDECREF(var_start_to);
    var_start_to = NULL;

    Py_XDECREF(var_op_thread);
    var_op_thread = NULL;

    Py_XDECREF(var_sf_txt);
    var_sf_txt = NULL;

    Py_XDECREF(var_last_f);
    var_last_f = NULL;

    Py_XDECREF(var_count);
    var_count = NULL;

    Py_XDECREF(var_d);
    var_d = NULL;

    Py_XDECREF(var_f);
    var_f = NULL;

    Py_XDECREF(var_i);
    var_i = NULL;

    Py_XDECREF(var_j);
    var_j = NULL;

    Py_XDECREF(var_start_spb);
    var_start_spb = NULL;

    Py_XDECREF(var_pipe);
    var_pipe = NULL;

    Py_XDECREF(var_p);
    var_p = NULL;

    Py_XDECREF(var_start_p);
    var_start_p = NULL;

    Py_XDECREF(var_list_na);
    var_list_na = NULL;

    Py_XDECREF(var_y);
    var_y = NULL;

    Py_XDECREF(var_x);
    var_x = NULL;

    Py_XDECREF(var_save_fail);
    var_save_fail = NULL;

    Py_XDECREF(var_liststr);
    var_liststr = NULL;

    Py_XDECREF(var_curr_time);
    var_curr_time = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_13;
    exception_value = exception_keeper_value_13;
    exception_tb = exception_keeper_tb_13;
    exception_lineno = exception_keeper_lineno_13;

    goto function_exception_exit;
    // End of try:

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(cleanop$$$function_5_unlockPBA_cleanup);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_res_list);
    Py_DECREF(par_res_list);
    CHECK_OBJECT(par_rescan_needed);
    Py_DECREF(par_rescan_needed);
    CHECK_OBJECT(par_selected_list);
    Py_DECREF(par_selected_list);
    CHECK_OBJECT(par_val3);
    Py_DECREF(par_val3);
    CHECK_OBJECT(par_val4);
    Py_DECREF(par_val4);
    CHECK_OBJECT(par_op_threads);
    Py_DECREF(par_op_threads);
    CHECK_OBJECT(par_reboot);
    Py_DECREF(par_reboot);
    CHECK_OBJECT(par_e_to);
    Py_DECREF(par_e_to);
    CHECK_OBJECT(par_start_time);
    Py_DECREF(par_start_time);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);
    CHECK_OBJECT(par_max_time);
    Py_DECREF(par_max_time);
    CHECK_OBJECT(par_status_list);
    Py_DECREF(par_status_list);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_res_list);
    Py_DECREF(par_res_list);
    CHECK_OBJECT(par_rescan_needed);
    Py_DECREF(par_rescan_needed);
    CHECK_OBJECT(par_selected_list);
    Py_DECREF(par_selected_list);
    CHECK_OBJECT(par_val3);
    Py_DECREF(par_val3);
    CHECK_OBJECT(par_val4);
    Py_DECREF(par_val4);
    CHECK_OBJECT(par_op_threads);
    Py_DECREF(par_op_threads);
    CHECK_OBJECT(par_reboot);
    Py_DECREF(par_reboot);
    CHECK_OBJECT(par_e_to);
    Py_DECREF(par_e_to);
    CHECK_OBJECT(par_start_time);
    Py_DECREF(par_start_time);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);
    CHECK_OBJECT(par_max_time);
    Py_DECREF(par_max_time);
    CHECK_OBJECT(par_status_list);
    Py_DECREF(par_status_list);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_cleanop$$$function_6_revertKeep_cleanup(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_ui = python_pars[0];
    PyObject *par_max_time = python_pars[1];
    PyObject *par_start_time = python_pars[2];
    PyObject *par_op_threads = python_pars[3];
    PyObject *par_res_list = python_pars[4];
    PyObject *par_e_to = python_pars[5];
    PyObject *par_selected_list = python_pars[6];
    PyObject *par_status_list = python_pars[7];
    PyObject *par_rescan_needed = python_pars[8];
    PyObject *par_val2 = python_pars[9];
    PyObject *par_val3 = python_pars[10];
    PyObject *par_val4 = python_pars[11];
    PyObject *var_list_p = NULL;
    PyObject *var_list_alo = NULL;
    PyObject *var_start_miss = NULL;
    PyObject *var_list_f = NULL;
    PyObject *var_start_alo = NULL;
    PyObject *var_sel_idx = NULL;
    PyObject *var_res_sum = NULL;
    PyObject *var_start = NULL;
    PyObject *var_list_to = NULL;
    PyObject *var_any_unlocked = NULL;
    PyObject *var_elapsed_time = NULL;
    PyObject *var_start_f = NULL;
    PyObject *var_list_miss = NULL;
    PyObject *var_count_f = NULL;
    PyObject *var_list_spb = NULL;
    PyObject *var_start_to = NULL;
    PyObject *var_op_thread = NULL;
    PyObject *var_last_f = NULL;
    PyObject *var_count = NULL;
    PyObject *var_d = NULL;
    PyObject *var_f = NULL;
    PyObject *var_i = NULL;
    PyObject *var_start_spb = NULL;
    PyObject *var_pipe = NULL;
    PyObject *var_p = NULL;
    PyObject *var_start_p = NULL;
    PyObject *var_list_na = NULL;
    PyObject *var_y = NULL;
    PyObject *var_x = NULL;
    PyObject *var_z = NULL;
    PyObject *var_liststr = NULL;
    PyObject *var_curr_time = NULL;
    PyObject *tmp_for_loop_1__for_iterator = NULL;
    PyObject *tmp_for_loop_1__iter_value = NULL;
    PyObject *tmp_for_loop_2__for_iterator = NULL;
    PyObject *tmp_for_loop_2__iter_value = NULL;
    PyObject *tmp_for_loop_3__for_iterator = NULL;
    PyObject *tmp_for_loop_3__iter_value = NULL;
    PyObject *tmp_for_loop_4__for_iterator = NULL;
    PyObject *tmp_for_loop_4__iter_value = NULL;
    PyObject *tmp_for_loop_5__for_iterator = NULL;
    PyObject *tmp_for_loop_5__iter_value = NULL;
    PyObject *tmp_for_loop_6__for_iterator = NULL;
    PyObject *tmp_for_loop_6__iter_value = NULL;
    PyObject *tmp_for_loop_7__for_iterator = NULL;
    PyObject *tmp_for_loop_7__iter_value = NULL;
    PyObject *tmp_for_loop_8__for_iterator = NULL;
    PyObject *tmp_for_loop_8__iter_value = NULL;
    PyObject *tmp_with_1__enter = NULL;
    PyObject *tmp_with_1__exit = NULL;
    nuitka_bool tmp_with_1__indicator = NUITKA_BOOL_UNASSIGNED;
    PyObject *tmp_with_1__source = NULL;
    struct Nuitka_FrameObject *frame_d0982cf3c09573f295fd67db087609f2;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    bool tmp_result;
    int tmp_res;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;
    PyObject *exception_keeper_type_3;
    PyObject *exception_keeper_value_3;
    PyTracebackObject *exception_keeper_tb_3;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_3;
    PyObject *exception_keeper_type_4;
    PyObject *exception_keeper_value_4;
    PyTracebackObject *exception_keeper_tb_4;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_4;
    PyObject *exception_keeper_type_5;
    PyObject *exception_keeper_value_5;
    PyTracebackObject *exception_keeper_tb_5;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_5;
    PyObject *exception_keeper_type_6;
    PyObject *exception_keeper_value_6;
    PyTracebackObject *exception_keeper_tb_6;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_6;
    PyObject *exception_keeper_type_7;
    PyObject *exception_keeper_value_7;
    PyTracebackObject *exception_keeper_tb_7;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_7;
    PyObject *exception_keeper_type_8;
    PyObject *exception_keeper_value_8;
    PyTracebackObject *exception_keeper_tb_8;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_8;
    PyObject *exception_keeper_type_9;
    PyObject *exception_keeper_value_9;
    PyTracebackObject *exception_keeper_tb_9;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_9;
    PyObject *exception_keeper_type_10;
    PyObject *exception_keeper_value_10;
    PyTracebackObject *exception_keeper_tb_10;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_10;
    PyObject *exception_keeper_type_11;
    PyObject *exception_keeper_value_11;
    PyTracebackObject *exception_keeper_tb_11;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_11;
    static struct Nuitka_FrameObject *cache_frame_d0982cf3c09573f295fd67db087609f2 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_keeper_type_12;
    PyObject *exception_keeper_value_12;
    PyTracebackObject *exception_keeper_tb_12;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_12;

    // Actual function body.
    // Tried code:
    MAKE_OR_REUSE_FRAME(cache_frame_d0982cf3c09573f295fd67db087609f2, codeobj_d0982cf3c09573f295fd67db087609f2, module_cleanop, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
    frame_d0982cf3c09573f295fd67db087609f2 = cache_frame_d0982cf3c09573f295fd67db087609f2;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_d0982cf3c09573f295fd67db087609f2);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_d0982cf3c09573f295fd67db087609f2) == 2); // Frame stack

    // Framed code:
    {
        nuitka_bool tmp_condition_result_1;
        int tmp_truth_name_1;
        CHECK_OBJECT(par_rescan_needed);
        tmp_truth_name_1 = CHECK_IF_TRUE(par_rescan_needed);
        if (tmp_truth_name_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 844;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_1 = tmp_truth_name_1 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        {
            PyObject *tmp_assattr_name_1;
            PyObject *tmp_assattr_target_1;
            tmp_assattr_name_1 = Py_True;
            CHECK_OBJECT(par_ui);
            tmp_assattr_target_1 = par_ui;
            tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, const_str_plain_scan_ip, tmp_assattr_name_1);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 845;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
        }
        branch_no_1:;
    }
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_called_instance_1;
        PyObject *tmp_mvar_value_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_time);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_time);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1164 ], 33, 0);
            exception_tb = NULL;

            exception_lineno = 846;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_1 = tmp_mvar_value_1;
        frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 846;
        tmp_assign_source_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_1, const_str_plain_time);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 846;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_curr_time == NULL);
        var_curr_time = tmp_assign_source_1;
    }
    {
        PyObject *tmp_assign_source_2;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        CHECK_OBJECT(var_curr_time);
        tmp_left_name_1 = var_curr_time;
        CHECK_OBJECT(par_start_time);
        tmp_right_name_1 = par_start_time;
        tmp_assign_source_2 = BINARY_OPERATION_SUB_OBJECT_OBJECT(tmp_left_name_1, tmp_right_name_1);
        if (tmp_assign_source_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 847;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_elapsed_time == NULL);
        var_elapsed_time = tmp_assign_source_2;
    }
    {
        nuitka_bool tmp_condition_result_2;
        PyObject *tmp_compexpr_left_1;
        PyObject *tmp_compexpr_right_1;
        CHECK_OBJECT(var_elapsed_time);
        tmp_compexpr_left_1 = var_elapsed_time;
        CHECK_OBJECT(par_max_time);
        tmp_compexpr_right_1 = par_max_time;
        tmp_res = RICH_COMPARE_BOOL_GTE_OBJECT_OBJECT(tmp_compexpr_left_1, tmp_compexpr_right_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 849;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_2 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
            goto branch_yes_2;
        } else {
            goto branch_no_2;
        }
        branch_yes_2:;
        {
            PyObject *tmp_called_instance_2;
            PyObject *tmp_call_result_1;
            CHECK_OBJECT(par_e_to);
            tmp_called_instance_2 = par_e_to;
            frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 850;
            tmp_call_result_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_2, const_str_plain_set);
            if (tmp_call_result_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 850;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_1);
        }
        {
            PyObject *tmp_assign_source_3;
            PyObject *tmp_iter_arg_1;
            CHECK_OBJECT(par_op_threads);
            tmp_iter_arg_1 = par_op_threads;
            tmp_assign_source_3 = MAKE_ITERATOR(tmp_iter_arg_1);
            if (tmp_assign_source_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 851;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_1__for_iterator == NULL);
            tmp_for_loop_1__for_iterator = tmp_assign_source_3;
        }
        // Tried code:
        loop_start_1:;
        {
            PyObject *tmp_next_source_1;
            PyObject *tmp_assign_source_4;
            CHECK_OBJECT(tmp_for_loop_1__for_iterator);
            tmp_next_source_1 = tmp_for_loop_1__for_iterator;
            tmp_assign_source_4 = ITERATOR_NEXT(tmp_next_source_1);
            if (tmp_assign_source_4 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_1;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    exception_lineno = 851;
                    goto try_except_handler_2;
                }
            }

            {
                PyObject *old = tmp_for_loop_1__iter_value;
                tmp_for_loop_1__iter_value = tmp_assign_source_4;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_5;
            CHECK_OBJECT(tmp_for_loop_1__iter_value);
            tmp_assign_source_5 = tmp_for_loop_1__iter_value;
            {
                PyObject *old = var_op_thread;
                var_op_thread = tmp_assign_source_5;
                Py_INCREF(var_op_thread);
                Py_XDECREF(old);
            }

        }
        {
            nuitka_bool tmp_condition_result_3;
            PyObject *tmp_called_instance_3;
            PyObject *tmp_call_result_2;
            int tmp_truth_name_2;
            CHECK_OBJECT(var_op_thread);
            tmp_called_instance_3 = var_op_thread;
            frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 852;
            tmp_call_result_2 = CALL_METHOD_NO_ARGS(tmp_called_instance_3, const_str_plain_is_alive);
            if (tmp_call_result_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 852;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_2;
            }
            tmp_truth_name_2 = CHECK_IF_TRUE(tmp_call_result_2);
            if (tmp_truth_name_2 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_call_result_2);

                exception_lineno = 852;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_2;
            }
            tmp_condition_result_3 = tmp_truth_name_2 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            Py_DECREF(tmp_call_result_2);
            if (tmp_condition_result_3 == NUITKA_BOOL_TRUE) {
                goto branch_yes_3;
            } else {
                goto branch_no_3;
            }
            branch_yes_3:;
            {
                nuitka_bool tmp_condition_result_4;
                PyObject *tmp_compexpr_left_2;
                PyObject *tmp_compexpr_right_2;
                PyObject *tmp_source_name_1;
                CHECK_OBJECT(par_ui);
                tmp_source_name_1 = par_ui;
                tmp_compexpr_left_2 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_process);
                if (tmp_compexpr_left_2 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 853;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_2;
                }
                tmp_compexpr_right_2 = Py_None;
                tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_2, tmp_compexpr_right_2);
                Py_DECREF(tmp_compexpr_left_2);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 853;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_2;
                }
                tmp_condition_result_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_4 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_4;
                } else {
                    goto branch_no_4;
                }
                branch_yes_4:;
                {
                    PyObject *tmp_called_instance_4;
                    PyObject *tmp_source_name_2;
                    PyObject *tmp_call_result_3;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_2 = par_ui;
                    tmp_called_instance_4 = LOOKUP_ATTRIBUTE(tmp_source_name_2, const_str_plain_process);
                    if (tmp_called_instance_4 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 854;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_2;
                    }
                    frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 854;
                    tmp_call_result_3 = CALL_METHOD_NO_ARGS(tmp_called_instance_4, const_str_plain_terminate);
                    Py_DECREF(tmp_called_instance_4);
                    if (tmp_call_result_3 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 854;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_2;
                    }
                    Py_DECREF(tmp_call_result_3);
                }
                {
                    PyObject *tmp_assattr_name_2;
                    PyObject *tmp_assattr_target_2;
                    tmp_assattr_name_2 = Py_None;
                    CHECK_OBJECT(par_ui);
                    tmp_assattr_target_2 = par_ui;
                    tmp_result = SET_ATTRIBUTE(tmp_assattr_target_2, const_str_plain_process, tmp_assattr_name_2);
                    if (tmp_result == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 855;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_2;
                    }
                }
                goto branch_end_4;
                branch_no_4:;
                {
                    nuitka_bool tmp_condition_result_5;
                    PyObject *tmp_compexpr_left_3;
                    PyObject *tmp_compexpr_right_3;
                    PyObject *tmp_source_name_3;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_3 = par_ui;
                    tmp_compexpr_left_3 = LOOKUP_ATTRIBUTE(tmp_source_name_3, const_str_plain_process_list);
                    if (tmp_compexpr_left_3 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 856;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_2;
                    }
                    tmp_compexpr_right_3 = PyList_New(0);
                    tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_3, tmp_compexpr_right_3);
                    Py_DECREF(tmp_compexpr_left_3);
                    Py_DECREF(tmp_compexpr_right_3);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 856;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_2;
                    }
                    tmp_condition_result_5 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_5 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_5;
                    } else {
                        goto branch_no_5;
                    }
                    branch_yes_5:;
                    {
                        PyObject *tmp_assign_source_6;
                        PyObject *tmp_iter_arg_2;
                        PyObject *tmp_source_name_4;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_4 = par_ui;
                        tmp_iter_arg_2 = LOOKUP_ATTRIBUTE(tmp_source_name_4, const_str_plain_process_list);
                        if (tmp_iter_arg_2 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 857;
                            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                            goto try_except_handler_2;
                        }
                        tmp_assign_source_6 = MAKE_ITERATOR(tmp_iter_arg_2);
                        Py_DECREF(tmp_iter_arg_2);
                        if (tmp_assign_source_6 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 857;
                            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                            goto try_except_handler_2;
                        }
                        {
                            PyObject *old = tmp_for_loop_2__for_iterator;
                            tmp_for_loop_2__for_iterator = tmp_assign_source_6;
                            Py_XDECREF(old);
                        }

                    }
                    // Tried code:
                    loop_start_2:;
                    {
                        PyObject *tmp_next_source_2;
                        PyObject *tmp_assign_source_7;
                        CHECK_OBJECT(tmp_for_loop_2__for_iterator);
                        tmp_next_source_2 = tmp_for_loop_2__for_iterator;
                        tmp_assign_source_7 = ITERATOR_NEXT(tmp_next_source_2);
                        if (tmp_assign_source_7 == NULL) {
                            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                                goto loop_end_2;
                            } else {

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                exception_lineno = 857;
                                goto try_except_handler_3;
                            }
                        }

                        {
                            PyObject *old = tmp_for_loop_2__iter_value;
                            tmp_for_loop_2__iter_value = tmp_assign_source_7;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assign_source_8;
                        CHECK_OBJECT(tmp_for_loop_2__iter_value);
                        tmp_assign_source_8 = tmp_for_loop_2__iter_value;
                        {
                            PyObject *old = var_p;
                            var_p = tmp_assign_source_8;
                            Py_INCREF(var_p);
                            Py_XDECREF(old);
                        }

                    }
                    {
                        nuitka_bool tmp_condition_result_6;
                        PyObject *tmp_compexpr_left_4;
                        PyObject *tmp_compexpr_right_4;
                        CHECK_OBJECT(var_p);
                        tmp_compexpr_left_4 = var_p;
                        tmp_compexpr_right_4 = Py_None;
                        tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_4, tmp_compexpr_right_4);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 858;
                            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                            goto try_except_handler_3;
                        }
                        tmp_condition_result_6 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_6 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_6;
                        } else {
                            goto branch_no_6;
                        }
                        branch_yes_6:;
                        {
                            PyObject *tmp_called_instance_5;
                            PyObject *tmp_call_result_4;
                            CHECK_OBJECT(var_p);
                            tmp_called_instance_5 = var_p;
                            frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 859;
                            tmp_call_result_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_5, const_str_plain_terminate);
                            if (tmp_call_result_4 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 859;
                                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                goto try_except_handler_3;
                            }
                            Py_DECREF(tmp_call_result_4);
                        }
                        {
                            PyObject *tmp_assign_source_9;
                            tmp_assign_source_9 = Py_None;
                            {
                                PyObject *old = var_p;
                                assert(old != NULL);
                                var_p = tmp_assign_source_9;
                                Py_INCREF(var_p);
                                Py_DECREF(old);
                            }

                        }
                        branch_no_6:;
                    }
                    if (CONSIDER_THREADING() == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 857;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_3;
                    }
                    goto loop_start_2;
                    loop_end_2:;
                    goto try_end_1;
                    // Exception handler code:
                    try_except_handler_3:;
                    exception_keeper_type_1 = exception_type;
                    exception_keeper_value_1 = exception_value;
                    exception_keeper_tb_1 = exception_tb;
                    exception_keeper_lineno_1 = exception_lineno;
                    exception_type = NULL;
                    exception_value = NULL;
                    exception_tb = NULL;
                    exception_lineno = 0;

                    Py_XDECREF(tmp_for_loop_2__iter_value);
                    tmp_for_loop_2__iter_value = NULL;

                    CHECK_OBJECT((PyObject *)tmp_for_loop_2__for_iterator);
                    Py_DECREF(tmp_for_loop_2__for_iterator);
                    tmp_for_loop_2__for_iterator = NULL;

                    // Re-raise.
                    exception_type = exception_keeper_type_1;
                    exception_value = exception_keeper_value_1;
                    exception_tb = exception_keeper_tb_1;
                    exception_lineno = exception_keeper_lineno_1;

                    goto try_except_handler_2;
                    // End of try:
                    try_end_1:;
                    Py_XDECREF(tmp_for_loop_2__iter_value);
                    tmp_for_loop_2__iter_value = NULL;

                    CHECK_OBJECT((PyObject *)tmp_for_loop_2__for_iterator);
                    Py_DECREF(tmp_for_loop_2__for_iterator);
                    tmp_for_loop_2__for_iterator = NULL;

                    {
                        PyObject *tmp_assattr_name_3;
                        PyObject *tmp_assattr_target_3;
                        tmp_assattr_name_3 = PyList_New(0);
                        CHECK_OBJECT(par_ui);
                        tmp_assattr_target_3 = par_ui;
                        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_3, const_str_plain_process_list, tmp_assattr_name_3);
                        Py_DECREF(tmp_assattr_name_3);
                        if (tmp_result == false) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 861;
                            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                            goto try_except_handler_2;
                        }
                    }
                    branch_no_5:;
                }
                branch_end_4:;
            }
            {
                PyObject *tmp_called_instance_6;
                PyObject *tmp_call_result_5;
                CHECK_OBJECT(var_op_thread);
                tmp_called_instance_6 = var_op_thread;
                frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 862;
                tmp_call_result_5 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_6, const_str_plain_join, &PyTuple_GET_ITEM(const_tuple_float_0_0_tuple, 0));

                if (tmp_call_result_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 862;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_2;
                }
                Py_DECREF(tmp_call_result_5);
            }
            branch_no_3:;
        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 851;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto try_except_handler_2;
        }
        goto loop_start_1;
        loop_end_1:;
        goto try_end_2;
        // Exception handler code:
        try_except_handler_2:;
        exception_keeper_type_2 = exception_type;
        exception_keeper_value_2 = exception_value;
        exception_keeper_tb_2 = exception_tb;
        exception_keeper_lineno_2 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_1__iter_value);
        tmp_for_loop_1__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_1__for_iterator);
        Py_DECREF(tmp_for_loop_1__for_iterator);
        tmp_for_loop_1__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_2;
        exception_value = exception_keeper_value_2;
        exception_tb = exception_keeper_tb_2;
        exception_lineno = exception_keeper_lineno_2;

        goto frame_exception_exit_1;
        // End of try:
        try_end_2:;
        Py_XDECREF(tmp_for_loop_1__iter_value);
        tmp_for_loop_1__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_1__for_iterator);
        Py_DECREF(tmp_for_loop_1__for_iterator);
        tmp_for_loop_1__for_iterator = NULL;

        branch_no_2:;
    }
    {
        PyObject *tmp_assattr_name_4;
        PyObject *tmp_assattr_target_4;
        tmp_assattr_name_4 = Py_False;
        CHECK_OBJECT(par_ui);
        tmp_assattr_target_4 = par_ui;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_4, const_str_plain_op_inprogress, tmp_assattr_name_4);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 864;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
    }
    {
        PyObject *tmp_assign_source_10;
        PyObject *tmp_iter_arg_3;
        PyObject *tmp_range_arg_1;
        PyObject *tmp_len_arg_1;
        CHECK_OBJECT(par_res_list);
        tmp_len_arg_1 = par_res_list;
        tmp_range_arg_1 = BUILTIN_LEN(tmp_len_arg_1);
        if (tmp_range_arg_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 865;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_iter_arg_3 = BUILTIN_RANGE(tmp_range_arg_1);
        Py_DECREF(tmp_range_arg_1);
        if (tmp_iter_arg_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 865;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_10 = MAKE_ITERATOR(tmp_iter_arg_3);
        Py_DECREF(tmp_iter_arg_3);
        if (tmp_assign_source_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 865;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_3__for_iterator == NULL);
        tmp_for_loop_3__for_iterator = tmp_assign_source_10;
    }
    // Tried code:
    loop_start_3:;
    {
        PyObject *tmp_next_source_3;
        PyObject *tmp_assign_source_11;
        CHECK_OBJECT(tmp_for_loop_3__for_iterator);
        tmp_next_source_3 = tmp_for_loop_3__for_iterator;
        tmp_assign_source_11 = ITERATOR_NEXT(tmp_next_source_3);
        if (tmp_assign_source_11 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_3;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                exception_lineno = 865;
                goto try_except_handler_4;
            }
        }

        {
            PyObject *old = tmp_for_loop_3__iter_value;
            tmp_for_loop_3__iter_value = tmp_assign_source_11;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_12;
        CHECK_OBJECT(tmp_for_loop_3__iter_value);
        tmp_assign_source_12 = tmp_for_loop_3__iter_value;
        {
            PyObject *old = var_i;
            var_i = tmp_assign_source_12;
            Py_INCREF(var_i);
            Py_XDECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_7;
        PyObject *tmp_compexpr_left_5;
        PyObject *tmp_compexpr_right_5;
        PyObject *tmp_subscribed_name_1;
        PyObject *tmp_subscript_name_1;
        CHECK_OBJECT(par_res_list);
        tmp_subscribed_name_1 = par_res_list;
        CHECK_OBJECT(var_i);
        tmp_subscript_name_1 = var_i;
        tmp_compexpr_left_5 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_1, tmp_subscript_name_1);
        if (tmp_compexpr_left_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 866;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto try_except_handler_4;
        }
        tmp_compexpr_right_5 = const_int_neg_1;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_5, tmp_compexpr_right_5);
        Py_DECREF(tmp_compexpr_left_5);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 866;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto try_except_handler_4;
        }
        tmp_condition_result_7 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_7 == NUITKA_BOOL_TRUE) {
            goto branch_yes_7;
        } else {
            goto branch_no_7;
        }
        branch_yes_7:;
        {
            nuitka_bool tmp_condition_result_8;
            PyObject *tmp_called_instance_7;
            PyObject *tmp_call_result_6;
            int tmp_truth_name_3;
            CHECK_OBJECT(par_e_to);
            tmp_called_instance_7 = par_e_to;
            frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 867;
            tmp_call_result_6 = CALL_METHOD_NO_ARGS(tmp_called_instance_7, const_str_plain_is_set);
            if (tmp_call_result_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 867;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_4;
            }
            tmp_truth_name_3 = CHECK_IF_TRUE(tmp_call_result_6);
            if (tmp_truth_name_3 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_call_result_6);

                exception_lineno = 867;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_4;
            }
            tmp_condition_result_8 = tmp_truth_name_3 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            Py_DECREF(tmp_call_result_6);
            if (tmp_condition_result_8 == NUITKA_BOOL_TRUE) {
                goto branch_yes_8;
            } else {
                goto branch_no_8;
            }
            branch_yes_8:;
            {
                PyObject *tmp_ass_subvalue_1;
                PyObject *tmp_ass_subscribed_1;
                PyObject *tmp_ass_subscript_1;
                tmp_ass_subvalue_1 = const_int_pos_2;
                CHECK_OBJECT(par_res_list);
                tmp_ass_subscribed_1 = par_res_list;
                CHECK_OBJECT(var_i);
                tmp_ass_subscript_1 = var_i;
                tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_1, tmp_ass_subscript_1, tmp_ass_subvalue_1);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 868;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_4;
                }
            }
            goto branch_end_8;
            branch_no_8:;
            {
                PyObject *tmp_ass_subvalue_2;
                PyObject *tmp_ass_subscribed_2;
                PyObject *tmp_ass_subscript_2;
                tmp_ass_subvalue_2 = const_int_pos_3;
                CHECK_OBJECT(par_res_list);
                tmp_ass_subscribed_2 = par_res_list;
                CHECK_OBJECT(var_i);
                tmp_ass_subscript_2 = var_i;
                tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_2, tmp_ass_subscript_2, tmp_ass_subvalue_2);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 870;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_4;
                }
            }
            branch_end_8:;
        }
        branch_no_7:;
    }
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 865;
        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
        goto try_except_handler_4;
    }
    goto loop_start_3;
    loop_end_3:;
    goto try_end_3;
    // Exception handler code:
    try_except_handler_4:;
    exception_keeper_type_3 = exception_type;
    exception_keeper_value_3 = exception_value;
    exception_keeper_tb_3 = exception_tb;
    exception_keeper_lineno_3 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_3__iter_value);
    tmp_for_loop_3__iter_value = NULL;

    CHECK_OBJECT((PyObject *)tmp_for_loop_3__for_iterator);
    Py_DECREF(tmp_for_loop_3__for_iterator);
    tmp_for_loop_3__for_iterator = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_3;
    exception_value = exception_keeper_value_3;
    exception_tb = exception_keeper_tb_3;
    exception_lineno = exception_keeper_lineno_3;

    goto frame_exception_exit_1;
    // End of try:
    try_end_3:;
    Py_XDECREF(tmp_for_loop_3__iter_value);
    tmp_for_loop_3__iter_value = NULL;

    CHECK_OBJECT((PyObject *)tmp_for_loop_3__for_iterator);
    Py_DECREF(tmp_for_loop_3__for_iterator);
    tmp_for_loop_3__for_iterator = NULL;

    {
        PyObject *tmp_assign_source_13;
        PyObject *tmp_sum_sequence_1;
        CHECK_OBJECT(par_res_list);
        tmp_sum_sequence_1 = par_res_list;
        tmp_assign_source_13 = BUILTIN_SUM1(tmp_sum_sequence_1);
        if (tmp_assign_source_13 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 871;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_res_sum == NULL);
        var_res_sum = tmp_assign_source_13;
    }
    {
        PyObject *tmp_assign_source_14;
        tmp_assign_source_14 = Py_False;
        assert(var_any_unlocked == NULL);
        Py_INCREF(tmp_assign_source_14);
        var_any_unlocked = tmp_assign_source_14;
    }
    {
        PyObject *tmp_assign_source_15;
        tmp_assign_source_15 = const_int_0;
        assert(var_sel_idx == NULL);
        Py_INCREF(tmp_assign_source_15);
        var_sel_idx = tmp_assign_source_15;
    }
    {
        PyObject *tmp_assign_source_16;
        PyObject *tmp_iter_arg_4;
        CHECK_OBJECT(par_selected_list);
        tmp_iter_arg_4 = par_selected_list;
        tmp_assign_source_16 = MAKE_ITERATOR(tmp_iter_arg_4);
        if (tmp_assign_source_16 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 876;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_4__for_iterator == NULL);
        tmp_for_loop_4__for_iterator = tmp_assign_source_16;
    }
    // Tried code:
    loop_start_4:;
    {
        PyObject *tmp_next_source_4;
        PyObject *tmp_assign_source_17;
        CHECK_OBJECT(tmp_for_loop_4__for_iterator);
        tmp_next_source_4 = tmp_for_loop_4__for_iterator;
        tmp_assign_source_17 = ITERATOR_NEXT(tmp_next_source_4);
        if (tmp_assign_source_17 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_4;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                exception_lineno = 876;
                goto try_except_handler_5;
            }
        }

        {
            PyObject *old = tmp_for_loop_4__iter_value;
            tmp_for_loop_4__iter_value = tmp_assign_source_17;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_18;
        CHECK_OBJECT(tmp_for_loop_4__iter_value);
        tmp_assign_source_18 = tmp_for_loop_4__iter_value;
        {
            PyObject *old = var_x;
            var_x = tmp_assign_source_18;
            Py_INCREF(var_x);
            Py_XDECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_9;
        int tmp_and_left_truth_1;
        nuitka_bool tmp_and_left_value_1;
        nuitka_bool tmp_and_right_value_1;
        PyObject *tmp_compexpr_left_6;
        PyObject *tmp_compexpr_right_6;
        PyObject *tmp_source_name_5;
        PyObject *tmp_compexpr_left_7;
        PyObject *tmp_compexpr_right_7;
        PyObject *tmp_subscribed_name_2;
        PyObject *tmp_subscript_name_2;
        CHECK_OBJECT(var_x);
        tmp_compexpr_left_6 = var_x;
        CHECK_OBJECT(par_ui);
        tmp_source_name_5 = par_ui;
        tmp_compexpr_right_6 = LOOKUP_ATTRIBUTE(tmp_source_name_5, const_str_plain_locked_list);
        if (tmp_compexpr_right_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 877;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto try_except_handler_5;
        }
        tmp_res = PySequence_Contains(tmp_compexpr_right_6, tmp_compexpr_left_6);
        Py_DECREF(tmp_compexpr_right_6);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 877;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto try_except_handler_5;
        }
        tmp_and_left_value_1 = (tmp_res == 1) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_1 = tmp_and_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_1 == 1) {
            goto and_right_1;
        } else {
            goto and_left_1;
        }
        and_right_1:;
        CHECK_OBJECT(par_res_list);
        tmp_subscribed_name_2 = par_res_list;
        CHECK_OBJECT(var_sel_idx);
        tmp_subscript_name_2 = var_sel_idx;
        tmp_compexpr_left_7 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_2, tmp_subscript_name_2);
        if (tmp_compexpr_left_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 877;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto try_except_handler_5;
        }
        tmp_compexpr_right_7 = const_int_0;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_7, tmp_compexpr_right_7);
        Py_DECREF(tmp_compexpr_left_7);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 877;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto try_except_handler_5;
        }
        tmp_and_right_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_condition_result_9 = tmp_and_right_value_1;
        goto and_end_1;
        and_left_1:;
        tmp_condition_result_9 = tmp_and_left_value_1;
        and_end_1:;
        if (tmp_condition_result_9 == NUITKA_BOOL_TRUE) {
            goto branch_yes_9;
        } else {
            goto branch_no_9;
        }
        branch_yes_9:;
        {
            PyObject *tmp_assign_source_19;
            tmp_assign_source_19 = Py_True;
            {
                PyObject *old = var_any_unlocked;
                var_any_unlocked = tmp_assign_source_19;
                Py_INCREF(var_any_unlocked);
                Py_XDECREF(old);
            }

        }
        branch_no_9:;
    }
    {
        PyObject *tmp_assign_source_20;
        PyObject *tmp_left_name_2;
        PyObject *tmp_right_name_2;
        CHECK_OBJECT(var_sel_idx);
        tmp_left_name_2 = var_sel_idx;
        tmp_right_name_2 = const_int_pos_1;
        tmp_assign_source_20 = BINARY_OPERATION_ADD_OBJECT_INT(tmp_left_name_2, tmp_right_name_2);
        assert(!(tmp_assign_source_20 == NULL));
        {
            PyObject *old = var_sel_idx;
            assert(old != NULL);
            var_sel_idx = tmp_assign_source_20;
            Py_DECREF(old);
        }

    }
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 876;
        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
        goto try_except_handler_5;
    }
    goto loop_start_4;
    loop_end_4:;
    goto try_end_4;
    // Exception handler code:
    try_except_handler_5:;
    exception_keeper_type_4 = exception_type;
    exception_keeper_value_4 = exception_value;
    exception_keeper_tb_4 = exception_tb;
    exception_keeper_lineno_4 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_4__iter_value);
    tmp_for_loop_4__iter_value = NULL;

    CHECK_OBJECT((PyObject *)tmp_for_loop_4__for_iterator);
    Py_DECREF(tmp_for_loop_4__for_iterator);
    tmp_for_loop_4__for_iterator = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_4;
    exception_value = exception_keeper_value_4;
    exception_tb = exception_keeper_tb_4;
    exception_lineno = exception_keeper_lineno_4;

    goto frame_exception_exit_1;
    // End of try:
    try_end_4:;
    Py_XDECREF(tmp_for_loop_4__iter_value);
    tmp_for_loop_4__iter_value = NULL;

    CHECK_OBJECT((PyObject *)tmp_for_loop_4__for_iterator);
    Py_DECREF(tmp_for_loop_4__for_iterator);
    tmp_for_loop_4__for_iterator = NULL;

    {
        nuitka_bool tmp_condition_result_10;
        int tmp_and_left_truth_2;
        nuitka_bool tmp_and_left_value_2;
        nuitka_bool tmp_and_right_value_2;
        int tmp_truth_name_4;
        PyObject *tmp_compexpr_left_8;
        PyObject *tmp_compexpr_right_8;
        PyObject *tmp_source_name_6;
        if (var_any_unlocked == NULL) {

            exception_type = PyExc_UnboundLocalError;
            Py_INCREF(exception_type);
            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "any_unlocked");
            exception_tb = NULL;

            exception_lineno = 880;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_truth_name_4 = CHECK_IF_TRUE(var_any_unlocked);
        if (tmp_truth_name_4 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 880;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_2 = tmp_truth_name_4 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_2 = tmp_and_left_value_2 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_2 == 1) {
            goto and_right_2;
        } else {
            goto and_left_2;
        }
        and_right_2:;
        CHECK_OBJECT(par_ui);
        tmp_source_name_6 = par_ui;
        tmp_compexpr_left_8 = LOOKUP_ATTRIBUTE(tmp_source_name_6, const_str_plain_DEV_OS);
        if (tmp_compexpr_left_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 880;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_8 = const_str_plain_Windows;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_8, tmp_compexpr_right_8);
        Py_DECREF(tmp_compexpr_left_8);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 880;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_2 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_condition_result_10 = tmp_and_right_value_2;
        goto and_end_2;
        and_left_2:;
        tmp_condition_result_10 = tmp_and_left_value_2;
        and_end_2:;
        if (tmp_condition_result_10 == NUITKA_BOOL_TRUE) {
            goto branch_yes_10;
        } else {
            goto branch_no_10;
        }
        branch_yes_10:;
        {
            PyObject *tmp_assign_source_21;
            PyObject *tmp_iter_arg_5;
            PyObject *tmp_range_arg_2;
            PyObject *tmp_len_arg_2;
            PyObject *tmp_source_name_7;
            CHECK_OBJECT(par_ui);
            tmp_source_name_7 = par_ui;
            tmp_len_arg_2 = LOOKUP_ATTRIBUTE(tmp_source_name_7, const_str_plain_devs_list);
            if (tmp_len_arg_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 881;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_range_arg_2 = BUILTIN_LEN(tmp_len_arg_2);
            Py_DECREF(tmp_len_arg_2);
            if (tmp_range_arg_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 881;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_iter_arg_5 = BUILTIN_RANGE(tmp_range_arg_2);
            Py_DECREF(tmp_range_arg_2);
            if (tmp_iter_arg_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 881;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_assign_source_21 = MAKE_ITERATOR(tmp_iter_arg_5);
            Py_DECREF(tmp_iter_arg_5);
            if (tmp_assign_source_21 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 881;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_5__for_iterator == NULL);
            tmp_for_loop_5__for_iterator = tmp_assign_source_21;
        }
        // Tried code:
        loop_start_5:;
        {
            PyObject *tmp_next_source_5;
            PyObject *tmp_assign_source_22;
            CHECK_OBJECT(tmp_for_loop_5__for_iterator);
            tmp_next_source_5 = tmp_for_loop_5__for_iterator;
            tmp_assign_source_22 = ITERATOR_NEXT(tmp_next_source_5);
            if (tmp_assign_source_22 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_5;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    exception_lineno = 881;
                    goto try_except_handler_6;
                }
            }

            {
                PyObject *old = tmp_for_loop_5__iter_value;
                tmp_for_loop_5__iter_value = tmp_assign_source_22;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_23;
            CHECK_OBJECT(tmp_for_loop_5__iter_value);
            tmp_assign_source_23 = tmp_for_loop_5__iter_value;
            {
                PyObject *old = var_z;
                var_z = tmp_assign_source_23;
                Py_INCREF(var_z);
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_called_instance_8;
            PyObject *tmp_mvar_value_2;
            PyObject *tmp_call_result_7;
            PyObject *tmp_args_element_name_1;
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_runop);

            if (unlikely(tmp_mvar_value_2 == NULL)) {
                tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runop);
            }

            if (tmp_mvar_value_2 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 490 ], 34, 0);
                exception_tb = NULL;

                exception_lineno = 882;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_6;
            }

            tmp_called_instance_8 = tmp_mvar_value_2;
            CHECK_OBJECT(var_z);
            tmp_args_element_name_1 = var_z;
            frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 882;
            {
                PyObject *call_args[] = {tmp_args_element_name_1};
                tmp_call_result_7 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_8, const_str_plain_prelock, call_args);
            }

            if (tmp_call_result_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 882;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_6;
            }
            Py_DECREF(tmp_call_result_7);
        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 881;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto try_except_handler_6;
        }
        goto loop_start_5;
        loop_end_5:;
        goto try_end_5;
        // Exception handler code:
        try_except_handler_6:;
        exception_keeper_type_5 = exception_type;
        exception_keeper_value_5 = exception_value;
        exception_keeper_tb_5 = exception_tb;
        exception_keeper_lineno_5 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_5__iter_value);
        tmp_for_loop_5__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_5__for_iterator);
        Py_DECREF(tmp_for_loop_5__for_iterator);
        tmp_for_loop_5__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_5;
        exception_value = exception_keeper_value_5;
        exception_tb = exception_keeper_tb_5;
        exception_lineno = exception_keeper_lineno_5;

        goto frame_exception_exit_1;
        // End of try:
        try_end_5:;
        Py_XDECREF(tmp_for_loop_5__iter_value);
        tmp_for_loop_5__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_5__for_iterator);
        Py_DECREF(tmp_for_loop_5__for_iterator);
        tmp_for_loop_5__for_iterator = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_24;
            PyObject *tmp_open_filename_1;
            PyObject *tmp_source_name_8;
            PyObject *tmp_mvar_value_3;
            PyObject *tmp_open_mode_1;
            tmp_mvar_value_3 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_os);

            if (unlikely(tmp_mvar_value_3 == NULL)) {
                tmp_mvar_value_3 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
            }

            if (tmp_mvar_value_3 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                exception_tb = NULL;

                exception_lineno = 883;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }

            tmp_source_name_8 = tmp_mvar_value_3;
            tmp_open_filename_1 = LOOKUP_ATTRIBUTE(tmp_source_name_8, const_str_plain_devnull);
            if (tmp_open_filename_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 883;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }
            tmp_open_mode_1 = const_str_plain_w;
            tmp_assign_source_24 = BUILTIN_OPEN(tmp_open_filename_1, tmp_open_mode_1, NULL);
            Py_DECREF(tmp_open_filename_1);
            if (tmp_assign_source_24 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 883;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }
            assert(tmp_with_1__source == NULL);
            tmp_with_1__source = tmp_assign_source_24;
        }
        {
            PyObject *tmp_assign_source_25;
            PyObject *tmp_source_name_9;
            CHECK_OBJECT(tmp_with_1__source);
            tmp_source_name_9 = tmp_with_1__source;
            tmp_assign_source_25 = LOOKUP_SPECIAL(tmp_source_name_9, const_str_plain___exit__);
            if (tmp_assign_source_25 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 883;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }
            assert(tmp_with_1__exit == NULL);
            tmp_with_1__exit = tmp_assign_source_25;
        }
        {
            PyObject *tmp_assign_source_26;
            PyObject *tmp_called_name_1;
            PyObject *tmp_source_name_10;
            CHECK_OBJECT(tmp_with_1__source);
            tmp_source_name_10 = tmp_with_1__source;
            tmp_called_name_1 = LOOKUP_SPECIAL(tmp_source_name_10, const_str_plain___enter__);
            if (tmp_called_name_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 883;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }
            frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 883;
            tmp_assign_source_26 = CALL_FUNCTION_NO_ARGS(tmp_called_name_1);
            Py_DECREF(tmp_called_name_1);
            if (tmp_assign_source_26 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 883;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }
            assert(tmp_with_1__enter == NULL);
            tmp_with_1__enter = tmp_assign_source_26;
        }
        {
            nuitka_bool tmp_assign_source_27;
            tmp_assign_source_27 = NUITKA_BOOL_TRUE;
            tmp_with_1__indicator = tmp_assign_source_27;
        }
        {
            PyObject *tmp_assign_source_28;
            CHECK_OBJECT(tmp_with_1__enter);
            tmp_assign_source_28 = tmp_with_1__enter;
            assert(var_pipe == NULL);
            Py_INCREF(tmp_assign_source_28);
            var_pipe = tmp_assign_source_28;
        }
        // Tried code:
        // Tried code:
        {
            PyObject *tmp_assign_source_29;
            PyObject *tmp_open_filename_2;
            PyObject *tmp_open_mode_2;
            tmp_open_filename_2 = const_str_digest_2d85cb53b7a3787dd8780d68a265e952;
            tmp_open_mode_2 = const_str_plain_w;
            tmp_assign_source_29 = BUILTIN_OPEN(tmp_open_filename_2, tmp_open_mode_2, NULL);
            if (tmp_assign_source_29 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 884;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            assert(var_f == NULL);
            var_f = tmp_assign_source_29;
        }
        {
            PyObject *tmp_called_instance_9;
            PyObject *tmp_call_result_8;
            CHECK_OBJECT(var_f);
            tmp_called_instance_9 = var_f;
            frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 885;
            tmp_call_result_8 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_9, const_str_plain_write, &PyTuple_GET_ITEM(const_tuple_str_plain_rescan_tuple, 0));

            if (tmp_call_result_8 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 885;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            Py_DECREF(tmp_call_result_8);
        }
        {
            PyObject *tmp_called_instance_10;
            PyObject *tmp_call_result_9;
            CHECK_OBJECT(var_f);
            tmp_called_instance_10 = var_f;
            frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 886;
            tmp_call_result_9 = CALL_METHOD_NO_ARGS(tmp_called_instance_10, const_str_plain_close);
            if (tmp_call_result_9 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 886;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            Py_DECREF(tmp_call_result_9);
        }
        {
            PyObject *tmp_called_name_2;
            PyObject *tmp_source_name_11;
            PyObject *tmp_mvar_value_4;
            PyObject *tmp_call_result_10;
            PyObject *tmp_args_name_1;
            PyObject *tmp_kw_name_1;
            PyObject *tmp_dict_key_1;
            PyObject *tmp_dict_value_1;
            tmp_mvar_value_4 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_subprocess);

            if (unlikely(tmp_mvar_value_4 == NULL)) {
                tmp_mvar_value_4 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_subprocess);
            }

            if (tmp_mvar_value_4 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 835 ], 39, 0);
                exception_tb = NULL;

                exception_lineno = 887;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }

            tmp_source_name_11 = tmp_mvar_value_4;
            tmp_called_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_11, const_str_plain_call);
            if (tmp_called_name_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 887;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            tmp_args_name_1 = DEEP_COPY(const_tuple_list_02be30ce96f2e63d8ca972f37079a88b_list_tuple);
            CHECK_OBJECT(var_pipe);
            tmp_dict_value_1 = var_pipe;
            tmp_dict_key_1 = const_str_plain_stdout;
            tmp_kw_name_1 = _PyDict_NewPresized( 1 );
            tmp_res = PyDict_SetItem(tmp_kw_name_1, tmp_dict_key_1, tmp_dict_value_1);
            assert(!(tmp_res != 0));
            frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 887;
            tmp_call_result_10 = CALL_FUNCTION(tmp_called_name_2, tmp_args_name_1, tmp_kw_name_1);
            Py_DECREF(tmp_called_name_2);
            Py_DECREF(tmp_args_name_1);
            Py_DECREF(tmp_kw_name_1);
            if (tmp_call_result_10 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 887;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            Py_DECREF(tmp_call_result_10);
        }
        {
            PyObject *tmp_called_instance_11;
            PyObject *tmp_mvar_value_5;
            PyObject *tmp_call_result_11;
            tmp_mvar_value_5 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_os);

            if (unlikely(tmp_mvar_value_5 == NULL)) {
                tmp_mvar_value_5 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
            }

            if (tmp_mvar_value_5 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                exception_tb = NULL;

                exception_lineno = 888;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }

            tmp_called_instance_11 = tmp_mvar_value_5;
            frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 888;
            tmp_call_result_11 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_11, const_str_plain_remove, &PyTuple_GET_ITEM(const_tuple_str_digest_2d85cb53b7a3787dd8780d68a265e952_tuple, 0));

            if (tmp_call_result_11 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 888;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            Py_DECREF(tmp_call_result_11);
        }
        goto try_end_6;
        // Exception handler code:
        try_except_handler_9:;
        exception_keeper_type_6 = exception_type;
        exception_keeper_value_6 = exception_value;
        exception_keeper_tb_6 = exception_tb;
        exception_keeper_lineno_6 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Preserve existing published exception.
        PRESERVE_FRAME_EXCEPTION(frame_d0982cf3c09573f295fd67db087609f2);
        if (exception_keeper_tb_6 == NULL) {
            exception_keeper_tb_6 = MAKE_TRACEBACK(frame_d0982cf3c09573f295fd67db087609f2, exception_keeper_lineno_6);
        } else if (exception_keeper_lineno_6 != 0) {
            exception_keeper_tb_6 = ADD_TRACEBACK(exception_keeper_tb_6, frame_d0982cf3c09573f295fd67db087609f2, exception_keeper_lineno_6);
        }

        NORMALIZE_EXCEPTION(&exception_keeper_type_6, &exception_keeper_value_6, &exception_keeper_tb_6);
        PUBLISH_EXCEPTION(&exception_keeper_type_6, &exception_keeper_value_6, &exception_keeper_tb_6);
        {
            nuitka_bool tmp_condition_result_11;
            PyObject *tmp_compexpr_left_9;
            PyObject *tmp_compexpr_right_9;
            tmp_compexpr_left_9 = EXC_TYPE(PyThreadState_GET());
            tmp_compexpr_right_9 = PyExc_BaseException;
            tmp_res = EXCEPTION_MATCH_BOOL(tmp_compexpr_left_9, tmp_compexpr_right_9);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 883;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_8;
            }
            tmp_condition_result_11 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_11 == NUITKA_BOOL_TRUE) {
                goto branch_yes_11;
            } else {
                goto branch_no_11;
            }
            branch_yes_11:;
            {
                nuitka_bool tmp_assign_source_30;
                tmp_assign_source_30 = NUITKA_BOOL_FALSE;
                tmp_with_1__indicator = tmp_assign_source_30;
            }
            {
                nuitka_bool tmp_condition_result_12;
                PyObject *tmp_operand_name_1;
                PyObject *tmp_called_name_3;
                PyObject *tmp_args_element_name_2;
                PyObject *tmp_args_element_name_3;
                PyObject *tmp_args_element_name_4;
                CHECK_OBJECT(tmp_with_1__exit);
                tmp_called_name_3 = tmp_with_1__exit;
                tmp_args_element_name_2 = EXC_TYPE(PyThreadState_GET());
                tmp_args_element_name_3 = EXC_VALUE(PyThreadState_GET());
                tmp_args_element_name_4 = EXC_TRACEBACK(PyThreadState_GET());
                frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 888;
                {
                    PyObject *call_args[] = {tmp_args_element_name_2, tmp_args_element_name_3, tmp_args_element_name_4};
                    tmp_operand_name_1 = CALL_FUNCTION_WITH_ARGS3(tmp_called_name_3, call_args);
                }

                if (tmp_operand_name_1 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 888;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_8;
                }
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_1);
                Py_DECREF(tmp_operand_name_1);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 888;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_8;
                }
                tmp_condition_result_12 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_12 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_12;
                } else {
                    goto branch_no_12;
                }
                branch_yes_12:;
                tmp_result = RERAISE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                if (unlikely(tmp_result == false)) {
                    exception_lineno = 888;
                }

                if (exception_tb && exception_tb->tb_frame == &frame_d0982cf3c09573f295fd67db087609f2->m_frame) frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = exception_tb->tb_lineno;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_8;
                branch_no_12:;
            }
            goto branch_end_11;
            branch_no_11:;
            tmp_result = RERAISE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            if (unlikely(tmp_result == false)) {
                exception_lineno = 883;
            }

            if (exception_tb && exception_tb->tb_frame == &frame_d0982cf3c09573f295fd67db087609f2->m_frame) frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = exception_tb->tb_lineno;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto try_except_handler_8;
            branch_end_11:;
        }
        goto try_end_6;
        // exception handler codes exits in all cases
        NUITKA_CANNOT_GET_HERE(cleanop$$$function_6_revertKeep_cleanup);
        return NULL;
        // End of try:
        try_end_6:;
        goto try_end_7;
        // Exception handler code:
        try_except_handler_8:;
        exception_keeper_type_7 = exception_type;
        exception_keeper_value_7 = exception_value;
        exception_keeper_tb_7 = exception_tb;
        exception_keeper_lineno_7 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        {
            nuitka_bool tmp_condition_result_13;
            nuitka_bool tmp_compexpr_left_10;
            nuitka_bool tmp_compexpr_right_10;
            assert(tmp_with_1__indicator != NUITKA_BOOL_UNASSIGNED);
            tmp_compexpr_left_10 = tmp_with_1__indicator;
            tmp_compexpr_right_10 = NUITKA_BOOL_TRUE;
            tmp_condition_result_13 = (tmp_compexpr_left_10 == tmp_compexpr_right_10) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_13 == NUITKA_BOOL_TRUE) {
                goto branch_yes_13;
            } else {
                goto branch_no_13;
            }
            branch_yes_13:;
            {
                PyObject *tmp_called_name_4;
                PyObject *tmp_call_result_12;
                CHECK_OBJECT(tmp_with_1__exit);
                tmp_called_name_4 = tmp_with_1__exit;
                frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 888;
                tmp_call_result_12 = CALL_FUNCTION_WITH_ARGS3(tmp_called_name_4, &PyTuple_GET_ITEM(const_tuple_none_none_none_tuple, 0));

                if (tmp_call_result_12 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);

                    Py_DECREF(exception_keeper_type_7);
                    Py_XDECREF(exception_keeper_value_7);
                    Py_XDECREF(exception_keeper_tb_7);

                    exception_lineno = 888;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_7;
                }
                Py_DECREF(tmp_call_result_12);
            }
            branch_no_13:;
        }
        // Re-raise.
        exception_type = exception_keeper_type_7;
        exception_value = exception_keeper_value_7;
        exception_tb = exception_keeper_tb_7;
        exception_lineno = exception_keeper_lineno_7;

        goto try_except_handler_7;
        // End of try:
        try_end_7:;
        {
            nuitka_bool tmp_condition_result_14;
            nuitka_bool tmp_compexpr_left_11;
            nuitka_bool tmp_compexpr_right_11;
            assert(tmp_with_1__indicator != NUITKA_BOOL_UNASSIGNED);
            tmp_compexpr_left_11 = tmp_with_1__indicator;
            tmp_compexpr_right_11 = NUITKA_BOOL_TRUE;
            tmp_condition_result_14 = (tmp_compexpr_left_11 == tmp_compexpr_right_11) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_14 == NUITKA_BOOL_TRUE) {
                goto branch_yes_14;
            } else {
                goto branch_no_14;
            }
            branch_yes_14:;
            {
                PyObject *tmp_called_name_5;
                PyObject *tmp_call_result_13;
                CHECK_OBJECT(tmp_with_1__exit);
                tmp_called_name_5 = tmp_with_1__exit;
                frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 888;
                tmp_call_result_13 = CALL_FUNCTION_WITH_ARGS3(tmp_called_name_5, &PyTuple_GET_ITEM(const_tuple_none_none_none_tuple, 0));

                if (tmp_call_result_13 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 888;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_7;
                }
                Py_DECREF(tmp_call_result_13);
            }
            branch_no_14:;
        }
        goto try_end_8;
        // Exception handler code:
        try_except_handler_7:;
        exception_keeper_type_8 = exception_type;
        exception_keeper_value_8 = exception_value;
        exception_keeper_tb_8 = exception_tb;
        exception_keeper_lineno_8 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_with_1__source);
        tmp_with_1__source = NULL;

        Py_XDECREF(tmp_with_1__enter);
        tmp_with_1__enter = NULL;

        Py_XDECREF(tmp_with_1__exit);
        tmp_with_1__exit = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_8;
        exception_value = exception_keeper_value_8;
        exception_tb = exception_keeper_tb_8;
        exception_lineno = exception_keeper_lineno_8;

        goto frame_exception_exit_1;
        // End of try:
        try_end_8:;
        CHECK_OBJECT((PyObject *)tmp_with_1__source);
        Py_DECREF(tmp_with_1__source);
        tmp_with_1__source = NULL;

        CHECK_OBJECT((PyObject *)tmp_with_1__enter);
        Py_DECREF(tmp_with_1__enter);
        tmp_with_1__enter = NULL;

        CHECK_OBJECT((PyObject *)tmp_with_1__exit);
        Py_DECREF(tmp_with_1__exit);
        tmp_with_1__exit = NULL;

        {
            PyObject *tmp_assign_source_31;
            PyObject *tmp_iter_arg_6;
            PyObject *tmp_range_arg_3;
            PyObject *tmp_len_arg_3;
            PyObject *tmp_source_name_12;
            CHECK_OBJECT(par_ui);
            tmp_source_name_12 = par_ui;
            tmp_len_arg_3 = LOOKUP_ATTRIBUTE(tmp_source_name_12, const_str_plain_devs_list);
            if (tmp_len_arg_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 889;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_range_arg_3 = BUILTIN_LEN(tmp_len_arg_3);
            Py_DECREF(tmp_len_arg_3);
            if (tmp_range_arg_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 889;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_iter_arg_6 = BUILTIN_RANGE(tmp_range_arg_3);
            Py_DECREF(tmp_range_arg_3);
            if (tmp_iter_arg_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 889;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_assign_source_31 = MAKE_ITERATOR(tmp_iter_arg_6);
            Py_DECREF(tmp_iter_arg_6);
            if (tmp_assign_source_31 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 889;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_6__for_iterator == NULL);
            tmp_for_loop_6__for_iterator = tmp_assign_source_31;
        }
        // Tried code:
        loop_start_6:;
        {
            PyObject *tmp_next_source_6;
            PyObject *tmp_assign_source_32;
            CHECK_OBJECT(tmp_for_loop_6__for_iterator);
            tmp_next_source_6 = tmp_for_loop_6__for_iterator;
            tmp_assign_source_32 = ITERATOR_NEXT(tmp_next_source_6);
            if (tmp_assign_source_32 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_6;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    exception_lineno = 889;
                    goto try_except_handler_10;
                }
            }

            {
                PyObject *old = tmp_for_loop_6__iter_value;
                tmp_for_loop_6__iter_value = tmp_assign_source_32;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_33;
            CHECK_OBJECT(tmp_for_loop_6__iter_value);
            tmp_assign_source_33 = tmp_for_loop_6__iter_value;
            {
                PyObject *old = var_z;
                var_z = tmp_assign_source_33;
                Py_INCREF(var_z);
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_called_instance_12;
            PyObject *tmp_mvar_value_6;
            PyObject *tmp_call_result_14;
            PyObject *tmp_args_element_name_5;
            tmp_mvar_value_6 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_runop);

            if (unlikely(tmp_mvar_value_6 == NULL)) {
                tmp_mvar_value_6 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runop);
            }

            if (tmp_mvar_value_6 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 490 ], 34, 0);
                exception_tb = NULL;

                exception_lineno = 890;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_10;
            }

            tmp_called_instance_12 = tmp_mvar_value_6;
            CHECK_OBJECT(var_z);
            tmp_args_element_name_5 = var_z;
            frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 890;
            {
                PyObject *call_args[] = {tmp_args_element_name_5};
                tmp_call_result_14 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_12, const_str_plain_postlock, call_args);
            }

            if (tmp_call_result_14 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 890;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_10;
            }
            Py_DECREF(tmp_call_result_14);
        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 889;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto try_except_handler_10;
        }
        goto loop_start_6;
        loop_end_6:;
        goto try_end_9;
        // Exception handler code:
        try_except_handler_10:;
        exception_keeper_type_9 = exception_type;
        exception_keeper_value_9 = exception_value;
        exception_keeper_tb_9 = exception_tb;
        exception_keeper_lineno_9 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_6__iter_value);
        tmp_for_loop_6__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_6__for_iterator);
        Py_DECREF(tmp_for_loop_6__for_iterator);
        tmp_for_loop_6__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_9;
        exception_value = exception_keeper_value_9;
        exception_tb = exception_keeper_tb_9;
        exception_lineno = exception_keeper_lineno_9;

        goto frame_exception_exit_1;
        // End of try:
        try_end_9:;
        Py_XDECREF(tmp_for_loop_6__iter_value);
        tmp_for_loop_6__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_6__for_iterator);
        Py_DECREF(tmp_for_loop_6__for_iterator);
        tmp_for_loop_6__for_iterator = NULL;

        branch_no_10:;
    }
    {
        nuitka_bool tmp_condition_result_15;
        PyObject *tmp_compexpr_left_12;
        PyObject *tmp_compexpr_right_12;
        CHECK_OBJECT(var_res_sum);
        tmp_compexpr_left_12 = var_res_sum;
        tmp_compexpr_right_12 = const_int_0;
        tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_INT(tmp_compexpr_left_12, tmp_compexpr_right_12);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 892;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_15 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_15 == NUITKA_BOOL_TRUE) {
            goto branch_yes_15;
        } else {
            goto branch_no_15;
        }
        branch_yes_15:;
        {
            PyObject *tmp_assign_source_34;
            tmp_assign_source_34 = Py_True;
            assert(var_start_f == NULL);
            Py_INCREF(tmp_assign_source_34);
            var_start_f = tmp_assign_source_34;
        }
        {
            PyObject *tmp_assign_source_35;
            tmp_assign_source_35 = Py_True;
            assert(var_start_p == NULL);
            Py_INCREF(tmp_assign_source_35);
            var_start_p = tmp_assign_source_35;
        }
        {
            PyObject *tmp_assign_source_36;
            tmp_assign_source_36 = Py_True;
            assert(var_start_alo == NULL);
            Py_INCREF(tmp_assign_source_36);
            var_start_alo = tmp_assign_source_36;
        }
        {
            PyObject *tmp_assign_source_37;
            tmp_assign_source_37 = Py_True;
            assert(var_start_to == NULL);
            Py_INCREF(tmp_assign_source_37);
            var_start_to = tmp_assign_source_37;
        }
        {
            PyObject *tmp_assign_source_38;
            tmp_assign_source_38 = Py_True;
            assert(var_start_spb == NULL);
            Py_INCREF(tmp_assign_source_38);
            var_start_spb = tmp_assign_source_38;
        }
        {
            PyObject *tmp_assign_source_39;
            tmp_assign_source_39 = Py_True;
            assert(var_start_miss == NULL);
            Py_INCREF(tmp_assign_source_39);
            var_start_miss = tmp_assign_source_39;
        }
        {
            PyObject *tmp_assign_source_40;
            tmp_assign_source_40 = const_str_empty;
            assert(var_list_f == NULL);
            Py_INCREF(tmp_assign_source_40);
            var_list_f = tmp_assign_source_40;
        }
        {
            PyObject *tmp_assign_source_41;
            tmp_assign_source_41 = const_str_empty;
            assert(var_list_p == NULL);
            Py_INCREF(tmp_assign_source_41);
            var_list_p = tmp_assign_source_41;
        }
        {
            PyObject *tmp_assign_source_42;
            tmp_assign_source_42 = const_str_empty;
            assert(var_list_alo == NULL);
            Py_INCREF(tmp_assign_source_42);
            var_list_alo = tmp_assign_source_42;
        }
        {
            PyObject *tmp_assign_source_43;
            tmp_assign_source_43 = const_str_empty;
            assert(var_list_to == NULL);
            Py_INCREF(tmp_assign_source_43);
            var_list_to = tmp_assign_source_43;
        }
        {
            PyObject *tmp_assign_source_44;
            tmp_assign_source_44 = const_str_empty;
            assert(var_list_na == NULL);
            Py_INCREF(tmp_assign_source_44);
            var_list_na = tmp_assign_source_44;
        }
        {
            PyObject *tmp_assign_source_45;
            tmp_assign_source_45 = const_str_empty;
            assert(var_list_spb == NULL);
            Py_INCREF(tmp_assign_source_45);
            var_list_spb = tmp_assign_source_45;
        }
        {
            PyObject *tmp_assign_source_46;
            tmp_assign_source_46 = const_str_empty;
            assert(var_list_miss == NULL);
            Py_INCREF(tmp_assign_source_46);
            var_list_miss = tmp_assign_source_46;
        }
        {
            PyObject *tmp_assign_source_47;
            tmp_assign_source_47 = const_int_0;
            assert(var_count == NULL);
            Py_INCREF(tmp_assign_source_47);
            var_count = tmp_assign_source_47;
        }
        {
            PyObject *tmp_assign_source_48;
            tmp_assign_source_48 = const_int_0;
            assert(var_count_f == NULL);
            Py_INCREF(tmp_assign_source_48);
            var_count_f = tmp_assign_source_48;
        }
        {
            PyObject *tmp_assign_source_49;
            tmp_assign_source_49 = const_int_neg_1;
            assert(var_last_f == NULL);
            Py_INCREF(tmp_assign_source_49);
            var_last_f = tmp_assign_source_49;
        }
        {
            PyObject *tmp_assign_source_50;
            PyObject *tmp_iter_arg_7;
            CHECK_OBJECT(par_selected_list);
            tmp_iter_arg_7 = par_selected_list;
            tmp_assign_source_50 = MAKE_ITERATOR(tmp_iter_arg_7);
            if (tmp_assign_source_50 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 910;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_7__for_iterator == NULL);
            tmp_for_loop_7__for_iterator = tmp_assign_source_50;
        }
        // Tried code:
        loop_start_7:;
        {
            PyObject *tmp_next_source_7;
            PyObject *tmp_assign_source_51;
            CHECK_OBJECT(tmp_for_loop_7__for_iterator);
            tmp_next_source_7 = tmp_for_loop_7__for_iterator;
            tmp_assign_source_51 = ITERATOR_NEXT(tmp_next_source_7);
            if (tmp_assign_source_51 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_7;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    exception_lineno = 910;
                    goto try_except_handler_11;
                }
            }

            {
                PyObject *old = tmp_for_loop_7__iter_value;
                tmp_for_loop_7__iter_value = tmp_assign_source_51;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_52;
            CHECK_OBJECT(tmp_for_loop_7__iter_value);
            tmp_assign_source_52 = tmp_for_loop_7__iter_value;
            {
                PyObject *old = var_y;
                var_y = tmp_assign_source_52;
                Py_INCREF(var_y);
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assattr_name_5;
            PyObject *tmp_subscribed_name_3;
            PyObject *tmp_source_name_13;
            PyObject *tmp_subscript_name_3;
            PyObject *tmp_assattr_target_5;
            CHECK_OBJECT(par_ui);
            tmp_source_name_13 = par_ui;
            tmp_subscribed_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_13, const_str_plain_devs_list);
            if (tmp_subscribed_name_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 911;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_11;
            }
            CHECK_OBJECT(var_y);
            tmp_subscript_name_3 = var_y;
            tmp_assattr_name_5 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_3, tmp_subscript_name_3);
            Py_DECREF(tmp_subscribed_name_3);
            if (tmp_assattr_name_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 911;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_11;
            }
            CHECK_OBJECT(par_ui);
            tmp_assattr_target_5 = par_ui;
            tmp_result = SET_ATTRIBUTE(tmp_assattr_target_5, const_str_plain_devname, tmp_assattr_name_5);
            Py_DECREF(tmp_assattr_name_5);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 911;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_11;
            }
        }
        {
            nuitka_bool tmp_condition_result_16;
            PyObject *tmp_compexpr_left_13;
            PyObject *tmp_compexpr_right_13;
            PyObject *tmp_subscribed_name_4;
            PyObject *tmp_subscript_name_4;
            CHECK_OBJECT(par_res_list);
            tmp_subscribed_name_4 = par_res_list;
            CHECK_OBJECT(var_count);
            tmp_subscript_name_4 = var_count;
            tmp_compexpr_left_13 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_4, tmp_subscript_name_4);
            if (tmp_compexpr_left_13 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 912;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_11;
            }
            tmp_compexpr_right_13 = const_int_0;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_13, tmp_compexpr_right_13);
            Py_DECREF(tmp_compexpr_left_13);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 912;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_11;
            }
            tmp_condition_result_16 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_16 == NUITKA_BOOL_TRUE) {
                goto branch_yes_16;
            } else {
                goto branch_no_16;
            }
            branch_yes_16:;
            {
                PyObject *tmp_called_instance_13;
                PyObject *tmp_mvar_value_7;
                PyObject *tmp_call_result_15;
                PyObject *tmp_args_element_name_6;
                PyObject *tmp_args_element_name_7;
                PyObject *tmp_args_element_name_8;
                tmp_mvar_value_7 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_dialogs);

                if (unlikely(tmp_mvar_value_7 == NULL)) {
                    tmp_mvar_value_7 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_dialogs);
                }

                if (tmp_mvar_value_7 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 418 ], 36, 0);
                    exception_tb = NULL;

                    exception_lineno = 913;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }

                tmp_called_instance_13 = tmp_mvar_value_7;
                tmp_args_element_name_6 = Py_None;
                CHECK_OBJECT(par_ui);
                tmp_args_element_name_7 = par_ui;
                tmp_args_element_name_8 = const_int_pos_1;
                frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 913;
                {
                    PyObject *call_args[] = {tmp_args_element_name_6, tmp_args_element_name_7, tmp_args_element_name_8};
                    tmp_call_result_15 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_13, const_str_plain_query, call_args);
                }

                if (tmp_call_result_15 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 913;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                Py_DECREF(tmp_call_result_15);
            }
            {
                nuitka_bool tmp_condition_result_17;
                PyObject *tmp_operand_name_2;
                if (var_start_p == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_p");
                    exception_tb = NULL;

                    exception_lineno = 914;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }

                tmp_operand_name_2 = var_start_p;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_2);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 914;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                tmp_condition_result_17 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_17 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_17;
                } else {
                    goto branch_no_17;
                }
                branch_yes_17:;
                {
                    PyObject *tmp_assign_source_53;
                    PyObject *tmp_left_name_3;
                    PyObject *tmp_right_name_3;
                    if (var_list_p == NULL) {

                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p");
                        exception_tb = NULL;

                        exception_lineno = 915;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }

                    tmp_left_name_3 = var_list_p;
                    tmp_right_name_3 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                    tmp_assign_source_53 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_3, tmp_right_name_3);
                    if (tmp_assign_source_53 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 915;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    {
                        PyObject *old = var_list_p;
                        var_list_p = tmp_assign_source_53;
                        Py_XDECREF(old);
                    }

                }
                goto branch_end_17;
                branch_no_17:;
                {
                    PyObject *tmp_assign_source_54;
                    tmp_assign_source_54 = Py_False;
                    {
                        PyObject *old = var_start_p;
                        var_start_p = tmp_assign_source_54;
                        Py_INCREF(var_start_p);
                        Py_XDECREF(old);
                    }

                }
                branch_end_17:;
            }
            {
                PyObject *tmp_assign_source_55;
                PyObject *tmp_left_name_4;
                PyObject *tmp_right_name_4;
                PyObject *tmp_subscribed_name_5;
                PyObject *tmp_source_name_14;
                PyObject *tmp_subscript_name_5;
                if (var_list_p == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p");
                    exception_tb = NULL;

                    exception_lineno = 918;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }

                tmp_left_name_4 = var_list_p;
                CHECK_OBJECT(par_ui);
                tmp_source_name_14 = par_ui;
                tmp_subscribed_name_5 = LOOKUP_ATTRIBUTE(tmp_source_name_14, const_str_plain_devs_list);
                if (tmp_subscribed_name_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 918;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                CHECK_OBJECT(var_y);
                tmp_subscript_name_5 = var_y;
                tmp_right_name_4 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_5, tmp_subscript_name_5);
                Py_DECREF(tmp_subscribed_name_5);
                if (tmp_right_name_4 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 918;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                tmp_assign_source_55 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_4, tmp_right_name_4);
                Py_DECREF(tmp_right_name_4);
                if (tmp_assign_source_55 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 918;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                {
                    PyObject *old = var_list_p;
                    var_list_p = tmp_assign_source_55;
                    Py_XDECREF(old);
                }

            }
            {
                nuitka_bool tmp_condition_result_18;
                PyObject *tmp_compexpr_left_14;
                PyObject *tmp_compexpr_right_14;
                PyObject *tmp_source_name_15;
                CHECK_OBJECT(par_ui);
                tmp_source_name_15 = par_ui;
                tmp_compexpr_left_14 = LOOKUP_ATTRIBUTE(tmp_source_name_15, const_str_plain_DEV_OS);
                if (tmp_compexpr_left_14 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 920;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                tmp_compexpr_right_14 = const_str_plain_Windows;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_14, tmp_compexpr_right_14);
                Py_DECREF(tmp_compexpr_left_14);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 920;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                tmp_condition_result_18 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_18 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_18;
                } else {
                    goto branch_no_18;
                }
                branch_yes_18:;
                {
                    PyObject *tmp_called_instance_14;
                    PyObject *tmp_mvar_value_8;
                    PyObject *tmp_call_result_16;
                    PyObject *tmp_args_element_name_9;
                    PyObject *tmp_args_element_name_10;
                    tmp_mvar_value_8 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_background);

                    if (unlikely(tmp_mvar_value_8 == NULL)) {
                        tmp_mvar_value_8 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_background);
                    }

                    if (tmp_mvar_value_8 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 379 ], 39, 0);
                        exception_tb = NULL;

                        exception_lineno = 921;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }

                    tmp_called_instance_14 = tmp_mvar_value_8;
                    CHECK_OBJECT(par_ui);
                    tmp_args_element_name_9 = par_ui;
                    CHECK_OBJECT(var_y);
                    tmp_args_element_name_10 = var_y;
                    frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 921;
                    {
                        PyObject *call_args[] = {tmp_args_element_name_9, tmp_args_element_name_10};
                        tmp_call_result_16 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_14, const_str_plain_remount, call_args);
                    }

                    if (tmp_call_result_16 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 921;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    Py_DECREF(tmp_call_result_16);
                }
                branch_no_18:;
            }
            {
                PyObject *tmp_ass_subvalue_3;
                PyObject *tmp_ass_subscribed_3;
                PyObject *tmp_source_name_16;
                PyObject *tmp_ass_subscript_3;
                tmp_ass_subvalue_3 = const_str_plain_Unlocked;
                CHECK_OBJECT(par_ui);
                tmp_source_name_16 = par_ui;
                tmp_ass_subscribed_3 = LOOKUP_ATTRIBUTE(tmp_source_name_16, const_str_plain_lockstatus_list);
                if (tmp_ass_subscribed_3 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 924;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                CHECK_OBJECT(var_y);
                tmp_ass_subscript_3 = var_y;
                tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_3, tmp_ass_subscript_3, tmp_ass_subvalue_3);
                Py_DECREF(tmp_ass_subscribed_3);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 924;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
            }
            {
                PyObject *tmp_ass_subvalue_4;
                PyObject *tmp_ass_subscribed_4;
                PyObject *tmp_source_name_17;
                PyObject *tmp_ass_subscript_4;
                tmp_ass_subvalue_4 = const_str_plain_No;
                CHECK_OBJECT(par_ui);
                tmp_source_name_17 = par_ui;
                tmp_ass_subscribed_4 = LOOKUP_ATTRIBUTE(tmp_source_name_17, const_str_plain_setupstatus_list);
                if (tmp_ass_subscribed_4 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 925;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                CHECK_OBJECT(var_y);
                tmp_ass_subscript_4 = var_y;
                tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_4, tmp_ass_subscript_4, tmp_ass_subvalue_4);
                Py_DECREF(tmp_ass_subscribed_4);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 925;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
            }
            {
                PyObject *tmp_ass_subvalue_5;
                PyObject *tmp_ass_subscribed_5;
                PyObject *tmp_source_name_18;
                PyObject *tmp_ass_subscript_5;
                tmp_ass_subvalue_5 = const_str_digest_f9aa9f1d756280254529dbc306087548;
                CHECK_OBJECT(par_ui);
                tmp_source_name_18 = par_ui;
                tmp_ass_subscribed_5 = LOOKUP_ATTRIBUTE(tmp_source_name_18, const_str_plain_setupuser_list);
                if (tmp_ass_subscribed_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 926;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                CHECK_OBJECT(var_y);
                tmp_ass_subscript_5 = var_y;
                tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_5, tmp_ass_subscript_5, tmp_ass_subvalue_5);
                Py_DECREF(tmp_ass_subscribed_5);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 926;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
            }
            {
                PyObject *tmp_ass_subvalue_6;
                PyObject *tmp_ass_subscribed_6;
                PyObject *tmp_source_name_19;
                PyObject *tmp_ass_subscript_6;
                tmp_ass_subvalue_6 = const_str_digest_f9aa9f1d756280254529dbc306087548;
                CHECK_OBJECT(par_ui);
                tmp_source_name_19 = par_ui;
                tmp_ass_subscribed_6 = LOOKUP_ATTRIBUTE(tmp_source_name_19, const_str_plain_pba_list);
                if (tmp_ass_subscribed_6 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 927;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                CHECK_OBJECT(var_y);
                tmp_ass_subscript_6 = var_y;
                tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_6, tmp_ass_subscript_6, tmp_ass_subvalue_6);
                Py_DECREF(tmp_ass_subscribed_6);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 927;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
            }
            {
                nuitka_bool tmp_condition_result_19;
                PyObject *tmp_compexpr_left_15;
                PyObject *tmp_compexpr_right_15;
                PyObject *tmp_source_name_20;
                CHECK_OBJECT(var_y);
                tmp_compexpr_left_15 = var_y;
                CHECK_OBJECT(par_ui);
                tmp_source_name_20 = par_ui;
                tmp_compexpr_right_15 = LOOKUP_ATTRIBUTE(tmp_source_name_20, const_str_plain_mbr_setup_list);
                if (tmp_compexpr_right_15 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 928;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                tmp_res = PySequence_Contains(tmp_compexpr_right_15, tmp_compexpr_left_15);
                Py_DECREF(tmp_compexpr_right_15);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 928;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                tmp_condition_result_19 = (tmp_res == 1) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_19 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_19;
                } else {
                    goto branch_no_19;
                }
                branch_yes_19:;
                {
                    PyObject *tmp_called_instance_15;
                    PyObject *tmp_source_name_21;
                    PyObject *tmp_call_result_17;
                    PyObject *tmp_args_element_name_11;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_21 = par_ui;
                    tmp_called_instance_15 = LOOKUP_ATTRIBUTE(tmp_source_name_21, const_str_plain_mbr_setup_list);
                    if (tmp_called_instance_15 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 929;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    CHECK_OBJECT(var_y);
                    tmp_args_element_name_11 = var_y;
                    frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 929;
                    {
                        PyObject *call_args[] = {tmp_args_element_name_11};
                        tmp_call_result_17 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_15, const_str_plain_remove, call_args);
                    }

                    Py_DECREF(tmp_called_instance_15);
                    if (tmp_call_result_17 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 929;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    Py_DECREF(tmp_call_result_17);
                }
                branch_no_19:;
            }
            {
                PyObject *tmp_called_instance_16;
                PyObject *tmp_call_result_18;
                PyObject *tmp_args_element_name_12;
                PyObject *tmp_args_element_name_13;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_16 = par_ui;
                CHECK_OBJECT(var_y);
                tmp_args_element_name_12 = var_y;
                tmp_args_element_name_13 = LIST_COPY(const_list_int_pos_4_list);
                frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 930;
                {
                    PyObject *call_args[] = {tmp_args_element_name_12, tmp_args_element_name_13};
                    tmp_call_result_18 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_16, const_str_plain_updateDevs, call_args);
                }

                Py_DECREF(tmp_args_element_name_13);
                if (tmp_call_result_18 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 930;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                Py_DECREF(tmp_call_result_18);
            }
            goto branch_end_16;
            branch_no_16:;
            {
                nuitka_bool tmp_condition_result_20;
                PyObject *tmp_compexpr_left_16;
                PyObject *tmp_compexpr_right_16;
                PyObject *tmp_subscribed_name_6;
                PyObject *tmp_subscript_name_6;
                CHECK_OBJECT(par_res_list);
                tmp_subscribed_name_6 = par_res_list;
                CHECK_OBJECT(var_count);
                tmp_subscript_name_6 = var_count;
                tmp_compexpr_left_16 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_6, tmp_subscript_name_6);
                if (tmp_compexpr_left_16 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 931;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                tmp_compexpr_right_16 = const_int_pos_1;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_16, tmp_compexpr_right_16);
                Py_DECREF(tmp_compexpr_left_16);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 931;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                tmp_condition_result_20 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_20 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_20;
                } else {
                    goto branch_no_20;
                }
                branch_yes_20:;
                {
                    nuitka_bool tmp_condition_result_21;
                    int tmp_and_left_truth_3;
                    nuitka_bool tmp_and_left_value_3;
                    nuitka_bool tmp_and_right_value_3;
                    PyObject *tmp_compexpr_left_17;
                    PyObject *tmp_compexpr_right_17;
                    PyObject *tmp_subscribed_name_7;
                    PyObject *tmp_subscript_name_7;
                    PyObject *tmp_source_name_22;
                    PyObject *tmp_compexpr_left_18;
                    PyObject *tmp_compexpr_right_18;
                    PyObject *tmp_subscribed_name_8;
                    PyObject *tmp_source_name_23;
                    PyObject *tmp_subscript_name_8;
                    PyObject *tmp_subscribed_name_9;
                    PyObject *tmp_source_name_24;
                    PyObject *tmp_subscript_name_9;
                    CHECK_OBJECT(par_status_list);
                    tmp_subscribed_name_7 = par_status_list;
                    CHECK_OBJECT(var_count);
                    tmp_subscript_name_7 = var_count;
                    tmp_compexpr_left_17 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_7, tmp_subscript_name_7);
                    if (tmp_compexpr_left_17 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 932;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_22 = par_ui;
                    tmp_compexpr_right_17 = LOOKUP_ATTRIBUTE(tmp_source_name_22, const_str_plain_NOT_AUTHORIZED);
                    if (tmp_compexpr_right_17 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_compexpr_left_17);

                        exception_lineno = 932;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_17, tmp_compexpr_right_17);
                    Py_DECREF(tmp_compexpr_left_17);
                    Py_DECREF(tmp_compexpr_right_17);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 932;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    tmp_and_left_value_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_and_left_truth_3 = tmp_and_left_value_3 == NUITKA_BOOL_TRUE ? 1 : 0;
                    if (tmp_and_left_truth_3 == 1) {
                        goto and_right_3;
                    } else {
                        goto and_left_3;
                    }
                    and_right_3:;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_23 = par_ui;
                    tmp_subscribed_name_8 = LOOKUP_ATTRIBUTE(tmp_source_name_23, const_str_plain_admin_aol_list);
                    if (tmp_subscribed_name_8 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 932;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_8 = var_y;
                    tmp_compexpr_left_18 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_8, tmp_subscript_name_8);
                    Py_DECREF(tmp_subscribed_name_8);
                    if (tmp_compexpr_left_18 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 932;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_24 = par_ui;
                    tmp_subscribed_name_9 = LOOKUP_ATTRIBUTE(tmp_source_name_24, const_str_plain_retrylimit_list);
                    if (tmp_subscribed_name_9 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_compexpr_left_18);

                        exception_lineno = 932;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_9 = var_y;
                    tmp_compexpr_right_18 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_9, tmp_subscript_name_9);
                    Py_DECREF(tmp_subscribed_name_9);
                    if (tmp_compexpr_right_18 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_compexpr_left_18);

                        exception_lineno = 932;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    tmp_res = RICH_COMPARE_BOOL_LTE_OBJECT_OBJECT(tmp_compexpr_left_18, tmp_compexpr_right_18);
                    Py_DECREF(tmp_compexpr_left_18);
                    Py_DECREF(tmp_compexpr_right_18);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 932;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    tmp_and_right_value_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_condition_result_21 = tmp_and_right_value_3;
                    goto and_end_3;
                    and_left_3:;
                    tmp_condition_result_21 = tmp_and_left_value_3;
                    and_end_3:;
                    if (tmp_condition_result_21 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_21;
                    } else {
                        goto branch_no_21;
                    }
                    branch_yes_21:;
                    {
                        nuitka_bool tmp_condition_result_22;
                        PyObject *tmp_operand_name_3;
                        if (var_start_f == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_f");
                            exception_tb = NULL;

                            exception_lineno = 933;
                            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }

                        tmp_operand_name_3 = var_start_f;
                        tmp_res = CHECK_IF_TRUE(tmp_operand_name_3);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 933;
                            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        tmp_condition_result_22 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_22 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_22;
                        } else {
                            goto branch_no_22;
                        }
                        branch_yes_22:;
                        {
                            PyObject *tmp_assign_source_56;
                            PyObject *tmp_left_name_5;
                            PyObject *tmp_right_name_5;
                            if (var_list_f == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                                exception_tb = NULL;

                                exception_lineno = 934;
                                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }

                            tmp_left_name_5 = var_list_f;
                            tmp_right_name_5 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                            tmp_assign_source_56 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_5, tmp_right_name_5);
                            if (tmp_assign_source_56 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 934;
                                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }
                            {
                                PyObject *old = var_list_f;
                                var_list_f = tmp_assign_source_56;
                                Py_XDECREF(old);
                            }

                        }
                        goto branch_end_22;
                        branch_no_22:;
                        {
                            PyObject *tmp_assign_source_57;
                            tmp_assign_source_57 = Py_False;
                            {
                                PyObject *old = var_start_f;
                                var_start_f = tmp_assign_source_57;
                                Py_INCREF(var_start_f);
                                Py_XDECREF(old);
                            }

                        }
                        branch_end_22:;
                    }
                    {
                        PyObject *tmp_assign_source_58;
                        PyObject *tmp_left_name_6;
                        PyObject *tmp_right_name_6;
                        PyObject *tmp_subscribed_name_10;
                        PyObject *tmp_source_name_25;
                        PyObject *tmp_subscript_name_10;
                        if (var_list_f == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                            exception_tb = NULL;

                            exception_lineno = 937;
                            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }

                        tmp_left_name_6 = var_list_f;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_25 = par_ui;
                        tmp_subscribed_name_10 = LOOKUP_ATTRIBUTE(tmp_source_name_25, const_str_plain_devs_list);
                        if (tmp_subscribed_name_10 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 937;
                            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_10 = var_y;
                        tmp_right_name_6 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_10, tmp_subscript_name_10);
                        Py_DECREF(tmp_subscribed_name_10);
                        if (tmp_right_name_6 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 937;
                            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        tmp_assign_source_58 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_6, tmp_right_name_6);
                        Py_DECREF(tmp_right_name_6);
                        if (tmp_assign_source_58 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 937;
                            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        {
                            PyObject *old = var_list_f;
                            var_list_f = tmp_assign_source_58;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assign_source_59;
                        PyObject *tmp_left_name_7;
                        PyObject *tmp_right_name_7;
                        if (var_count_f == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "count_f");
                            exception_tb = NULL;

                            exception_lineno = 938;
                            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }

                        tmp_left_name_7 = var_count_f;
                        tmp_right_name_7 = const_int_pos_1;
                        tmp_assign_source_59 = BINARY_OPERATION_ADD_OBJECT_INT(tmp_left_name_7, tmp_right_name_7);
                        if (tmp_assign_source_59 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 938;
                            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        {
                            PyObject *old = var_count_f;
                            var_count_f = tmp_assign_source_59;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assign_source_60;
                        CHECK_OBJECT(var_y);
                        tmp_assign_source_60 = var_y;
                        {
                            PyObject *old = var_last_f;
                            var_last_f = tmp_assign_source_60;
                            Py_INCREF(var_last_f);
                            Py_XDECREF(old);
                        }

                    }
                    branch_no_21:;
                }
                {
                    nuitka_bool tmp_condition_result_23;
                    int tmp_or_left_truth_1;
                    nuitka_bool tmp_or_left_value_1;
                    nuitka_bool tmp_or_right_value_1;
                    PyObject *tmp_compexpr_left_19;
                    PyObject *tmp_compexpr_right_19;
                    PyObject *tmp_subscribed_name_11;
                    PyObject *tmp_subscript_name_11;
                    PyObject *tmp_source_name_26;
                    PyObject *tmp_compexpr_left_20;
                    PyObject *tmp_compexpr_right_20;
                    PyObject *tmp_subscribed_name_12;
                    PyObject *tmp_source_name_27;
                    PyObject *tmp_subscript_name_12;
                    PyObject *tmp_subscribed_name_13;
                    PyObject *tmp_source_name_28;
                    PyObject *tmp_subscript_name_13;
                    CHECK_OBJECT(par_status_list);
                    tmp_subscribed_name_11 = par_status_list;
                    CHECK_OBJECT(var_count);
                    tmp_subscript_name_11 = var_count;
                    tmp_compexpr_left_19 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_11, tmp_subscript_name_11);
                    if (tmp_compexpr_left_19 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 940;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_26 = par_ui;
                    tmp_compexpr_right_19 = LOOKUP_ATTRIBUTE(tmp_source_name_26, const_str_plain_AUTHORITY_LOCKED_OUT);
                    if (tmp_compexpr_right_19 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_compexpr_left_19);

                        exception_lineno = 940;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_19, tmp_compexpr_right_19);
                    Py_DECREF(tmp_compexpr_left_19);
                    Py_DECREF(tmp_compexpr_right_19);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 940;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    tmp_or_left_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_or_left_truth_1 = tmp_or_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
                    if (tmp_or_left_truth_1 == 1) {
                        goto or_left_1;
                    } else {
                        goto or_right_1;
                    }
                    or_right_1:;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_27 = par_ui;
                    tmp_subscribed_name_12 = LOOKUP_ATTRIBUTE(tmp_source_name_27, const_str_plain_admin_aol_list);
                    if (tmp_subscribed_name_12 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 940;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_12 = var_y;
                    tmp_compexpr_left_20 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_12, tmp_subscript_name_12);
                    Py_DECREF(tmp_subscribed_name_12);
                    if (tmp_compexpr_left_20 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 940;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_28 = par_ui;
                    tmp_subscribed_name_13 = LOOKUP_ATTRIBUTE(tmp_source_name_28, const_str_plain_retrylimit_list);
                    if (tmp_subscribed_name_13 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_compexpr_left_20);

                        exception_lineno = 940;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_13 = var_y;
                    tmp_compexpr_right_20 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_13, tmp_subscript_name_13);
                    Py_DECREF(tmp_subscribed_name_13);
                    if (tmp_compexpr_right_20 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_compexpr_left_20);

                        exception_lineno = 940;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    tmp_res = RICH_COMPARE_BOOL_GT_OBJECT_OBJECT(tmp_compexpr_left_20, tmp_compexpr_right_20);
                    Py_DECREF(tmp_compexpr_left_20);
                    Py_DECREF(tmp_compexpr_right_20);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 940;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    tmp_or_right_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_condition_result_23 = tmp_or_right_value_1;
                    goto or_end_1;
                    or_left_1:;
                    tmp_condition_result_23 = tmp_or_left_value_1;
                    or_end_1:;
                    if (tmp_condition_result_23 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_23;
                    } else {
                        goto branch_no_23;
                    }
                    branch_yes_23:;
                    {
                        nuitka_bool tmp_condition_result_24;
                        PyObject *tmp_operand_name_4;
                        if (var_start_alo == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_alo");
                            exception_tb = NULL;

                            exception_lineno = 941;
                            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }

                        tmp_operand_name_4 = var_start_alo;
                        tmp_res = CHECK_IF_TRUE(tmp_operand_name_4);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 941;
                            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        tmp_condition_result_24 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_24 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_24;
                        } else {
                            goto branch_no_24;
                        }
                        branch_yes_24:;
                        {
                            PyObject *tmp_assign_source_61;
                            PyObject *tmp_left_name_8;
                            PyObject *tmp_right_name_8;
                            if (var_list_alo == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_alo");
                                exception_tb = NULL;

                                exception_lineno = 942;
                                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }

                            tmp_left_name_8 = var_list_alo;
                            tmp_right_name_8 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                            tmp_assign_source_61 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_8, tmp_right_name_8);
                            if (tmp_assign_source_61 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 942;
                                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }
                            {
                                PyObject *old = var_list_alo;
                                var_list_alo = tmp_assign_source_61;
                                Py_XDECREF(old);
                            }

                        }
                        goto branch_end_24;
                        branch_no_24:;
                        {
                            PyObject *tmp_assign_source_62;
                            tmp_assign_source_62 = Py_False;
                            {
                                PyObject *old = var_start_alo;
                                var_start_alo = tmp_assign_source_62;
                                Py_INCREF(var_start_alo);
                                Py_XDECREF(old);
                            }

                        }
                        branch_end_24:;
                    }
                    {
                        PyObject *tmp_assign_source_63;
                        PyObject *tmp_left_name_9;
                        PyObject *tmp_right_name_9;
                        PyObject *tmp_subscribed_name_14;
                        PyObject *tmp_source_name_29;
                        PyObject *tmp_subscript_name_14;
                        if (var_list_alo == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_alo");
                            exception_tb = NULL;

                            exception_lineno = 945;
                            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }

                        tmp_left_name_9 = var_list_alo;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_29 = par_ui;
                        tmp_subscribed_name_14 = LOOKUP_ATTRIBUTE(tmp_source_name_29, const_str_plain_devs_list);
                        if (tmp_subscribed_name_14 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 945;
                            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_14 = var_y;
                        tmp_right_name_9 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_14, tmp_subscript_name_14);
                        Py_DECREF(tmp_subscribed_name_14);
                        if (tmp_right_name_9 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 945;
                            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        tmp_assign_source_63 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_9, tmp_right_name_9);
                        Py_DECREF(tmp_right_name_9);
                        if (tmp_assign_source_63 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 945;
                            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        {
                            PyObject *old = var_list_alo;
                            var_list_alo = tmp_assign_source_63;
                            Py_XDECREF(old);
                        }

                    }
                    branch_no_23:;
                }
                goto branch_end_20;
                branch_no_20:;
                {
                    nuitka_bool tmp_condition_result_25;
                    PyObject *tmp_compexpr_left_21;
                    PyObject *tmp_compexpr_right_21;
                    PyObject *tmp_subscribed_name_15;
                    PyObject *tmp_subscript_name_15;
                    CHECK_OBJECT(par_res_list);
                    tmp_subscribed_name_15 = par_res_list;
                    CHECK_OBJECT(var_count);
                    tmp_subscript_name_15 = var_count;
                    tmp_compexpr_left_21 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_15, tmp_subscript_name_15);
                    if (tmp_compexpr_left_21 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 946;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    tmp_compexpr_right_21 = const_int_pos_2;
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_21, tmp_compexpr_right_21);
                    Py_DECREF(tmp_compexpr_left_21);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 946;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    tmp_condition_result_25 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_25 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_25;
                    } else {
                        goto branch_no_25;
                    }
                    branch_yes_25:;
                    {
                        nuitka_bool tmp_condition_result_26;
                        PyObject *tmp_operand_name_5;
                        if (var_start_to == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_to");
                            exception_tb = NULL;

                            exception_lineno = 947;
                            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }

                        tmp_operand_name_5 = var_start_to;
                        tmp_res = CHECK_IF_TRUE(tmp_operand_name_5);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 947;
                            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        tmp_condition_result_26 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_26 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_26;
                        } else {
                            goto branch_no_26;
                        }
                        branch_yes_26:;
                        {
                            PyObject *tmp_assign_source_64;
                            PyObject *tmp_left_name_10;
                            PyObject *tmp_right_name_10;
                            if (var_list_to == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_to");
                                exception_tb = NULL;

                                exception_lineno = 948;
                                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }

                            tmp_left_name_10 = var_list_to;
                            tmp_right_name_10 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                            tmp_assign_source_64 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_10, tmp_right_name_10);
                            if (tmp_assign_source_64 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 948;
                                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }
                            {
                                PyObject *old = var_list_to;
                                var_list_to = tmp_assign_source_64;
                                Py_XDECREF(old);
                            }

                        }
                        goto branch_end_26;
                        branch_no_26:;
                        {
                            PyObject *tmp_assign_source_65;
                            tmp_assign_source_65 = Py_False;
                            {
                                PyObject *old = var_start_to;
                                var_start_to = tmp_assign_source_65;
                                Py_INCREF(var_start_to);
                                Py_XDECREF(old);
                            }

                        }
                        branch_end_26:;
                    }
                    {
                        PyObject *tmp_assign_source_66;
                        PyObject *tmp_left_name_11;
                        PyObject *tmp_right_name_11;
                        PyObject *tmp_subscribed_name_16;
                        PyObject *tmp_source_name_30;
                        PyObject *tmp_subscript_name_16;
                        if (var_list_to == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_to");
                            exception_tb = NULL;

                            exception_lineno = 951;
                            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }

                        tmp_left_name_11 = var_list_to;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_30 = par_ui;
                        tmp_subscribed_name_16 = LOOKUP_ATTRIBUTE(tmp_source_name_30, const_str_plain_devs_list);
                        if (tmp_subscribed_name_16 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 951;
                            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_16 = var_y;
                        tmp_right_name_11 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_16, tmp_subscript_name_16);
                        Py_DECREF(tmp_subscribed_name_16);
                        if (tmp_right_name_11 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 951;
                            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        tmp_assign_source_66 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_11, tmp_right_name_11);
                        Py_DECREF(tmp_right_name_11);
                        if (tmp_assign_source_66 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 951;
                            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        {
                            PyObject *old = var_list_to;
                            var_list_to = tmp_assign_source_66;
                            Py_XDECREF(old);
                        }

                    }
                    goto branch_end_25;
                    branch_no_25:;
                    {
                        nuitka_bool tmp_condition_result_27;
                        PyObject *tmp_compexpr_left_22;
                        PyObject *tmp_compexpr_right_22;
                        PyObject *tmp_subscribed_name_17;
                        PyObject *tmp_subscript_name_17;
                        CHECK_OBJECT(par_res_list);
                        tmp_subscribed_name_17 = par_res_list;
                        CHECK_OBJECT(var_count);
                        tmp_subscript_name_17 = var_count;
                        tmp_compexpr_left_22 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_17, tmp_subscript_name_17);
                        if (tmp_compexpr_left_22 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 952;
                            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        tmp_compexpr_right_22 = const_int_pos_4;
                        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_22, tmp_compexpr_right_22);
                        Py_DECREF(tmp_compexpr_left_22);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 952;
                            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        tmp_condition_result_27 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_27 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_27;
                        } else {
                            goto branch_no_27;
                        }
                        branch_yes_27:;
                        {
                            nuitka_bool tmp_condition_result_28;
                            PyObject *tmp_operand_name_6;
                            if (var_start_spb == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_spb");
                                exception_tb = NULL;

                                exception_lineno = 953;
                                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }

                            tmp_operand_name_6 = var_start_spb;
                            tmp_res = CHECK_IF_TRUE(tmp_operand_name_6);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 953;
                                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }
                            tmp_condition_result_28 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            if (tmp_condition_result_28 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_28;
                            } else {
                                goto branch_no_28;
                            }
                            branch_yes_28:;
                            {
                                PyObject *tmp_assign_source_67;
                                PyObject *tmp_left_name_12;
                                PyObject *tmp_right_name_12;
                                if (var_list_spb == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_spb");
                                    exception_tb = NULL;

                                    exception_lineno = 954;
                                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                    goto try_except_handler_11;
                                }

                                tmp_left_name_12 = var_list_spb;
                                tmp_right_name_12 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                                tmp_assign_source_67 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_12, tmp_right_name_12);
                                if (tmp_assign_source_67 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 954;
                                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                    goto try_except_handler_11;
                                }
                                {
                                    PyObject *old = var_list_spb;
                                    var_list_spb = tmp_assign_source_67;
                                    Py_XDECREF(old);
                                }

                            }
                            goto branch_end_28;
                            branch_no_28:;
                            {
                                PyObject *tmp_assign_source_68;
                                tmp_assign_source_68 = Py_False;
                                {
                                    PyObject *old = var_start_spb;
                                    var_start_spb = tmp_assign_source_68;
                                    Py_INCREF(var_start_spb);
                                    Py_XDECREF(old);
                                }

                            }
                            branch_end_28:;
                        }
                        {
                            PyObject *tmp_assign_source_69;
                            PyObject *tmp_left_name_13;
                            PyObject *tmp_right_name_13;
                            PyObject *tmp_subscribed_name_18;
                            PyObject *tmp_source_name_31;
                            PyObject *tmp_subscript_name_18;
                            if (var_list_spb == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_spb");
                                exception_tb = NULL;

                                exception_lineno = 957;
                                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }

                            tmp_left_name_13 = var_list_spb;
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_31 = par_ui;
                            tmp_subscribed_name_18 = LOOKUP_ATTRIBUTE(tmp_source_name_31, const_str_plain_devs_list);
                            if (tmp_subscribed_name_18 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 957;
                                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }
                            CHECK_OBJECT(var_y);
                            tmp_subscript_name_18 = var_y;
                            tmp_right_name_13 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_18, tmp_subscript_name_18);
                            Py_DECREF(tmp_subscribed_name_18);
                            if (tmp_right_name_13 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 957;
                                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }
                            tmp_assign_source_69 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_13, tmp_right_name_13);
                            Py_DECREF(tmp_right_name_13);
                            if (tmp_assign_source_69 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 957;
                                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }
                            {
                                PyObject *old = var_list_spb;
                                var_list_spb = tmp_assign_source_69;
                                Py_XDECREF(old);
                            }

                        }
                        goto branch_end_27;
                        branch_no_27:;
                        {
                            nuitka_bool tmp_condition_result_29;
                            PyObject *tmp_compexpr_left_23;
                            PyObject *tmp_compexpr_right_23;
                            PyObject *tmp_subscribed_name_19;
                            PyObject *tmp_subscript_name_19;
                            CHECK_OBJECT(par_res_list);
                            tmp_subscribed_name_19 = par_res_list;
                            CHECK_OBJECT(var_count);
                            tmp_subscript_name_19 = var_count;
                            tmp_compexpr_left_23 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_19, tmp_subscript_name_19);
                            if (tmp_compexpr_left_23 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 958;
                                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }
                            tmp_compexpr_right_23 = const_int_pos_6;
                            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_23, tmp_compexpr_right_23);
                            Py_DECREF(tmp_compexpr_left_23);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 958;
                                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }
                            tmp_condition_result_29 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            if (tmp_condition_result_29 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_29;
                            } else {
                                goto branch_no_29;
                            }
                            branch_yes_29:;
                            {
                                nuitka_bool tmp_condition_result_30;
                                PyObject *tmp_operand_name_7;
                                if (var_start_miss == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_miss");
                                    exception_tb = NULL;

                                    exception_lineno = 959;
                                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                    goto try_except_handler_11;
                                }

                                tmp_operand_name_7 = var_start_miss;
                                tmp_res = CHECK_IF_TRUE(tmp_operand_name_7);
                                if (tmp_res == -1) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 959;
                                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                    goto try_except_handler_11;
                                }
                                tmp_condition_result_30 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                                if (tmp_condition_result_30 == NUITKA_BOOL_TRUE) {
                                    goto branch_yes_30;
                                } else {
                                    goto branch_no_30;
                                }
                                branch_yes_30:;
                                {
                                    PyObject *tmp_assign_source_70;
                                    PyObject *tmp_left_name_14;
                                    PyObject *tmp_right_name_14;
                                    if (var_list_miss == NULL) {

                                        exception_type = PyExc_UnboundLocalError;
                                        Py_INCREF(exception_type);
                                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_miss");
                                        exception_tb = NULL;

                                        exception_lineno = 960;
                                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                        goto try_except_handler_11;
                                    }

                                    tmp_left_name_14 = var_list_miss;
                                    tmp_right_name_14 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                                    tmp_assign_source_70 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_14, tmp_right_name_14);
                                    if (tmp_assign_source_70 == NULL) {
                                        assert(ERROR_OCCURRED());

                                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                        exception_lineno = 960;
                                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                        goto try_except_handler_11;
                                    }
                                    {
                                        PyObject *old = var_list_miss;
                                        var_list_miss = tmp_assign_source_70;
                                        Py_XDECREF(old);
                                    }

                                }
                                goto branch_end_30;
                                branch_no_30:;
                                {
                                    PyObject *tmp_assign_source_71;
                                    tmp_assign_source_71 = Py_False;
                                    {
                                        PyObject *old = var_start_miss;
                                        var_start_miss = tmp_assign_source_71;
                                        Py_INCREF(var_start_miss);
                                        Py_XDECREF(old);
                                    }

                                }
                                branch_end_30:;
                            }
                            {
                                PyObject *tmp_assign_source_72;
                                PyObject *tmp_left_name_15;
                                PyObject *tmp_right_name_15;
                                PyObject *tmp_subscribed_name_20;
                                PyObject *tmp_source_name_32;
                                PyObject *tmp_subscript_name_20;
                                if (var_list_miss == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_miss");
                                    exception_tb = NULL;

                                    exception_lineno = 963;
                                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                    goto try_except_handler_11;
                                }

                                tmp_left_name_15 = var_list_miss;
                                CHECK_OBJECT(par_ui);
                                tmp_source_name_32 = par_ui;
                                tmp_subscribed_name_20 = LOOKUP_ATTRIBUTE(tmp_source_name_32, const_str_plain_devs_list);
                                if (tmp_subscribed_name_20 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 963;
                                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                    goto try_except_handler_11;
                                }
                                CHECK_OBJECT(var_y);
                                tmp_subscript_name_20 = var_y;
                                tmp_right_name_15 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_20, tmp_subscript_name_20);
                                Py_DECREF(tmp_subscribed_name_20);
                                if (tmp_right_name_15 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 963;
                                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                    goto try_except_handler_11;
                                }
                                tmp_assign_source_72 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_15, tmp_right_name_15);
                                Py_DECREF(tmp_right_name_15);
                                if (tmp_assign_source_72 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 963;
                                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                    goto try_except_handler_11;
                                }
                                {
                                    PyObject *old = var_list_miss;
                                    var_list_miss = tmp_assign_source_72;
                                    Py_XDECREF(old);
                                }

                            }
                            goto branch_end_29;
                            branch_no_29:;
                            {
                                PyObject *tmp_assign_source_73;
                                tmp_assign_source_73 = Py_False;
                                {
                                    PyObject *old = var_start_to;
                                    var_start_to = tmp_assign_source_73;
                                    Py_INCREF(var_start_to);
                                    Py_XDECREF(old);
                                }

                            }
                            {
                                PyObject *tmp_assign_source_74;
                                PyObject *tmp_left_name_16;
                                PyObject *tmp_right_name_16;
                                PyObject *tmp_subscribed_name_21;
                                PyObject *tmp_source_name_33;
                                PyObject *tmp_subscript_name_21;
                                if (var_list_na == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_na");
                                    exception_tb = NULL;

                                    exception_lineno = 969;
                                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                    goto try_except_handler_11;
                                }

                                tmp_left_name_16 = var_list_na;
                                CHECK_OBJECT(par_ui);
                                tmp_source_name_33 = par_ui;
                                tmp_subscribed_name_21 = LOOKUP_ATTRIBUTE(tmp_source_name_33, const_str_plain_devs_list);
                                if (tmp_subscribed_name_21 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 969;
                                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                    goto try_except_handler_11;
                                }
                                CHECK_OBJECT(var_y);
                                tmp_subscript_name_21 = var_y;
                                tmp_right_name_16 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_21, tmp_subscript_name_21);
                                Py_DECREF(tmp_subscribed_name_21);
                                if (tmp_right_name_16 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 969;
                                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                    goto try_except_handler_11;
                                }
                                tmp_assign_source_74 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_16, tmp_right_name_16);
                                Py_DECREF(tmp_right_name_16);
                                if (tmp_assign_source_74 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 969;
                                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                                    goto try_except_handler_11;
                                }
                                {
                                    PyObject *old = var_list_na;
                                    var_list_na = tmp_assign_source_74;
                                    Py_XDECREF(old);
                                }

                            }
                            branch_end_29:;
                        }
                        branch_end_27:;
                    }
                    branch_end_25:;
                }
                branch_end_20:;
            }
            branch_end_16:;
        }
        {
            PyObject *tmp_assign_source_75;
            PyObject *tmp_left_name_17;
            PyObject *tmp_right_name_17;
            CHECK_OBJECT(var_count);
            tmp_left_name_17 = var_count;
            tmp_right_name_17 = const_int_pos_1;
            tmp_assign_source_75 = BINARY_OPERATION_ADD_OBJECT_INT(tmp_left_name_17, tmp_right_name_17);
            assert(!(tmp_assign_source_75 == NULL));
            {
                PyObject *old = var_count;
                assert(old != NULL);
                var_count = tmp_assign_source_75;
                Py_DECREF(old);
            }

        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 910;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto try_except_handler_11;
        }
        goto loop_start_7;
        loop_end_7:;
        goto try_end_10;
        // Exception handler code:
        try_except_handler_11:;
        exception_keeper_type_10 = exception_type;
        exception_keeper_value_10 = exception_value;
        exception_keeper_tb_10 = exception_tb;
        exception_keeper_lineno_10 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_7__iter_value);
        tmp_for_loop_7__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_7__for_iterator);
        Py_DECREF(tmp_for_loop_7__for_iterator);
        tmp_for_loop_7__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_10;
        exception_value = exception_keeper_value_10;
        exception_tb = exception_keeper_tb_10;
        exception_lineno = exception_keeper_lineno_10;

        goto frame_exception_exit_1;
        // End of try:
        try_end_10:;
        Py_XDECREF(tmp_for_loop_7__iter_value);
        tmp_for_loop_7__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_7__for_iterator);
        Py_DECREF(tmp_for_loop_7__for_iterator);
        tmp_for_loop_7__for_iterator = NULL;

        {
            nuitka_bool tmp_condition_result_31;
            PyObject *tmp_compexpr_left_24;
            PyObject *tmp_compexpr_right_24;
            if (var_list_miss == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_miss");
                exception_tb = NULL;

                exception_lineno = 971;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_24 = var_list_miss;
            tmp_compexpr_right_24 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_24, tmp_compexpr_right_24);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 971;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_31 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_31 == NUITKA_BOOL_TRUE) {
                goto branch_yes_31;
            } else {
                goto branch_no_31;
            }
            branch_yes_31:;
            {
                PyObject *tmp_called_name_6;
                PyObject *tmp_source_name_34;
                PyObject *tmp_call_result_19;
                PyObject *tmp_args_element_name_14;
                PyObject *tmp_left_name_18;
                PyObject *tmp_right_name_18;
                CHECK_OBJECT(par_ui);
                tmp_source_name_34 = par_ui;
                tmp_called_name_6 = LOOKUP_ATTRIBUTE(tmp_source_name_34, const_str_plain_msg_err);
                if (tmp_called_name_6 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 972;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                if (var_list_miss == NULL) {
                    Py_DECREF(tmp_called_name_6);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_miss");
                    exception_tb = NULL;

                    exception_lineno = 972;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_left_name_18 = var_list_miss;
                tmp_right_name_18 = const_str_digest_21cdd10f62cd6949a9d1866524676a91;
                tmp_args_element_name_14 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_18, tmp_right_name_18);
                if (tmp_args_element_name_14 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_6);

                    exception_lineno = 972;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 972;
                tmp_call_result_19 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_6, tmp_args_element_name_14);
                Py_DECREF(tmp_called_name_6);
                Py_DECREF(tmp_args_element_name_14);
                if (tmp_call_result_19 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 972;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_19);
            }
            branch_no_31:;
        }
        {
            nuitka_bool tmp_condition_result_32;
            PyObject *tmp_compexpr_left_25;
            PyObject *tmp_compexpr_right_25;
            if (var_list_spb == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_spb");
                exception_tb = NULL;

                exception_lineno = 973;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_25 = var_list_spb;
            tmp_compexpr_right_25 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_25, tmp_compexpr_right_25);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 973;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_32 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_32 == NUITKA_BOOL_TRUE) {
                goto branch_yes_32;
            } else {
                goto branch_no_32;
            }
            branch_yes_32:;
            {
                PyObject *tmp_called_name_7;
                PyObject *tmp_source_name_35;
                PyObject *tmp_call_result_20;
                PyObject *tmp_args_element_name_15;
                PyObject *tmp_left_name_19;
                PyObject *tmp_left_name_20;
                PyObject *tmp_right_name_19;
                PyObject *tmp_right_name_20;
                CHECK_OBJECT(par_ui);
                tmp_source_name_35 = par_ui;
                tmp_called_name_7 = LOOKUP_ATTRIBUTE(tmp_source_name_35, const_str_plain_msg_err);
                if (tmp_called_name_7 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 974;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_left_name_20 = const_str_digest_d52b7941c22e05e1a2d1a9d72b327962;
                if (var_list_spb == NULL) {
                    Py_DECREF(tmp_called_name_7);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_spb");
                    exception_tb = NULL;

                    exception_lineno = 974;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_right_name_19 = var_list_spb;
                tmp_left_name_19 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_20, tmp_right_name_19);
                if (tmp_left_name_19 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_7);

                    exception_lineno = 974;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_right_name_20 = const_str_digest_6f9d3b8c1c22c69a4d23112bae2b5acb;
                tmp_args_element_name_15 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_19, tmp_right_name_20);
                Py_DECREF(tmp_left_name_19);
                if (tmp_args_element_name_15 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_7);

                    exception_lineno = 974;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 974;
                tmp_call_result_20 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_7, tmp_args_element_name_15);
                Py_DECREF(tmp_called_name_7);
                Py_DECREF(tmp_args_element_name_15);
                if (tmp_call_result_20 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 974;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_20);
            }
            branch_no_32:;
        }
        {
            nuitka_bool tmp_condition_result_33;
            PyObject *tmp_compexpr_left_26;
            PyObject *tmp_compexpr_right_26;
            if (var_list_na == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_na");
                exception_tb = NULL;

                exception_lineno = 975;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_26 = var_list_na;
            tmp_compexpr_right_26 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_26, tmp_compexpr_right_26);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 975;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_33 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_33 == NUITKA_BOOL_TRUE) {
                goto branch_yes_33;
            } else {
                goto branch_no_33;
            }
            branch_yes_33:;
            {
                PyObject *tmp_called_name_8;
                PyObject *tmp_source_name_36;
                PyObject *tmp_call_result_21;
                PyObject *tmp_args_element_name_16;
                PyObject *tmp_left_name_21;
                PyObject *tmp_left_name_22;
                PyObject *tmp_right_name_21;
                PyObject *tmp_right_name_22;
                CHECK_OBJECT(par_ui);
                tmp_source_name_36 = par_ui;
                tmp_called_name_8 = LOOKUP_ATTRIBUTE(tmp_source_name_36, const_str_plain_msg_err);
                if (tmp_called_name_8 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 976;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_left_name_22 = const_str_digest_d52b7941c22e05e1a2d1a9d72b327962;
                if (var_list_na == NULL) {
                    Py_DECREF(tmp_called_name_8);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_na");
                    exception_tb = NULL;

                    exception_lineno = 976;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_right_name_21 = var_list_na;
                tmp_left_name_21 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_22, tmp_right_name_21);
                if (tmp_left_name_21 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_8);

                    exception_lineno = 976;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_right_name_22 = const_str_dot;
                tmp_args_element_name_16 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_21, tmp_right_name_22);
                Py_DECREF(tmp_left_name_21);
                if (tmp_args_element_name_16 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_8);

                    exception_lineno = 976;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 976;
                tmp_call_result_21 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_8, tmp_args_element_name_16);
                Py_DECREF(tmp_called_name_8);
                Py_DECREF(tmp_args_element_name_16);
                if (tmp_call_result_21 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 976;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_21);
            }
            branch_no_33:;
        }
        {
            nuitka_bool tmp_condition_result_34;
            PyObject *tmp_compexpr_left_27;
            PyObject *tmp_compexpr_right_27;
            if (var_list_to == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_to");
                exception_tb = NULL;

                exception_lineno = 977;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_27 = var_list_to;
            tmp_compexpr_right_27 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_27, tmp_compexpr_right_27);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 977;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_34 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_34 == NUITKA_BOOL_TRUE) {
                goto branch_yes_34;
            } else {
                goto branch_no_34;
            }
            branch_yes_34:;
            {
                PyObject *tmp_called_name_9;
                PyObject *tmp_source_name_37;
                PyObject *tmp_call_result_22;
                PyObject *tmp_args_element_name_17;
                PyObject *tmp_left_name_23;
                PyObject *tmp_left_name_24;
                PyObject *tmp_right_name_23;
                PyObject *tmp_right_name_24;
                CHECK_OBJECT(par_ui);
                tmp_source_name_37 = par_ui;
                tmp_called_name_9 = LOOKUP_ATTRIBUTE(tmp_source_name_37, const_str_plain_msg_err);
                if (tmp_called_name_9 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 978;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_left_name_24 = const_str_digest_a82b49df7b111b42d5f7e78ab780cafa;
                if (var_list_to == NULL) {
                    Py_DECREF(tmp_called_name_9);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_to");
                    exception_tb = NULL;

                    exception_lineno = 978;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_right_name_23 = var_list_to;
                tmp_left_name_23 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_24, tmp_right_name_23);
                if (tmp_left_name_23 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_9);

                    exception_lineno = 978;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_right_name_24 = const_str_dot;
                tmp_args_element_name_17 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_23, tmp_right_name_24);
                Py_DECREF(tmp_left_name_23);
                if (tmp_args_element_name_17 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_9);

                    exception_lineno = 978;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 978;
                tmp_call_result_22 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_9, tmp_args_element_name_17);
                Py_DECREF(tmp_called_name_9);
                Py_DECREF(tmp_args_element_name_17);
                if (tmp_call_result_22 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 978;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_22);
            }
            branch_no_34:;
        }
        {
            nuitka_bool tmp_condition_result_35;
            PyObject *tmp_compexpr_left_28;
            PyObject *tmp_compexpr_right_28;
            if (var_list_f == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                exception_tb = NULL;

                exception_lineno = 979;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_28 = var_list_f;
            tmp_compexpr_right_28 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_28, tmp_compexpr_right_28);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 979;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_35 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_35 == NUITKA_BOOL_TRUE) {
                goto branch_yes_35;
            } else {
                goto branch_no_35;
            }
            branch_yes_35:;
            {
                nuitka_bool tmp_condition_result_36;
                PyObject *tmp_compexpr_left_29;
                PyObject *tmp_compexpr_right_29;
                if (var_count_f == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "count_f");
                    exception_tb = NULL;

                    exception_lineno = 980;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_compexpr_left_29 = var_count_f;
                tmp_compexpr_right_29 = const_int_pos_1;
                tmp_res = RICH_COMPARE_BOOL_GT_OBJECT_INT(tmp_compexpr_left_29, tmp_compexpr_right_29);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 980;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_condition_result_36 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_36 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_36;
                } else {
                    goto branch_no_36;
                }
                branch_yes_36:;
                {
                    PyObject *tmp_called_name_10;
                    PyObject *tmp_source_name_38;
                    PyObject *tmp_call_result_23;
                    PyObject *tmp_args_element_name_18;
                    PyObject *tmp_left_name_25;
                    PyObject *tmp_left_name_26;
                    PyObject *tmp_right_name_25;
                    PyObject *tmp_right_name_26;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_38 = par_ui;
                    tmp_called_name_10 = LOOKUP_ATTRIBUTE(tmp_source_name_38, const_str_plain_msg_err);
                    if (tmp_called_name_10 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 981;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_left_name_26 = const_str_digest_d52b7941c22e05e1a2d1a9d72b327962;
                    if (var_list_f == NULL) {
                        Py_DECREF(tmp_called_name_10);
                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                        exception_tb = NULL;

                        exception_lineno = 981;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_right_name_25 = var_list_f;
                    tmp_left_name_25 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_26, tmp_right_name_25);
                    if (tmp_left_name_25 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_10);

                        exception_lineno = 981;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_26 = const_str_digest_fcb3f707055a45843f9f5f984a177a66;
                    tmp_args_element_name_18 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_25, tmp_right_name_26);
                    Py_DECREF(tmp_left_name_25);
                    if (tmp_args_element_name_18 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_10);

                        exception_lineno = 981;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 981;
                    tmp_call_result_23 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_10, tmp_args_element_name_18);
                    Py_DECREF(tmp_called_name_10);
                    Py_DECREF(tmp_args_element_name_18);
                    if (tmp_call_result_23 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 981;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_23);
                }
                goto branch_end_36;
                branch_no_36:;
                {
                    PyObject *tmp_called_name_11;
                    PyObject *tmp_source_name_39;
                    PyObject *tmp_call_result_24;
                    PyObject *tmp_args_element_name_19;
                    PyObject *tmp_left_name_27;
                    PyObject *tmp_left_name_28;
                    PyObject *tmp_left_name_29;
                    PyObject *tmp_left_name_30;
                    PyObject *tmp_left_name_31;
                    PyObject *tmp_left_name_32;
                    PyObject *tmp_right_name_27;
                    PyObject *tmp_right_name_28;
                    PyObject *tmp_right_name_29;
                    PyObject *tmp_str_arg_1;
                    PyObject *tmp_subscribed_name_22;
                    PyObject *tmp_source_name_40;
                    PyObject *tmp_subscript_name_22;
                    PyObject *tmp_right_name_30;
                    PyObject *tmp_right_name_31;
                    PyObject *tmp_str_arg_2;
                    PyObject *tmp_subscribed_name_23;
                    PyObject *tmp_source_name_41;
                    PyObject *tmp_subscript_name_23;
                    PyObject *tmp_right_name_32;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_39 = par_ui;
                    tmp_called_name_11 = LOOKUP_ATTRIBUTE(tmp_source_name_39, const_str_plain_msg_err);
                    if (tmp_called_name_11 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 983;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_left_name_32 = const_str_digest_d52b7941c22e05e1a2d1a9d72b327962;
                    if (var_list_f == NULL) {
                        Py_DECREF(tmp_called_name_11);
                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                        exception_tb = NULL;

                        exception_lineno = 983;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_right_name_27 = var_list_f;
                    tmp_left_name_31 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_32, tmp_right_name_27);
                    if (tmp_left_name_31 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_11);

                        exception_lineno = 983;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_28 = const_str_digest_2d5ab67f28a1f8ea7de7b4da8d17a7c2;
                    tmp_left_name_30 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_31, tmp_right_name_28);
                    Py_DECREF(tmp_left_name_31);
                    if (tmp_left_name_30 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_11);

                        exception_lineno = 983;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_40 = par_ui;
                    tmp_subscribed_name_22 = LOOKUP_ATTRIBUTE(tmp_source_name_40, const_str_plain_admin_aol_list);
                    if (tmp_subscribed_name_22 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_11);
                        Py_DECREF(tmp_left_name_30);

                        exception_lineno = 983;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    if (var_last_f == NULL) {
                        Py_DECREF(tmp_called_name_11);
                        Py_DECREF(tmp_left_name_30);
                        Py_DECREF(tmp_subscribed_name_22);
                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "last_f");
                        exception_tb = NULL;

                        exception_lineno = 983;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_subscript_name_22 = var_last_f;
                    tmp_str_arg_1 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_22, tmp_subscript_name_22);
                    Py_DECREF(tmp_subscribed_name_22);
                    if (tmp_str_arg_1 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_11);
                        Py_DECREF(tmp_left_name_30);

                        exception_lineno = 983;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_29 = PyObject_Str(tmp_str_arg_1);
                    Py_DECREF(tmp_str_arg_1);
                    if (tmp_right_name_29 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_11);
                        Py_DECREF(tmp_left_name_30);

                        exception_lineno = 983;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_left_name_29 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_30, tmp_right_name_29);
                    Py_DECREF(tmp_left_name_30);
                    Py_DECREF(tmp_right_name_29);
                    if (tmp_left_name_29 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_11);

                        exception_lineno = 983;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_30 = const_str_digest_557fe80a6c273179b39f6cacbcbc5fdc;
                    tmp_left_name_28 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_29, tmp_right_name_30);
                    Py_DECREF(tmp_left_name_29);
                    if (tmp_left_name_28 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_11);

                        exception_lineno = 983;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_41 = par_ui;
                    tmp_subscribed_name_23 = LOOKUP_ATTRIBUTE(tmp_source_name_41, const_str_plain_retrylimit_list);
                    if (tmp_subscribed_name_23 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_11);
                        Py_DECREF(tmp_left_name_28);

                        exception_lineno = 983;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    if (var_last_f == NULL) {
                        Py_DECREF(tmp_called_name_11);
                        Py_DECREF(tmp_left_name_28);
                        Py_DECREF(tmp_subscribed_name_23);
                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "last_f");
                        exception_tb = NULL;

                        exception_lineno = 983;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_subscript_name_23 = var_last_f;
                    tmp_str_arg_2 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_23, tmp_subscript_name_23);
                    Py_DECREF(tmp_subscribed_name_23);
                    if (tmp_str_arg_2 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_11);
                        Py_DECREF(tmp_left_name_28);

                        exception_lineno = 983;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_31 = PyObject_Str(tmp_str_arg_2);
                    Py_DECREF(tmp_str_arg_2);
                    if (tmp_right_name_31 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_11);
                        Py_DECREF(tmp_left_name_28);

                        exception_lineno = 983;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_left_name_27 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_28, tmp_right_name_31);
                    Py_DECREF(tmp_left_name_28);
                    Py_DECREF(tmp_right_name_31);
                    if (tmp_left_name_27 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_11);

                        exception_lineno = 983;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_32 = const_str_dot;
                    tmp_args_element_name_19 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_27, tmp_right_name_32);
                    Py_DECREF(tmp_left_name_27);
                    if (tmp_args_element_name_19 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_11);

                        exception_lineno = 983;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 983;
                    tmp_call_result_24 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_11, tmp_args_element_name_19);
                    Py_DECREF(tmp_called_name_11);
                    Py_DECREF(tmp_args_element_name_19);
                    if (tmp_call_result_24 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 983;
                        type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_24);
                }
                branch_end_36:;
            }
            branch_no_35:;
        }
        {
            nuitka_bool tmp_condition_result_37;
            PyObject *tmp_compexpr_left_30;
            PyObject *tmp_compexpr_right_30;
            if (var_list_alo == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_alo");
                exception_tb = NULL;

                exception_lineno = 984;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_30 = var_list_alo;
            tmp_compexpr_right_30 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_30, tmp_compexpr_right_30);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 984;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_37 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_37 == NUITKA_BOOL_TRUE) {
                goto branch_yes_37;
            } else {
                goto branch_no_37;
            }
            branch_yes_37:;
            {
                PyObject *tmp_called_name_12;
                PyObject *tmp_source_name_42;
                PyObject *tmp_call_result_25;
                PyObject *tmp_args_element_name_20;
                PyObject *tmp_left_name_33;
                PyObject *tmp_left_name_34;
                PyObject *tmp_right_name_33;
                PyObject *tmp_right_name_34;
                CHECK_OBJECT(par_ui);
                tmp_source_name_42 = par_ui;
                tmp_called_name_12 = LOOKUP_ATTRIBUTE(tmp_source_name_42, const_str_plain_msg_err);
                if (tmp_called_name_12 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 985;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_left_name_34 = const_str_digest_65e9196bd4c730b537e5cdf8fe311777;
                if (var_list_alo == NULL) {
                    Py_DECREF(tmp_called_name_12);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_alo");
                    exception_tb = NULL;

                    exception_lineno = 985;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_right_name_33 = var_list_alo;
                tmp_left_name_33 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_34, tmp_right_name_33);
                if (tmp_left_name_33 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_12);

                    exception_lineno = 985;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_right_name_34 = const_str_digest_8da2f7ce80b0ea01448ac4bbab6c01ae;
                tmp_args_element_name_20 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_33, tmp_right_name_34);
                Py_DECREF(tmp_left_name_33);
                if (tmp_args_element_name_20 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_12);

                    exception_lineno = 985;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 985;
                tmp_call_result_25 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_12, tmp_args_element_name_20);
                Py_DECREF(tmp_called_name_12);
                Py_DECREF(tmp_args_element_name_20);
                if (tmp_call_result_25 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 985;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_25);
            }
            branch_no_37:;
        }
        {
            nuitka_bool tmp_condition_result_38;
            PyObject *tmp_compexpr_left_31;
            PyObject *tmp_compexpr_right_31;
            if (var_list_p == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p");
                exception_tb = NULL;

                exception_lineno = 986;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_31 = var_list_p;
            tmp_compexpr_right_31 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_31, tmp_compexpr_right_31);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 986;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_38 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_38 == NUITKA_BOOL_TRUE) {
                goto branch_yes_38;
            } else {
                goto branch_no_38;
            }
            branch_yes_38:;
            {
                PyObject *tmp_called_name_13;
                PyObject *tmp_source_name_43;
                PyObject *tmp_call_result_26;
                PyObject *tmp_args_element_name_21;
                PyObject *tmp_left_name_35;
                PyObject *tmp_left_name_36;
                PyObject *tmp_right_name_35;
                PyObject *tmp_right_name_36;
                CHECK_OBJECT(par_ui);
                tmp_source_name_43 = par_ui;
                tmp_called_name_13 = LOOKUP_ATTRIBUTE(tmp_source_name_43, const_str_plain_msg_ok);
                if (tmp_called_name_13 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 987;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_left_name_36 = const_str_digest_053fa4c75a0b51308e17bf327161a305;
                if (var_list_p == NULL) {
                    Py_DECREF(tmp_called_name_13);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p");
                    exception_tb = NULL;

                    exception_lineno = 987;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_right_name_35 = var_list_p;
                tmp_left_name_35 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_36, tmp_right_name_35);
                if (tmp_left_name_35 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_13);

                    exception_lineno = 987;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_right_name_36 = const_str_dot;
                tmp_args_element_name_21 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_35, tmp_right_name_36);
                Py_DECREF(tmp_left_name_35);
                if (tmp_args_element_name_21 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_13);

                    exception_lineno = 987;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 987;
                tmp_call_result_26 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_13, tmp_args_element_name_21);
                Py_DECREF(tmp_called_name_13);
                Py_DECREF(tmp_args_element_name_21);
                if (tmp_call_result_26 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 987;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_26);
            }
            branch_no_38:;
        }
        {
            PyObject *tmp_called_instance_17;
            PyObject *tmp_call_result_27;
            PyObject *tmp_args_element_name_22;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_17 = par_ui;
            CHECK_OBJECT(par_ui);
            tmp_args_element_name_22 = par_ui;
            frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 988;
            {
                PyObject *call_args[] = {tmp_args_element_name_22};
                tmp_call_result_27 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_17, const_str_plain_revert_keep_prompt, call_args);
            }

            if (tmp_call_result_27 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 988;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_27);
        }
        goto branch_end_15;
        branch_no_15:;
        {
            PyObject *tmp_assign_source_76;
            tmp_assign_source_76 = Py_True;
            assert(var_start == NULL);
            Py_INCREF(tmp_assign_source_76);
            var_start = tmp_assign_source_76;
        }
        {
            PyObject *tmp_assign_source_77;
            tmp_assign_source_77 = const_str_empty;
            assert(var_liststr == NULL);
            Py_INCREF(tmp_assign_source_77);
            var_liststr = tmp_assign_source_77;
        }
        {
            PyObject *tmp_assign_source_78;
            PyObject *tmp_iter_arg_8;
            CHECK_OBJECT(par_selected_list);
            tmp_iter_arg_8 = par_selected_list;
            tmp_assign_source_78 = MAKE_ITERATOR(tmp_iter_arg_8);
            if (tmp_assign_source_78 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 994;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_8__for_iterator == NULL);
            tmp_for_loop_8__for_iterator = tmp_assign_source_78;
        }
        // Tried code:
        loop_start_8:;
        {
            PyObject *tmp_next_source_8;
            PyObject *tmp_assign_source_79;
            CHECK_OBJECT(tmp_for_loop_8__for_iterator);
            tmp_next_source_8 = tmp_for_loop_8__for_iterator;
            tmp_assign_source_79 = ITERATOR_NEXT(tmp_next_source_8);
            if (tmp_assign_source_79 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_8;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    exception_lineno = 994;
                    goto try_except_handler_12;
                }
            }

            {
                PyObject *old = tmp_for_loop_8__iter_value;
                tmp_for_loop_8__iter_value = tmp_assign_source_79;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_80;
            CHECK_OBJECT(tmp_for_loop_8__iter_value);
            tmp_assign_source_80 = tmp_for_loop_8__iter_value;
            {
                PyObject *old = var_d;
                var_d = tmp_assign_source_80;
                Py_INCREF(var_d);
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assattr_name_6;
            PyObject *tmp_subscribed_name_24;
            PyObject *tmp_source_name_44;
            PyObject *tmp_subscript_name_24;
            PyObject *tmp_assattr_target_6;
            CHECK_OBJECT(par_ui);
            tmp_source_name_44 = par_ui;
            tmp_subscribed_name_24 = LOOKUP_ATTRIBUTE(tmp_source_name_44, const_str_plain_devs_list);
            if (tmp_subscribed_name_24 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 995;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }
            CHECK_OBJECT(var_d);
            tmp_subscript_name_24 = var_d;
            tmp_assattr_name_6 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_24, tmp_subscript_name_24);
            Py_DECREF(tmp_subscribed_name_24);
            if (tmp_assattr_name_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 995;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }
            CHECK_OBJECT(par_ui);
            tmp_assattr_target_6 = par_ui;
            tmp_result = SET_ATTRIBUTE(tmp_assattr_target_6, const_str_plain_devname, tmp_assattr_name_6);
            Py_DECREF(tmp_assattr_name_6);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 995;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }
        }
        {
            PyObject *tmp_called_instance_18;
            PyObject *tmp_mvar_value_9;
            PyObject *tmp_call_result_28;
            PyObject *tmp_args_element_name_23;
            PyObject *tmp_args_element_name_24;
            PyObject *tmp_args_element_name_25;
            tmp_mvar_value_9 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_dialogs);

            if (unlikely(tmp_mvar_value_9 == NULL)) {
                tmp_mvar_value_9 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_dialogs);
            }

            if (tmp_mvar_value_9 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 418 ], 36, 0);
                exception_tb = NULL;

                exception_lineno = 996;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }

            tmp_called_instance_18 = tmp_mvar_value_9;
            tmp_args_element_name_23 = Py_None;
            CHECK_OBJECT(par_ui);
            tmp_args_element_name_24 = par_ui;
            tmp_args_element_name_25 = const_int_pos_1;
            frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 996;
            {
                PyObject *call_args[] = {tmp_args_element_name_23, tmp_args_element_name_24, tmp_args_element_name_25};
                tmp_call_result_28 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_18, const_str_plain_query, call_args);
            }

            if (tmp_call_result_28 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 996;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }
            Py_DECREF(tmp_call_result_28);
        }
        {
            nuitka_bool tmp_condition_result_39;
            PyObject *tmp_operand_name_8;
            if (var_start == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start");
                exception_tb = NULL;

                exception_lineno = 997;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }

            tmp_operand_name_8 = var_start;
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_8);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 997;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }
            tmp_condition_result_39 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_39 == NUITKA_BOOL_TRUE) {
                goto branch_yes_39;
            } else {
                goto branch_no_39;
            }
            branch_yes_39:;
            {
                PyObject *tmp_assign_source_81;
                PyObject *tmp_left_name_37;
                PyObject *tmp_right_name_37;
                CHECK_OBJECT(var_liststr);
                tmp_left_name_37 = var_liststr;
                tmp_right_name_37 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                tmp_assign_source_81 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_37, tmp_right_name_37);
                if (tmp_assign_source_81 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 998;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_12;
                }
                {
                    PyObject *old = var_liststr;
                    assert(old != NULL);
                    var_liststr = tmp_assign_source_81;
                    Py_DECREF(old);
                }

            }
            goto branch_end_39;
            branch_no_39:;
            {
                PyObject *tmp_assign_source_82;
                tmp_assign_source_82 = Py_False;
                {
                    PyObject *old = var_start;
                    var_start = tmp_assign_source_82;
                    Py_INCREF(var_start);
                    Py_XDECREF(old);
                }

            }
            branch_end_39:;
        }
        {
            PyObject *tmp_assign_source_83;
            PyObject *tmp_left_name_38;
            PyObject *tmp_right_name_38;
            PyObject *tmp_subscribed_name_25;
            PyObject *tmp_source_name_45;
            PyObject *tmp_subscript_name_25;
            if (var_liststr == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "liststr");
                exception_tb = NULL;

                exception_lineno = 1001;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }

            tmp_left_name_38 = var_liststr;
            CHECK_OBJECT(par_ui);
            tmp_source_name_45 = par_ui;
            tmp_subscribed_name_25 = LOOKUP_ATTRIBUTE(tmp_source_name_45, const_str_plain_devs_list);
            if (tmp_subscribed_name_25 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1001;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }
            CHECK_OBJECT(var_d);
            tmp_subscript_name_25 = var_d;
            tmp_right_name_38 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_25, tmp_subscript_name_25);
            Py_DECREF(tmp_subscribed_name_25);
            if (tmp_right_name_38 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1001;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }
            tmp_assign_source_83 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_38, tmp_right_name_38);
            Py_DECREF(tmp_right_name_38);
            if (tmp_assign_source_83 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1001;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }
            {
                PyObject *old = var_liststr;
                var_liststr = tmp_assign_source_83;
                Py_XDECREF(old);
            }

        }
        {
            nuitka_bool tmp_condition_result_40;
            PyObject *tmp_compexpr_left_32;
            PyObject *tmp_compexpr_right_32;
            PyObject *tmp_source_name_46;
            CHECK_OBJECT(par_ui);
            tmp_source_name_46 = par_ui;
            tmp_compexpr_left_32 = LOOKUP_ATTRIBUTE(tmp_source_name_46, const_str_plain_DEV_OS);
            if (tmp_compexpr_left_32 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1004;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }
            tmp_compexpr_right_32 = const_str_plain_Windows;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_32, tmp_compexpr_right_32);
            Py_DECREF(tmp_compexpr_left_32);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1004;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }
            tmp_condition_result_40 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_40 == NUITKA_BOOL_TRUE) {
                goto branch_yes_40;
            } else {
                goto branch_no_40;
            }
            branch_yes_40:;
            {
                PyObject *tmp_called_instance_19;
                PyObject *tmp_mvar_value_10;
                PyObject *tmp_call_result_29;
                PyObject *tmp_args_element_name_26;
                PyObject *tmp_args_element_name_27;
                tmp_mvar_value_10 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_background);

                if (unlikely(tmp_mvar_value_10 == NULL)) {
                    tmp_mvar_value_10 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_background);
                }

                if (tmp_mvar_value_10 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 379 ], 39, 0);
                    exception_tb = NULL;

                    exception_lineno = 1005;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_12;
                }

                tmp_called_instance_19 = tmp_mvar_value_10;
                CHECK_OBJECT(par_ui);
                tmp_args_element_name_26 = par_ui;
                CHECK_OBJECT(var_d);
                tmp_args_element_name_27 = var_d;
                frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 1005;
                {
                    PyObject *call_args[] = {tmp_args_element_name_26, tmp_args_element_name_27};
                    tmp_call_result_29 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_19, const_str_plain_remount, call_args);
                }

                if (tmp_call_result_29 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1005;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_12;
                }
                Py_DECREF(tmp_call_result_29);
            }
            branch_no_40:;
        }
        {
            PyObject *tmp_ass_subvalue_7;
            PyObject *tmp_ass_subscribed_7;
            PyObject *tmp_source_name_47;
            PyObject *tmp_ass_subscript_7;
            tmp_ass_subvalue_7 = const_str_plain_Unlocked;
            CHECK_OBJECT(par_ui);
            tmp_source_name_47 = par_ui;
            tmp_ass_subscribed_7 = LOOKUP_ATTRIBUTE(tmp_source_name_47, const_str_plain_lockstatus_list);
            if (tmp_ass_subscribed_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1006;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }
            CHECK_OBJECT(var_d);
            tmp_ass_subscript_7 = var_d;
            tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_7, tmp_ass_subscript_7, tmp_ass_subvalue_7);
            Py_DECREF(tmp_ass_subscribed_7);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1006;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }
        }
        {
            PyObject *tmp_ass_subvalue_8;
            PyObject *tmp_ass_subscribed_8;
            PyObject *tmp_source_name_48;
            PyObject *tmp_ass_subscript_8;
            tmp_ass_subvalue_8 = const_str_plain_No;
            CHECK_OBJECT(par_ui);
            tmp_source_name_48 = par_ui;
            tmp_ass_subscribed_8 = LOOKUP_ATTRIBUTE(tmp_source_name_48, const_str_plain_setupstatus_list);
            if (tmp_ass_subscribed_8 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1007;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }
            CHECK_OBJECT(var_d);
            tmp_ass_subscript_8 = var_d;
            tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_8, tmp_ass_subscript_8, tmp_ass_subvalue_8);
            Py_DECREF(tmp_ass_subscribed_8);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1007;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }
        }
        {
            PyObject *tmp_ass_subvalue_9;
            PyObject *tmp_ass_subscribed_9;
            PyObject *tmp_source_name_49;
            PyObject *tmp_ass_subscript_9;
            tmp_ass_subvalue_9 = const_str_digest_f9aa9f1d756280254529dbc306087548;
            CHECK_OBJECT(par_ui);
            tmp_source_name_49 = par_ui;
            tmp_ass_subscribed_9 = LOOKUP_ATTRIBUTE(tmp_source_name_49, const_str_plain_setupuser_list);
            if (tmp_ass_subscribed_9 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1008;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }
            CHECK_OBJECT(var_d);
            tmp_ass_subscript_9 = var_d;
            tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_9, tmp_ass_subscript_9, tmp_ass_subvalue_9);
            Py_DECREF(tmp_ass_subscribed_9);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1008;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }
        }
        {
            PyObject *tmp_ass_subvalue_10;
            PyObject *tmp_ass_subscribed_10;
            PyObject *tmp_source_name_50;
            PyObject *tmp_ass_subscript_10;
            tmp_ass_subvalue_10 = const_str_digest_f9aa9f1d756280254529dbc306087548;
            CHECK_OBJECT(par_ui);
            tmp_source_name_50 = par_ui;
            tmp_ass_subscribed_10 = LOOKUP_ATTRIBUTE(tmp_source_name_50, const_str_plain_pba_list);
            if (tmp_ass_subscribed_10 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1009;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }
            CHECK_OBJECT(var_d);
            tmp_ass_subscript_10 = var_d;
            tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_10, tmp_ass_subscript_10, tmp_ass_subvalue_10);
            Py_DECREF(tmp_ass_subscribed_10);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1009;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }
        }
        {
            nuitka_bool tmp_condition_result_41;
            PyObject *tmp_compexpr_left_33;
            PyObject *tmp_compexpr_right_33;
            PyObject *tmp_source_name_51;
            CHECK_OBJECT(var_d);
            tmp_compexpr_left_33 = var_d;
            CHECK_OBJECT(par_ui);
            tmp_source_name_51 = par_ui;
            tmp_compexpr_right_33 = LOOKUP_ATTRIBUTE(tmp_source_name_51, const_str_plain_mbr_setup_list);
            if (tmp_compexpr_right_33 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1010;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }
            tmp_res = PySequence_Contains(tmp_compexpr_right_33, tmp_compexpr_left_33);
            Py_DECREF(tmp_compexpr_right_33);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1010;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }
            tmp_condition_result_41 = (tmp_res == 1) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_41 == NUITKA_BOOL_TRUE) {
                goto branch_yes_41;
            } else {
                goto branch_no_41;
            }
            branch_yes_41:;
            {
                PyObject *tmp_called_instance_20;
                PyObject *tmp_source_name_52;
                PyObject *tmp_call_result_30;
                PyObject *tmp_args_element_name_28;
                CHECK_OBJECT(par_ui);
                tmp_source_name_52 = par_ui;
                tmp_called_instance_20 = LOOKUP_ATTRIBUTE(tmp_source_name_52, const_str_plain_mbr_setup_list);
                if (tmp_called_instance_20 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1011;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_12;
                }
                CHECK_OBJECT(var_d);
                tmp_args_element_name_28 = var_d;
                frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 1011;
                {
                    PyObject *call_args[] = {tmp_args_element_name_28};
                    tmp_call_result_30 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_20, const_str_plain_remove, call_args);
                }

                Py_DECREF(tmp_called_instance_20);
                if (tmp_call_result_30 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1011;
                    type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                    goto try_except_handler_12;
                }
                Py_DECREF(tmp_call_result_30);
            }
            branch_no_41:;
        }
        {
            PyObject *tmp_called_instance_21;
            PyObject *tmp_call_result_31;
            PyObject *tmp_args_element_name_29;
            PyObject *tmp_args_element_name_30;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_21 = par_ui;
            CHECK_OBJECT(var_d);
            tmp_args_element_name_29 = var_d;
            tmp_args_element_name_30 = LIST_COPY(const_list_int_pos_4_list);
            frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 1012;
            {
                PyObject *call_args[] = {tmp_args_element_name_29, tmp_args_element_name_30};
                tmp_call_result_31 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_21, const_str_plain_updateDevs, call_args);
            }

            Py_DECREF(tmp_args_element_name_30);
            if (tmp_call_result_31 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1012;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto try_except_handler_12;
            }
            Py_DECREF(tmp_call_result_31);
        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 994;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto try_except_handler_12;
        }
        goto loop_start_8;
        loop_end_8:;
        goto try_end_11;
        // Exception handler code:
        try_except_handler_12:;
        exception_keeper_type_11 = exception_type;
        exception_keeper_value_11 = exception_value;
        exception_keeper_tb_11 = exception_tb;
        exception_keeper_lineno_11 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_8__iter_value);
        tmp_for_loop_8__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_8__for_iterator);
        Py_DECREF(tmp_for_loop_8__for_iterator);
        tmp_for_loop_8__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_11;
        exception_value = exception_keeper_value_11;
        exception_tb = exception_keeper_tb_11;
        exception_lineno = exception_keeper_lineno_11;

        goto frame_exception_exit_1;
        // End of try:
        try_end_11:;
        Py_XDECREF(tmp_for_loop_8__iter_value);
        tmp_for_loop_8__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_8__for_iterator);
        Py_DECREF(tmp_for_loop_8__for_iterator);
        tmp_for_loop_8__for_iterator = NULL;

        {
            PyObject *tmp_called_name_14;
            PyObject *tmp_source_name_53;
            PyObject *tmp_call_result_32;
            PyObject *tmp_args_element_name_31;
            PyObject *tmp_left_name_39;
            PyObject *tmp_left_name_40;
            PyObject *tmp_right_name_39;
            PyObject *tmp_right_name_40;
            CHECK_OBJECT(par_ui);
            tmp_source_name_53 = par_ui;
            tmp_called_name_14 = LOOKUP_ATTRIBUTE(tmp_source_name_53, const_str_plain_msg_ok);
            if (tmp_called_name_14 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1013;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_left_name_40 = const_str_digest_053fa4c75a0b51308e17bf327161a305;
            CHECK_OBJECT(var_liststr);
            tmp_right_name_39 = var_liststr;
            tmp_left_name_39 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_40, tmp_right_name_39);
            if (tmp_left_name_39 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_14);

                exception_lineno = 1013;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_right_name_40 = const_str_dot;
            tmp_args_element_name_31 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_39, tmp_right_name_40);
            Py_DECREF(tmp_left_name_39);
            if (tmp_args_element_name_31 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_14);

                exception_lineno = 1013;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 1013;
            tmp_call_result_32 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_14, tmp_args_element_name_31);
            Py_DECREF(tmp_called_name_14);
            Py_DECREF(tmp_args_element_name_31);
            if (tmp_call_result_32 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1013;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_32);
        }
        {
            PyObject *tmp_called_instance_22;
            PyObject *tmp_call_result_33;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_22 = par_ui;
            frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 1015;
            tmp_call_result_33 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_22, const_str_plain_returnToMain, &PyTuple_GET_ITEM(const_tuple_none_false_tuple, 0));

            if (tmp_call_result_33 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1015;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_33);
        }
        branch_end_15:;
    }
    {
        PyObject *tmp_called_instance_23;
        PyObject *tmp_call_result_34;
        CHECK_OBJECT(par_ui);
        tmp_called_instance_23 = par_ui;
        frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 1018;
        tmp_call_result_34 = CALL_METHOD_NO_ARGS(tmp_called_instance_23, const_str_plain_stop_spin);
        if (tmp_call_result_34 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1018;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_34);
    }
    {
        nuitka_bool tmp_condition_result_42;
        int tmp_truth_name_5;
        CHECK_OBJECT(par_rescan_needed);
        tmp_truth_name_5 = CHECK_IF_TRUE(par_rescan_needed);
        if (tmp_truth_name_5 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1019;
            type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_42 = tmp_truth_name_5 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_42 == NUITKA_BOOL_TRUE) {
            goto branch_yes_42;
        } else {
            goto branch_no_42;
        }
        branch_yes_42:;
        {
            PyObject *tmp_called_instance_24;
            PyObject *tmp_call_result_35;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_24 = par_ui;
            frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 1020;
            tmp_call_result_35 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_24, const_str_plain_msg_ok, &PyTuple_GET_ITEM(const_tuple_str_digest_ae3b8b33bbb4f0816fc34e114de2f069_tuple, 0));

            if (tmp_call_result_35 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1020;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_35);
        }
        {
            PyObject *tmp_called_instance_25;
            PyObject *tmp_mvar_value_11;
            PyObject *tmp_call_result_36;
            PyObject *tmp_args_element_name_32;
            PyObject *tmp_args_element_name_33;
            PyObject *tmp_args_element_name_34;
            tmp_mvar_value_11 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_runscan);

            if (unlikely(tmp_mvar_value_11 == NULL)) {
                tmp_mvar_value_11 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runscan);
            }

            if (tmp_mvar_value_11 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 454 ], 36, 0);
                exception_tb = NULL;

                exception_lineno = 1021;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_called_instance_25 = tmp_mvar_value_11;
            tmp_args_element_name_32 = Py_None;
            CHECK_OBJECT(par_ui);
            tmp_args_element_name_33 = par_ui;
            tmp_args_element_name_34 = Py_True;
            frame_d0982cf3c09573f295fd67db087609f2->m_frame.f_lineno = 1021;
            {
                PyObject *call_args[] = {tmp_args_element_name_32, tmp_args_element_name_33, tmp_args_element_name_34};
                tmp_call_result_36 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_25, const_str_plain_run_scan, call_args);
            }

            if (tmp_call_result_36 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1021;
                type_description_1 = "oooooooooooooNooooNooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_36);
        }
        branch_no_42:;
    }

#if 1
    RESTORE_FRAME_EXCEPTION(frame_d0982cf3c09573f295fd67db087609f2);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_exception_exit_1:;

#if 1
    RESTORE_FRAME_EXCEPTION(frame_d0982cf3c09573f295fd67db087609f2);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_d0982cf3c09573f295fd67db087609f2, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_d0982cf3c09573f295fd67db087609f2->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_d0982cf3c09573f295fd67db087609f2, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_d0982cf3c09573f295fd67db087609f2,
        type_description_1,
        par_ui,
        par_max_time,
        par_start_time,
        par_op_threads,
        par_res_list,
        par_e_to,
        par_selected_list,
        par_status_list,
        par_rescan_needed,
        par_val2,
        par_val3,
        par_val4,
        var_list_p,
        NULL,
        var_list_alo,
        var_start_miss,
        var_list_f,
        var_start_alo,
        NULL,
        var_sel_idx,
        var_res_sum,
        var_start,
        var_list_to,
        var_any_unlocked,
        var_elapsed_time,
        var_start_f,
        var_list_miss,
        var_count_f,
        var_list_spb,
        var_start_to,
        var_op_thread,
        var_last_f,
        var_count,
        var_d,
        var_f,
        var_i,
        var_start_spb,
        var_pipe,
        var_p,
        var_start_p,
        var_list_na,
        var_y,
        var_x,
        var_z,
        var_liststr,
        var_curr_time
    );


    // Release cached frame.
    if (frame_d0982cf3c09573f295fd67db087609f2 == cache_frame_d0982cf3c09573f295fd67db087609f2) {
        Py_DECREF(frame_d0982cf3c09573f295fd67db087609f2);
    }
    cache_frame_d0982cf3c09573f295fd67db087609f2 = NULL;

    assertFrameObject(frame_d0982cf3c09573f295fd67db087609f2);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(cleanop$$$function_6_revertKeep_cleanup);
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    Py_XDECREF(var_list_p);
    var_list_p = NULL;

    Py_XDECREF(var_list_alo);
    var_list_alo = NULL;

    Py_XDECREF(var_start_miss);
    var_start_miss = NULL;

    Py_XDECREF(var_list_f);
    var_list_f = NULL;

    Py_XDECREF(var_start_alo);
    var_start_alo = NULL;

    CHECK_OBJECT((PyObject *)var_sel_idx);
    Py_DECREF(var_sel_idx);
    var_sel_idx = NULL;

    CHECK_OBJECT((PyObject *)var_res_sum);
    Py_DECREF(var_res_sum);
    var_res_sum = NULL;

    Py_XDECREF(var_start);
    var_start = NULL;

    Py_XDECREF(var_list_to);
    var_list_to = NULL;

    Py_XDECREF(var_any_unlocked);
    var_any_unlocked = NULL;

    CHECK_OBJECT((PyObject *)var_elapsed_time);
    Py_DECREF(var_elapsed_time);
    var_elapsed_time = NULL;

    Py_XDECREF(var_start_f);
    var_start_f = NULL;

    Py_XDECREF(var_list_miss);
    var_list_miss = NULL;

    Py_XDECREF(var_count_f);
    var_count_f = NULL;

    Py_XDECREF(var_list_spb);
    var_list_spb = NULL;

    Py_XDECREF(var_start_to);
    var_start_to = NULL;

    Py_XDECREF(var_op_thread);
    var_op_thread = NULL;

    Py_XDECREF(var_last_f);
    var_last_f = NULL;

    Py_XDECREF(var_count);
    var_count = NULL;

    Py_XDECREF(var_d);
    var_d = NULL;

    Py_XDECREF(var_f);
    var_f = NULL;

    Py_XDECREF(var_i);
    var_i = NULL;

    Py_XDECREF(var_start_spb);
    var_start_spb = NULL;

    Py_XDECREF(var_pipe);
    var_pipe = NULL;

    Py_XDECREF(var_p);
    var_p = NULL;

    Py_XDECREF(var_start_p);
    var_start_p = NULL;

    Py_XDECREF(var_list_na);
    var_list_na = NULL;

    Py_XDECREF(var_y);
    var_y = NULL;

    Py_XDECREF(var_x);
    var_x = NULL;

    Py_XDECREF(var_z);
    var_z = NULL;

    Py_XDECREF(var_liststr);
    var_liststr = NULL;

    CHECK_OBJECT((PyObject *)var_curr_time);
    Py_DECREF(var_curr_time);
    var_curr_time = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_12 = exception_type;
    exception_keeper_value_12 = exception_value;
    exception_keeper_tb_12 = exception_tb;
    exception_keeper_lineno_12 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_list_p);
    var_list_p = NULL;

    Py_XDECREF(var_list_alo);
    var_list_alo = NULL;

    Py_XDECREF(var_start_miss);
    var_start_miss = NULL;

    Py_XDECREF(var_list_f);
    var_list_f = NULL;

    Py_XDECREF(var_start_alo);
    var_start_alo = NULL;

    Py_XDECREF(var_sel_idx);
    var_sel_idx = NULL;

    Py_XDECREF(var_res_sum);
    var_res_sum = NULL;

    Py_XDECREF(var_start);
    var_start = NULL;

    Py_XDECREF(var_list_to);
    var_list_to = NULL;

    Py_XDECREF(var_any_unlocked);
    var_any_unlocked = NULL;

    Py_XDECREF(var_elapsed_time);
    var_elapsed_time = NULL;

    Py_XDECREF(var_start_f);
    var_start_f = NULL;

    Py_XDECREF(var_list_miss);
    var_list_miss = NULL;

    Py_XDECREF(var_count_f);
    var_count_f = NULL;

    Py_XDECREF(var_list_spb);
    var_list_spb = NULL;

    Py_XDECREF(var_start_to);
    var_start_to = NULL;

    Py_XDECREF(var_op_thread);
    var_op_thread = NULL;

    Py_XDECREF(var_last_f);
    var_last_f = NULL;

    Py_XDECREF(var_count);
    var_count = NULL;

    Py_XDECREF(var_d);
    var_d = NULL;

    Py_XDECREF(var_f);
    var_f = NULL;

    Py_XDECREF(var_i);
    var_i = NULL;

    Py_XDECREF(var_start_spb);
    var_start_spb = NULL;

    Py_XDECREF(var_pipe);
    var_pipe = NULL;

    Py_XDECREF(var_p);
    var_p = NULL;

    Py_XDECREF(var_start_p);
    var_start_p = NULL;

    Py_XDECREF(var_list_na);
    var_list_na = NULL;

    Py_XDECREF(var_y);
    var_y = NULL;

    Py_XDECREF(var_x);
    var_x = NULL;

    Py_XDECREF(var_z);
    var_z = NULL;

    Py_XDECREF(var_liststr);
    var_liststr = NULL;

    Py_XDECREF(var_curr_time);
    var_curr_time = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_12;
    exception_value = exception_keeper_value_12;
    exception_tb = exception_keeper_tb_12;
    exception_lineno = exception_keeper_lineno_12;

    goto function_exception_exit;
    // End of try:

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(cleanop$$$function_6_revertKeep_cleanup);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_res_list);
    Py_DECREF(par_res_list);
    CHECK_OBJECT(par_selected_list);
    Py_DECREF(par_selected_list);
    CHECK_OBJECT(par_val3);
    Py_DECREF(par_val3);
    CHECK_OBJECT(par_val2);
    Py_DECREF(par_val2);
    CHECK_OBJECT(par_op_threads);
    Py_DECREF(par_op_threads);
    CHECK_OBJECT(par_rescan_needed);
    Py_DECREF(par_rescan_needed);
    CHECK_OBJECT(par_val4);
    Py_DECREF(par_val4);
    CHECK_OBJECT(par_e_to);
    Py_DECREF(par_e_to);
    CHECK_OBJECT(par_start_time);
    Py_DECREF(par_start_time);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);
    CHECK_OBJECT(par_max_time);
    Py_DECREF(par_max_time);
    CHECK_OBJECT(par_status_list);
    Py_DECREF(par_status_list);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_res_list);
    Py_DECREF(par_res_list);
    CHECK_OBJECT(par_selected_list);
    Py_DECREF(par_selected_list);
    CHECK_OBJECT(par_val3);
    Py_DECREF(par_val3);
    CHECK_OBJECT(par_val2);
    Py_DECREF(par_val2);
    CHECK_OBJECT(par_op_threads);
    Py_DECREF(par_op_threads);
    CHECK_OBJECT(par_rescan_needed);
    Py_DECREF(par_rescan_needed);
    CHECK_OBJECT(par_val4);
    Py_DECREF(par_val4);
    CHECK_OBJECT(par_e_to);
    Py_DECREF(par_e_to);
    CHECK_OBJECT(par_start_time);
    Py_DECREF(par_start_time);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);
    CHECK_OBJECT(par_max_time);
    Py_DECREF(par_max_time);
    CHECK_OBJECT(par_status_list);
    Py_DECREF(par_status_list);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_cleanop$$$function_7_revertErase_cleanup(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_ui = python_pars[0];
    PyObject *par_max_time = python_pars[1];
    PyObject *par_start_time = python_pars[2];
    PyObject *par_op_threads = python_pars[3];
    PyObject *par_res_list = python_pars[4];
    PyObject *par_e_to = python_pars[5];
    PyObject *par_selected_list = python_pars[6];
    PyObject *par_status_list = python_pars[7];
    PyObject *par_rescan_needed = python_pars[8];
    PyObject *par_val2 = python_pars[9];
    PyObject *par_val3 = python_pars[10];
    PyObject *par_val4 = python_pars[11];
    PyObject *var_list_p = NULL;
    PyObject *var_list_miss = NULL;
    PyObject *var_list_alo = NULL;
    PyObject *var_start_miss = NULL;
    PyObject *var_list_f = NULL;
    PyObject *var_start_alo = NULL;
    PyObject *var_txt = NULL;
    PyObject *var_start_na = NULL;
    nuitka_bool var_any_success = NUITKA_BOOL_UNASSIGNED;
    PyObject *var_sel_idx = NULL;
    PyObject *var_del_entries = NULL;
    PyObject *var_res_sum = NULL;
    PyObject *var_list_to = NULL;
    PyObject *var_any_removed = NULL;
    PyObject *var_elapsed_time = NULL;
    PyObject *var_start_f = NULL;
    PyObject *var_start = NULL;
    PyObject *var_count_f = NULL;
    PyObject *var_v = NULL;
    PyObject *var_list_spb = NULL;
    PyObject *var_start_to = NULL;
    PyObject *var_op_thread = NULL;
    PyObject *var_last_f = NULL;
    PyObject *var_count = NULL;
    PyObject *var_d = NULL;
    PyObject *var_idx = NULL;
    PyObject *var_f = NULL;
    PyObject *var_i = NULL;
    PyObject *var_start_spb = NULL;
    PyObject *var_pipe = NULL;
    PyObject *var_p = NULL;
    PyObject *var_start_p = NULL;
    PyObject *var_list_na = NULL;
    PyObject *var_y = NULL;
    PyObject *var_x = NULL;
    PyObject *var_z = NULL;
    PyObject *var_liststr = NULL;
    PyObject *var_curr_time = NULL;
    PyObject *tmp_for_loop_10__for_iterator = NULL;
    PyObject *tmp_for_loop_10__iter_value = NULL;
    PyObject *tmp_for_loop_1__for_iterator = NULL;
    PyObject *tmp_for_loop_1__iter_value = NULL;
    PyObject *tmp_for_loop_2__for_iterator = NULL;
    PyObject *tmp_for_loop_2__iter_value = NULL;
    PyObject *tmp_for_loop_3__for_iterator = NULL;
    PyObject *tmp_for_loop_3__iter_value = NULL;
    PyObject *tmp_for_loop_4__for_iterator = NULL;
    PyObject *tmp_for_loop_4__iter_value = NULL;
    PyObject *tmp_for_loop_5__for_iterator = NULL;
    PyObject *tmp_for_loop_5__iter_value = NULL;
    PyObject *tmp_for_loop_6__for_iterator = NULL;
    PyObject *tmp_for_loop_6__iter_value = NULL;
    PyObject *tmp_for_loop_7__for_iterator = NULL;
    PyObject *tmp_for_loop_7__iter_value = NULL;
    PyObject *tmp_for_loop_8__for_iterator = NULL;
    PyObject *tmp_for_loop_8__iter_value = NULL;
    PyObject *tmp_for_loop_9__for_iterator = NULL;
    PyObject *tmp_for_loop_9__iter_value = NULL;
    PyObject *tmp_with_1__enter = NULL;
    PyObject *tmp_with_1__exit = NULL;
    nuitka_bool tmp_with_1__indicator = NUITKA_BOOL_UNASSIGNED;
    PyObject *tmp_with_1__source = NULL;
    struct Nuitka_FrameObject *frame_15906d6e09d71ad6e3647802cd6cf8d1;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    bool tmp_result;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;
    PyObject *exception_keeper_type_3;
    PyObject *exception_keeper_value_3;
    PyTracebackObject *exception_keeper_tb_3;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_3;
    PyObject *exception_keeper_type_4;
    PyObject *exception_keeper_value_4;
    PyTracebackObject *exception_keeper_tb_4;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_4;
    PyObject *exception_keeper_type_5;
    PyObject *exception_keeper_value_5;
    PyTracebackObject *exception_keeper_tb_5;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_5;
    PyObject *exception_keeper_type_6;
    PyObject *exception_keeper_value_6;
    PyTracebackObject *exception_keeper_tb_6;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_6;
    PyObject *exception_keeper_type_7;
    PyObject *exception_keeper_value_7;
    PyTracebackObject *exception_keeper_tb_7;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_7;
    PyObject *exception_keeper_type_8;
    PyObject *exception_keeper_value_8;
    PyTracebackObject *exception_keeper_tb_8;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_8;
    PyObject *exception_keeper_type_9;
    PyObject *exception_keeper_value_9;
    PyTracebackObject *exception_keeper_tb_9;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_9;
    PyObject *exception_keeper_type_10;
    PyObject *exception_keeper_value_10;
    PyTracebackObject *exception_keeper_tb_10;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_10;
    PyObject *exception_keeper_type_11;
    PyObject *exception_keeper_value_11;
    PyTracebackObject *exception_keeper_tb_11;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_11;
    PyObject *exception_keeper_type_12;
    PyObject *exception_keeper_value_12;
    PyTracebackObject *exception_keeper_tb_12;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_12;
    PyObject *exception_keeper_type_13;
    PyObject *exception_keeper_value_13;
    PyTracebackObject *exception_keeper_tb_13;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_13;
    static struct Nuitka_FrameObject *cache_frame_15906d6e09d71ad6e3647802cd6cf8d1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_keeper_type_14;
    PyObject *exception_keeper_value_14;
    PyTracebackObject *exception_keeper_tb_14;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_14;

    // Actual function body.
    // Tried code:
    MAKE_OR_REUSE_FRAME(cache_frame_15906d6e09d71ad6e3647802cd6cf8d1, codeobj_15906d6e09d71ad6e3647802cd6cf8d1, module_cleanop, sizeof(nuitka_bool)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
    frame_15906d6e09d71ad6e3647802cd6cf8d1 = cache_frame_15906d6e09d71ad6e3647802cd6cf8d1;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_15906d6e09d71ad6e3647802cd6cf8d1);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_15906d6e09d71ad6e3647802cd6cf8d1) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_called_instance_1;
        PyObject *tmp_mvar_value_1;
        tmp_mvar_value_1 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_time);

        if (unlikely(tmp_mvar_value_1 == NULL)) {
            tmp_mvar_value_1 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_time);
        }

        if (tmp_mvar_value_1 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1164 ], 33, 0);
            exception_tb = NULL;

            exception_lineno = 1025;
            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_1 = tmp_mvar_value_1;
        frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1025;
        tmp_assign_source_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_1, const_str_plain_time);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1025;
            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_curr_time == NULL);
        var_curr_time = tmp_assign_source_1;
    }
    {
        PyObject *tmp_assign_source_2;
        PyObject *tmp_left_name_1;
        PyObject *tmp_right_name_1;
        CHECK_OBJECT(var_curr_time);
        tmp_left_name_1 = var_curr_time;
        CHECK_OBJECT(par_start_time);
        tmp_right_name_1 = par_start_time;
        tmp_assign_source_2 = BINARY_OPERATION_SUB_OBJECT_OBJECT(tmp_left_name_1, tmp_right_name_1);
        if (tmp_assign_source_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1026;
            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_elapsed_time == NULL);
        var_elapsed_time = tmp_assign_source_2;
    }
    {
        nuitka_bool tmp_condition_result_1;
        PyObject *tmp_compexpr_left_1;
        PyObject *tmp_compexpr_right_1;
        CHECK_OBJECT(var_elapsed_time);
        tmp_compexpr_left_1 = var_elapsed_time;
        CHECK_OBJECT(par_max_time);
        tmp_compexpr_right_1 = par_max_time;
        tmp_res = RICH_COMPARE_BOOL_GTE_OBJECT_OBJECT(tmp_compexpr_left_1, tmp_compexpr_right_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1028;
            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
        branch_yes_1:;
        {
            PyObject *tmp_called_instance_2;
            PyObject *tmp_call_result_1;
            CHECK_OBJECT(par_e_to);
            tmp_called_instance_2 = par_e_to;
            frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1029;
            tmp_call_result_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_2, const_str_plain_set);
            if (tmp_call_result_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1029;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_1);
        }
        {
            PyObject *tmp_assign_source_3;
            PyObject *tmp_iter_arg_1;
            CHECK_OBJECT(par_op_threads);
            tmp_iter_arg_1 = par_op_threads;
            tmp_assign_source_3 = MAKE_ITERATOR(tmp_iter_arg_1);
            if (tmp_assign_source_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1030;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_1__for_iterator == NULL);
            tmp_for_loop_1__for_iterator = tmp_assign_source_3;
        }
        // Tried code:
        loop_start_1:;
        {
            PyObject *tmp_next_source_1;
            PyObject *tmp_assign_source_4;
            CHECK_OBJECT(tmp_for_loop_1__for_iterator);
            tmp_next_source_1 = tmp_for_loop_1__for_iterator;
            tmp_assign_source_4 = ITERATOR_NEXT(tmp_next_source_1);
            if (tmp_assign_source_4 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_1;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    exception_lineno = 1030;
                    goto try_except_handler_2;
                }
            }

            {
                PyObject *old = tmp_for_loop_1__iter_value;
                tmp_for_loop_1__iter_value = tmp_assign_source_4;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_5;
            CHECK_OBJECT(tmp_for_loop_1__iter_value);
            tmp_assign_source_5 = tmp_for_loop_1__iter_value;
            {
                PyObject *old = var_op_thread;
                var_op_thread = tmp_assign_source_5;
                Py_INCREF(var_op_thread);
                Py_XDECREF(old);
            }

        }
        {
            nuitka_bool tmp_condition_result_2;
            PyObject *tmp_called_instance_3;
            PyObject *tmp_call_result_2;
            int tmp_truth_name_1;
            CHECK_OBJECT(var_op_thread);
            tmp_called_instance_3 = var_op_thread;
            frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1031;
            tmp_call_result_2 = CALL_METHOD_NO_ARGS(tmp_called_instance_3, const_str_plain_is_alive);
            if (tmp_call_result_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1031;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_2;
            }
            tmp_truth_name_1 = CHECK_IF_TRUE(tmp_call_result_2);
            if (tmp_truth_name_1 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_call_result_2);

                exception_lineno = 1031;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_2;
            }
            tmp_condition_result_2 = tmp_truth_name_1 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            Py_DECREF(tmp_call_result_2);
            if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
                goto branch_yes_2;
            } else {
                goto branch_no_2;
            }
            branch_yes_2:;
            {
                nuitka_bool tmp_condition_result_3;
                PyObject *tmp_compexpr_left_2;
                PyObject *tmp_compexpr_right_2;
                PyObject *tmp_source_name_1;
                CHECK_OBJECT(par_ui);
                tmp_source_name_1 = par_ui;
                tmp_compexpr_left_2 = LOOKUP_ATTRIBUTE(tmp_source_name_1, const_str_plain_process);
                if (tmp_compexpr_left_2 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1032;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_2;
                }
                tmp_compexpr_right_2 = Py_None;
                tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_2, tmp_compexpr_right_2);
                Py_DECREF(tmp_compexpr_left_2);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1032;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_2;
                }
                tmp_condition_result_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_3 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_3;
                } else {
                    goto branch_no_3;
                }
                branch_yes_3:;
                {
                    PyObject *tmp_called_instance_4;
                    PyObject *tmp_source_name_2;
                    PyObject *tmp_call_result_3;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_2 = par_ui;
                    tmp_called_instance_4 = LOOKUP_ATTRIBUTE(tmp_source_name_2, const_str_plain_process);
                    if (tmp_called_instance_4 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1033;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_2;
                    }
                    frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1033;
                    tmp_call_result_3 = CALL_METHOD_NO_ARGS(tmp_called_instance_4, const_str_plain_terminate);
                    Py_DECREF(tmp_called_instance_4);
                    if (tmp_call_result_3 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1033;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_2;
                    }
                    Py_DECREF(tmp_call_result_3);
                }
                {
                    PyObject *tmp_assattr_name_1;
                    PyObject *tmp_assattr_target_1;
                    tmp_assattr_name_1 = Py_None;
                    CHECK_OBJECT(par_ui);
                    tmp_assattr_target_1 = par_ui;
                    tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, const_str_plain_process, tmp_assattr_name_1);
                    if (tmp_result == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1034;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_2;
                    }
                }
                goto branch_end_3;
                branch_no_3:;
                {
                    nuitka_bool tmp_condition_result_4;
                    PyObject *tmp_compexpr_left_3;
                    PyObject *tmp_compexpr_right_3;
                    PyObject *tmp_source_name_3;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_3 = par_ui;
                    tmp_compexpr_left_3 = LOOKUP_ATTRIBUTE(tmp_source_name_3, const_str_plain_process_list);
                    if (tmp_compexpr_left_3 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1035;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_2;
                    }
                    tmp_compexpr_right_3 = PyList_New(0);
                    tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_3, tmp_compexpr_right_3);
                    Py_DECREF(tmp_compexpr_left_3);
                    Py_DECREF(tmp_compexpr_right_3);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1035;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_2;
                    }
                    tmp_condition_result_4 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_4 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_4;
                    } else {
                        goto branch_no_4;
                    }
                    branch_yes_4:;
                    {
                        PyObject *tmp_assign_source_6;
                        PyObject *tmp_iter_arg_2;
                        PyObject *tmp_source_name_4;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_4 = par_ui;
                        tmp_iter_arg_2 = LOOKUP_ATTRIBUTE(tmp_source_name_4, const_str_plain_process_list);
                        if (tmp_iter_arg_2 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1036;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_2;
                        }
                        tmp_assign_source_6 = MAKE_ITERATOR(tmp_iter_arg_2);
                        Py_DECREF(tmp_iter_arg_2);
                        if (tmp_assign_source_6 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1036;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_2;
                        }
                        {
                            PyObject *old = tmp_for_loop_2__for_iterator;
                            tmp_for_loop_2__for_iterator = tmp_assign_source_6;
                            Py_XDECREF(old);
                        }

                    }
                    // Tried code:
                    loop_start_2:;
                    {
                        PyObject *tmp_next_source_2;
                        PyObject *tmp_assign_source_7;
                        CHECK_OBJECT(tmp_for_loop_2__for_iterator);
                        tmp_next_source_2 = tmp_for_loop_2__for_iterator;
                        tmp_assign_source_7 = ITERATOR_NEXT(tmp_next_source_2);
                        if (tmp_assign_source_7 == NULL) {
                            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                                goto loop_end_2;
                            } else {

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                exception_lineno = 1036;
                                goto try_except_handler_3;
                            }
                        }

                        {
                            PyObject *old = tmp_for_loop_2__iter_value;
                            tmp_for_loop_2__iter_value = tmp_assign_source_7;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assign_source_8;
                        CHECK_OBJECT(tmp_for_loop_2__iter_value);
                        tmp_assign_source_8 = tmp_for_loop_2__iter_value;
                        {
                            PyObject *old = var_p;
                            var_p = tmp_assign_source_8;
                            Py_INCREF(var_p);
                            Py_XDECREF(old);
                        }

                    }
                    {
                        nuitka_bool tmp_condition_result_5;
                        PyObject *tmp_compexpr_left_4;
                        PyObject *tmp_compexpr_right_4;
                        CHECK_OBJECT(var_p);
                        tmp_compexpr_left_4 = var_p;
                        tmp_compexpr_right_4 = Py_None;
                        tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_4, tmp_compexpr_right_4);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1037;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_3;
                        }
                        tmp_condition_result_5 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_5 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_5;
                        } else {
                            goto branch_no_5;
                        }
                        branch_yes_5:;
                        {
                            PyObject *tmp_called_instance_5;
                            PyObject *tmp_call_result_4;
                            CHECK_OBJECT(var_p);
                            tmp_called_instance_5 = var_p;
                            frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1038;
                            tmp_call_result_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_5, const_str_plain_terminate);
                            if (tmp_call_result_4 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 1038;
                                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                goto try_except_handler_3;
                            }
                            Py_DECREF(tmp_call_result_4);
                        }
                        {
                            PyObject *tmp_assign_source_9;
                            tmp_assign_source_9 = Py_None;
                            {
                                PyObject *old = var_p;
                                assert(old != NULL);
                                var_p = tmp_assign_source_9;
                                Py_INCREF(var_p);
                                Py_DECREF(old);
                            }

                        }
                        branch_no_5:;
                    }
                    if (CONSIDER_THREADING() == false) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1036;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_3;
                    }
                    goto loop_start_2;
                    loop_end_2:;
                    goto try_end_1;
                    // Exception handler code:
                    try_except_handler_3:;
                    exception_keeper_type_1 = exception_type;
                    exception_keeper_value_1 = exception_value;
                    exception_keeper_tb_1 = exception_tb;
                    exception_keeper_lineno_1 = exception_lineno;
                    exception_type = NULL;
                    exception_value = NULL;
                    exception_tb = NULL;
                    exception_lineno = 0;

                    Py_XDECREF(tmp_for_loop_2__iter_value);
                    tmp_for_loop_2__iter_value = NULL;

                    CHECK_OBJECT((PyObject *)tmp_for_loop_2__for_iterator);
                    Py_DECREF(tmp_for_loop_2__for_iterator);
                    tmp_for_loop_2__for_iterator = NULL;

                    // Re-raise.
                    exception_type = exception_keeper_type_1;
                    exception_value = exception_keeper_value_1;
                    exception_tb = exception_keeper_tb_1;
                    exception_lineno = exception_keeper_lineno_1;

                    goto try_except_handler_2;
                    // End of try:
                    try_end_1:;
                    Py_XDECREF(tmp_for_loop_2__iter_value);
                    tmp_for_loop_2__iter_value = NULL;

                    CHECK_OBJECT((PyObject *)tmp_for_loop_2__for_iterator);
                    Py_DECREF(tmp_for_loop_2__for_iterator);
                    tmp_for_loop_2__for_iterator = NULL;

                    {
                        PyObject *tmp_assattr_name_2;
                        PyObject *tmp_assattr_target_2;
                        tmp_assattr_name_2 = PyList_New(0);
                        CHECK_OBJECT(par_ui);
                        tmp_assattr_target_2 = par_ui;
                        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_2, const_str_plain_process_list, tmp_assattr_name_2);
                        Py_DECREF(tmp_assattr_name_2);
                        if (tmp_result == false) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1040;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_2;
                        }
                    }
                    branch_no_4:;
                }
                branch_end_3:;
            }
            {
                PyObject *tmp_called_instance_6;
                PyObject *tmp_call_result_5;
                CHECK_OBJECT(var_op_thread);
                tmp_called_instance_6 = var_op_thread;
                frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1041;
                tmp_call_result_5 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_6, const_str_plain_join, &PyTuple_GET_ITEM(const_tuple_float_0_0_tuple, 0));

                if (tmp_call_result_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1041;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_2;
                }
                Py_DECREF(tmp_call_result_5);
            }
            branch_no_2:;
        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1030;
            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
            goto try_except_handler_2;
        }
        goto loop_start_1;
        loop_end_1:;
        goto try_end_2;
        // Exception handler code:
        try_except_handler_2:;
        exception_keeper_type_2 = exception_type;
        exception_keeper_value_2 = exception_value;
        exception_keeper_tb_2 = exception_tb;
        exception_keeper_lineno_2 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_1__iter_value);
        tmp_for_loop_1__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_1__for_iterator);
        Py_DECREF(tmp_for_loop_1__for_iterator);
        tmp_for_loop_1__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_2;
        exception_value = exception_keeper_value_2;
        exception_tb = exception_keeper_tb_2;
        exception_lineno = exception_keeper_lineno_2;

        goto frame_exception_exit_1;
        // End of try:
        try_end_2:;
        Py_XDECREF(tmp_for_loop_1__iter_value);
        tmp_for_loop_1__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_1__for_iterator);
        Py_DECREF(tmp_for_loop_1__for_iterator);
        tmp_for_loop_1__for_iterator = NULL;

        branch_no_1:;
    }
    {
        PyObject *tmp_assattr_name_3;
        PyObject *tmp_assattr_target_3;
        tmp_assattr_name_3 = Py_False;
        CHECK_OBJECT(par_ui);
        tmp_assattr_target_3 = par_ui;
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_3, const_str_plain_op_inprogress, tmp_assattr_name_3);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1043;
            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
    }
    {
        PyObject *tmp_assign_source_10;
        PyObject *tmp_iter_arg_3;
        PyObject *tmp_range_arg_1;
        PyObject *tmp_len_arg_1;
        CHECK_OBJECT(par_res_list);
        tmp_len_arg_1 = par_res_list;
        tmp_range_arg_1 = BUILTIN_LEN(tmp_len_arg_1);
        if (tmp_range_arg_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1044;
            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_iter_arg_3 = BUILTIN_RANGE(tmp_range_arg_1);
        Py_DECREF(tmp_range_arg_1);
        if (tmp_iter_arg_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1044;
            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_10 = MAKE_ITERATOR(tmp_iter_arg_3);
        Py_DECREF(tmp_iter_arg_3);
        if (tmp_assign_source_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1044;
            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_3__for_iterator == NULL);
        tmp_for_loop_3__for_iterator = tmp_assign_source_10;
    }
    // Tried code:
    loop_start_3:;
    {
        PyObject *tmp_next_source_3;
        PyObject *tmp_assign_source_11;
        CHECK_OBJECT(tmp_for_loop_3__for_iterator);
        tmp_next_source_3 = tmp_for_loop_3__for_iterator;
        tmp_assign_source_11 = ITERATOR_NEXT(tmp_next_source_3);
        if (tmp_assign_source_11 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_3;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                exception_lineno = 1044;
                goto try_except_handler_4;
            }
        }

        {
            PyObject *old = tmp_for_loop_3__iter_value;
            tmp_for_loop_3__iter_value = tmp_assign_source_11;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_12;
        CHECK_OBJECT(tmp_for_loop_3__iter_value);
        tmp_assign_source_12 = tmp_for_loop_3__iter_value;
        {
            PyObject *old = var_i;
            var_i = tmp_assign_source_12;
            Py_INCREF(var_i);
            Py_XDECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_6;
        PyObject *tmp_compexpr_left_5;
        PyObject *tmp_compexpr_right_5;
        PyObject *tmp_subscribed_name_1;
        PyObject *tmp_subscript_name_1;
        CHECK_OBJECT(par_res_list);
        tmp_subscribed_name_1 = par_res_list;
        CHECK_OBJECT(var_i);
        tmp_subscript_name_1 = var_i;
        tmp_compexpr_left_5 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_1, tmp_subscript_name_1);
        if (tmp_compexpr_left_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1045;
            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
            goto try_except_handler_4;
        }
        tmp_compexpr_right_5 = const_int_neg_1;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_5, tmp_compexpr_right_5);
        Py_DECREF(tmp_compexpr_left_5);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1045;
            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
            goto try_except_handler_4;
        }
        tmp_condition_result_6 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_6 == NUITKA_BOOL_TRUE) {
            goto branch_yes_6;
        } else {
            goto branch_no_6;
        }
        branch_yes_6:;
        {
            nuitka_bool tmp_condition_result_7;
            PyObject *tmp_called_instance_7;
            PyObject *tmp_call_result_6;
            int tmp_truth_name_2;
            CHECK_OBJECT(par_e_to);
            tmp_called_instance_7 = par_e_to;
            frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1046;
            tmp_call_result_6 = CALL_METHOD_NO_ARGS(tmp_called_instance_7, const_str_plain_is_set);
            if (tmp_call_result_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1046;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_4;
            }
            tmp_truth_name_2 = CHECK_IF_TRUE(tmp_call_result_6);
            if (tmp_truth_name_2 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_call_result_6);

                exception_lineno = 1046;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_4;
            }
            tmp_condition_result_7 = tmp_truth_name_2 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            Py_DECREF(tmp_call_result_6);
            if (tmp_condition_result_7 == NUITKA_BOOL_TRUE) {
                goto branch_yes_7;
            } else {
                goto branch_no_7;
            }
            branch_yes_7:;
            {
                PyObject *tmp_ass_subvalue_1;
                PyObject *tmp_ass_subscribed_1;
                PyObject *tmp_ass_subscript_1;
                tmp_ass_subvalue_1 = const_int_pos_2;
                CHECK_OBJECT(par_res_list);
                tmp_ass_subscribed_1 = par_res_list;
                CHECK_OBJECT(var_i);
                tmp_ass_subscript_1 = var_i;
                tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_1, tmp_ass_subscript_1, tmp_ass_subvalue_1);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1047;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_4;
                }
            }
            goto branch_end_7;
            branch_no_7:;
            {
                PyObject *tmp_ass_subvalue_2;
                PyObject *tmp_ass_subscribed_2;
                PyObject *tmp_ass_subscript_2;
                tmp_ass_subvalue_2 = const_int_pos_3;
                CHECK_OBJECT(par_res_list);
                tmp_ass_subscribed_2 = par_res_list;
                CHECK_OBJECT(var_i);
                tmp_ass_subscript_2 = var_i;
                tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_2, tmp_ass_subscript_2, tmp_ass_subvalue_2);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1049;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_4;
                }
            }
            branch_end_7:;
        }
        branch_no_6:;
    }
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 1044;
        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
        goto try_except_handler_4;
    }
    goto loop_start_3;
    loop_end_3:;
    goto try_end_3;
    // Exception handler code:
    try_except_handler_4:;
    exception_keeper_type_3 = exception_type;
    exception_keeper_value_3 = exception_value;
    exception_keeper_tb_3 = exception_tb;
    exception_keeper_lineno_3 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_3__iter_value);
    tmp_for_loop_3__iter_value = NULL;

    CHECK_OBJECT((PyObject *)tmp_for_loop_3__for_iterator);
    Py_DECREF(tmp_for_loop_3__for_iterator);
    tmp_for_loop_3__for_iterator = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_3;
    exception_value = exception_keeper_value_3;
    exception_tb = exception_keeper_tb_3;
    exception_lineno = exception_keeper_lineno_3;

    goto frame_exception_exit_1;
    // End of try:
    try_end_3:;
    Py_XDECREF(tmp_for_loop_3__iter_value);
    tmp_for_loop_3__iter_value = NULL;

    CHECK_OBJECT((PyObject *)tmp_for_loop_3__for_iterator);
    Py_DECREF(tmp_for_loop_3__for_iterator);
    tmp_for_loop_3__for_iterator = NULL;

    {
        PyObject *tmp_assign_source_13;
        PyObject *tmp_sum_sequence_1;
        CHECK_OBJECT(par_res_list);
        tmp_sum_sequence_1 = par_res_list;
        tmp_assign_source_13 = BUILTIN_SUM1(tmp_sum_sequence_1);
        if (tmp_assign_source_13 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1050;
            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_res_sum == NULL);
        var_res_sum = tmp_assign_source_13;
    }
    {
        PyObject *tmp_assign_source_14;
        tmp_assign_source_14 = Py_False;
        assert(var_any_removed == NULL);
        Py_INCREF(tmp_assign_source_14);
        var_any_removed = tmp_assign_source_14;
    }
    {
        PyObject *tmp_assign_source_15;
        tmp_assign_source_15 = const_int_0;
        assert(var_sel_idx == NULL);
        Py_INCREF(tmp_assign_source_15);
        var_sel_idx = tmp_assign_source_15;
    }
    {
        PyObject *tmp_assign_source_16;
        PyObject *tmp_iter_arg_4;
        CHECK_OBJECT(par_selected_list);
        tmp_iter_arg_4 = par_selected_list;
        tmp_assign_source_16 = MAKE_ITERATOR(tmp_iter_arg_4);
        if (tmp_assign_source_16 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1055;
            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_4__for_iterator == NULL);
        tmp_for_loop_4__for_iterator = tmp_assign_source_16;
    }
    // Tried code:
    loop_start_4:;
    {
        PyObject *tmp_next_source_4;
        PyObject *tmp_assign_source_17;
        CHECK_OBJECT(tmp_for_loop_4__for_iterator);
        tmp_next_source_4 = tmp_for_loop_4__for_iterator;
        tmp_assign_source_17 = ITERATOR_NEXT(tmp_next_source_4);
        if (tmp_assign_source_17 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_4;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                exception_lineno = 1055;
                goto try_except_handler_5;
            }
        }

        {
            PyObject *old = tmp_for_loop_4__iter_value;
            tmp_for_loop_4__iter_value = tmp_assign_source_17;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_18;
        CHECK_OBJECT(tmp_for_loop_4__iter_value);
        tmp_assign_source_18 = tmp_for_loop_4__iter_value;
        {
            PyObject *old = var_x;
            var_x = tmp_assign_source_18;
            Py_INCREF(var_x);
            Py_XDECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_8;
        PyObject *tmp_compexpr_left_6;
        PyObject *tmp_compexpr_right_6;
        PyObject *tmp_subscribed_name_2;
        PyObject *tmp_subscript_name_2;
        CHECK_OBJECT(par_res_list);
        tmp_subscribed_name_2 = par_res_list;
        CHECK_OBJECT(var_sel_idx);
        tmp_subscript_name_2 = var_sel_idx;
        tmp_compexpr_left_6 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_2, tmp_subscript_name_2);
        if (tmp_compexpr_left_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1056;
            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
            goto try_except_handler_5;
        }
        tmp_compexpr_right_6 = const_int_0;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_6, tmp_compexpr_right_6);
        Py_DECREF(tmp_compexpr_left_6);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1056;
            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
            goto try_except_handler_5;
        }
        tmp_condition_result_8 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_8 == NUITKA_BOOL_TRUE) {
            goto branch_yes_8;
        } else {
            goto branch_no_8;
        }
        branch_yes_8:;
        {
            PyObject *tmp_assign_source_19;
            tmp_assign_source_19 = Py_True;
            {
                PyObject *old = var_any_removed;
                var_any_removed = tmp_assign_source_19;
                Py_INCREF(var_any_removed);
                Py_XDECREF(old);
            }

        }
        branch_no_8:;
    }
    {
        PyObject *tmp_assign_source_20;
        PyObject *tmp_left_name_2;
        PyObject *tmp_right_name_2;
        CHECK_OBJECT(var_sel_idx);
        tmp_left_name_2 = var_sel_idx;
        tmp_right_name_2 = const_int_pos_1;
        tmp_assign_source_20 = BINARY_OPERATION_ADD_OBJECT_INT(tmp_left_name_2, tmp_right_name_2);
        assert(!(tmp_assign_source_20 == NULL));
        {
            PyObject *old = var_sel_idx;
            assert(old != NULL);
            var_sel_idx = tmp_assign_source_20;
            Py_DECREF(old);
        }

    }
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 1055;
        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
        goto try_except_handler_5;
    }
    goto loop_start_4;
    loop_end_4:;
    goto try_end_4;
    // Exception handler code:
    try_except_handler_5:;
    exception_keeper_type_4 = exception_type;
    exception_keeper_value_4 = exception_value;
    exception_keeper_tb_4 = exception_tb;
    exception_keeper_lineno_4 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_4__iter_value);
    tmp_for_loop_4__iter_value = NULL;

    CHECK_OBJECT((PyObject *)tmp_for_loop_4__for_iterator);
    Py_DECREF(tmp_for_loop_4__for_iterator);
    tmp_for_loop_4__for_iterator = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_4;
    exception_value = exception_keeper_value_4;
    exception_tb = exception_keeper_tb_4;
    exception_lineno = exception_keeper_lineno_4;

    goto frame_exception_exit_1;
    // End of try:
    try_end_4:;
    Py_XDECREF(tmp_for_loop_4__iter_value);
    tmp_for_loop_4__iter_value = NULL;

    CHECK_OBJECT((PyObject *)tmp_for_loop_4__for_iterator);
    Py_DECREF(tmp_for_loop_4__for_iterator);
    tmp_for_loop_4__for_iterator = NULL;

    {
        nuitka_bool tmp_condition_result_9;
        int tmp_and_left_truth_1;
        nuitka_bool tmp_and_left_value_1;
        nuitka_bool tmp_and_right_value_1;
        int tmp_truth_name_3;
        PyObject *tmp_compexpr_left_7;
        PyObject *tmp_compexpr_right_7;
        PyObject *tmp_called_instance_8;
        PyObject *tmp_mvar_value_2;
        if (var_any_removed == NULL) {

            exception_type = PyExc_UnboundLocalError;
            Py_INCREF(exception_type);
            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "any_removed");
            exception_tb = NULL;

            exception_lineno = 1059;
            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_truth_name_3 = CHECK_IF_TRUE(var_any_removed);
        if (tmp_truth_name_3 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1059;
            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_1 = tmp_truth_name_3 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_1 = tmp_and_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_1 == 1) {
            goto and_right_1;
        } else {
            goto and_left_1;
        }
        and_right_1:;
        tmp_mvar_value_2 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_platform);

        if (unlikely(tmp_mvar_value_2 == NULL)) {
            tmp_mvar_value_2 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_platform);
        }

        if (tmp_mvar_value_2 == NULL) {

            exception_type = PyExc_NameError;
            Py_INCREF(exception_type);
            exception_value = UNSTREAM_STRING(&constant_bin[ 1232 ], 37, 0);
            exception_tb = NULL;

            exception_lineno = 1059;
            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_8 = tmp_mvar_value_2;
        frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1059;
        tmp_compexpr_left_7 = CALL_METHOD_NO_ARGS(tmp_called_instance_8, const_str_plain_system);
        if (tmp_compexpr_left_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1059;
            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_compexpr_right_7 = const_str_plain_Windows;
        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_7, tmp_compexpr_right_7);
        Py_DECREF(tmp_compexpr_left_7);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1059;
            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_condition_result_9 = tmp_and_right_value_1;
        goto and_end_1;
        and_left_1:;
        tmp_condition_result_9 = tmp_and_left_value_1;
        and_end_1:;
        if (tmp_condition_result_9 == NUITKA_BOOL_TRUE) {
            goto branch_yes_9;
        } else {
            goto branch_no_9;
        }
        branch_yes_9:;
        {
            PyObject *tmp_assign_source_21;
            PyObject *tmp_iter_arg_5;
            PyObject *tmp_range_arg_2;
            PyObject *tmp_len_arg_2;
            PyObject *tmp_source_name_5;
            CHECK_OBJECT(par_ui);
            tmp_source_name_5 = par_ui;
            tmp_len_arg_2 = LOOKUP_ATTRIBUTE(tmp_source_name_5, const_str_plain_devs_list);
            if (tmp_len_arg_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1060;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_range_arg_2 = BUILTIN_LEN(tmp_len_arg_2);
            Py_DECREF(tmp_len_arg_2);
            if (tmp_range_arg_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1060;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_iter_arg_5 = BUILTIN_RANGE(tmp_range_arg_2);
            Py_DECREF(tmp_range_arg_2);
            if (tmp_iter_arg_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1060;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_assign_source_21 = MAKE_ITERATOR(tmp_iter_arg_5);
            Py_DECREF(tmp_iter_arg_5);
            if (tmp_assign_source_21 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1060;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_5__for_iterator == NULL);
            tmp_for_loop_5__for_iterator = tmp_assign_source_21;
        }
        // Tried code:
        loop_start_5:;
        {
            PyObject *tmp_next_source_5;
            PyObject *tmp_assign_source_22;
            CHECK_OBJECT(tmp_for_loop_5__for_iterator);
            tmp_next_source_5 = tmp_for_loop_5__for_iterator;
            tmp_assign_source_22 = ITERATOR_NEXT(tmp_next_source_5);
            if (tmp_assign_source_22 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_5;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    exception_lineno = 1060;
                    goto try_except_handler_6;
                }
            }

            {
                PyObject *old = tmp_for_loop_5__iter_value;
                tmp_for_loop_5__iter_value = tmp_assign_source_22;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_23;
            CHECK_OBJECT(tmp_for_loop_5__iter_value);
            tmp_assign_source_23 = tmp_for_loop_5__iter_value;
            {
                PyObject *old = var_z;
                var_z = tmp_assign_source_23;
                Py_INCREF(var_z);
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_called_instance_9;
            PyObject *tmp_mvar_value_3;
            PyObject *tmp_call_result_7;
            PyObject *tmp_args_element_name_1;
            tmp_mvar_value_3 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_runop);

            if (unlikely(tmp_mvar_value_3 == NULL)) {
                tmp_mvar_value_3 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runop);
            }

            if (tmp_mvar_value_3 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 490 ], 34, 0);
                exception_tb = NULL;

                exception_lineno = 1061;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_6;
            }

            tmp_called_instance_9 = tmp_mvar_value_3;
            CHECK_OBJECT(var_z);
            tmp_args_element_name_1 = var_z;
            frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1061;
            {
                PyObject *call_args[] = {tmp_args_element_name_1};
                tmp_call_result_7 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_9, const_str_plain_prelock, call_args);
            }

            if (tmp_call_result_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1061;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_6;
            }
            Py_DECREF(tmp_call_result_7);
        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1060;
            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
            goto try_except_handler_6;
        }
        goto loop_start_5;
        loop_end_5:;
        goto try_end_5;
        // Exception handler code:
        try_except_handler_6:;
        exception_keeper_type_5 = exception_type;
        exception_keeper_value_5 = exception_value;
        exception_keeper_tb_5 = exception_tb;
        exception_keeper_lineno_5 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_5__iter_value);
        tmp_for_loop_5__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_5__for_iterator);
        Py_DECREF(tmp_for_loop_5__for_iterator);
        tmp_for_loop_5__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_5;
        exception_value = exception_keeper_value_5;
        exception_tb = exception_keeper_tb_5;
        exception_lineno = exception_keeper_lineno_5;

        goto frame_exception_exit_1;
        // End of try:
        try_end_5:;
        Py_XDECREF(tmp_for_loop_5__iter_value);
        tmp_for_loop_5__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_5__for_iterator);
        Py_DECREF(tmp_for_loop_5__for_iterator);
        tmp_for_loop_5__for_iterator = NULL;

        // Tried code:
        {
            PyObject *tmp_assign_source_24;
            PyObject *tmp_open_filename_1;
            PyObject *tmp_source_name_6;
            PyObject *tmp_mvar_value_4;
            PyObject *tmp_open_mode_1;
            tmp_mvar_value_4 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_os);

            if (unlikely(tmp_mvar_value_4 == NULL)) {
                tmp_mvar_value_4 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
            }

            if (tmp_mvar_value_4 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                exception_tb = NULL;

                exception_lineno = 1062;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }

            tmp_source_name_6 = tmp_mvar_value_4;
            tmp_open_filename_1 = LOOKUP_ATTRIBUTE(tmp_source_name_6, const_str_plain_devnull);
            if (tmp_open_filename_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1062;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }
            tmp_open_mode_1 = const_str_plain_w;
            tmp_assign_source_24 = BUILTIN_OPEN(tmp_open_filename_1, tmp_open_mode_1, NULL);
            Py_DECREF(tmp_open_filename_1);
            if (tmp_assign_source_24 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1062;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }
            assert(tmp_with_1__source == NULL);
            tmp_with_1__source = tmp_assign_source_24;
        }
        {
            PyObject *tmp_assign_source_25;
            PyObject *tmp_source_name_7;
            CHECK_OBJECT(tmp_with_1__source);
            tmp_source_name_7 = tmp_with_1__source;
            tmp_assign_source_25 = LOOKUP_SPECIAL(tmp_source_name_7, const_str_plain___exit__);
            if (tmp_assign_source_25 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1062;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }
            assert(tmp_with_1__exit == NULL);
            tmp_with_1__exit = tmp_assign_source_25;
        }
        {
            PyObject *tmp_assign_source_26;
            PyObject *tmp_called_name_1;
            PyObject *tmp_source_name_8;
            CHECK_OBJECT(tmp_with_1__source);
            tmp_source_name_8 = tmp_with_1__source;
            tmp_called_name_1 = LOOKUP_SPECIAL(tmp_source_name_8, const_str_plain___enter__);
            if (tmp_called_name_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1062;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }
            frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1062;
            tmp_assign_source_26 = CALL_FUNCTION_NO_ARGS(tmp_called_name_1);
            Py_DECREF(tmp_called_name_1);
            if (tmp_assign_source_26 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1062;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_7;
            }
            assert(tmp_with_1__enter == NULL);
            tmp_with_1__enter = tmp_assign_source_26;
        }
        {
            nuitka_bool tmp_assign_source_27;
            tmp_assign_source_27 = NUITKA_BOOL_TRUE;
            tmp_with_1__indicator = tmp_assign_source_27;
        }
        {
            PyObject *tmp_assign_source_28;
            CHECK_OBJECT(tmp_with_1__enter);
            tmp_assign_source_28 = tmp_with_1__enter;
            assert(var_pipe == NULL);
            Py_INCREF(tmp_assign_source_28);
            var_pipe = tmp_assign_source_28;
        }
        // Tried code:
        // Tried code:
        {
            PyObject *tmp_assign_source_29;
            PyObject *tmp_open_filename_2;
            PyObject *tmp_open_mode_2;
            tmp_open_filename_2 = const_str_digest_2d85cb53b7a3787dd8780d68a265e952;
            tmp_open_mode_2 = const_str_plain_w;
            tmp_assign_source_29 = BUILTIN_OPEN(tmp_open_filename_2, tmp_open_mode_2, NULL);
            if (tmp_assign_source_29 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1063;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            assert(var_f == NULL);
            var_f = tmp_assign_source_29;
        }
        {
            PyObject *tmp_called_instance_10;
            PyObject *tmp_call_result_8;
            CHECK_OBJECT(var_f);
            tmp_called_instance_10 = var_f;
            frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1064;
            tmp_call_result_8 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_10, const_str_plain_write, &PyTuple_GET_ITEM(const_tuple_str_plain_rescan_tuple, 0));

            if (tmp_call_result_8 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1064;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            Py_DECREF(tmp_call_result_8);
        }
        {
            PyObject *tmp_called_instance_11;
            PyObject *tmp_call_result_9;
            CHECK_OBJECT(var_f);
            tmp_called_instance_11 = var_f;
            frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1065;
            tmp_call_result_9 = CALL_METHOD_NO_ARGS(tmp_called_instance_11, const_str_plain_close);
            if (tmp_call_result_9 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1065;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            Py_DECREF(tmp_call_result_9);
        }
        {
            PyObject *tmp_called_name_2;
            PyObject *tmp_source_name_9;
            PyObject *tmp_mvar_value_5;
            PyObject *tmp_call_result_10;
            PyObject *tmp_args_name_1;
            PyObject *tmp_kw_name_1;
            PyObject *tmp_dict_key_1;
            PyObject *tmp_dict_value_1;
            tmp_mvar_value_5 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_subprocess);

            if (unlikely(tmp_mvar_value_5 == NULL)) {
                tmp_mvar_value_5 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_subprocess);
            }

            if (tmp_mvar_value_5 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 835 ], 39, 0);
                exception_tb = NULL;

                exception_lineno = 1066;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }

            tmp_source_name_9 = tmp_mvar_value_5;
            tmp_called_name_2 = LOOKUP_ATTRIBUTE(tmp_source_name_9, const_str_plain_call);
            if (tmp_called_name_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1066;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            tmp_args_name_1 = DEEP_COPY(const_tuple_list_02be30ce96f2e63d8ca972f37079a88b_list_tuple);
            CHECK_OBJECT(var_pipe);
            tmp_dict_value_1 = var_pipe;
            tmp_dict_key_1 = const_str_plain_stdout;
            tmp_kw_name_1 = _PyDict_NewPresized( 1 );
            tmp_res = PyDict_SetItem(tmp_kw_name_1, tmp_dict_key_1, tmp_dict_value_1);
            assert(!(tmp_res != 0));
            frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1066;
            tmp_call_result_10 = CALL_FUNCTION(tmp_called_name_2, tmp_args_name_1, tmp_kw_name_1);
            Py_DECREF(tmp_called_name_2);
            Py_DECREF(tmp_args_name_1);
            Py_DECREF(tmp_kw_name_1);
            if (tmp_call_result_10 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1066;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            Py_DECREF(tmp_call_result_10);
        }
        {
            PyObject *tmp_called_instance_12;
            PyObject *tmp_mvar_value_6;
            PyObject *tmp_call_result_11;
            tmp_mvar_value_6 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_os);

            if (unlikely(tmp_mvar_value_6 == NULL)) {
                tmp_mvar_value_6 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
            }

            if (tmp_mvar_value_6 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                exception_tb = NULL;

                exception_lineno = 1067;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }

            tmp_called_instance_12 = tmp_mvar_value_6;
            frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1067;
            tmp_call_result_11 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_12, const_str_plain_remove, &PyTuple_GET_ITEM(const_tuple_str_digest_2d85cb53b7a3787dd8780d68a265e952_tuple, 0));

            if (tmp_call_result_11 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1067;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_9;
            }
            Py_DECREF(tmp_call_result_11);
        }
        goto try_end_6;
        // Exception handler code:
        try_except_handler_9:;
        exception_keeper_type_6 = exception_type;
        exception_keeper_value_6 = exception_value;
        exception_keeper_tb_6 = exception_tb;
        exception_keeper_lineno_6 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Preserve existing published exception.
        PRESERVE_FRAME_EXCEPTION(frame_15906d6e09d71ad6e3647802cd6cf8d1);
        if (exception_keeper_tb_6 == NULL) {
            exception_keeper_tb_6 = MAKE_TRACEBACK(frame_15906d6e09d71ad6e3647802cd6cf8d1, exception_keeper_lineno_6);
        } else if (exception_keeper_lineno_6 != 0) {
            exception_keeper_tb_6 = ADD_TRACEBACK(exception_keeper_tb_6, frame_15906d6e09d71ad6e3647802cd6cf8d1, exception_keeper_lineno_6);
        }

        NORMALIZE_EXCEPTION(&exception_keeper_type_6, &exception_keeper_value_6, &exception_keeper_tb_6);
        PUBLISH_EXCEPTION(&exception_keeper_type_6, &exception_keeper_value_6, &exception_keeper_tb_6);
        {
            nuitka_bool tmp_condition_result_10;
            PyObject *tmp_compexpr_left_8;
            PyObject *tmp_compexpr_right_8;
            tmp_compexpr_left_8 = EXC_TYPE(PyThreadState_GET());
            tmp_compexpr_right_8 = PyExc_BaseException;
            tmp_res = EXCEPTION_MATCH_BOOL(tmp_compexpr_left_8, tmp_compexpr_right_8);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1062;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_8;
            }
            tmp_condition_result_10 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_10 == NUITKA_BOOL_TRUE) {
                goto branch_yes_10;
            } else {
                goto branch_no_10;
            }
            branch_yes_10:;
            {
                nuitka_bool tmp_assign_source_30;
                tmp_assign_source_30 = NUITKA_BOOL_FALSE;
                tmp_with_1__indicator = tmp_assign_source_30;
            }
            {
                nuitka_bool tmp_condition_result_11;
                PyObject *tmp_operand_name_1;
                PyObject *tmp_called_name_3;
                PyObject *tmp_args_element_name_2;
                PyObject *tmp_args_element_name_3;
                PyObject *tmp_args_element_name_4;
                CHECK_OBJECT(tmp_with_1__exit);
                tmp_called_name_3 = tmp_with_1__exit;
                tmp_args_element_name_2 = EXC_TYPE(PyThreadState_GET());
                tmp_args_element_name_3 = EXC_VALUE(PyThreadState_GET());
                tmp_args_element_name_4 = EXC_TRACEBACK(PyThreadState_GET());
                frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1067;
                {
                    PyObject *call_args[] = {tmp_args_element_name_2, tmp_args_element_name_3, tmp_args_element_name_4};
                    tmp_operand_name_1 = CALL_FUNCTION_WITH_ARGS3(tmp_called_name_3, call_args);
                }

                if (tmp_operand_name_1 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1067;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_8;
                }
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_1);
                Py_DECREF(tmp_operand_name_1);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1067;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_8;
                }
                tmp_condition_result_11 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_11 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_11;
                } else {
                    goto branch_no_11;
                }
                branch_yes_11:;
                tmp_result = RERAISE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                if (unlikely(tmp_result == false)) {
                    exception_lineno = 1067;
                }

                if (exception_tb && exception_tb->tb_frame == &frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame) frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = exception_tb->tb_lineno;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_8;
                branch_no_11:;
            }
            goto branch_end_10;
            branch_no_10:;
            tmp_result = RERAISE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            if (unlikely(tmp_result == false)) {
                exception_lineno = 1062;
            }

            if (exception_tb && exception_tb->tb_frame == &frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame) frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = exception_tb->tb_lineno;
            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
            goto try_except_handler_8;
            branch_end_10:;
        }
        goto try_end_6;
        // exception handler codes exits in all cases
        NUITKA_CANNOT_GET_HERE(cleanop$$$function_7_revertErase_cleanup);
        return NULL;
        // End of try:
        try_end_6:;
        goto try_end_7;
        // Exception handler code:
        try_except_handler_8:;
        exception_keeper_type_7 = exception_type;
        exception_keeper_value_7 = exception_value;
        exception_keeper_tb_7 = exception_tb;
        exception_keeper_lineno_7 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        {
            nuitka_bool tmp_condition_result_12;
            nuitka_bool tmp_compexpr_left_9;
            nuitka_bool tmp_compexpr_right_9;
            assert(tmp_with_1__indicator != NUITKA_BOOL_UNASSIGNED);
            tmp_compexpr_left_9 = tmp_with_1__indicator;
            tmp_compexpr_right_9 = NUITKA_BOOL_TRUE;
            tmp_condition_result_12 = (tmp_compexpr_left_9 == tmp_compexpr_right_9) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_12 == NUITKA_BOOL_TRUE) {
                goto branch_yes_12;
            } else {
                goto branch_no_12;
            }
            branch_yes_12:;
            {
                PyObject *tmp_called_name_4;
                PyObject *tmp_call_result_12;
                CHECK_OBJECT(tmp_with_1__exit);
                tmp_called_name_4 = tmp_with_1__exit;
                frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1067;
                tmp_call_result_12 = CALL_FUNCTION_WITH_ARGS3(tmp_called_name_4, &PyTuple_GET_ITEM(const_tuple_none_none_none_tuple, 0));

                if (tmp_call_result_12 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);

                    Py_DECREF(exception_keeper_type_7);
                    Py_XDECREF(exception_keeper_value_7);
                    Py_XDECREF(exception_keeper_tb_7);

                    exception_lineno = 1067;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_7;
                }
                Py_DECREF(tmp_call_result_12);
            }
            branch_no_12:;
        }
        // Re-raise.
        exception_type = exception_keeper_type_7;
        exception_value = exception_keeper_value_7;
        exception_tb = exception_keeper_tb_7;
        exception_lineno = exception_keeper_lineno_7;

        goto try_except_handler_7;
        // End of try:
        try_end_7:;
        {
            nuitka_bool tmp_condition_result_13;
            nuitka_bool tmp_compexpr_left_10;
            nuitka_bool tmp_compexpr_right_10;
            assert(tmp_with_1__indicator != NUITKA_BOOL_UNASSIGNED);
            tmp_compexpr_left_10 = tmp_with_1__indicator;
            tmp_compexpr_right_10 = NUITKA_BOOL_TRUE;
            tmp_condition_result_13 = (tmp_compexpr_left_10 == tmp_compexpr_right_10) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_13 == NUITKA_BOOL_TRUE) {
                goto branch_yes_13;
            } else {
                goto branch_no_13;
            }
            branch_yes_13:;
            {
                PyObject *tmp_called_name_5;
                PyObject *tmp_call_result_13;
                CHECK_OBJECT(tmp_with_1__exit);
                tmp_called_name_5 = tmp_with_1__exit;
                frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1067;
                tmp_call_result_13 = CALL_FUNCTION_WITH_ARGS3(tmp_called_name_5, &PyTuple_GET_ITEM(const_tuple_none_none_none_tuple, 0));

                if (tmp_call_result_13 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1067;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_7;
                }
                Py_DECREF(tmp_call_result_13);
            }
            branch_no_13:;
        }
        goto try_end_8;
        // Exception handler code:
        try_except_handler_7:;
        exception_keeper_type_8 = exception_type;
        exception_keeper_value_8 = exception_value;
        exception_keeper_tb_8 = exception_tb;
        exception_keeper_lineno_8 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_with_1__source);
        tmp_with_1__source = NULL;

        Py_XDECREF(tmp_with_1__enter);
        tmp_with_1__enter = NULL;

        Py_XDECREF(tmp_with_1__exit);
        tmp_with_1__exit = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_8;
        exception_value = exception_keeper_value_8;
        exception_tb = exception_keeper_tb_8;
        exception_lineno = exception_keeper_lineno_8;

        goto frame_exception_exit_1;
        // End of try:
        try_end_8:;
        CHECK_OBJECT((PyObject *)tmp_with_1__source);
        Py_DECREF(tmp_with_1__source);
        tmp_with_1__source = NULL;

        CHECK_OBJECT((PyObject *)tmp_with_1__enter);
        Py_DECREF(tmp_with_1__enter);
        tmp_with_1__enter = NULL;

        CHECK_OBJECT((PyObject *)tmp_with_1__exit);
        Py_DECREF(tmp_with_1__exit);
        tmp_with_1__exit = NULL;

        {
            PyObject *tmp_assign_source_31;
            PyObject *tmp_iter_arg_6;
            PyObject *tmp_range_arg_3;
            PyObject *tmp_len_arg_3;
            PyObject *tmp_source_name_10;
            CHECK_OBJECT(par_ui);
            tmp_source_name_10 = par_ui;
            tmp_len_arg_3 = LOOKUP_ATTRIBUTE(tmp_source_name_10, const_str_plain_devs_list);
            if (tmp_len_arg_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1068;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_range_arg_3 = BUILTIN_LEN(tmp_len_arg_3);
            Py_DECREF(tmp_len_arg_3);
            if (tmp_range_arg_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1068;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_iter_arg_6 = BUILTIN_RANGE(tmp_range_arg_3);
            Py_DECREF(tmp_range_arg_3);
            if (tmp_iter_arg_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1068;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_assign_source_31 = MAKE_ITERATOR(tmp_iter_arg_6);
            Py_DECREF(tmp_iter_arg_6);
            if (tmp_assign_source_31 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1068;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_6__for_iterator == NULL);
            tmp_for_loop_6__for_iterator = tmp_assign_source_31;
        }
        // Tried code:
        loop_start_6:;
        {
            PyObject *tmp_next_source_6;
            PyObject *tmp_assign_source_32;
            CHECK_OBJECT(tmp_for_loop_6__for_iterator);
            tmp_next_source_6 = tmp_for_loop_6__for_iterator;
            tmp_assign_source_32 = ITERATOR_NEXT(tmp_next_source_6);
            if (tmp_assign_source_32 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_6;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    exception_lineno = 1068;
                    goto try_except_handler_10;
                }
            }

            {
                PyObject *old = tmp_for_loop_6__iter_value;
                tmp_for_loop_6__iter_value = tmp_assign_source_32;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_33;
            CHECK_OBJECT(tmp_for_loop_6__iter_value);
            tmp_assign_source_33 = tmp_for_loop_6__iter_value;
            {
                PyObject *old = var_z;
                var_z = tmp_assign_source_33;
                Py_INCREF(var_z);
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_called_instance_13;
            PyObject *tmp_mvar_value_7;
            PyObject *tmp_call_result_14;
            PyObject *tmp_args_element_name_5;
            tmp_mvar_value_7 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_runop);

            if (unlikely(tmp_mvar_value_7 == NULL)) {
                tmp_mvar_value_7 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runop);
            }

            if (tmp_mvar_value_7 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 490 ], 34, 0);
                exception_tb = NULL;

                exception_lineno = 1069;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_10;
            }

            tmp_called_instance_13 = tmp_mvar_value_7;
            CHECK_OBJECT(var_z);
            tmp_args_element_name_5 = var_z;
            frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1069;
            {
                PyObject *call_args[] = {tmp_args_element_name_5};
                tmp_call_result_14 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_13, const_str_plain_postlock, call_args);
            }

            if (tmp_call_result_14 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1069;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_10;
            }
            Py_DECREF(tmp_call_result_14);
        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1068;
            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
            goto try_except_handler_10;
        }
        goto loop_start_6;
        loop_end_6:;
        goto try_end_9;
        // Exception handler code:
        try_except_handler_10:;
        exception_keeper_type_9 = exception_type;
        exception_keeper_value_9 = exception_value;
        exception_keeper_tb_9 = exception_tb;
        exception_keeper_lineno_9 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_6__iter_value);
        tmp_for_loop_6__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_6__for_iterator);
        Py_DECREF(tmp_for_loop_6__for_iterator);
        tmp_for_loop_6__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_9;
        exception_value = exception_keeper_value_9;
        exception_tb = exception_keeper_tb_9;
        exception_lineno = exception_keeper_lineno_9;

        goto frame_exception_exit_1;
        // End of try:
        try_end_9:;
        Py_XDECREF(tmp_for_loop_6__iter_value);
        tmp_for_loop_6__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_6__for_iterator);
        Py_DECREF(tmp_for_loop_6__for_iterator);
        tmp_for_loop_6__for_iterator = NULL;

        branch_no_9:;
    }
    {
        nuitka_bool tmp_assign_source_34;
        tmp_assign_source_34 = NUITKA_BOOL_FALSE;
        var_any_success = tmp_assign_source_34;
    }
    {
        nuitka_bool tmp_condition_result_14;
        PyObject *tmp_compexpr_left_11;
        PyObject *tmp_compexpr_right_11;
        CHECK_OBJECT(var_res_sum);
        tmp_compexpr_left_11 = var_res_sum;
        tmp_compexpr_right_11 = const_int_0;
        tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_INT(tmp_compexpr_left_11, tmp_compexpr_right_11);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1071;
            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_14 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_14 == NUITKA_BOOL_TRUE) {
            goto branch_yes_14;
        } else {
            goto branch_no_14;
        }
        branch_yes_14:;
        {
            PyObject *tmp_assign_source_35;
            tmp_assign_source_35 = Py_True;
            assert(var_start_f == NULL);
            Py_INCREF(tmp_assign_source_35);
            var_start_f = tmp_assign_source_35;
        }
        {
            PyObject *tmp_assign_source_36;
            tmp_assign_source_36 = Py_True;
            assert(var_start_p == NULL);
            Py_INCREF(tmp_assign_source_36);
            var_start_p = tmp_assign_source_36;
        }
        {
            PyObject *tmp_assign_source_37;
            tmp_assign_source_37 = Py_True;
            assert(var_start_alo == NULL);
            Py_INCREF(tmp_assign_source_37);
            var_start_alo = tmp_assign_source_37;
        }
        {
            PyObject *tmp_assign_source_38;
            tmp_assign_source_38 = Py_True;
            assert(var_start_to == NULL);
            Py_INCREF(tmp_assign_source_38);
            var_start_to = tmp_assign_source_38;
        }
        {
            PyObject *tmp_assign_source_39;
            tmp_assign_source_39 = Py_True;
            assert(var_start_na == NULL);
            Py_INCREF(tmp_assign_source_39);
            var_start_na = tmp_assign_source_39;
        }
        {
            PyObject *tmp_assign_source_40;
            tmp_assign_source_40 = Py_True;
            assert(var_start_spb == NULL);
            Py_INCREF(tmp_assign_source_40);
            var_start_spb = tmp_assign_source_40;
        }
        {
            PyObject *tmp_assign_source_41;
            tmp_assign_source_41 = Py_True;
            assert(var_start_miss == NULL);
            Py_INCREF(tmp_assign_source_41);
            var_start_miss = tmp_assign_source_41;
        }
        {
            PyObject *tmp_assign_source_42;
            tmp_assign_source_42 = const_str_empty;
            assert(var_list_f == NULL);
            Py_INCREF(tmp_assign_source_42);
            var_list_f = tmp_assign_source_42;
        }
        {
            PyObject *tmp_assign_source_43;
            tmp_assign_source_43 = const_str_empty;
            assert(var_list_p == NULL);
            Py_INCREF(tmp_assign_source_43);
            var_list_p = tmp_assign_source_43;
        }
        {
            PyObject *tmp_assign_source_44;
            tmp_assign_source_44 = const_str_empty;
            assert(var_list_alo == NULL);
            Py_INCREF(tmp_assign_source_44);
            var_list_alo = tmp_assign_source_44;
        }
        {
            PyObject *tmp_assign_source_45;
            tmp_assign_source_45 = const_str_empty;
            assert(var_list_to == NULL);
            Py_INCREF(tmp_assign_source_45);
            var_list_to = tmp_assign_source_45;
        }
        {
            PyObject *tmp_assign_source_46;
            tmp_assign_source_46 = const_str_empty;
            assert(var_list_na == NULL);
            Py_INCREF(tmp_assign_source_46);
            var_list_na = tmp_assign_source_46;
        }
        {
            PyObject *tmp_assign_source_47;
            tmp_assign_source_47 = const_str_empty;
            assert(var_list_spb == NULL);
            Py_INCREF(tmp_assign_source_47);
            var_list_spb = tmp_assign_source_47;
        }
        {
            PyObject *tmp_assign_source_48;
            tmp_assign_source_48 = const_str_empty;
            assert(var_list_miss == NULL);
            Py_INCREF(tmp_assign_source_48);
            var_list_miss = tmp_assign_source_48;
        }
        {
            PyObject *tmp_assign_source_49;
            tmp_assign_source_49 = const_int_0;
            assert(var_count == NULL);
            Py_INCREF(tmp_assign_source_49);
            var_count = tmp_assign_source_49;
        }
        {
            PyObject *tmp_assign_source_50;
            tmp_assign_source_50 = const_int_0;
            assert(var_count_f == NULL);
            Py_INCREF(tmp_assign_source_50);
            var_count_f = tmp_assign_source_50;
        }
        {
            PyObject *tmp_assign_source_51;
            tmp_assign_source_51 = const_int_neg_1;
            assert(var_last_f == NULL);
            Py_INCREF(tmp_assign_source_51);
            var_last_f = tmp_assign_source_51;
        }
        {
            PyObject *tmp_assign_source_52;
            PyObject *tmp_iter_arg_7;
            CHECK_OBJECT(par_selected_list);
            tmp_iter_arg_7 = par_selected_list;
            tmp_assign_source_52 = MAKE_ITERATOR(tmp_iter_arg_7);
            if (tmp_assign_source_52 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1089;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_7__for_iterator == NULL);
            tmp_for_loop_7__for_iterator = tmp_assign_source_52;
        }
        // Tried code:
        loop_start_7:;
        {
            PyObject *tmp_next_source_7;
            PyObject *tmp_assign_source_53;
            CHECK_OBJECT(tmp_for_loop_7__for_iterator);
            tmp_next_source_7 = tmp_for_loop_7__for_iterator;
            tmp_assign_source_53 = ITERATOR_NEXT(tmp_next_source_7);
            if (tmp_assign_source_53 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_7;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    exception_lineno = 1089;
                    goto try_except_handler_11;
                }
            }

            {
                PyObject *old = tmp_for_loop_7__iter_value;
                tmp_for_loop_7__iter_value = tmp_assign_source_53;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_54;
            CHECK_OBJECT(tmp_for_loop_7__iter_value);
            tmp_assign_source_54 = tmp_for_loop_7__iter_value;
            {
                PyObject *old = var_y;
                var_y = tmp_assign_source_54;
                Py_INCREF(var_y);
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assattr_name_4;
            PyObject *tmp_subscribed_name_3;
            PyObject *tmp_source_name_11;
            PyObject *tmp_subscript_name_3;
            PyObject *tmp_assattr_target_4;
            CHECK_OBJECT(par_ui);
            tmp_source_name_11 = par_ui;
            tmp_subscribed_name_3 = LOOKUP_ATTRIBUTE(tmp_source_name_11, const_str_plain_devs_list);
            if (tmp_subscribed_name_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1090;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_11;
            }
            CHECK_OBJECT(var_y);
            tmp_subscript_name_3 = var_y;
            tmp_assattr_name_4 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_3, tmp_subscript_name_3);
            Py_DECREF(tmp_subscribed_name_3);
            if (tmp_assattr_name_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1090;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_11;
            }
            CHECK_OBJECT(par_ui);
            tmp_assattr_target_4 = par_ui;
            tmp_result = SET_ATTRIBUTE(tmp_assattr_target_4, const_str_plain_devname, tmp_assattr_name_4);
            Py_DECREF(tmp_assattr_name_4);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1090;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_11;
            }
        }
        {
            nuitka_bool tmp_condition_result_15;
            PyObject *tmp_compexpr_left_12;
            PyObject *tmp_compexpr_right_12;
            PyObject *tmp_subscribed_name_4;
            PyObject *tmp_subscript_name_4;
            CHECK_OBJECT(par_res_list);
            tmp_subscribed_name_4 = par_res_list;
            CHECK_OBJECT(var_count);
            tmp_subscript_name_4 = var_count;
            tmp_compexpr_left_12 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_4, tmp_subscript_name_4);
            if (tmp_compexpr_left_12 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1091;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_11;
            }
            tmp_compexpr_right_12 = const_int_0;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_12, tmp_compexpr_right_12);
            Py_DECREF(tmp_compexpr_left_12);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1091;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_11;
            }
            tmp_condition_result_15 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_15 == NUITKA_BOOL_TRUE) {
                goto branch_yes_15;
            } else {
                goto branch_no_15;
            }
            branch_yes_15:;
            {
                PyObject *tmp_called_instance_14;
                PyObject *tmp_mvar_value_8;
                PyObject *tmp_call_result_15;
                PyObject *tmp_args_element_name_6;
                PyObject *tmp_args_element_name_7;
                PyObject *tmp_args_element_name_8;
                tmp_mvar_value_8 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_dialogs);

                if (unlikely(tmp_mvar_value_8 == NULL)) {
                    tmp_mvar_value_8 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_dialogs);
                }

                if (tmp_mvar_value_8 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 418 ], 36, 0);
                    exception_tb = NULL;

                    exception_lineno = 1092;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }

                tmp_called_instance_14 = tmp_mvar_value_8;
                tmp_args_element_name_6 = Py_None;
                CHECK_OBJECT(par_ui);
                tmp_args_element_name_7 = par_ui;
                tmp_args_element_name_8 = const_int_pos_1;
                frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1092;
                {
                    PyObject *call_args[] = {tmp_args_element_name_6, tmp_args_element_name_7, tmp_args_element_name_8};
                    tmp_call_result_15 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_14, const_str_plain_query, call_args);
                }

                if (tmp_call_result_15 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1092;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                Py_DECREF(tmp_call_result_15);
            }
            {
                nuitka_bool tmp_condition_result_16;
                PyObject *tmp_operand_name_2;
                if (var_start_p == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_p");
                    exception_tb = NULL;

                    exception_lineno = 1093;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }

                tmp_operand_name_2 = var_start_p;
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_2);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1093;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                tmp_condition_result_16 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_16 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_16;
                } else {
                    goto branch_no_16;
                }
                branch_yes_16:;
                {
                    PyObject *tmp_assign_source_55;
                    PyObject *tmp_left_name_3;
                    PyObject *tmp_right_name_3;
                    if (var_list_p == NULL) {

                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p");
                        exception_tb = NULL;

                        exception_lineno = 1094;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }

                    tmp_left_name_3 = var_list_p;
                    tmp_right_name_3 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                    tmp_assign_source_55 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_3, tmp_right_name_3);
                    if (tmp_assign_source_55 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1094;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    {
                        PyObject *old = var_list_p;
                        var_list_p = tmp_assign_source_55;
                        Py_XDECREF(old);
                    }

                }
                goto branch_end_16;
                branch_no_16:;
                {
                    PyObject *tmp_assign_source_56;
                    tmp_assign_source_56 = Py_False;
                    {
                        PyObject *old = var_start_p;
                        var_start_p = tmp_assign_source_56;
                        Py_INCREF(var_start_p);
                        Py_XDECREF(old);
                    }

                }
                branch_end_16:;
            }
            {
                PyObject *tmp_assign_source_57;
                PyObject *tmp_left_name_4;
                PyObject *tmp_right_name_4;
                PyObject *tmp_subscribed_name_5;
                PyObject *tmp_source_name_12;
                PyObject *tmp_subscript_name_5;
                if (var_list_p == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p");
                    exception_tb = NULL;

                    exception_lineno = 1097;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }

                tmp_left_name_4 = var_list_p;
                CHECK_OBJECT(par_ui);
                tmp_source_name_12 = par_ui;
                tmp_subscribed_name_5 = LOOKUP_ATTRIBUTE(tmp_source_name_12, const_str_plain_devs_list);
                if (tmp_subscribed_name_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1097;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                CHECK_OBJECT(var_y);
                tmp_subscript_name_5 = var_y;
                tmp_right_name_4 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_5, tmp_subscript_name_5);
                Py_DECREF(tmp_subscribed_name_5);
                if (tmp_right_name_4 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1097;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                tmp_assign_source_57 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_4, tmp_right_name_4);
                Py_DECREF(tmp_right_name_4);
                if (tmp_assign_source_57 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1097;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                {
                    PyObject *old = var_list_p;
                    var_list_p = tmp_assign_source_57;
                    Py_XDECREF(old);
                }

            }
            {
                nuitka_bool tmp_condition_result_17;
                PyObject *tmp_compexpr_left_13;
                PyObject *tmp_compexpr_right_13;
                PyObject *tmp_source_name_13;
                CHECK_OBJECT(par_ui);
                tmp_source_name_13 = par_ui;
                tmp_compexpr_left_13 = LOOKUP_ATTRIBUTE(tmp_source_name_13, const_str_plain_DEV_OS);
                if (tmp_compexpr_left_13 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1099;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                tmp_compexpr_right_13 = const_str_plain_Windows;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_13, tmp_compexpr_right_13);
                Py_DECREF(tmp_compexpr_left_13);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1099;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                tmp_condition_result_17 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_17 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_17;
                } else {
                    goto branch_no_17;
                }
                branch_yes_17:;
                {
                    PyObject *tmp_assign_source_58;
                    PyObject *tmp_called_instance_15;
                    PyObject *tmp_called_instance_16;
                    PyObject *tmp_mvar_value_9;
                    tmp_mvar_value_9 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_os);

                    if (unlikely(tmp_mvar_value_9 == NULL)) {
                        tmp_mvar_value_9 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                    }

                    if (tmp_mvar_value_9 == NULL) {

                        exception_type = PyExc_NameError;
                        Py_INCREF(exception_type);
                        exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                        exception_tb = NULL;

                        exception_lineno = 1100;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }

                    tmp_called_instance_16 = tmp_mvar_value_9;
                    frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1100;
                    tmp_called_instance_15 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_16, const_str_plain_popen, &PyTuple_GET_ITEM(const_tuple_str_plain_mountvol_tuple, 0));

                    if (tmp_called_instance_15 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1100;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1100;
                    tmp_assign_source_58 = CALL_METHOD_NO_ARGS(tmp_called_instance_15, const_str_plain_read);
                    Py_DECREF(tmp_called_instance_15);
                    if (tmp_assign_source_58 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1100;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    {
                        PyObject *old = var_txt;
                        var_txt = tmp_assign_source_58;
                        Py_XDECREF(old);
                    }

                }
                {
                    PyObject *tmp_assign_source_59;
                    tmp_assign_source_59 = PyList_New(0);
                    {
                        PyObject *old = var_del_entries;
                        var_del_entries = tmp_assign_source_59;
                        Py_XDECREF(old);
                    }

                }
                {
                    PyObject *tmp_assign_source_60;
                    tmp_assign_source_60 = const_int_0;
                    {
                        PyObject *old = var_idx;
                        var_idx = tmp_assign_source_60;
                        Py_INCREF(var_idx);
                        Py_XDECREF(old);
                    }

                }
                {
                    PyObject *tmp_assign_source_61;
                    PyObject *tmp_iter_arg_8;
                    PyObject *tmp_source_name_14;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_14 = par_ui;
                    tmp_iter_arg_8 = LOOKUP_ATTRIBUTE(tmp_source_name_14, const_str_plain_mv_list);
                    if (tmp_iter_arg_8 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1103;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    tmp_assign_source_61 = MAKE_ITERATOR(tmp_iter_arg_8);
                    Py_DECREF(tmp_iter_arg_8);
                    if (tmp_assign_source_61 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1103;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    {
                        PyObject *old = tmp_for_loop_8__for_iterator;
                        tmp_for_loop_8__for_iterator = tmp_assign_source_61;
                        Py_XDECREF(old);
                    }

                }
                // Tried code:
                loop_start_8:;
                {
                    PyObject *tmp_next_source_8;
                    PyObject *tmp_assign_source_62;
                    CHECK_OBJECT(tmp_for_loop_8__for_iterator);
                    tmp_next_source_8 = tmp_for_loop_8__for_iterator;
                    tmp_assign_source_62 = ITERATOR_NEXT(tmp_next_source_8);
                    if (tmp_assign_source_62 == NULL) {
                        if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                            goto loop_end_8;
                        } else {

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            exception_lineno = 1103;
                            goto try_except_handler_12;
                        }
                    }

                    {
                        PyObject *old = tmp_for_loop_8__iter_value;
                        tmp_for_loop_8__iter_value = tmp_assign_source_62;
                        Py_XDECREF(old);
                    }

                }
                {
                    PyObject *tmp_assign_source_63;
                    CHECK_OBJECT(tmp_for_loop_8__iter_value);
                    tmp_assign_source_63 = tmp_for_loop_8__iter_value;
                    {
                        PyObject *old = var_v;
                        var_v = tmp_assign_source_63;
                        Py_INCREF(var_v);
                        Py_XDECREF(old);
                    }

                }
                {
                    nuitka_bool tmp_condition_result_18;
                    PyObject *tmp_compexpr_left_14;
                    PyObject *tmp_compexpr_right_14;
                    PyObject *tmp_subscribed_name_6;
                    PyObject *tmp_subscript_name_6;
                    PyObject *tmp_subscribed_name_7;
                    PyObject *tmp_source_name_15;
                    PyObject *tmp_subscript_name_7;
                    CHECK_OBJECT(var_v);
                    tmp_subscribed_name_6 = var_v;
                    tmp_subscript_name_6 = const_int_pos_2;
                    tmp_compexpr_left_14 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_6, tmp_subscript_name_6, 2);
                    if (tmp_compexpr_left_14 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1104;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_15 = par_ui;
                    tmp_subscribed_name_7 = LOOKUP_ATTRIBUTE(tmp_source_name_15, const_str_plain_sn_list);
                    if (tmp_subscribed_name_7 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_compexpr_left_14);

                        exception_lineno = 1104;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_7 = var_y;
                    tmp_compexpr_right_14 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_7, tmp_subscript_name_7);
                    Py_DECREF(tmp_subscribed_name_7);
                    if (tmp_compexpr_right_14 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_compexpr_left_14);

                        exception_lineno = 1104;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_14, tmp_compexpr_right_14);
                    Py_DECREF(tmp_compexpr_left_14);
                    Py_DECREF(tmp_compexpr_right_14);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1104;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_12;
                    }
                    tmp_condition_result_18 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_18 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_18;
                    } else {
                        goto branch_no_18;
                    }
                    branch_yes_18:;
                    {
                        PyObject *tmp_called_instance_17;
                        PyObject *tmp_call_result_16;
                        PyObject *tmp_args_element_name_9;
                        CHECK_OBJECT(var_del_entries);
                        tmp_called_instance_17 = var_del_entries;
                        CHECK_OBJECT(var_idx);
                        tmp_args_element_name_9 = var_idx;
                        frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1105;
                        {
                            PyObject *call_args[] = {tmp_args_element_name_9};
                            tmp_call_result_16 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_17, const_str_plain_append, call_args);
                        }

                        if (tmp_call_result_16 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1105;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_12;
                        }
                        Py_DECREF(tmp_call_result_16);
                    }
                    branch_no_18:;
                }
                {
                    PyObject *tmp_assign_source_64;
                    PyObject *tmp_left_name_5;
                    PyObject *tmp_right_name_5;
                    CHECK_OBJECT(var_idx);
                    tmp_left_name_5 = var_idx;
                    tmp_right_name_5 = const_int_pos_1;
                    tmp_assign_source_64 = BINARY_OPERATION_ADD_OBJECT_INT(tmp_left_name_5, tmp_right_name_5);
                    assert(!(tmp_assign_source_64 == NULL));
                    {
                        PyObject *old = var_idx;
                        assert(old != NULL);
                        var_idx = tmp_assign_source_64;
                        Py_DECREF(old);
                    }

                }
                if (CONSIDER_THREADING() == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1103;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_12;
                }
                goto loop_start_8;
                loop_end_8:;
                goto try_end_10;
                // Exception handler code:
                try_except_handler_12:;
                exception_keeper_type_10 = exception_type;
                exception_keeper_value_10 = exception_value;
                exception_keeper_tb_10 = exception_tb;
                exception_keeper_lineno_10 = exception_lineno;
                exception_type = NULL;
                exception_value = NULL;
                exception_tb = NULL;
                exception_lineno = 0;

                Py_XDECREF(tmp_for_loop_8__iter_value);
                tmp_for_loop_8__iter_value = NULL;

                CHECK_OBJECT((PyObject *)tmp_for_loop_8__for_iterator);
                Py_DECREF(tmp_for_loop_8__for_iterator);
                tmp_for_loop_8__for_iterator = NULL;

                // Re-raise.
                exception_type = exception_keeper_type_10;
                exception_value = exception_keeper_value_10;
                exception_tb = exception_keeper_tb_10;
                exception_lineno = exception_keeper_lineno_10;

                goto try_except_handler_11;
                // End of try:
                try_end_10:;
                Py_XDECREF(tmp_for_loop_8__iter_value);
                tmp_for_loop_8__iter_value = NULL;

                CHECK_OBJECT((PyObject *)tmp_for_loop_8__for_iterator);
                Py_DECREF(tmp_for_loop_8__for_iterator);
                tmp_for_loop_8__for_iterator = NULL;

                {
                    PyObject *tmp_assign_source_65;
                    PyObject *tmp_left_name_6;
                    PyObject *tmp_len_arg_4;
                    PyObject *tmp_right_name_6;
                    CHECK_OBJECT(var_del_entries);
                    tmp_len_arg_4 = var_del_entries;
                    tmp_left_name_6 = BUILTIN_LEN(tmp_len_arg_4);
                    assert(!(tmp_left_name_6 == NULL));
                    tmp_right_name_6 = const_int_pos_1;
                    tmp_assign_source_65 = BINARY_OPERATION_SUB_OBJECT_INT(tmp_left_name_6, tmp_right_name_6);
                    Py_DECREF(tmp_left_name_6);
                    assert(!(tmp_assign_source_65 == NULL));
                    {
                        PyObject *old = var_x;
                        var_x = tmp_assign_source_65;
                        Py_XDECREF(old);
                    }

                }
                loop_start_9:;
                {
                    nuitka_bool tmp_condition_result_19;
                    PyObject *tmp_operand_name_3;
                    PyObject *tmp_compexpr_left_15;
                    PyObject *tmp_compexpr_right_15;
                    CHECK_OBJECT(var_x);
                    tmp_compexpr_left_15 = var_x;
                    tmp_compexpr_right_15 = const_int_0;
                    tmp_operand_name_3 = RICH_COMPARE_GTE_OBJECT_OBJECT(tmp_compexpr_left_15, tmp_compexpr_right_15);
                    if (tmp_operand_name_3 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1108;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    tmp_res = CHECK_IF_TRUE(tmp_operand_name_3);
                    Py_DECREF(tmp_operand_name_3);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1108;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    tmp_condition_result_19 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_19 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_19;
                    } else {
                        goto branch_no_19;
                    }
                    branch_yes_19:;
                    goto loop_end_9;
                    branch_no_19:;
                }
                {
                    PyObject *tmp_called_name_6;
                    PyObject *tmp_source_name_16;
                    PyObject *tmp_source_name_17;
                    PyObject *tmp_call_result_17;
                    PyObject *tmp_args_element_name_10;
                    PyObject *tmp_subscribed_name_8;
                    PyObject *tmp_subscript_name_8;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_17 = par_ui;
                    tmp_source_name_16 = LOOKUP_ATTRIBUTE(tmp_source_name_17, const_str_plain_mv_list);
                    if (tmp_source_name_16 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1109;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    tmp_called_name_6 = LOOKUP_ATTRIBUTE(tmp_source_name_16, const_str_plain_pop);
                    Py_DECREF(tmp_source_name_16);
                    if (tmp_called_name_6 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1109;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    CHECK_OBJECT(var_del_entries);
                    tmp_subscribed_name_8 = var_del_entries;
                    CHECK_OBJECT(var_x);
                    tmp_subscript_name_8 = var_x;
                    tmp_args_element_name_10 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_8, tmp_subscript_name_8);
                    if (tmp_args_element_name_10 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_6);

                        exception_lineno = 1109;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1109;
                    tmp_call_result_17 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_6, tmp_args_element_name_10);
                    Py_DECREF(tmp_called_name_6);
                    Py_DECREF(tmp_args_element_name_10);
                    if (tmp_call_result_17 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1109;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    Py_DECREF(tmp_call_result_17);
                }
                {
                    PyObject *tmp_assign_source_66;
                    PyObject *tmp_left_name_7;
                    PyObject *tmp_right_name_7;
                    CHECK_OBJECT(var_x);
                    tmp_left_name_7 = var_x;
                    tmp_right_name_7 = const_int_pos_1;
                    tmp_assign_source_66 = BINARY_OPERATION_SUB_OBJECT_INT(tmp_left_name_7, tmp_right_name_7);
                    if (tmp_assign_source_66 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1110;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    {
                        PyObject *old = var_x;
                        assert(old != NULL);
                        var_x = tmp_assign_source_66;
                        Py_DECREF(old);
                    }

                }
                if (CONSIDER_THREADING() == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1108;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                goto loop_start_9;
                loop_end_9:;
                branch_no_17:;
            }
            {
                PyObject *tmp_ass_subvalue_3;
                PyObject *tmp_ass_subscribed_3;
                PyObject *tmp_source_name_18;
                PyObject *tmp_ass_subscript_3;
                tmp_ass_subvalue_3 = const_str_plain_Unlocked;
                CHECK_OBJECT(par_ui);
                tmp_source_name_18 = par_ui;
                tmp_ass_subscribed_3 = LOOKUP_ATTRIBUTE(tmp_source_name_18, const_str_plain_lockstatus_list);
                if (tmp_ass_subscribed_3 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1111;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                CHECK_OBJECT(var_y);
                tmp_ass_subscript_3 = var_y;
                tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_3, tmp_ass_subscript_3, tmp_ass_subvalue_3);
                Py_DECREF(tmp_ass_subscribed_3);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1111;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
            }
            {
                PyObject *tmp_ass_subvalue_4;
                PyObject *tmp_ass_subscribed_4;
                PyObject *tmp_source_name_19;
                PyObject *tmp_ass_subscript_4;
                tmp_ass_subvalue_4 = const_str_plain_No;
                CHECK_OBJECT(par_ui);
                tmp_source_name_19 = par_ui;
                tmp_ass_subscribed_4 = LOOKUP_ATTRIBUTE(tmp_source_name_19, const_str_plain_setupstatus_list);
                if (tmp_ass_subscribed_4 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1112;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                CHECK_OBJECT(var_y);
                tmp_ass_subscript_4 = var_y;
                tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_4, tmp_ass_subscript_4, tmp_ass_subvalue_4);
                Py_DECREF(tmp_ass_subscribed_4);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1112;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
            }
            {
                PyObject *tmp_ass_subvalue_5;
                PyObject *tmp_ass_subscribed_5;
                PyObject *tmp_source_name_20;
                PyObject *tmp_ass_subscript_5;
                tmp_ass_subvalue_5 = const_str_digest_f9aa9f1d756280254529dbc306087548;
                CHECK_OBJECT(par_ui);
                tmp_source_name_20 = par_ui;
                tmp_ass_subscribed_5 = LOOKUP_ATTRIBUTE(tmp_source_name_20, const_str_plain_setupuser_list);
                if (tmp_ass_subscribed_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1113;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                CHECK_OBJECT(var_y);
                tmp_ass_subscript_5 = var_y;
                tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_5, tmp_ass_subscript_5, tmp_ass_subvalue_5);
                Py_DECREF(tmp_ass_subscribed_5);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1113;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
            }
            {
                PyObject *tmp_ass_subvalue_6;
                PyObject *tmp_ass_subscribed_6;
                PyObject *tmp_source_name_21;
                PyObject *tmp_ass_subscript_6;
                tmp_ass_subvalue_6 = const_str_digest_f9aa9f1d756280254529dbc306087548;
                CHECK_OBJECT(par_ui);
                tmp_source_name_21 = par_ui;
                tmp_ass_subscribed_6 = LOOKUP_ATTRIBUTE(tmp_source_name_21, const_str_plain_pba_list);
                if (tmp_ass_subscribed_6 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1114;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                CHECK_OBJECT(var_y);
                tmp_ass_subscript_6 = var_y;
                tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_6, tmp_ass_subscript_6, tmp_ass_subvalue_6);
                Py_DECREF(tmp_ass_subscribed_6);
                if (tmp_result == false) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1114;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
            }
            {
                nuitka_bool tmp_condition_result_20;
                PyObject *tmp_compexpr_left_16;
                PyObject *tmp_compexpr_right_16;
                PyObject *tmp_source_name_22;
                CHECK_OBJECT(var_y);
                tmp_compexpr_left_16 = var_y;
                CHECK_OBJECT(par_ui);
                tmp_source_name_22 = par_ui;
                tmp_compexpr_right_16 = LOOKUP_ATTRIBUTE(tmp_source_name_22, const_str_plain_mbr_setup_list);
                if (tmp_compexpr_right_16 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1115;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                tmp_res = PySequence_Contains(tmp_compexpr_right_16, tmp_compexpr_left_16);
                Py_DECREF(tmp_compexpr_right_16);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1115;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                tmp_condition_result_20 = (tmp_res == 1) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_20 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_20;
                } else {
                    goto branch_no_20;
                }
                branch_yes_20:;
                {
                    PyObject *tmp_called_instance_18;
                    PyObject *tmp_source_name_23;
                    PyObject *tmp_call_result_18;
                    PyObject *tmp_args_element_name_11;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_23 = par_ui;
                    tmp_called_instance_18 = LOOKUP_ATTRIBUTE(tmp_source_name_23, const_str_plain_mbr_setup_list);
                    if (tmp_called_instance_18 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1116;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    CHECK_OBJECT(var_y);
                    tmp_args_element_name_11 = var_y;
                    frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1116;
                    {
                        PyObject *call_args[] = {tmp_args_element_name_11};
                        tmp_call_result_18 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_18, const_str_plain_remove, call_args);
                    }

                    Py_DECREF(tmp_called_instance_18);
                    if (tmp_call_result_18 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1116;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    Py_DECREF(tmp_call_result_18);
                }
                branch_no_20:;
            }
            {
                PyObject *tmp_called_instance_19;
                PyObject *tmp_call_result_19;
                PyObject *tmp_args_element_name_12;
                PyObject *tmp_args_element_name_13;
                CHECK_OBJECT(par_ui);
                tmp_called_instance_19 = par_ui;
                CHECK_OBJECT(var_y);
                tmp_args_element_name_12 = var_y;
                tmp_args_element_name_13 = LIST_COPY(const_list_int_pos_4_list);
                frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1117;
                {
                    PyObject *call_args[] = {tmp_args_element_name_12, tmp_args_element_name_13};
                    tmp_call_result_19 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_19, const_str_plain_updateDevs, call_args);
                }

                Py_DECREF(tmp_args_element_name_13);
                if (tmp_call_result_19 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1117;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                Py_DECREF(tmp_call_result_19);
            }
            goto branch_end_15;
            branch_no_15:;
            {
                nuitka_bool tmp_condition_result_21;
                PyObject *tmp_compexpr_left_17;
                PyObject *tmp_compexpr_right_17;
                PyObject *tmp_subscribed_name_9;
                PyObject *tmp_subscript_name_9;
                CHECK_OBJECT(par_res_list);
                tmp_subscribed_name_9 = par_res_list;
                CHECK_OBJECT(var_count);
                tmp_subscript_name_9 = var_count;
                tmp_compexpr_left_17 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_9, tmp_subscript_name_9);
                if (tmp_compexpr_left_17 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1118;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                tmp_compexpr_right_17 = const_int_pos_1;
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_17, tmp_compexpr_right_17);
                Py_DECREF(tmp_compexpr_left_17);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1118;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_11;
                }
                tmp_condition_result_21 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_21 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_21;
                } else {
                    goto branch_no_21;
                }
                branch_yes_21:;
                {
                    nuitka_bool tmp_condition_result_22;
                    int tmp_and_left_truth_2;
                    nuitka_bool tmp_and_left_value_2;
                    nuitka_bool tmp_and_right_value_2;
                    PyObject *tmp_compexpr_left_18;
                    PyObject *tmp_compexpr_right_18;
                    PyObject *tmp_subscribed_name_10;
                    PyObject *tmp_subscript_name_10;
                    PyObject *tmp_source_name_24;
                    PyObject *tmp_compexpr_left_19;
                    PyObject *tmp_compexpr_right_19;
                    PyObject *tmp_subscribed_name_11;
                    PyObject *tmp_source_name_25;
                    PyObject *tmp_subscript_name_11;
                    PyObject *tmp_subscribed_name_12;
                    PyObject *tmp_source_name_26;
                    PyObject *tmp_subscript_name_12;
                    CHECK_OBJECT(par_status_list);
                    tmp_subscribed_name_10 = par_status_list;
                    CHECK_OBJECT(var_count);
                    tmp_subscript_name_10 = var_count;
                    tmp_compexpr_left_18 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_10, tmp_subscript_name_10);
                    if (tmp_compexpr_left_18 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1119;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_24 = par_ui;
                    tmp_compexpr_right_18 = LOOKUP_ATTRIBUTE(tmp_source_name_24, const_str_plain_NOT_AUTHORIZED);
                    if (tmp_compexpr_right_18 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_compexpr_left_18);

                        exception_lineno = 1119;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_18, tmp_compexpr_right_18);
                    Py_DECREF(tmp_compexpr_left_18);
                    Py_DECREF(tmp_compexpr_right_18);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1119;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    tmp_and_left_value_2 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_and_left_truth_2 = tmp_and_left_value_2 == NUITKA_BOOL_TRUE ? 1 : 0;
                    if (tmp_and_left_truth_2 == 1) {
                        goto and_right_2;
                    } else {
                        goto and_left_2;
                    }
                    and_right_2:;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_25 = par_ui;
                    tmp_subscribed_name_11 = LOOKUP_ATTRIBUTE(tmp_source_name_25, const_str_plain_admin_aol_list);
                    if (tmp_subscribed_name_11 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1119;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_11 = var_y;
                    tmp_compexpr_left_19 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_11, tmp_subscript_name_11);
                    Py_DECREF(tmp_subscribed_name_11);
                    if (tmp_compexpr_left_19 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1119;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_26 = par_ui;
                    tmp_subscribed_name_12 = LOOKUP_ATTRIBUTE(tmp_source_name_26, const_str_plain_retrylimit_list);
                    if (tmp_subscribed_name_12 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_compexpr_left_19);

                        exception_lineno = 1119;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    CHECK_OBJECT(var_y);
                    tmp_subscript_name_12 = var_y;
                    tmp_compexpr_right_19 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_12, tmp_subscript_name_12);
                    Py_DECREF(tmp_subscribed_name_12);
                    if (tmp_compexpr_right_19 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_compexpr_left_19);

                        exception_lineno = 1119;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    tmp_res = RICH_COMPARE_BOOL_LTE_OBJECT_OBJECT(tmp_compexpr_left_19, tmp_compexpr_right_19);
                    Py_DECREF(tmp_compexpr_left_19);
                    Py_DECREF(tmp_compexpr_right_19);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1119;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    tmp_and_right_value_2 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    tmp_condition_result_22 = tmp_and_right_value_2;
                    goto and_end_2;
                    and_left_2:;
                    tmp_condition_result_22 = tmp_and_left_value_2;
                    and_end_2:;
                    if (tmp_condition_result_22 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_22;
                    } else {
                        goto branch_no_22;
                    }
                    branch_yes_22:;
                    {
                        nuitka_bool tmp_condition_result_23;
                        PyObject *tmp_operand_name_4;
                        if (var_start_f == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_f");
                            exception_tb = NULL;

                            exception_lineno = 1120;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }

                        tmp_operand_name_4 = var_start_f;
                        tmp_res = CHECK_IF_TRUE(tmp_operand_name_4);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1120;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        tmp_condition_result_23 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_23 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_23;
                        } else {
                            goto branch_no_23;
                        }
                        branch_yes_23:;
                        {
                            PyObject *tmp_assign_source_67;
                            PyObject *tmp_left_name_8;
                            PyObject *tmp_right_name_8;
                            if (var_list_f == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                                exception_tb = NULL;

                                exception_lineno = 1121;
                                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }

                            tmp_left_name_8 = var_list_f;
                            tmp_right_name_8 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                            tmp_assign_source_67 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_8, tmp_right_name_8);
                            if (tmp_assign_source_67 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 1121;
                                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }
                            {
                                PyObject *old = var_list_f;
                                var_list_f = tmp_assign_source_67;
                                Py_XDECREF(old);
                            }

                        }
                        goto branch_end_23;
                        branch_no_23:;
                        {
                            PyObject *tmp_assign_source_68;
                            tmp_assign_source_68 = Py_False;
                            {
                                PyObject *old = var_start_f;
                                var_start_f = tmp_assign_source_68;
                                Py_INCREF(var_start_f);
                                Py_XDECREF(old);
                            }

                        }
                        branch_end_23:;
                    }
                    {
                        PyObject *tmp_assign_source_69;
                        PyObject *tmp_left_name_9;
                        PyObject *tmp_right_name_9;
                        PyObject *tmp_subscribed_name_13;
                        PyObject *tmp_source_name_27;
                        PyObject *tmp_subscript_name_13;
                        if (var_list_f == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                            exception_tb = NULL;

                            exception_lineno = 1124;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }

                        tmp_left_name_9 = var_list_f;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_27 = par_ui;
                        tmp_subscribed_name_13 = LOOKUP_ATTRIBUTE(tmp_source_name_27, const_str_plain_devs_list);
                        if (tmp_subscribed_name_13 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1124;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_13 = var_y;
                        tmp_right_name_9 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_13, tmp_subscript_name_13);
                        Py_DECREF(tmp_subscribed_name_13);
                        if (tmp_right_name_9 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1124;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        tmp_assign_source_69 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_9, tmp_right_name_9);
                        Py_DECREF(tmp_right_name_9);
                        if (tmp_assign_source_69 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1124;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        {
                            PyObject *old = var_list_f;
                            var_list_f = tmp_assign_source_69;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assign_source_70;
                        PyObject *tmp_left_name_10;
                        PyObject *tmp_right_name_10;
                        if (var_count_f == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "count_f");
                            exception_tb = NULL;

                            exception_lineno = 1125;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }

                        tmp_left_name_10 = var_count_f;
                        tmp_right_name_10 = const_int_pos_1;
                        tmp_assign_source_70 = BINARY_OPERATION_ADD_OBJECT_INT(tmp_left_name_10, tmp_right_name_10);
                        if (tmp_assign_source_70 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1125;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        {
                            PyObject *old = var_count_f;
                            var_count_f = tmp_assign_source_70;
                            Py_XDECREF(old);
                        }

                    }
                    {
                        PyObject *tmp_assign_source_71;
                        CHECK_OBJECT(var_y);
                        tmp_assign_source_71 = var_y;
                        {
                            PyObject *old = var_last_f;
                            var_last_f = tmp_assign_source_71;
                            Py_INCREF(var_last_f);
                            Py_XDECREF(old);
                        }

                    }
                    goto branch_end_22;
                    branch_no_22:;
                    {
                        nuitka_bool tmp_condition_result_24;
                        int tmp_or_left_truth_1;
                        nuitka_bool tmp_or_left_value_1;
                        nuitka_bool tmp_or_right_value_1;
                        PyObject *tmp_compexpr_left_20;
                        PyObject *tmp_compexpr_right_20;
                        PyObject *tmp_subscribed_name_14;
                        PyObject *tmp_subscript_name_14;
                        PyObject *tmp_source_name_28;
                        PyObject *tmp_compexpr_left_21;
                        PyObject *tmp_compexpr_right_21;
                        PyObject *tmp_subscribed_name_15;
                        PyObject *tmp_source_name_29;
                        PyObject *tmp_subscript_name_15;
                        PyObject *tmp_subscribed_name_16;
                        PyObject *tmp_source_name_30;
                        PyObject *tmp_subscript_name_16;
                        CHECK_OBJECT(par_status_list);
                        tmp_subscribed_name_14 = par_status_list;
                        CHECK_OBJECT(var_count);
                        tmp_subscript_name_14 = var_count;
                        tmp_compexpr_left_20 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_14, tmp_subscript_name_14);
                        if (tmp_compexpr_left_20 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1127;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_28 = par_ui;
                        tmp_compexpr_right_20 = LOOKUP_ATTRIBUTE(tmp_source_name_28, const_str_plain_AUTHORITY_LOCKED_OUT);
                        if (tmp_compexpr_right_20 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_compexpr_left_20);

                            exception_lineno = 1127;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_20, tmp_compexpr_right_20);
                        Py_DECREF(tmp_compexpr_left_20);
                        Py_DECREF(tmp_compexpr_right_20);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1127;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        tmp_or_left_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        tmp_or_left_truth_1 = tmp_or_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
                        if (tmp_or_left_truth_1 == 1) {
                            goto or_left_1;
                        } else {
                            goto or_right_1;
                        }
                        or_right_1:;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_29 = par_ui;
                        tmp_subscribed_name_15 = LOOKUP_ATTRIBUTE(tmp_source_name_29, const_str_plain_admin_aol_list);
                        if (tmp_subscribed_name_15 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1127;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_15 = var_y;
                        tmp_compexpr_left_21 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_15, tmp_subscript_name_15);
                        Py_DECREF(tmp_subscribed_name_15);
                        if (tmp_compexpr_left_21 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1127;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_30 = par_ui;
                        tmp_subscribed_name_16 = LOOKUP_ATTRIBUTE(tmp_source_name_30, const_str_plain_retrylimit_list);
                        if (tmp_subscribed_name_16 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_compexpr_left_21);

                            exception_lineno = 1127;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_16 = var_y;
                        tmp_compexpr_right_21 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_16, tmp_subscript_name_16);
                        Py_DECREF(tmp_subscribed_name_16);
                        if (tmp_compexpr_right_21 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                            Py_DECREF(tmp_compexpr_left_21);

                            exception_lineno = 1127;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        tmp_res = RICH_COMPARE_BOOL_GT_OBJECT_OBJECT(tmp_compexpr_left_21, tmp_compexpr_right_21);
                        Py_DECREF(tmp_compexpr_left_21);
                        Py_DECREF(tmp_compexpr_right_21);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1127;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        tmp_or_right_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        tmp_condition_result_24 = tmp_or_right_value_1;
                        goto or_end_1;
                        or_left_1:;
                        tmp_condition_result_24 = tmp_or_left_value_1;
                        or_end_1:;
                        if (tmp_condition_result_24 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_24;
                        } else {
                            goto branch_no_24;
                        }
                        branch_yes_24:;
                        {
                            nuitka_bool tmp_condition_result_25;
                            PyObject *tmp_operand_name_5;
                            if (var_start_alo == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_alo");
                                exception_tb = NULL;

                                exception_lineno = 1128;
                                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }

                            tmp_operand_name_5 = var_start_alo;
                            tmp_res = CHECK_IF_TRUE(tmp_operand_name_5);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 1128;
                                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }
                            tmp_condition_result_25 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            if (tmp_condition_result_25 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_25;
                            } else {
                                goto branch_no_25;
                            }
                            branch_yes_25:;
                            {
                                PyObject *tmp_assign_source_72;
                                PyObject *tmp_left_name_11;
                                PyObject *tmp_right_name_11;
                                if (var_list_alo == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_alo");
                                    exception_tb = NULL;

                                    exception_lineno = 1129;
                                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                    goto try_except_handler_11;
                                }

                                tmp_left_name_11 = var_list_alo;
                                tmp_right_name_11 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                                tmp_assign_source_72 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_11, tmp_right_name_11);
                                if (tmp_assign_source_72 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 1129;
                                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                    goto try_except_handler_11;
                                }
                                {
                                    PyObject *old = var_list_alo;
                                    var_list_alo = tmp_assign_source_72;
                                    Py_XDECREF(old);
                                }

                            }
                            goto branch_end_25;
                            branch_no_25:;
                            {
                                PyObject *tmp_assign_source_73;
                                tmp_assign_source_73 = Py_False;
                                {
                                    PyObject *old = var_start_alo;
                                    var_start_alo = tmp_assign_source_73;
                                    Py_INCREF(var_start_alo);
                                    Py_XDECREF(old);
                                }

                            }
                            branch_end_25:;
                        }
                        {
                            PyObject *tmp_assign_source_74;
                            PyObject *tmp_left_name_12;
                            PyObject *tmp_right_name_12;
                            PyObject *tmp_subscribed_name_17;
                            PyObject *tmp_source_name_31;
                            PyObject *tmp_subscript_name_17;
                            if (var_list_alo == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_alo");
                                exception_tb = NULL;

                                exception_lineno = 1132;
                                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }

                            tmp_left_name_12 = var_list_alo;
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_31 = par_ui;
                            tmp_subscribed_name_17 = LOOKUP_ATTRIBUTE(tmp_source_name_31, const_str_plain_devs_list);
                            if (tmp_subscribed_name_17 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 1132;
                                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }
                            CHECK_OBJECT(var_y);
                            tmp_subscript_name_17 = var_y;
                            tmp_right_name_12 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_17, tmp_subscript_name_17);
                            Py_DECREF(tmp_subscribed_name_17);
                            if (tmp_right_name_12 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 1132;
                                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }
                            tmp_assign_source_74 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_12, tmp_right_name_12);
                            Py_DECREF(tmp_right_name_12);
                            if (tmp_assign_source_74 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 1132;
                                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }
                            {
                                PyObject *old = var_list_alo;
                                var_list_alo = tmp_assign_source_74;
                                Py_XDECREF(old);
                            }

                        }
                        branch_no_24:;
                    }
                    branch_end_22:;
                }
                goto branch_end_21;
                branch_no_21:;
                {
                    nuitka_bool tmp_condition_result_26;
                    PyObject *tmp_compexpr_left_22;
                    PyObject *tmp_compexpr_right_22;
                    PyObject *tmp_subscribed_name_18;
                    PyObject *tmp_subscript_name_18;
                    CHECK_OBJECT(par_res_list);
                    tmp_subscribed_name_18 = par_res_list;
                    CHECK_OBJECT(var_count);
                    tmp_subscript_name_18 = var_count;
                    tmp_compexpr_left_22 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_18, tmp_subscript_name_18);
                    if (tmp_compexpr_left_22 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1133;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    tmp_compexpr_right_22 = const_int_pos_2;
                    tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_22, tmp_compexpr_right_22);
                    Py_DECREF(tmp_compexpr_left_22);
                    if (tmp_res == -1) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1133;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_11;
                    }
                    tmp_condition_result_26 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                    if (tmp_condition_result_26 == NUITKA_BOOL_TRUE) {
                        goto branch_yes_26;
                    } else {
                        goto branch_no_26;
                    }
                    branch_yes_26:;
                    {
                        nuitka_bool tmp_condition_result_27;
                        PyObject *tmp_operand_name_6;
                        if (var_start_to == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_to");
                            exception_tb = NULL;

                            exception_lineno = 1134;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }

                        tmp_operand_name_6 = var_start_to;
                        tmp_res = CHECK_IF_TRUE(tmp_operand_name_6);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1134;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        tmp_condition_result_27 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_27 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_27;
                        } else {
                            goto branch_no_27;
                        }
                        branch_yes_27:;
                        {
                            PyObject *tmp_assign_source_75;
                            PyObject *tmp_left_name_13;
                            PyObject *tmp_right_name_13;
                            if (var_list_to == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_to");
                                exception_tb = NULL;

                                exception_lineno = 1135;
                                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }

                            tmp_left_name_13 = var_list_to;
                            tmp_right_name_13 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                            tmp_assign_source_75 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_13, tmp_right_name_13);
                            if (tmp_assign_source_75 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 1135;
                                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }
                            {
                                PyObject *old = var_list_to;
                                var_list_to = tmp_assign_source_75;
                                Py_XDECREF(old);
                            }

                        }
                        goto branch_end_27;
                        branch_no_27:;
                        {
                            PyObject *tmp_assign_source_76;
                            tmp_assign_source_76 = Py_False;
                            {
                                PyObject *old = var_start_to;
                                var_start_to = tmp_assign_source_76;
                                Py_INCREF(var_start_to);
                                Py_XDECREF(old);
                            }

                        }
                        branch_end_27:;
                    }
                    {
                        PyObject *tmp_assign_source_77;
                        PyObject *tmp_left_name_14;
                        PyObject *tmp_right_name_14;
                        PyObject *tmp_subscribed_name_19;
                        PyObject *tmp_source_name_32;
                        PyObject *tmp_subscript_name_19;
                        if (var_list_to == NULL) {

                            exception_type = PyExc_UnboundLocalError;
                            Py_INCREF(exception_type);
                            exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_to");
                            exception_tb = NULL;

                            exception_lineno = 1138;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }

                        tmp_left_name_14 = var_list_to;
                        CHECK_OBJECT(par_ui);
                        tmp_source_name_32 = par_ui;
                        tmp_subscribed_name_19 = LOOKUP_ATTRIBUTE(tmp_source_name_32, const_str_plain_devs_list);
                        if (tmp_subscribed_name_19 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1138;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        CHECK_OBJECT(var_y);
                        tmp_subscript_name_19 = var_y;
                        tmp_right_name_14 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_19, tmp_subscript_name_19);
                        Py_DECREF(tmp_subscribed_name_19);
                        if (tmp_right_name_14 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1138;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        tmp_assign_source_77 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_14, tmp_right_name_14);
                        Py_DECREF(tmp_right_name_14);
                        if (tmp_assign_source_77 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1138;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        {
                            PyObject *old = var_list_to;
                            var_list_to = tmp_assign_source_77;
                            Py_XDECREF(old);
                        }

                    }
                    goto branch_end_26;
                    branch_no_26:;
                    {
                        nuitka_bool tmp_condition_result_28;
                        PyObject *tmp_compexpr_left_23;
                        PyObject *tmp_compexpr_right_23;
                        PyObject *tmp_subscribed_name_20;
                        PyObject *tmp_subscript_name_20;
                        CHECK_OBJECT(par_res_list);
                        tmp_subscribed_name_20 = par_res_list;
                        CHECK_OBJECT(var_count);
                        tmp_subscript_name_20 = var_count;
                        tmp_compexpr_left_23 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_20, tmp_subscript_name_20);
                        if (tmp_compexpr_left_23 == NULL) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1139;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        tmp_compexpr_right_23 = const_int_pos_4;
                        tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_23, tmp_compexpr_right_23);
                        Py_DECREF(tmp_compexpr_left_23);
                        if (tmp_res == -1) {
                            assert(ERROR_OCCURRED());

                            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                            exception_lineno = 1139;
                            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                            goto try_except_handler_11;
                        }
                        tmp_condition_result_28 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                        if (tmp_condition_result_28 == NUITKA_BOOL_TRUE) {
                            goto branch_yes_28;
                        } else {
                            goto branch_no_28;
                        }
                        branch_yes_28:;
                        {
                            nuitka_bool tmp_condition_result_29;
                            PyObject *tmp_operand_name_7;
                            if (var_start_spb == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_spb");
                                exception_tb = NULL;

                                exception_lineno = 1140;
                                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }

                            tmp_operand_name_7 = var_start_spb;
                            tmp_res = CHECK_IF_TRUE(tmp_operand_name_7);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 1140;
                                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }
                            tmp_condition_result_29 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            if (tmp_condition_result_29 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_29;
                            } else {
                                goto branch_no_29;
                            }
                            branch_yes_29:;
                            {
                                PyObject *tmp_assign_source_78;
                                PyObject *tmp_left_name_15;
                                PyObject *tmp_right_name_15;
                                if (var_list_spb == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_spb");
                                    exception_tb = NULL;

                                    exception_lineno = 1141;
                                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                    goto try_except_handler_11;
                                }

                                tmp_left_name_15 = var_list_spb;
                                tmp_right_name_15 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                                tmp_assign_source_78 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_15, tmp_right_name_15);
                                if (tmp_assign_source_78 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 1141;
                                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                    goto try_except_handler_11;
                                }
                                {
                                    PyObject *old = var_list_spb;
                                    var_list_spb = tmp_assign_source_78;
                                    Py_XDECREF(old);
                                }

                            }
                            goto branch_end_29;
                            branch_no_29:;
                            {
                                PyObject *tmp_assign_source_79;
                                tmp_assign_source_79 = Py_False;
                                {
                                    PyObject *old = var_start_spb;
                                    var_start_spb = tmp_assign_source_79;
                                    Py_INCREF(var_start_spb);
                                    Py_XDECREF(old);
                                }

                            }
                            branch_end_29:;
                        }
                        {
                            PyObject *tmp_assign_source_80;
                            PyObject *tmp_left_name_16;
                            PyObject *tmp_right_name_16;
                            PyObject *tmp_subscribed_name_21;
                            PyObject *tmp_source_name_33;
                            PyObject *tmp_subscript_name_21;
                            if (var_list_spb == NULL) {

                                exception_type = PyExc_UnboundLocalError;
                                Py_INCREF(exception_type);
                                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_spb");
                                exception_tb = NULL;

                                exception_lineno = 1144;
                                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }

                            tmp_left_name_16 = var_list_spb;
                            CHECK_OBJECT(par_ui);
                            tmp_source_name_33 = par_ui;
                            tmp_subscribed_name_21 = LOOKUP_ATTRIBUTE(tmp_source_name_33, const_str_plain_devs_list);
                            if (tmp_subscribed_name_21 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 1144;
                                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }
                            CHECK_OBJECT(var_y);
                            tmp_subscript_name_21 = var_y;
                            tmp_right_name_16 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_21, tmp_subscript_name_21);
                            Py_DECREF(tmp_subscribed_name_21);
                            if (tmp_right_name_16 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 1144;
                                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }
                            tmp_assign_source_80 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_16, tmp_right_name_16);
                            Py_DECREF(tmp_right_name_16);
                            if (tmp_assign_source_80 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 1144;
                                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }
                            {
                                PyObject *old = var_list_spb;
                                var_list_spb = tmp_assign_source_80;
                                Py_XDECREF(old);
                            }

                        }
                        goto branch_end_28;
                        branch_no_28:;
                        {
                            nuitka_bool tmp_condition_result_30;
                            PyObject *tmp_compexpr_left_24;
                            PyObject *tmp_compexpr_right_24;
                            PyObject *tmp_subscribed_name_22;
                            PyObject *tmp_subscript_name_22;
                            CHECK_OBJECT(par_res_list);
                            tmp_subscribed_name_22 = par_res_list;
                            CHECK_OBJECT(var_count);
                            tmp_subscript_name_22 = var_count;
                            tmp_compexpr_left_24 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_22, tmp_subscript_name_22);
                            if (tmp_compexpr_left_24 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 1145;
                                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }
                            tmp_compexpr_right_24 = const_int_pos_6;
                            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_INT(tmp_compexpr_left_24, tmp_compexpr_right_24);
                            Py_DECREF(tmp_compexpr_left_24);
                            if (tmp_res == -1) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 1145;
                                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                goto try_except_handler_11;
                            }
                            tmp_condition_result_30 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                            if (tmp_condition_result_30 == NUITKA_BOOL_TRUE) {
                                goto branch_yes_30;
                            } else {
                                goto branch_no_30;
                            }
                            branch_yes_30:;
                            {
                                nuitka_bool tmp_condition_result_31;
                                PyObject *tmp_operand_name_8;
                                if (var_start_miss == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_miss");
                                    exception_tb = NULL;

                                    exception_lineno = 1146;
                                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                    goto try_except_handler_11;
                                }

                                tmp_operand_name_8 = var_start_miss;
                                tmp_res = CHECK_IF_TRUE(tmp_operand_name_8);
                                if (tmp_res == -1) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 1146;
                                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                    goto try_except_handler_11;
                                }
                                tmp_condition_result_31 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                                if (tmp_condition_result_31 == NUITKA_BOOL_TRUE) {
                                    goto branch_yes_31;
                                } else {
                                    goto branch_no_31;
                                }
                                branch_yes_31:;
                                {
                                    PyObject *tmp_assign_source_81;
                                    PyObject *tmp_left_name_17;
                                    PyObject *tmp_right_name_17;
                                    if (var_list_miss == NULL) {

                                        exception_type = PyExc_UnboundLocalError;
                                        Py_INCREF(exception_type);
                                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_miss");
                                        exception_tb = NULL;

                                        exception_lineno = 1147;
                                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                        goto try_except_handler_11;
                                    }

                                    tmp_left_name_17 = var_list_miss;
                                    tmp_right_name_17 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                                    tmp_assign_source_81 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_17, tmp_right_name_17);
                                    if (tmp_assign_source_81 == NULL) {
                                        assert(ERROR_OCCURRED());

                                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                        exception_lineno = 1147;
                                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                        goto try_except_handler_11;
                                    }
                                    {
                                        PyObject *old = var_list_miss;
                                        var_list_miss = tmp_assign_source_81;
                                        Py_XDECREF(old);
                                    }

                                }
                                goto branch_end_31;
                                branch_no_31:;
                                {
                                    PyObject *tmp_assign_source_82;
                                    tmp_assign_source_82 = Py_False;
                                    {
                                        PyObject *old = var_start_miss;
                                        var_start_miss = tmp_assign_source_82;
                                        Py_INCREF(var_start_miss);
                                        Py_XDECREF(old);
                                    }

                                }
                                branch_end_31:;
                            }
                            {
                                PyObject *tmp_assign_source_83;
                                PyObject *tmp_left_name_18;
                                PyObject *tmp_right_name_18;
                                PyObject *tmp_subscribed_name_23;
                                PyObject *tmp_source_name_34;
                                PyObject *tmp_subscript_name_23;
                                if (var_list_miss == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_miss");
                                    exception_tb = NULL;

                                    exception_lineno = 1150;
                                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                    goto try_except_handler_11;
                                }

                                tmp_left_name_18 = var_list_miss;
                                CHECK_OBJECT(par_ui);
                                tmp_source_name_34 = par_ui;
                                tmp_subscribed_name_23 = LOOKUP_ATTRIBUTE(tmp_source_name_34, const_str_plain_devs_list);
                                if (tmp_subscribed_name_23 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 1150;
                                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                    goto try_except_handler_11;
                                }
                                CHECK_OBJECT(var_y);
                                tmp_subscript_name_23 = var_y;
                                tmp_right_name_18 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_23, tmp_subscript_name_23);
                                Py_DECREF(tmp_subscribed_name_23);
                                if (tmp_right_name_18 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 1150;
                                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                    goto try_except_handler_11;
                                }
                                tmp_assign_source_83 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_18, tmp_right_name_18);
                                Py_DECREF(tmp_right_name_18);
                                if (tmp_assign_source_83 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 1150;
                                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                    goto try_except_handler_11;
                                }
                                {
                                    PyObject *old = var_list_miss;
                                    var_list_miss = tmp_assign_source_83;
                                    Py_XDECREF(old);
                                }

                            }
                            goto branch_end_30;
                            branch_no_30:;
                            {
                                nuitka_bool tmp_condition_result_32;
                                PyObject *tmp_operand_name_9;
                                if (var_start_na == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start_na");
                                    exception_tb = NULL;

                                    exception_lineno = 1152;
                                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                    goto try_except_handler_11;
                                }

                                tmp_operand_name_9 = var_start_na;
                                tmp_res = CHECK_IF_TRUE(tmp_operand_name_9);
                                if (tmp_res == -1) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 1152;
                                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                    goto try_except_handler_11;
                                }
                                tmp_condition_result_32 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                                if (tmp_condition_result_32 == NUITKA_BOOL_TRUE) {
                                    goto branch_yes_32;
                                } else {
                                    goto branch_no_32;
                                }
                                branch_yes_32:;
                                {
                                    PyObject *tmp_assign_source_84;
                                    PyObject *tmp_left_name_19;
                                    PyObject *tmp_right_name_19;
                                    if (var_list_na == NULL) {

                                        exception_type = PyExc_UnboundLocalError;
                                        Py_INCREF(exception_type);
                                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_na");
                                        exception_tb = NULL;

                                        exception_lineno = 1153;
                                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                        goto try_except_handler_11;
                                    }

                                    tmp_left_name_19 = var_list_na;
                                    tmp_right_name_19 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                                    tmp_assign_source_84 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_19, tmp_right_name_19);
                                    if (tmp_assign_source_84 == NULL) {
                                        assert(ERROR_OCCURRED());

                                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                        exception_lineno = 1153;
                                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                        goto try_except_handler_11;
                                    }
                                    {
                                        PyObject *old = var_list_na;
                                        var_list_na = tmp_assign_source_84;
                                        Py_XDECREF(old);
                                    }

                                }
                                goto branch_end_32;
                                branch_no_32:;
                                {
                                    PyObject *tmp_assign_source_85;
                                    tmp_assign_source_85 = Py_False;
                                    {
                                        PyObject *old = var_start_na;
                                        var_start_na = tmp_assign_source_85;
                                        Py_INCREF(var_start_na);
                                        Py_XDECREF(old);
                                    }

                                }
                                branch_end_32:;
                            }
                            {
                                PyObject *tmp_assign_source_86;
                                PyObject *tmp_left_name_20;
                                PyObject *tmp_right_name_20;
                                PyObject *tmp_subscribed_name_24;
                                PyObject *tmp_source_name_35;
                                PyObject *tmp_subscript_name_24;
                                if (var_list_na == NULL) {

                                    exception_type = PyExc_UnboundLocalError;
                                    Py_INCREF(exception_type);
                                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_na");
                                    exception_tb = NULL;

                                    exception_lineno = 1156;
                                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                    goto try_except_handler_11;
                                }

                                tmp_left_name_20 = var_list_na;
                                CHECK_OBJECT(par_ui);
                                tmp_source_name_35 = par_ui;
                                tmp_subscribed_name_24 = LOOKUP_ATTRIBUTE(tmp_source_name_35, const_str_plain_devs_list);
                                if (tmp_subscribed_name_24 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 1156;
                                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                    goto try_except_handler_11;
                                }
                                CHECK_OBJECT(var_y);
                                tmp_subscript_name_24 = var_y;
                                tmp_right_name_20 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_24, tmp_subscript_name_24);
                                Py_DECREF(tmp_subscribed_name_24);
                                if (tmp_right_name_20 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 1156;
                                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                    goto try_except_handler_11;
                                }
                                tmp_assign_source_86 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_20, tmp_right_name_20);
                                Py_DECREF(tmp_right_name_20);
                                if (tmp_assign_source_86 == NULL) {
                                    assert(ERROR_OCCURRED());

                                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                    exception_lineno = 1156;
                                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                                    goto try_except_handler_11;
                                }
                                {
                                    PyObject *old = var_list_na;
                                    var_list_na = tmp_assign_source_86;
                                    Py_XDECREF(old);
                                }

                            }
                            branch_end_30:;
                        }
                        branch_end_28:;
                    }
                    branch_end_26:;
                }
                branch_end_21:;
            }
            branch_end_15:;
        }
        {
            PyObject *tmp_assign_source_87;
            PyObject *tmp_left_name_21;
            PyObject *tmp_right_name_21;
            CHECK_OBJECT(var_count);
            tmp_left_name_21 = var_count;
            tmp_right_name_21 = const_int_pos_1;
            tmp_assign_source_87 = BINARY_OPERATION_ADD_OBJECT_INT(tmp_left_name_21, tmp_right_name_21);
            assert(!(tmp_assign_source_87 == NULL));
            {
                PyObject *old = var_count;
                assert(old != NULL);
                var_count = tmp_assign_source_87;
                Py_DECREF(old);
            }

        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1089;
            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
            goto try_except_handler_11;
        }
        goto loop_start_7;
        loop_end_7:;
        goto try_end_11;
        // Exception handler code:
        try_except_handler_11:;
        exception_keeper_type_11 = exception_type;
        exception_keeper_value_11 = exception_value;
        exception_keeper_tb_11 = exception_tb;
        exception_keeper_lineno_11 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_7__iter_value);
        tmp_for_loop_7__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_7__for_iterator);
        Py_DECREF(tmp_for_loop_7__for_iterator);
        tmp_for_loop_7__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_11;
        exception_value = exception_keeper_value_11;
        exception_tb = exception_keeper_tb_11;
        exception_lineno = exception_keeper_lineno_11;

        goto frame_exception_exit_1;
        // End of try:
        try_end_11:;
        Py_XDECREF(tmp_for_loop_7__iter_value);
        tmp_for_loop_7__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_7__for_iterator);
        Py_DECREF(tmp_for_loop_7__for_iterator);
        tmp_for_loop_7__for_iterator = NULL;

        {
            nuitka_bool tmp_condition_result_33;
            PyObject *tmp_compexpr_left_25;
            PyObject *tmp_compexpr_right_25;
            if (var_list_miss == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_miss");
                exception_tb = NULL;

                exception_lineno = 1158;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_25 = var_list_miss;
            tmp_compexpr_right_25 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_25, tmp_compexpr_right_25);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1158;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_33 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_33 == NUITKA_BOOL_TRUE) {
                goto branch_yes_33;
            } else {
                goto branch_no_33;
            }
            branch_yes_33:;
            {
                PyObject *tmp_called_name_7;
                PyObject *tmp_source_name_36;
                PyObject *tmp_call_result_20;
                PyObject *tmp_args_element_name_14;
                PyObject *tmp_left_name_22;
                PyObject *tmp_right_name_22;
                CHECK_OBJECT(par_ui);
                tmp_source_name_36 = par_ui;
                tmp_called_name_7 = LOOKUP_ATTRIBUTE(tmp_source_name_36, const_str_plain_msg_err);
                if (tmp_called_name_7 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1159;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                if (var_list_miss == NULL) {
                    Py_DECREF(tmp_called_name_7);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_miss");
                    exception_tb = NULL;

                    exception_lineno = 1159;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_left_name_22 = var_list_miss;
                tmp_right_name_22 = const_str_digest_21cdd10f62cd6949a9d1866524676a91;
                tmp_args_element_name_14 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_22, tmp_right_name_22);
                if (tmp_args_element_name_14 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_7);

                    exception_lineno = 1159;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1159;
                tmp_call_result_20 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_7, tmp_args_element_name_14);
                Py_DECREF(tmp_called_name_7);
                Py_DECREF(tmp_args_element_name_14);
                if (tmp_call_result_20 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1159;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_20);
            }
            branch_no_33:;
        }
        {
            nuitka_bool tmp_condition_result_34;
            PyObject *tmp_compexpr_left_26;
            PyObject *tmp_compexpr_right_26;
            if (var_list_spb == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_spb");
                exception_tb = NULL;

                exception_lineno = 1160;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_26 = var_list_spb;
            tmp_compexpr_right_26 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_26, tmp_compexpr_right_26);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1160;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_34 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_34 == NUITKA_BOOL_TRUE) {
                goto branch_yes_34;
            } else {
                goto branch_no_34;
            }
            branch_yes_34:;
            {
                PyObject *tmp_called_name_8;
                PyObject *tmp_source_name_37;
                PyObject *tmp_call_result_21;
                PyObject *tmp_args_element_name_15;
                PyObject *tmp_left_name_23;
                PyObject *tmp_left_name_24;
                PyObject *tmp_right_name_23;
                PyObject *tmp_right_name_24;
                CHECK_OBJECT(par_ui);
                tmp_source_name_37 = par_ui;
                tmp_called_name_8 = LOOKUP_ATTRIBUTE(tmp_source_name_37, const_str_plain_msg_err);
                if (tmp_called_name_8 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1161;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_left_name_24 = const_str_digest_2c7100a85050fc19fdf6026752d133e3;
                if (var_list_spb == NULL) {
                    Py_DECREF(tmp_called_name_8);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_spb");
                    exception_tb = NULL;

                    exception_lineno = 1161;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_right_name_23 = var_list_spb;
                tmp_left_name_23 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_24, tmp_right_name_23);
                if (tmp_left_name_23 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_8);

                    exception_lineno = 1161;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_right_name_24 = const_str_digest_6f9d3b8c1c22c69a4d23112bae2b5acb;
                tmp_args_element_name_15 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_23, tmp_right_name_24);
                Py_DECREF(tmp_left_name_23);
                if (tmp_args_element_name_15 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_8);

                    exception_lineno = 1161;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1161;
                tmp_call_result_21 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_8, tmp_args_element_name_15);
                Py_DECREF(tmp_called_name_8);
                Py_DECREF(tmp_args_element_name_15);
                if (tmp_call_result_21 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1161;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_21);
            }
            branch_no_34:;
        }
        {
            nuitka_bool tmp_condition_result_35;
            PyObject *tmp_compexpr_left_27;
            PyObject *tmp_compexpr_right_27;
            if (var_list_na == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_na");
                exception_tb = NULL;

                exception_lineno = 1162;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_27 = var_list_na;
            tmp_compexpr_right_27 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_27, tmp_compexpr_right_27);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1162;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_35 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_35 == NUITKA_BOOL_TRUE) {
                goto branch_yes_35;
            } else {
                goto branch_no_35;
            }
            branch_yes_35:;
            {
                PyObject *tmp_called_name_9;
                PyObject *tmp_source_name_38;
                PyObject *tmp_call_result_22;
                PyObject *tmp_args_element_name_16;
                PyObject *tmp_left_name_25;
                PyObject *tmp_left_name_26;
                PyObject *tmp_right_name_25;
                PyObject *tmp_right_name_26;
                CHECK_OBJECT(par_ui);
                tmp_source_name_38 = par_ui;
                tmp_called_name_9 = LOOKUP_ATTRIBUTE(tmp_source_name_38, const_str_plain_msg_err);
                if (tmp_called_name_9 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1163;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_left_name_26 = const_str_digest_2c7100a85050fc19fdf6026752d133e3;
                if (var_list_na == NULL) {
                    Py_DECREF(tmp_called_name_9);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_na");
                    exception_tb = NULL;

                    exception_lineno = 1163;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_right_name_25 = var_list_na;
                tmp_left_name_25 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_26, tmp_right_name_25);
                if (tmp_left_name_25 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_9);

                    exception_lineno = 1163;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_right_name_26 = const_str_dot;
                tmp_args_element_name_16 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_25, tmp_right_name_26);
                Py_DECREF(tmp_left_name_25);
                if (tmp_args_element_name_16 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_9);

                    exception_lineno = 1163;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1163;
                tmp_call_result_22 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_9, tmp_args_element_name_16);
                Py_DECREF(tmp_called_name_9);
                Py_DECREF(tmp_args_element_name_16);
                if (tmp_call_result_22 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1163;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_22);
            }
            branch_no_35:;
        }
        {
            nuitka_bool tmp_condition_result_36;
            PyObject *tmp_compexpr_left_28;
            PyObject *tmp_compexpr_right_28;
            if (var_list_to == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_to");
                exception_tb = NULL;

                exception_lineno = 1165;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_28 = var_list_to;
            tmp_compexpr_right_28 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_28, tmp_compexpr_right_28);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1165;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_36 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_36 == NUITKA_BOOL_TRUE) {
                goto branch_yes_36;
            } else {
                goto branch_no_36;
            }
            branch_yes_36:;
            {
                PyObject *tmp_called_name_10;
                PyObject *tmp_source_name_39;
                PyObject *tmp_call_result_23;
                PyObject *tmp_args_element_name_17;
                PyObject *tmp_left_name_27;
                PyObject *tmp_left_name_28;
                PyObject *tmp_right_name_27;
                PyObject *tmp_right_name_28;
                CHECK_OBJECT(par_ui);
                tmp_source_name_39 = par_ui;
                tmp_called_name_10 = LOOKUP_ATTRIBUTE(tmp_source_name_39, const_str_plain_msg_err);
                if (tmp_called_name_10 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1166;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_left_name_28 = const_str_digest_b75d8e285183aa38c94d170a4b772c60;
                if (var_list_to == NULL) {
                    Py_DECREF(tmp_called_name_10);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_to");
                    exception_tb = NULL;

                    exception_lineno = 1166;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_right_name_27 = var_list_to;
                tmp_left_name_27 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_28, tmp_right_name_27);
                if (tmp_left_name_27 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_10);

                    exception_lineno = 1166;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_right_name_28 = const_str_dot;
                tmp_args_element_name_17 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_27, tmp_right_name_28);
                Py_DECREF(tmp_left_name_27);
                if (tmp_args_element_name_17 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_10);

                    exception_lineno = 1166;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1166;
                tmp_call_result_23 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_10, tmp_args_element_name_17);
                Py_DECREF(tmp_called_name_10);
                Py_DECREF(tmp_args_element_name_17);
                if (tmp_call_result_23 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1166;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_23);
            }
            branch_no_36:;
        }
        {
            nuitka_bool tmp_condition_result_37;
            PyObject *tmp_compexpr_left_29;
            PyObject *tmp_compexpr_right_29;
            if (var_list_f == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                exception_tb = NULL;

                exception_lineno = 1167;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_29 = var_list_f;
            tmp_compexpr_right_29 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_29, tmp_compexpr_right_29);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1167;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_37 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_37 == NUITKA_BOOL_TRUE) {
                goto branch_yes_37;
            } else {
                goto branch_no_37;
            }
            branch_yes_37:;
            {
                nuitka_bool tmp_condition_result_38;
                PyObject *tmp_compexpr_left_30;
                PyObject *tmp_compexpr_right_30;
                if (var_count_f == NULL) {

                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "count_f");
                    exception_tb = NULL;

                    exception_lineno = 1168;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_compexpr_left_30 = var_count_f;
                tmp_compexpr_right_30 = const_int_pos_1;
                tmp_res = RICH_COMPARE_BOOL_GT_OBJECT_INT(tmp_compexpr_left_30, tmp_compexpr_right_30);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1168;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_condition_result_38 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_38 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_38;
                } else {
                    goto branch_no_38;
                }
                branch_yes_38:;
                {
                    PyObject *tmp_called_name_11;
                    PyObject *tmp_source_name_40;
                    PyObject *tmp_call_result_24;
                    PyObject *tmp_args_element_name_18;
                    PyObject *tmp_left_name_29;
                    PyObject *tmp_left_name_30;
                    PyObject *tmp_right_name_29;
                    PyObject *tmp_right_name_30;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_40 = par_ui;
                    tmp_called_name_11 = LOOKUP_ATTRIBUTE(tmp_source_name_40, const_str_plain_msg_err);
                    if (tmp_called_name_11 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1169;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_left_name_30 = const_str_digest_2c7100a85050fc19fdf6026752d133e3;
                    if (var_list_f == NULL) {
                        Py_DECREF(tmp_called_name_11);
                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                        exception_tb = NULL;

                        exception_lineno = 1169;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_right_name_29 = var_list_f;
                    tmp_left_name_29 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_30, tmp_right_name_29);
                    if (tmp_left_name_29 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_11);

                        exception_lineno = 1169;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_30 = const_str_digest_fcb3f707055a45843f9f5f984a177a66;
                    tmp_args_element_name_18 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_29, tmp_right_name_30);
                    Py_DECREF(tmp_left_name_29);
                    if (tmp_args_element_name_18 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_11);

                        exception_lineno = 1169;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1169;
                    tmp_call_result_24 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_11, tmp_args_element_name_18);
                    Py_DECREF(tmp_called_name_11);
                    Py_DECREF(tmp_args_element_name_18);
                    if (tmp_call_result_24 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1169;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_24);
                }
                goto branch_end_38;
                branch_no_38:;
                {
                    PyObject *tmp_called_name_12;
                    PyObject *tmp_source_name_41;
                    PyObject *tmp_call_result_25;
                    PyObject *tmp_args_element_name_19;
                    PyObject *tmp_left_name_31;
                    PyObject *tmp_left_name_32;
                    PyObject *tmp_left_name_33;
                    PyObject *tmp_left_name_34;
                    PyObject *tmp_left_name_35;
                    PyObject *tmp_left_name_36;
                    PyObject *tmp_right_name_31;
                    PyObject *tmp_right_name_32;
                    PyObject *tmp_right_name_33;
                    PyObject *tmp_str_arg_1;
                    PyObject *tmp_subscribed_name_25;
                    PyObject *tmp_source_name_42;
                    PyObject *tmp_subscript_name_25;
                    PyObject *tmp_right_name_34;
                    PyObject *tmp_right_name_35;
                    PyObject *tmp_str_arg_2;
                    PyObject *tmp_subscribed_name_26;
                    PyObject *tmp_source_name_43;
                    PyObject *tmp_subscript_name_26;
                    PyObject *tmp_right_name_36;
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_41 = par_ui;
                    tmp_called_name_12 = LOOKUP_ATTRIBUTE(tmp_source_name_41, const_str_plain_msg_err);
                    if (tmp_called_name_12 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1171;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_left_name_36 = const_str_digest_2c7100a85050fc19fdf6026752d133e3;
                    if (var_list_f == NULL) {
                        Py_DECREF(tmp_called_name_12);
                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_f");
                        exception_tb = NULL;

                        exception_lineno = 1171;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_right_name_31 = var_list_f;
                    tmp_left_name_35 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_36, tmp_right_name_31);
                    if (tmp_left_name_35 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_12);

                        exception_lineno = 1171;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_32 = const_str_digest_2d5ab67f28a1f8ea7de7b4da8d17a7c2;
                    tmp_left_name_34 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_35, tmp_right_name_32);
                    Py_DECREF(tmp_left_name_35);
                    if (tmp_left_name_34 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_12);

                        exception_lineno = 1171;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_42 = par_ui;
                    tmp_subscribed_name_25 = LOOKUP_ATTRIBUTE(tmp_source_name_42, const_str_plain_admin_aol_list);
                    if (tmp_subscribed_name_25 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_12);
                        Py_DECREF(tmp_left_name_34);

                        exception_lineno = 1171;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    if (var_last_f == NULL) {
                        Py_DECREF(tmp_called_name_12);
                        Py_DECREF(tmp_left_name_34);
                        Py_DECREF(tmp_subscribed_name_25);
                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "last_f");
                        exception_tb = NULL;

                        exception_lineno = 1171;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_subscript_name_25 = var_last_f;
                    tmp_str_arg_1 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_25, tmp_subscript_name_25);
                    Py_DECREF(tmp_subscribed_name_25);
                    if (tmp_str_arg_1 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_12);
                        Py_DECREF(tmp_left_name_34);

                        exception_lineno = 1171;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_33 = PyObject_Str(tmp_str_arg_1);
                    Py_DECREF(tmp_str_arg_1);
                    if (tmp_right_name_33 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_12);
                        Py_DECREF(tmp_left_name_34);

                        exception_lineno = 1171;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_left_name_33 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_34, tmp_right_name_33);
                    Py_DECREF(tmp_left_name_34);
                    Py_DECREF(tmp_right_name_33);
                    if (tmp_left_name_33 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_12);

                        exception_lineno = 1171;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_34 = const_str_digest_557fe80a6c273179b39f6cacbcbc5fdc;
                    tmp_left_name_32 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_33, tmp_right_name_34);
                    Py_DECREF(tmp_left_name_33);
                    if (tmp_left_name_32 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_12);

                        exception_lineno = 1171;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    CHECK_OBJECT(par_ui);
                    tmp_source_name_43 = par_ui;
                    tmp_subscribed_name_26 = LOOKUP_ATTRIBUTE(tmp_source_name_43, const_str_plain_retrylimit_list);
                    if (tmp_subscribed_name_26 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_12);
                        Py_DECREF(tmp_left_name_32);

                        exception_lineno = 1171;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    if (var_last_f == NULL) {
                        Py_DECREF(tmp_called_name_12);
                        Py_DECREF(tmp_left_name_32);
                        Py_DECREF(tmp_subscribed_name_26);
                        exception_type = PyExc_UnboundLocalError;
                        Py_INCREF(exception_type);
                        exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "last_f");
                        exception_tb = NULL;

                        exception_lineno = 1171;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }

                    tmp_subscript_name_26 = var_last_f;
                    tmp_str_arg_2 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_26, tmp_subscript_name_26);
                    Py_DECREF(tmp_subscribed_name_26);
                    if (tmp_str_arg_2 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_12);
                        Py_DECREF(tmp_left_name_32);

                        exception_lineno = 1171;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_35 = PyObject_Str(tmp_str_arg_2);
                    Py_DECREF(tmp_str_arg_2);
                    if (tmp_right_name_35 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_12);
                        Py_DECREF(tmp_left_name_32);

                        exception_lineno = 1171;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_left_name_31 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_32, tmp_right_name_35);
                    Py_DECREF(tmp_left_name_32);
                    Py_DECREF(tmp_right_name_35);
                    if (tmp_left_name_31 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_12);

                        exception_lineno = 1171;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    tmp_right_name_36 = const_str_dot;
                    tmp_args_element_name_19 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_31, tmp_right_name_36);
                    Py_DECREF(tmp_left_name_31);
                    if (tmp_args_element_name_19 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        Py_DECREF(tmp_called_name_12);

                        exception_lineno = 1171;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1171;
                    tmp_call_result_25 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_12, tmp_args_element_name_19);
                    Py_DECREF(tmp_called_name_12);
                    Py_DECREF(tmp_args_element_name_19);
                    if (tmp_call_result_25 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1171;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto frame_exception_exit_1;
                    }
                    Py_DECREF(tmp_call_result_25);
                }
                branch_end_38:;
            }
            branch_no_37:;
        }
        {
            nuitka_bool tmp_condition_result_39;
            PyObject *tmp_compexpr_left_31;
            PyObject *tmp_compexpr_right_31;
            if (var_list_alo == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_alo");
                exception_tb = NULL;

                exception_lineno = 1172;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_31 = var_list_alo;
            tmp_compexpr_right_31 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_31, tmp_compexpr_right_31);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1172;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_39 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_39 == NUITKA_BOOL_TRUE) {
                goto branch_yes_39;
            } else {
                goto branch_no_39;
            }
            branch_yes_39:;
            {
                PyObject *tmp_called_name_13;
                PyObject *tmp_source_name_44;
                PyObject *tmp_call_result_26;
                PyObject *tmp_args_element_name_20;
                PyObject *tmp_left_name_37;
                PyObject *tmp_left_name_38;
                PyObject *tmp_right_name_37;
                PyObject *tmp_right_name_38;
                CHECK_OBJECT(par_ui);
                tmp_source_name_44 = par_ui;
                tmp_called_name_13 = LOOKUP_ATTRIBUTE(tmp_source_name_44, const_str_plain_msg_err);
                if (tmp_called_name_13 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1173;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_left_name_38 = const_str_digest_65e9196bd4c730b537e5cdf8fe311777;
                if (var_list_alo == NULL) {
                    Py_DECREF(tmp_called_name_13);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_alo");
                    exception_tb = NULL;

                    exception_lineno = 1173;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_right_name_37 = var_list_alo;
                tmp_left_name_37 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_38, tmp_right_name_37);
                if (tmp_left_name_37 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_13);

                    exception_lineno = 1173;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_right_name_38 = const_str_digest_8da2f7ce80b0ea01448ac4bbab6c01ae;
                tmp_args_element_name_20 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_37, tmp_right_name_38);
                Py_DECREF(tmp_left_name_37);
                if (tmp_args_element_name_20 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_13);

                    exception_lineno = 1173;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1173;
                tmp_call_result_26 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_13, tmp_args_element_name_20);
                Py_DECREF(tmp_called_name_13);
                Py_DECREF(tmp_args_element_name_20);
                if (tmp_call_result_26 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1173;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_26);
            }
            branch_no_39:;
        }
        {
            nuitka_bool tmp_condition_result_40;
            PyObject *tmp_compexpr_left_32;
            PyObject *tmp_compexpr_right_32;
            if (var_list_p == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p");
                exception_tb = NULL;

                exception_lineno = 1175;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_compexpr_left_32 = var_list_p;
            tmp_compexpr_right_32 = const_str_empty;
            tmp_res = RICH_COMPARE_BOOL_NOTEQ_OBJECT_OBJECT(tmp_compexpr_left_32, tmp_compexpr_right_32);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1175;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_condition_result_40 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_40 == NUITKA_BOOL_TRUE) {
                goto branch_yes_40;
            } else {
                goto branch_no_40;
            }
            branch_yes_40:;
            {
                nuitka_bool tmp_assign_source_88;
                tmp_assign_source_88 = NUITKA_BOOL_TRUE;
                var_any_success = tmp_assign_source_88;
            }
            {
                PyObject *tmp_called_name_14;
                PyObject *tmp_source_name_45;
                PyObject *tmp_call_result_27;
                PyObject *tmp_args_element_name_21;
                PyObject *tmp_left_name_39;
                PyObject *tmp_left_name_40;
                PyObject *tmp_right_name_39;
                PyObject *tmp_right_name_40;
                CHECK_OBJECT(par_ui);
                tmp_source_name_45 = par_ui;
                tmp_called_name_14 = LOOKUP_ATTRIBUTE(tmp_source_name_45, const_str_plain_msg_ok);
                if (tmp_called_name_14 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1177;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_left_name_40 = const_str_digest_aa7e9e6438114f65ac68a6e9c39689a4;
                if (var_list_p == NULL) {
                    Py_DECREF(tmp_called_name_14);
                    exception_type = PyExc_UnboundLocalError;
                    Py_INCREF(exception_type);
                    exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "list_p");
                    exception_tb = NULL;

                    exception_lineno = 1177;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_right_name_39 = var_list_p;
                tmp_left_name_39 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_40, tmp_right_name_39);
                if (tmp_left_name_39 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_14);

                    exception_lineno = 1177;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                tmp_right_name_40 = const_str_dot;
                tmp_args_element_name_21 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_39, tmp_right_name_40);
                Py_DECREF(tmp_left_name_39);
                if (tmp_args_element_name_21 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_14);

                    exception_lineno = 1177;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1177;
                tmp_call_result_27 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_14, tmp_args_element_name_21);
                Py_DECREF(tmp_called_name_14);
                Py_DECREF(tmp_args_element_name_21);
                if (tmp_call_result_27 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1177;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_27);
            }
            branch_no_40:;
        }
        {
            PyObject *tmp_called_instance_20;
            PyObject *tmp_call_result_28;
            PyObject *tmp_args_element_name_22;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_20 = par_ui;
            CHECK_OBJECT(par_ui);
            tmp_args_element_name_22 = par_ui;
            frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1178;
            {
                PyObject *call_args[] = {tmp_args_element_name_22};
                tmp_call_result_28 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_20, const_str_plain_revert_erase_prompt, call_args);
            }

            if (tmp_call_result_28 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1178;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_28);
        }
        goto branch_end_14;
        branch_no_14:;
        {
            nuitka_bool tmp_assign_source_89;
            tmp_assign_source_89 = NUITKA_BOOL_TRUE;
            var_any_success = tmp_assign_source_89;
        }
        {
            PyObject *tmp_assign_source_90;
            tmp_assign_source_90 = Py_True;
            assert(var_start == NULL);
            Py_INCREF(tmp_assign_source_90);
            var_start = tmp_assign_source_90;
        }
        {
            PyObject *tmp_assign_source_91;
            tmp_assign_source_91 = const_str_empty;
            assert(var_liststr == NULL);
            Py_INCREF(tmp_assign_source_91);
            var_liststr = tmp_assign_source_91;
        }
        {
            PyObject *tmp_assign_source_92;
            PyObject *tmp_iter_arg_9;
            CHECK_OBJECT(par_selected_list);
            tmp_iter_arg_9 = par_selected_list;
            tmp_assign_source_92 = MAKE_ITERATOR(tmp_iter_arg_9);
            if (tmp_assign_source_92 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1183;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_for_loop_9__for_iterator == NULL);
            tmp_for_loop_9__for_iterator = tmp_assign_source_92;
        }
        // Tried code:
        loop_start_10:;
        {
            PyObject *tmp_next_source_9;
            PyObject *tmp_assign_source_93;
            CHECK_OBJECT(tmp_for_loop_9__for_iterator);
            tmp_next_source_9 = tmp_for_loop_9__for_iterator;
            tmp_assign_source_93 = ITERATOR_NEXT(tmp_next_source_9);
            if (tmp_assign_source_93 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_10;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    exception_lineno = 1183;
                    goto try_except_handler_13;
                }
            }

            {
                PyObject *old = tmp_for_loop_9__iter_value;
                tmp_for_loop_9__iter_value = tmp_assign_source_93;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_94;
            CHECK_OBJECT(tmp_for_loop_9__iter_value);
            tmp_assign_source_94 = tmp_for_loop_9__iter_value;
            {
                PyObject *old = var_d;
                var_d = tmp_assign_source_94;
                Py_INCREF(var_d);
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assattr_name_5;
            PyObject *tmp_subscribed_name_27;
            PyObject *tmp_source_name_46;
            PyObject *tmp_subscript_name_27;
            PyObject *tmp_assattr_target_5;
            CHECK_OBJECT(par_ui);
            tmp_source_name_46 = par_ui;
            tmp_subscribed_name_27 = LOOKUP_ATTRIBUTE(tmp_source_name_46, const_str_plain_devs_list);
            if (tmp_subscribed_name_27 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1184;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_13;
            }
            CHECK_OBJECT(var_d);
            tmp_subscript_name_27 = var_d;
            tmp_assattr_name_5 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_27, tmp_subscript_name_27);
            Py_DECREF(tmp_subscribed_name_27);
            if (tmp_assattr_name_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1184;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_13;
            }
            CHECK_OBJECT(par_ui);
            tmp_assattr_target_5 = par_ui;
            tmp_result = SET_ATTRIBUTE(tmp_assattr_target_5, const_str_plain_devname, tmp_assattr_name_5);
            Py_DECREF(tmp_assattr_name_5);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1184;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_13;
            }
        }
        {
            PyObject *tmp_called_instance_21;
            PyObject *tmp_mvar_value_10;
            PyObject *tmp_call_result_29;
            PyObject *tmp_args_element_name_23;
            PyObject *tmp_args_element_name_24;
            PyObject *tmp_args_element_name_25;
            tmp_mvar_value_10 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_dialogs);

            if (unlikely(tmp_mvar_value_10 == NULL)) {
                tmp_mvar_value_10 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_dialogs);
            }

            if (tmp_mvar_value_10 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 418 ], 36, 0);
                exception_tb = NULL;

                exception_lineno = 1185;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_13;
            }

            tmp_called_instance_21 = tmp_mvar_value_10;
            tmp_args_element_name_23 = Py_None;
            CHECK_OBJECT(par_ui);
            tmp_args_element_name_24 = par_ui;
            tmp_args_element_name_25 = const_int_pos_1;
            frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1185;
            {
                PyObject *call_args[] = {tmp_args_element_name_23, tmp_args_element_name_24, tmp_args_element_name_25};
                tmp_call_result_29 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_21, const_str_plain_query, call_args);
            }

            if (tmp_call_result_29 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1185;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_13;
            }
            Py_DECREF(tmp_call_result_29);
        }
        {
            nuitka_bool tmp_condition_result_41;
            PyObject *tmp_operand_name_10;
            if (var_start == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "start");
                exception_tb = NULL;

                exception_lineno = 1186;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_13;
            }

            tmp_operand_name_10 = var_start;
            tmp_res = CHECK_IF_TRUE(tmp_operand_name_10);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1186;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_13;
            }
            tmp_condition_result_41 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_41 == NUITKA_BOOL_TRUE) {
                goto branch_yes_41;
            } else {
                goto branch_no_41;
            }
            branch_yes_41:;
            {
                PyObject *tmp_assign_source_95;
                PyObject *tmp_left_name_41;
                PyObject *tmp_right_name_41;
                CHECK_OBJECT(var_liststr);
                tmp_left_name_41 = var_liststr;
                tmp_right_name_41 = const_str_digest_db35ab94a03c3cbeb13cbe2a1d728b77;
                tmp_assign_source_95 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_41, tmp_right_name_41);
                if (tmp_assign_source_95 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1187;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
                {
                    PyObject *old = var_liststr;
                    assert(old != NULL);
                    var_liststr = tmp_assign_source_95;
                    Py_DECREF(old);
                }

            }
            goto branch_end_41;
            branch_no_41:;
            {
                PyObject *tmp_assign_source_96;
                tmp_assign_source_96 = Py_False;
                {
                    PyObject *old = var_start;
                    var_start = tmp_assign_source_96;
                    Py_INCREF(var_start);
                    Py_XDECREF(old);
                }

            }
            branch_end_41:;
        }
        {
            PyObject *tmp_assign_source_97;
            PyObject *tmp_left_name_42;
            PyObject *tmp_right_name_42;
            PyObject *tmp_subscribed_name_28;
            PyObject *tmp_source_name_47;
            PyObject *tmp_subscript_name_28;
            if (var_liststr == NULL) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "liststr");
                exception_tb = NULL;

                exception_lineno = 1190;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_13;
            }

            tmp_left_name_42 = var_liststr;
            CHECK_OBJECT(par_ui);
            tmp_source_name_47 = par_ui;
            tmp_subscribed_name_28 = LOOKUP_ATTRIBUTE(tmp_source_name_47, const_str_plain_devs_list);
            if (tmp_subscribed_name_28 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1190;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_13;
            }
            CHECK_OBJECT(var_d);
            tmp_subscript_name_28 = var_d;
            tmp_right_name_42 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_28, tmp_subscript_name_28);
            Py_DECREF(tmp_subscribed_name_28);
            if (tmp_right_name_42 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1190;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_13;
            }
            tmp_assign_source_97 = BINARY_OPERATION_ADD_OBJECT_OBJECT(tmp_left_name_42, tmp_right_name_42);
            Py_DECREF(tmp_right_name_42);
            if (tmp_assign_source_97 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1190;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_13;
            }
            {
                PyObject *old = var_liststr;
                var_liststr = tmp_assign_source_97;
                Py_XDECREF(old);
            }

        }
        {
            nuitka_bool tmp_condition_result_42;
            PyObject *tmp_compexpr_left_33;
            PyObject *tmp_compexpr_right_33;
            PyObject *tmp_source_name_48;
            CHECK_OBJECT(par_ui);
            tmp_source_name_48 = par_ui;
            tmp_compexpr_left_33 = LOOKUP_ATTRIBUTE(tmp_source_name_48, const_str_plain_DEV_OS);
            if (tmp_compexpr_left_33 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1191;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_13;
            }
            tmp_compexpr_right_33 = const_str_plain_Windows;
            tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_33, tmp_compexpr_right_33);
            Py_DECREF(tmp_compexpr_left_33);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1191;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_13;
            }
            tmp_condition_result_42 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_42 == NUITKA_BOOL_TRUE) {
                goto branch_yes_42;
            } else {
                goto branch_no_42;
            }
            branch_yes_42:;
            {
                PyObject *tmp_assign_source_98;
                PyObject *tmp_called_instance_22;
                PyObject *tmp_called_instance_23;
                PyObject *tmp_mvar_value_11;
                tmp_mvar_value_11 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_os);

                if (unlikely(tmp_mvar_value_11 == NULL)) {
                    tmp_mvar_value_11 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_os);
                }

                if (tmp_mvar_value_11 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 348 ], 31, 0);
                    exception_tb = NULL;

                    exception_lineno = 1192;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }

                tmp_called_instance_23 = tmp_mvar_value_11;
                frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1192;
                tmp_called_instance_22 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_23, const_str_plain_popen, &PyTuple_GET_ITEM(const_tuple_str_plain_mountvol_tuple, 0));

                if (tmp_called_instance_22 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1192;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
                frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1192;
                tmp_assign_source_98 = CALL_METHOD_NO_ARGS(tmp_called_instance_22, const_str_plain_read);
                Py_DECREF(tmp_called_instance_22);
                if (tmp_assign_source_98 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1192;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
                {
                    PyObject *old = var_txt;
                    var_txt = tmp_assign_source_98;
                    Py_XDECREF(old);
                }

            }
            {
                PyObject *tmp_assign_source_99;
                tmp_assign_source_99 = PyList_New(0);
                {
                    PyObject *old = var_del_entries;
                    var_del_entries = tmp_assign_source_99;
                    Py_XDECREF(old);
                }

            }
            {
                PyObject *tmp_assign_source_100;
                tmp_assign_source_100 = const_int_0;
                {
                    PyObject *old = var_idx;
                    var_idx = tmp_assign_source_100;
                    Py_INCREF(var_idx);
                    Py_XDECREF(old);
                }

            }
            {
                PyObject *tmp_assign_source_101;
                PyObject *tmp_iter_arg_10;
                PyObject *tmp_source_name_49;
                CHECK_OBJECT(par_ui);
                tmp_source_name_49 = par_ui;
                tmp_iter_arg_10 = LOOKUP_ATTRIBUTE(tmp_source_name_49, const_str_plain_mv_list);
                if (tmp_iter_arg_10 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1195;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
                tmp_assign_source_101 = MAKE_ITERATOR(tmp_iter_arg_10);
                Py_DECREF(tmp_iter_arg_10);
                if (tmp_assign_source_101 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1195;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
                {
                    PyObject *old = tmp_for_loop_10__for_iterator;
                    tmp_for_loop_10__for_iterator = tmp_assign_source_101;
                    Py_XDECREF(old);
                }

            }
            // Tried code:
            loop_start_11:;
            {
                PyObject *tmp_next_source_10;
                PyObject *tmp_assign_source_102;
                CHECK_OBJECT(tmp_for_loop_10__for_iterator);
                tmp_next_source_10 = tmp_for_loop_10__for_iterator;
                tmp_assign_source_102 = ITERATOR_NEXT(tmp_next_source_10);
                if (tmp_assign_source_102 == NULL) {
                    if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                        goto loop_end_11;
                    } else {

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        exception_lineno = 1195;
                        goto try_except_handler_14;
                    }
                }

                {
                    PyObject *old = tmp_for_loop_10__iter_value;
                    tmp_for_loop_10__iter_value = tmp_assign_source_102;
                    Py_XDECREF(old);
                }

            }
            {
                PyObject *tmp_assign_source_103;
                CHECK_OBJECT(tmp_for_loop_10__iter_value);
                tmp_assign_source_103 = tmp_for_loop_10__iter_value;
                {
                    PyObject *old = var_v;
                    var_v = tmp_assign_source_103;
                    Py_INCREF(var_v);
                    Py_XDECREF(old);
                }

            }
            {
                nuitka_bool tmp_condition_result_43;
                PyObject *tmp_compexpr_left_34;
                PyObject *tmp_compexpr_right_34;
                PyObject *tmp_subscribed_name_29;
                PyObject *tmp_subscript_name_29;
                PyObject *tmp_subscribed_name_30;
                PyObject *tmp_source_name_50;
                PyObject *tmp_subscript_name_30;
                CHECK_OBJECT(var_v);
                tmp_subscribed_name_29 = var_v;
                tmp_subscript_name_29 = const_int_pos_2;
                tmp_compexpr_left_34 = LOOKUP_SUBSCRIPT_CONST(tmp_subscribed_name_29, tmp_subscript_name_29, 2);
                if (tmp_compexpr_left_34 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1196;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_14;
                }
                CHECK_OBJECT(par_ui);
                tmp_source_name_50 = par_ui;
                tmp_subscribed_name_30 = LOOKUP_ATTRIBUTE(tmp_source_name_50, const_str_plain_sn_list);
                if (tmp_subscribed_name_30 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_compexpr_left_34);

                    exception_lineno = 1196;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_14;
                }
                CHECK_OBJECT(var_d);
                tmp_subscript_name_30 = var_d;
                tmp_compexpr_right_34 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_30, tmp_subscript_name_30);
                Py_DECREF(tmp_subscribed_name_30);
                if (tmp_compexpr_right_34 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_compexpr_left_34);

                    exception_lineno = 1196;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_14;
                }
                tmp_res = RICH_COMPARE_BOOL_EQ_OBJECT_OBJECT(tmp_compexpr_left_34, tmp_compexpr_right_34);
                Py_DECREF(tmp_compexpr_left_34);
                Py_DECREF(tmp_compexpr_right_34);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1196;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_14;
                }
                tmp_condition_result_43 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_43 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_43;
                } else {
                    goto branch_no_43;
                }
                branch_yes_43:;
                {
                    PyObject *tmp_called_instance_24;
                    PyObject *tmp_call_result_30;
                    PyObject *tmp_args_element_name_26;
                    CHECK_OBJECT(var_del_entries);
                    tmp_called_instance_24 = var_del_entries;
                    CHECK_OBJECT(var_idx);
                    tmp_args_element_name_26 = var_idx;
                    frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1197;
                    {
                        PyObject *call_args[] = {tmp_args_element_name_26};
                        tmp_call_result_30 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_24, const_str_plain_append, call_args);
                    }

                    if (tmp_call_result_30 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1197;
                        type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                        goto try_except_handler_14;
                    }
                    Py_DECREF(tmp_call_result_30);
                }
                branch_no_43:;
            }
            {
                PyObject *tmp_assign_source_104;
                PyObject *tmp_left_name_43;
                PyObject *tmp_right_name_43;
                CHECK_OBJECT(var_idx);
                tmp_left_name_43 = var_idx;
                tmp_right_name_43 = const_int_pos_1;
                tmp_assign_source_104 = BINARY_OPERATION_ADD_OBJECT_INT(tmp_left_name_43, tmp_right_name_43);
                assert(!(tmp_assign_source_104 == NULL));
                {
                    PyObject *old = var_idx;
                    assert(old != NULL);
                    var_idx = tmp_assign_source_104;
                    Py_DECREF(old);
                }

            }
            if (CONSIDER_THREADING() == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1195;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_14;
            }
            goto loop_start_11;
            loop_end_11:;
            goto try_end_12;
            // Exception handler code:
            try_except_handler_14:;
            exception_keeper_type_12 = exception_type;
            exception_keeper_value_12 = exception_value;
            exception_keeper_tb_12 = exception_tb;
            exception_keeper_lineno_12 = exception_lineno;
            exception_type = NULL;
            exception_value = NULL;
            exception_tb = NULL;
            exception_lineno = 0;

            Py_XDECREF(tmp_for_loop_10__iter_value);
            tmp_for_loop_10__iter_value = NULL;

            CHECK_OBJECT((PyObject *)tmp_for_loop_10__for_iterator);
            Py_DECREF(tmp_for_loop_10__for_iterator);
            tmp_for_loop_10__for_iterator = NULL;

            // Re-raise.
            exception_type = exception_keeper_type_12;
            exception_value = exception_keeper_value_12;
            exception_tb = exception_keeper_tb_12;
            exception_lineno = exception_keeper_lineno_12;

            goto try_except_handler_13;
            // End of try:
            try_end_12:;
            Py_XDECREF(tmp_for_loop_10__iter_value);
            tmp_for_loop_10__iter_value = NULL;

            CHECK_OBJECT((PyObject *)tmp_for_loop_10__for_iterator);
            Py_DECREF(tmp_for_loop_10__for_iterator);
            tmp_for_loop_10__for_iterator = NULL;

            {
                PyObject *tmp_assign_source_105;
                PyObject *tmp_left_name_44;
                PyObject *tmp_len_arg_5;
                PyObject *tmp_right_name_44;
                CHECK_OBJECT(var_del_entries);
                tmp_len_arg_5 = var_del_entries;
                tmp_left_name_44 = BUILTIN_LEN(tmp_len_arg_5);
                assert(!(tmp_left_name_44 == NULL));
                tmp_right_name_44 = const_int_pos_1;
                tmp_assign_source_105 = BINARY_OPERATION_SUB_OBJECT_INT(tmp_left_name_44, tmp_right_name_44);
                Py_DECREF(tmp_left_name_44);
                assert(!(tmp_assign_source_105 == NULL));
                {
                    PyObject *old = var_x;
                    var_x = tmp_assign_source_105;
                    Py_XDECREF(old);
                }

            }
            loop_start_12:;
            {
                nuitka_bool tmp_condition_result_44;
                PyObject *tmp_operand_name_11;
                PyObject *tmp_compexpr_left_35;
                PyObject *tmp_compexpr_right_35;
                CHECK_OBJECT(var_x);
                tmp_compexpr_left_35 = var_x;
                tmp_compexpr_right_35 = const_int_0;
                tmp_operand_name_11 = RICH_COMPARE_GTE_OBJECT_OBJECT(tmp_compexpr_left_35, tmp_compexpr_right_35);
                if (tmp_operand_name_11 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1200;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
                tmp_res = CHECK_IF_TRUE(tmp_operand_name_11);
                Py_DECREF(tmp_operand_name_11);
                if (tmp_res == -1) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1200;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
                tmp_condition_result_44 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
                if (tmp_condition_result_44 == NUITKA_BOOL_TRUE) {
                    goto branch_yes_44;
                } else {
                    goto branch_no_44;
                }
                branch_yes_44:;
                goto loop_end_12;
                branch_no_44:;
            }
            {
                PyObject *tmp_called_name_15;
                PyObject *tmp_source_name_51;
                PyObject *tmp_source_name_52;
                PyObject *tmp_call_result_31;
                PyObject *tmp_args_element_name_27;
                PyObject *tmp_subscribed_name_31;
                PyObject *tmp_subscript_name_31;
                CHECK_OBJECT(par_ui);
                tmp_source_name_52 = par_ui;
                tmp_source_name_51 = LOOKUP_ATTRIBUTE(tmp_source_name_52, const_str_plain_mv_list);
                if (tmp_source_name_51 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1201;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
                tmp_called_name_15 = LOOKUP_ATTRIBUTE(tmp_source_name_51, const_str_plain_pop);
                Py_DECREF(tmp_source_name_51);
                if (tmp_called_name_15 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1201;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
                CHECK_OBJECT(var_del_entries);
                tmp_subscribed_name_31 = var_del_entries;
                CHECK_OBJECT(var_x);
                tmp_subscript_name_31 = var_x;
                tmp_args_element_name_27 = LOOKUP_SUBSCRIPT(tmp_subscribed_name_31, tmp_subscript_name_31);
                if (tmp_args_element_name_27 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    Py_DECREF(tmp_called_name_15);

                    exception_lineno = 1201;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
                frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1201;
                tmp_call_result_31 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_15, tmp_args_element_name_27);
                Py_DECREF(tmp_called_name_15);
                Py_DECREF(tmp_args_element_name_27);
                if (tmp_call_result_31 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1201;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
                Py_DECREF(tmp_call_result_31);
            }
            {
                PyObject *tmp_assign_source_106;
                PyObject *tmp_left_name_45;
                PyObject *tmp_right_name_45;
                CHECK_OBJECT(var_x);
                tmp_left_name_45 = var_x;
                tmp_right_name_45 = const_int_pos_1;
                tmp_assign_source_106 = BINARY_OPERATION_SUB_OBJECT_INT(tmp_left_name_45, tmp_right_name_45);
                if (tmp_assign_source_106 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1202;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
                {
                    PyObject *old = var_x;
                    assert(old != NULL);
                    var_x = tmp_assign_source_106;
                    Py_DECREF(old);
                }

            }
            if (CONSIDER_THREADING() == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1200;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_13;
            }
            goto loop_start_12;
            loop_end_12:;
            branch_no_42:;
        }
        {
            PyObject *tmp_ass_subvalue_7;
            PyObject *tmp_ass_subscribed_7;
            PyObject *tmp_source_name_53;
            PyObject *tmp_ass_subscript_7;
            tmp_ass_subvalue_7 = const_str_plain_Unlocked;
            CHECK_OBJECT(par_ui);
            tmp_source_name_53 = par_ui;
            tmp_ass_subscribed_7 = LOOKUP_ATTRIBUTE(tmp_source_name_53, const_str_plain_lockstatus_list);
            if (tmp_ass_subscribed_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1203;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_13;
            }
            CHECK_OBJECT(var_d);
            tmp_ass_subscript_7 = var_d;
            tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_7, tmp_ass_subscript_7, tmp_ass_subvalue_7);
            Py_DECREF(tmp_ass_subscribed_7);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1203;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_13;
            }
        }
        {
            PyObject *tmp_ass_subvalue_8;
            PyObject *tmp_ass_subscribed_8;
            PyObject *tmp_source_name_54;
            PyObject *tmp_ass_subscript_8;
            tmp_ass_subvalue_8 = const_str_plain_No;
            CHECK_OBJECT(par_ui);
            tmp_source_name_54 = par_ui;
            tmp_ass_subscribed_8 = LOOKUP_ATTRIBUTE(tmp_source_name_54, const_str_plain_setupstatus_list);
            if (tmp_ass_subscribed_8 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1204;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_13;
            }
            CHECK_OBJECT(var_d);
            tmp_ass_subscript_8 = var_d;
            tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_8, tmp_ass_subscript_8, tmp_ass_subvalue_8);
            Py_DECREF(tmp_ass_subscribed_8);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1204;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_13;
            }
        }
        {
            PyObject *tmp_ass_subvalue_9;
            PyObject *tmp_ass_subscribed_9;
            PyObject *tmp_source_name_55;
            PyObject *tmp_ass_subscript_9;
            tmp_ass_subvalue_9 = const_str_digest_f9aa9f1d756280254529dbc306087548;
            CHECK_OBJECT(par_ui);
            tmp_source_name_55 = par_ui;
            tmp_ass_subscribed_9 = LOOKUP_ATTRIBUTE(tmp_source_name_55, const_str_plain_setupuser_list);
            if (tmp_ass_subscribed_9 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1205;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_13;
            }
            CHECK_OBJECT(var_d);
            tmp_ass_subscript_9 = var_d;
            tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_9, tmp_ass_subscript_9, tmp_ass_subvalue_9);
            Py_DECREF(tmp_ass_subscribed_9);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1205;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_13;
            }
        }
        {
            PyObject *tmp_ass_subvalue_10;
            PyObject *tmp_ass_subscribed_10;
            PyObject *tmp_source_name_56;
            PyObject *tmp_ass_subscript_10;
            tmp_ass_subvalue_10 = const_str_digest_f9aa9f1d756280254529dbc306087548;
            CHECK_OBJECT(par_ui);
            tmp_source_name_56 = par_ui;
            tmp_ass_subscribed_10 = LOOKUP_ATTRIBUTE(tmp_source_name_56, const_str_plain_pba_list);
            if (tmp_ass_subscribed_10 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1206;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_13;
            }
            CHECK_OBJECT(var_d);
            tmp_ass_subscript_10 = var_d;
            tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_10, tmp_ass_subscript_10, tmp_ass_subvalue_10);
            Py_DECREF(tmp_ass_subscribed_10);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1206;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_13;
            }
        }
        {
            nuitka_bool tmp_condition_result_45;
            PyObject *tmp_compexpr_left_36;
            PyObject *tmp_compexpr_right_36;
            PyObject *tmp_source_name_57;
            CHECK_OBJECT(var_d);
            tmp_compexpr_left_36 = var_d;
            CHECK_OBJECT(par_ui);
            tmp_source_name_57 = par_ui;
            tmp_compexpr_right_36 = LOOKUP_ATTRIBUTE(tmp_source_name_57, const_str_plain_mbr_setup_list);
            if (tmp_compexpr_right_36 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1207;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_13;
            }
            tmp_res = PySequence_Contains(tmp_compexpr_right_36, tmp_compexpr_left_36);
            Py_DECREF(tmp_compexpr_right_36);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1207;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_13;
            }
            tmp_condition_result_45 = (tmp_res == 1) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
            if (tmp_condition_result_45 == NUITKA_BOOL_TRUE) {
                goto branch_yes_45;
            } else {
                goto branch_no_45;
            }
            branch_yes_45:;
            {
                PyObject *tmp_called_instance_25;
                PyObject *tmp_source_name_58;
                PyObject *tmp_call_result_32;
                PyObject *tmp_args_element_name_28;
                CHECK_OBJECT(par_ui);
                tmp_source_name_58 = par_ui;
                tmp_called_instance_25 = LOOKUP_ATTRIBUTE(tmp_source_name_58, const_str_plain_mbr_setup_list);
                if (tmp_called_instance_25 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1208;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
                CHECK_OBJECT(var_d);
                tmp_args_element_name_28 = var_d;
                frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1208;
                {
                    PyObject *call_args[] = {tmp_args_element_name_28};
                    tmp_call_result_32 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_25, const_str_plain_remove, call_args);
                }

                Py_DECREF(tmp_called_instance_25);
                if (tmp_call_result_32 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1208;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto try_except_handler_13;
                }
                Py_DECREF(tmp_call_result_32);
            }
            branch_no_45:;
        }
        {
            PyObject *tmp_called_instance_26;
            PyObject *tmp_call_result_33;
            PyObject *tmp_args_element_name_29;
            PyObject *tmp_args_element_name_30;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_26 = par_ui;
            CHECK_OBJECT(var_d);
            tmp_args_element_name_29 = var_d;
            tmp_args_element_name_30 = LIST_COPY(const_list_int_pos_4_list);
            frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1209;
            {
                PyObject *call_args[] = {tmp_args_element_name_29, tmp_args_element_name_30};
                tmp_call_result_33 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_26, const_str_plain_updateDevs, call_args);
            }

            Py_DECREF(tmp_args_element_name_30);
            if (tmp_call_result_33 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1209;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto try_except_handler_13;
            }
            Py_DECREF(tmp_call_result_33);
        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1183;
            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
            goto try_except_handler_13;
        }
        goto loop_start_10;
        loop_end_10:;
        goto try_end_13;
        // Exception handler code:
        try_except_handler_13:;
        exception_keeper_type_13 = exception_type;
        exception_keeper_value_13 = exception_value;
        exception_keeper_tb_13 = exception_tb;
        exception_keeper_lineno_13 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(tmp_for_loop_9__iter_value);
        tmp_for_loop_9__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_9__for_iterator);
        Py_DECREF(tmp_for_loop_9__for_iterator);
        tmp_for_loop_9__for_iterator = NULL;

        // Re-raise.
        exception_type = exception_keeper_type_13;
        exception_value = exception_keeper_value_13;
        exception_tb = exception_keeper_tb_13;
        exception_lineno = exception_keeper_lineno_13;

        goto frame_exception_exit_1;
        // End of try:
        try_end_13:;
        Py_XDECREF(tmp_for_loop_9__iter_value);
        tmp_for_loop_9__iter_value = NULL;

        CHECK_OBJECT((PyObject *)tmp_for_loop_9__for_iterator);
        Py_DECREF(tmp_for_loop_9__for_iterator);
        tmp_for_loop_9__for_iterator = NULL;

        {
            PyObject *tmp_called_name_16;
            PyObject *tmp_source_name_59;
            PyObject *tmp_call_result_34;
            PyObject *tmp_args_element_name_31;
            PyObject *tmp_left_name_46;
            PyObject *tmp_left_name_47;
            PyObject *tmp_right_name_46;
            PyObject *tmp_right_name_47;
            CHECK_OBJECT(par_ui);
            tmp_source_name_59 = par_ui;
            tmp_called_name_16 = LOOKUP_ATTRIBUTE(tmp_source_name_59, const_str_plain_msg_ok);
            if (tmp_called_name_16 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1210;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_left_name_47 = const_str_digest_aa7e9e6438114f65ac68a6e9c39689a4;
            CHECK_OBJECT(var_liststr);
            tmp_right_name_46 = var_liststr;
            tmp_left_name_46 = BINARY_OPERATION_ADD_STR_OBJECT(tmp_left_name_47, tmp_right_name_46);
            if (tmp_left_name_46 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_16);

                exception_lineno = 1210;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            tmp_right_name_47 = const_str_dot;
            tmp_args_element_name_31 = BINARY_OPERATION_ADD_OBJECT_STR(tmp_left_name_46, tmp_right_name_47);
            Py_DECREF(tmp_left_name_46);
            if (tmp_args_element_name_31 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_name_16);

                exception_lineno = 1210;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1210;
            tmp_call_result_34 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_name_16, tmp_args_element_name_31);
            Py_DECREF(tmp_called_name_16);
            Py_DECREF(tmp_args_element_name_31);
            if (tmp_call_result_34 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1210;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_34);
        }
        {
            PyObject *tmp_called_instance_27;
            PyObject *tmp_call_result_35;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_27 = par_ui;
            frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1212;
            tmp_call_result_35 = CALL_METHOD_WITH_ARGS2(tmp_called_instance_27, const_str_plain_returnToMain, &PyTuple_GET_ITEM(const_tuple_none_false_tuple, 0));

            if (tmp_call_result_35 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1212;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_35);
        }
        branch_end_14:;
    }
    {
        PyObject *tmp_called_instance_28;
        PyObject *tmp_call_result_36;
        CHECK_OBJECT(par_ui);
        tmp_called_instance_28 = par_ui;
        frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1213;
        tmp_call_result_36 = CALL_METHOD_NO_ARGS(tmp_called_instance_28, const_str_plain_stop_spin);
        if (tmp_call_result_36 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1213;
            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_36);
    }
    {
        nuitka_bool tmp_condition_result_46;
        int tmp_truth_name_4;
        CHECK_OBJECT(par_rescan_needed);
        tmp_truth_name_4 = CHECK_IF_TRUE(par_rescan_needed);
        if (tmp_truth_name_4 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1214;
            type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_46 = tmp_truth_name_4 == 1 ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_46 == NUITKA_BOOL_TRUE) {
            goto branch_yes_46;
        } else {
            goto branch_no_46;
        }
        branch_yes_46:;
        {
            PyObject *tmp_called_instance_29;
            PyObject *tmp_call_result_37;
            CHECK_OBJECT(par_ui);
            tmp_called_instance_29 = par_ui;
            frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1215;
            tmp_call_result_37 = CALL_METHOD_WITH_ARGS1(tmp_called_instance_29, const_str_plain_msg_ok, &PyTuple_GET_ITEM(const_tuple_str_digest_ae3b8b33bbb4f0816fc34e114de2f069_tuple, 0));

            if (tmp_call_result_37 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1215;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_37);
        }
        {
            PyObject *tmp_called_instance_30;
            PyObject *tmp_mvar_value_12;
            PyObject *tmp_call_result_38;
            PyObject *tmp_args_element_name_32;
            PyObject *tmp_args_element_name_33;
            PyObject *tmp_args_element_name_34;
            tmp_mvar_value_12 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_runscan);

            if (unlikely(tmp_mvar_value_12 == NULL)) {
                tmp_mvar_value_12 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runscan);
            }

            if (tmp_mvar_value_12 == NULL) {

                exception_type = PyExc_NameError;
                Py_INCREF(exception_type);
                exception_value = UNSTREAM_STRING(&constant_bin[ 454 ], 36, 0);
                exception_tb = NULL;

                exception_lineno = 1216;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_called_instance_30 = tmp_mvar_value_12;
            tmp_args_element_name_32 = Py_None;
            CHECK_OBJECT(par_ui);
            tmp_args_element_name_33 = par_ui;
            tmp_args_element_name_34 = Py_True;
            frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1216;
            {
                PyObject *call_args[] = {tmp_args_element_name_32, tmp_args_element_name_33, tmp_args_element_name_34};
                tmp_call_result_38 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_30, const_str_plain_run_scan, call_args);
            }

            if (tmp_call_result_38 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1216;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }
            Py_DECREF(tmp_call_result_38);
        }
        goto branch_end_46;
        branch_no_46:;
        {
            nuitka_bool tmp_condition_result_47;
            if (var_any_success == NUITKA_BOOL_UNASSIGNED) {

                exception_type = PyExc_UnboundLocalError;
                Py_INCREF(exception_type);
                exception_value = PyString_FromFormat("local variable '%s' referenced before assignment", "any_success");
                exception_tb = NULL;

                exception_lineno = 1217;
                type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                goto frame_exception_exit_1;
            }

            tmp_condition_result_47 = var_any_success;
            if (tmp_condition_result_47 == NUITKA_BOOL_TRUE) {
                goto branch_yes_47;
            } else {
                goto branch_no_47;
            }
            branch_yes_47:;
            {
                PyObject *tmp_called_instance_31;
                PyObject *tmp_mvar_value_13;
                PyObject *tmp_call_result_39;
                PyObject *tmp_args_element_name_35;
                PyObject *tmp_args_element_name_36;
                PyObject *tmp_args_element_name_37;
                tmp_mvar_value_13 = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_runscan);

                if (unlikely(tmp_mvar_value_13 == NULL)) {
                    tmp_mvar_value_13 = GET_STRING_DICT_VALUE(dict_builtin, (Nuitka_StringObject *)const_str_plain_runscan);
                }

                if (tmp_mvar_value_13 == NULL) {

                    exception_type = PyExc_NameError;
                    Py_INCREF(exception_type);
                    exception_value = UNSTREAM_STRING(&constant_bin[ 454 ], 36, 0);
                    exception_tb = NULL;

                    exception_lineno = 1218;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }

                tmp_called_instance_31 = tmp_mvar_value_13;
                tmp_args_element_name_35 = Py_None;
                CHECK_OBJECT(par_ui);
                tmp_args_element_name_36 = par_ui;
                tmp_args_element_name_37 = Py_False;
                frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame.f_lineno = 1218;
                {
                    PyObject *call_args[] = {tmp_args_element_name_35, tmp_args_element_name_36, tmp_args_element_name_37};
                    tmp_call_result_39 = CALL_METHOD_WITH_ARGS3(tmp_called_instance_31, const_str_plain_run_scan, call_args);
                }

                if (tmp_call_result_39 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1218;
                    type_description_1 = "oooooooooooooooooooobooooooooooooooooooooooooooooo";
                    goto frame_exception_exit_1;
                }
                Py_DECREF(tmp_call_result_39);
            }
            branch_no_47:;
        }
        branch_end_46:;
    }

#if 1
    RESTORE_FRAME_EXCEPTION(frame_15906d6e09d71ad6e3647802cd6cf8d1);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_exception_exit_1:;

#if 1
    RESTORE_FRAME_EXCEPTION(frame_15906d6e09d71ad6e3647802cd6cf8d1);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_15906d6e09d71ad6e3647802cd6cf8d1, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_15906d6e09d71ad6e3647802cd6cf8d1->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_15906d6e09d71ad6e3647802cd6cf8d1, exception_lineno);
    }

    // Attachs locals to frame if any.
    Nuitka_Frame_AttachLocals(
        (struct Nuitka_FrameObject *)frame_15906d6e09d71ad6e3647802cd6cf8d1,
        type_description_1,
        par_ui,
        par_max_time,
        par_start_time,
        par_op_threads,
        par_res_list,
        par_e_to,
        par_selected_list,
        par_status_list,
        par_rescan_needed,
        par_val2,
        par_val3,
        par_val4,
        var_list_p,
        var_list_miss,
        var_list_alo,
        var_start_miss,
        var_list_f,
        var_start_alo,
        var_txt,
        var_start_na,
        (int)var_any_success,
        var_sel_idx,
        var_del_entries,
        var_res_sum,
        var_list_to,
        var_any_removed,
        var_elapsed_time,
        var_start_f,
        var_start,
        var_count_f,
        var_v,
        var_list_spb,
        var_start_to,
        var_op_thread,
        var_last_f,
        var_count,
        var_d,
        var_idx,
        var_f,
        var_i,
        var_start_spb,
        var_pipe,
        var_p,
        var_start_p,
        var_list_na,
        var_y,
        var_x,
        var_z,
        var_liststr,
        var_curr_time
    );


    // Release cached frame.
    if (frame_15906d6e09d71ad6e3647802cd6cf8d1 == cache_frame_15906d6e09d71ad6e3647802cd6cf8d1) {
        Py_DECREF(frame_15906d6e09d71ad6e3647802cd6cf8d1);
    }
    cache_frame_15906d6e09d71ad6e3647802cd6cf8d1 = NULL;

    assertFrameObject(frame_15906d6e09d71ad6e3647802cd6cf8d1);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    // tried codes exits in all cases
    NUITKA_CANNOT_GET_HERE(cleanop$$$function_7_revertErase_cleanup);
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    Py_XDECREF(var_list_p);
    var_list_p = NULL;

    Py_XDECREF(var_list_miss);
    var_list_miss = NULL;

    Py_XDECREF(var_list_alo);
    var_list_alo = NULL;

    Py_XDECREF(var_start_miss);
    var_start_miss = NULL;

    Py_XDECREF(var_list_f);
    var_list_f = NULL;

    Py_XDECREF(var_start_alo);
    var_start_alo = NULL;

    Py_XDECREF(var_txt);
    var_txt = NULL;

    Py_XDECREF(var_start_na);
    var_start_na = NULL;

    CHECK_OBJECT((PyObject *)var_sel_idx);
    Py_DECREF(var_sel_idx);
    var_sel_idx = NULL;

    Py_XDECREF(var_del_entries);
    var_del_entries = NULL;

    CHECK_OBJECT((PyObject *)var_res_sum);
    Py_DECREF(var_res_sum);
    var_res_sum = NULL;

    Py_XDECREF(var_list_to);
    var_list_to = NULL;

    Py_XDECREF(var_any_removed);
    var_any_removed = NULL;

    CHECK_OBJECT((PyObject *)var_elapsed_time);
    Py_DECREF(var_elapsed_time);
    var_elapsed_time = NULL;

    Py_XDECREF(var_start_f);
    var_start_f = NULL;

    Py_XDECREF(var_start);
    var_start = NULL;

    Py_XDECREF(var_count_f);
    var_count_f = NULL;

    Py_XDECREF(var_v);
    var_v = NULL;

    Py_XDECREF(var_list_spb);
    var_list_spb = NULL;

    Py_XDECREF(var_start_to);
    var_start_to = NULL;

    Py_XDECREF(var_op_thread);
    var_op_thread = NULL;

    Py_XDECREF(var_last_f);
    var_last_f = NULL;

    Py_XDECREF(var_count);
    var_count = NULL;

    Py_XDECREF(var_d);
    var_d = NULL;

    Py_XDECREF(var_idx);
    var_idx = NULL;

    Py_XDECREF(var_f);
    var_f = NULL;

    Py_XDECREF(var_i);
    var_i = NULL;

    Py_XDECREF(var_start_spb);
    var_start_spb = NULL;

    Py_XDECREF(var_pipe);
    var_pipe = NULL;

    Py_XDECREF(var_p);
    var_p = NULL;

    Py_XDECREF(var_start_p);
    var_start_p = NULL;

    Py_XDECREF(var_list_na);
    var_list_na = NULL;

    Py_XDECREF(var_y);
    var_y = NULL;

    Py_XDECREF(var_x);
    var_x = NULL;

    Py_XDECREF(var_z);
    var_z = NULL;

    Py_XDECREF(var_liststr);
    var_liststr = NULL;

    CHECK_OBJECT((PyObject *)var_curr_time);
    Py_DECREF(var_curr_time);
    var_curr_time = NULL;

    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_14 = exception_type;
    exception_keeper_value_14 = exception_value;
    exception_keeper_tb_14 = exception_tb;
    exception_keeper_lineno_14 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_list_p);
    var_list_p = NULL;

    Py_XDECREF(var_list_miss);
    var_list_miss = NULL;

    Py_XDECREF(var_list_alo);
    var_list_alo = NULL;

    Py_XDECREF(var_start_miss);
    var_start_miss = NULL;

    Py_XDECREF(var_list_f);
    var_list_f = NULL;

    Py_XDECREF(var_start_alo);
    var_start_alo = NULL;

    Py_XDECREF(var_txt);
    var_txt = NULL;

    Py_XDECREF(var_start_na);
    var_start_na = NULL;

    Py_XDECREF(var_sel_idx);
    var_sel_idx = NULL;

    Py_XDECREF(var_del_entries);
    var_del_entries = NULL;

    Py_XDECREF(var_res_sum);
    var_res_sum = NULL;

    Py_XDECREF(var_list_to);
    var_list_to = NULL;

    Py_XDECREF(var_any_removed);
    var_any_removed = NULL;

    Py_XDECREF(var_elapsed_time);
    var_elapsed_time = NULL;

    Py_XDECREF(var_start_f);
    var_start_f = NULL;

    Py_XDECREF(var_start);
    var_start = NULL;

    Py_XDECREF(var_count_f);
    var_count_f = NULL;

    Py_XDECREF(var_v);
    var_v = NULL;

    Py_XDECREF(var_list_spb);
    var_list_spb = NULL;

    Py_XDECREF(var_start_to);
    var_start_to = NULL;

    Py_XDECREF(var_op_thread);
    var_op_thread = NULL;

    Py_XDECREF(var_last_f);
    var_last_f = NULL;

    Py_XDECREF(var_count);
    var_count = NULL;

    Py_XDECREF(var_d);
    var_d = NULL;

    Py_XDECREF(var_idx);
    var_idx = NULL;

    Py_XDECREF(var_f);
    var_f = NULL;

    Py_XDECREF(var_i);
    var_i = NULL;

    Py_XDECREF(var_start_spb);
    var_start_spb = NULL;

    Py_XDECREF(var_pipe);
    var_pipe = NULL;

    Py_XDECREF(var_p);
    var_p = NULL;

    Py_XDECREF(var_start_p);
    var_start_p = NULL;

    Py_XDECREF(var_list_na);
    var_list_na = NULL;

    Py_XDECREF(var_y);
    var_y = NULL;

    Py_XDECREF(var_x);
    var_x = NULL;

    Py_XDECREF(var_z);
    var_z = NULL;

    Py_XDECREF(var_liststr);
    var_liststr = NULL;

    Py_XDECREF(var_curr_time);
    var_curr_time = NULL;

    // Re-raise.
    exception_type = exception_keeper_type_14;
    exception_value = exception_keeper_value_14;
    exception_tb = exception_keeper_tb_14;
    exception_lineno = exception_keeper_lineno_14;

    goto function_exception_exit;
    // End of try:

    // Return statement must have exited already.
    NUITKA_CANNOT_GET_HERE(cleanop$$$function_7_revertErase_cleanup);
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_res_list);
    Py_DECREF(par_res_list);
    CHECK_OBJECT(par_selected_list);
    Py_DECREF(par_selected_list);
    CHECK_OBJECT(par_val3);
    Py_DECREF(par_val3);
    CHECK_OBJECT(par_val2);
    Py_DECREF(par_val2);
    CHECK_OBJECT(par_op_threads);
    Py_DECREF(par_op_threads);
    CHECK_OBJECT(par_rescan_needed);
    Py_DECREF(par_rescan_needed);
    CHECK_OBJECT(par_val4);
    Py_DECREF(par_val4);
    CHECK_OBJECT(par_e_to);
    Py_DECREF(par_e_to);
    CHECK_OBJECT(par_start_time);
    Py_DECREF(par_start_time);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);
    CHECK_OBJECT(par_max_time);
    Py_DECREF(par_max_time);
    CHECK_OBJECT(par_status_list);
    Py_DECREF(par_status_list);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_res_list);
    Py_DECREF(par_res_list);
    CHECK_OBJECT(par_selected_list);
    Py_DECREF(par_selected_list);
    CHECK_OBJECT(par_val3);
    Py_DECREF(par_val3);
    CHECK_OBJECT(par_val2);
    Py_DECREF(par_val2);
    CHECK_OBJECT(par_op_threads);
    Py_DECREF(par_op_threads);
    CHECK_OBJECT(par_rescan_needed);
    Py_DECREF(par_rescan_needed);
    CHECK_OBJECT(par_val4);
    Py_DECREF(par_val4);
    CHECK_OBJECT(par_e_to);
    Py_DECREF(par_e_to);
    CHECK_OBJECT(par_start_time);
    Py_DECREF(par_start_time);
    CHECK_OBJECT(par_ui);
    Py_DECREF(par_ui);
    CHECK_OBJECT(par_max_time);
    Py_DECREF(par_max_time);
    CHECK_OBJECT(par_status_list);
    Py_DECREF(par_status_list);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}



static PyObject *MAKE_FUNCTION_cleanop$$$function_1_timeout_cleanup() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_cleanop$$$function_1_timeout_cleanup,
        const_str_plain_timeout_cleanup,
#if PYTHON_VERSION >= 300
        NULL,
#endif
        codeobj_a2fa7565dc252c4cd4924ec2306a4b6c,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_cleanop,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_cleanop$$$function_2_setupFull_cleanup() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_cleanop$$$function_2_setupFull_cleanup,
        const_str_plain_setupFull_cleanup,
#if PYTHON_VERSION >= 300
        NULL,
#endif
        codeobj_ef356f0a113d493889005f3e6f52fd41,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_cleanop,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_cleanop$$$function_3_pbaWrite_cleanup() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_cleanop$$$function_3_pbaWrite_cleanup,
        const_str_plain_pbaWrite_cleanup,
#if PYTHON_VERSION >= 300
        NULL,
#endif
        codeobj_18a0298f42cb14be9dbbaaa3575f4d00,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_cleanop,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_cleanop$$$function_4_changePW_cleanup() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_cleanop$$$function_4_changePW_cleanup,
        const_str_plain_changePW_cleanup,
#if PYTHON_VERSION >= 300
        NULL,
#endif
        codeobj_8c9c9b79392ff0b7698017d8497908ef,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_cleanop,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_cleanop$$$function_5_unlockPBA_cleanup() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_cleanop$$$function_5_unlockPBA_cleanup,
        const_str_plain_unlockPBA_cleanup,
#if PYTHON_VERSION >= 300
        NULL,
#endif
        codeobj_c55d069b0e2db5de0f9b503ec621c80b,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_cleanop,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_cleanop$$$function_6_revertKeep_cleanup() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_cleanop$$$function_6_revertKeep_cleanup,
        const_str_plain_revertKeep_cleanup,
#if PYTHON_VERSION >= 300
        NULL,
#endif
        codeobj_d0982cf3c09573f295fd67db087609f2,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_cleanop,
        NULL,
        0
    );

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_cleanop$$$function_7_revertErase_cleanup() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_cleanop$$$function_7_revertErase_cleanup,
        const_str_plain_revertErase_cleanup,
#if PYTHON_VERSION >= 300
        NULL,
#endif
        codeobj_15906d6e09d71ad6e3647802cd6cf8d1,
        NULL,
#if PYTHON_VERSION >= 300
        NULL,
        NULL,
#endif
        module_cleanop,
        NULL,
        0
    );

    return (PyObject *)result;
}



#if PYTHON_VERSION >= 300
static struct PyModuleDef mdef_cleanop =
{
    PyModuleDef_HEAD_INIT,
    NULL,                /* m_name, filled later */
    NULL,                /* m_doc */
    -1,                  /* m_size */
    NULL,                /* m_methods */
    NULL,                /* m_reload */
    NULL,                /* m_traverse */
    NULL,                /* m_clear */
    NULL,                /* m_free */
  };
#endif

extern PyObject *const_str_plain___compiled__;

extern PyObject *const_str_plain___package__;
extern PyObject *const_str_empty;

#if PYTHON_VERSION >= 300
extern PyObject *const_str_dot;
extern PyObject *const_str_plain___loader__;
#endif

#if PYTHON_VERSION >= 340
extern PyObject *const_str_plain___spec__;
extern PyObject *const_str_plain__initializing;
extern PyObject *const_str_plain_submodule_search_locations;
#endif

extern void _initCompiledCellType();
extern void _initCompiledGeneratorType();
extern void _initCompiledFunctionType();
extern void _initCompiledMethodType();
extern void _initCompiledFrameType();
#if PYTHON_VERSION >= 350
extern void _initCompiledCoroutineTypes();
#endif
#if PYTHON_VERSION >= 360
extern void _initCompiledAsyncgenTypes();
#endif

extern PyTypeObject Nuitka_Loader_Type;

#ifdef _NUITKA_PLUGIN_DILL_ENABLED
// Provide a way to create find a function via its C code and create it back
// in another process, useful for multiprocessing extensions like dill

function_impl_code functable_cleanop[] = {
    impl_cleanop$$$function_1_timeout_cleanup,
    impl_cleanop$$$function_2_setupFull_cleanup,
    impl_cleanop$$$function_3_pbaWrite_cleanup,
    impl_cleanop$$$function_4_changePW_cleanup,
    impl_cleanop$$$function_5_unlockPBA_cleanup,
    impl_cleanop$$$function_6_revertKeep_cleanup,
    impl_cleanop$$$function_7_revertErase_cleanup,
    NULL
};

static char const *_reduce_compiled_function_argnames[] = {
    "func",
    NULL
};

static PyObject *_reduce_compiled_function(PyObject *self, PyObject *args, PyObject *kwds) {
    PyObject *func;

    if (!PyArg_ParseTupleAndKeywords(args, kwds, "O:reduce_compiled_function", (char **)_reduce_compiled_function_argnames, &func, NULL)) {
        return NULL;
    }

    if (Nuitka_Function_Check(func) == false) {
        PyErr_Format(PyExc_TypeError, "not a compiled function");
        return NULL;
    }

    struct Nuitka_FunctionObject *function = (struct Nuitka_FunctionObject *)func;

    function_impl_code *current = functable_cleanop;
    int offset = 0;

    while (*current != NULL) {
        if (*current == function->m_c_code) {
            break;
        }

        current += 1;
        offset += 1;
    }

    if (*current == NULL) {
        PyErr_Format(PyExc_TypeError, "Cannot find compiled function in module.");
        return NULL;
    }

    PyObject *code_object_desc = PyTuple_New(6);
    PyTuple_SET_ITEM0(code_object_desc, 0, function->m_code_object->co_filename);
    PyTuple_SET_ITEM0(code_object_desc, 1, function->m_code_object->co_name);
    PyTuple_SET_ITEM(code_object_desc, 2, PyLong_FromLong(function->m_code_object->co_firstlineno));
    PyTuple_SET_ITEM0(code_object_desc, 3, function->m_code_object->co_varnames);
    PyTuple_SET_ITEM(code_object_desc, 4, PyLong_FromLong(function->m_code_object->co_argcount));
    PyTuple_SET_ITEM(code_object_desc, 5, PyLong_FromLong(function->m_code_object->co_flags));

    CHECK_OBJECT_DEEP(code_object_desc);

    PyObject *result = PyTuple_New(4);
    PyTuple_SET_ITEM(result, 0, PyLong_FromLong(offset));
    PyTuple_SET_ITEM(result, 1, code_object_desc);
    PyTuple_SET_ITEM0(result, 2, function->m_defaults);
    PyTuple_SET_ITEM0(result, 3, function->m_doc != NULL ? function->m_doc : Py_None);

    CHECK_OBJECT_DEEP(result);

    return result;
}

static PyMethodDef _method_def_reduce_compiled_function = {"reduce_compiled_function", (PyCFunction)_reduce_compiled_function,
                                                           METH_VARARGS | METH_KEYWORDS, NULL};

static char const *_create_compiled_function_argnames[] = {
    "func",
    "code_object_desc",
    "defaults",
    "doc",
    NULL
};


static PyObject *_create_compiled_function(PyObject *self, PyObject *args, PyObject *kwds) {
    CHECK_OBJECT_DEEP(args);

    PyObject *func;
    PyObject *code_object_desc;
    PyObject *defaults;
    PyObject *doc;

    if (!PyArg_ParseTupleAndKeywords(args, kwds, "OOOO:create_compiled_function", (char **)_create_compiled_function_argnames, &func, &code_object_desc, &defaults, &doc, NULL)) {
        return NULL;
    }

    int offset = PyLong_AsLong(func);

    if (offset == -1 && ERROR_OCCURRED()) {
        return NULL;
    }

    if (offset > sizeof(functable_cleanop) || offset < 0) {
        PyErr_Format(PyExc_TypeError, "Wrong offset for compiled function.");
        return NULL;
    }

    PyObject *filename = PyTuple_GET_ITEM(code_object_desc, 0);
    PyObject *function_name = PyTuple_GET_ITEM(code_object_desc, 1);
    PyObject *line = PyTuple_GET_ITEM(code_object_desc, 2);
    int line_int = PyLong_AsLong(line);
    assert(!ERROR_OCCURRED());

    PyObject *argnames = PyTuple_GET_ITEM(code_object_desc, 3);
    PyObject *arg_count = PyTuple_GET_ITEM(code_object_desc, 4);
    int arg_count_int = PyLong_AsLong(arg_count);
    assert(!ERROR_OCCURRED());
    PyObject *flags = PyTuple_GET_ITEM(code_object_desc, 5);
    int flags_int = PyLong_AsLong(flags);
    assert(!ERROR_OCCURRED());

    PyCodeObject *code_object = MAKE_CODEOBJECT(
        filename,
        line_int,
        flags_int,
        function_name,
        argnames,
        arg_count_int,
        0, // TODO: Missing kw_only_count
        0 // TODO: Missing pos_only_count
    );

    // TODO: More stuff needed for Python3, best to re-order arguments of MAKE_CODEOBJECT.
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        functable_cleanop[offset],
        code_object->co_name,
#if PYTHON_VERSION >= 300
        NULL, // TODO: Not transferring qualname yet
#endif
        code_object,
        defaults,
#if PYTHON_VERSION >= 300
        NULL, // kwdefaults are done on the outside currently
        NULL, // TODO: Not transferring annotations
#endif
        module_cleanop,
        doc,
        0
    );

    return (PyObject *)result;
}

static PyMethodDef _method_def_create_compiled_function = {
    "create_compiled_function",
    (PyCFunction)_create_compiled_function,
    METH_VARARGS | METH_KEYWORDS, NULL
};


#endif

// Internal entry point for module code.
PyObject *modulecode_cleanop(char const *module_full_name) {
#if defined(_NUITKA_EXE) || PYTHON_VERSION >= 300
    static bool _init_done = false;

    // Modules might be imported repeatedly, which is to be ignored.
    if (_init_done) {
        return module_cleanop;
    } else {
        _init_done = true;
    }
#endif

#ifdef _NUITKA_MODULE
    // In case of a stand alone extension module, need to call initialization
    // the init here because that's the first and only time we are going to get
    // called here.

    // May have to activate constants blob.
#if defined(_NUITKA_CONSTANTS_FROM_RESOURCE)
    loadConstantsResource();
#endif

    // Initialize the constant values used.
    _initBuiltinModule();
    createGlobalConstants();

    /* Initialize the compiled types of Nuitka. */
    _initCompiledCellType();
    _initCompiledGeneratorType();
    _initCompiledFunctionType();
    _initCompiledMethodType();
    _initCompiledFrameType();
#if PYTHON_VERSION >= 350
    _initCompiledCoroutineTypes();
#endif
#if PYTHON_VERSION >= 360
    _initCompiledAsyncgenTypes();
#endif

#if PYTHON_VERSION < 300
    _initSlotCompare();
#endif
#if PYTHON_VERSION >= 270
    _initSlotIternext();
#endif

    patchBuiltinModule();
    patchTypeComparison();

    // Enable meta path based loader if not already done.
#ifdef _NUITKA_TRACE
    PRINT_STRING("cleanop: Calling setupMetaPathBasedLoader().\n");
#endif
    setupMetaPathBasedLoader();

#if PYTHON_VERSION >= 300
    patchInspectModule();
#endif

#endif

    /* The constants only used by this module are created now. */
#ifdef _NUITKA_TRACE
    PRINT_STRING("cleanop: Calling createModuleConstants().\n");
#endif
    createModuleConstants();

    /* The code objects used by this module are created now. */
#ifdef _NUITKA_TRACE
    PRINT_STRING("cleanop: Calling createModuleCodeObjects().\n");
#endif
    createModuleCodeObjects();

    // PRINT_STRING("in initcleanop\n");

    // Create the module object first. There are no methods initially, all are
    // added dynamically in actual code only.  Also no "__doc__" is initially
    // set at this time, as it could not contain NUL characters this way, they
    // are instead set in early module code.  No "self" for modules, we have no
    // use for it.
#if PYTHON_VERSION < 300
    module_cleanop = Py_InitModule4(
        module_full_name,        // Module Name
        NULL,                    // No methods initially, all are added
                                 // dynamically in actual module code only.
        NULL,                    // No "__doc__" is initially set, as it could
                                 // not contain NUL this way, added early in
                                 // actual code.
        NULL,                    // No self for modules, we don't use it.
        PYTHON_API_VERSION
    );
#else
    mdef_cleanop.m_name = module_full_name;
    module_cleanop = PyModule_Create(&mdef_cleanop);
#endif

    moduledict_cleanop = MODULE_DICT(module_cleanop);

#ifdef _NUITKA_PLUGIN_DILL_ENABLED
    {
        PyObject *function_tables = PyObject_GetAttrString((PyObject *)builtin_module, "compiled_function_tables");
        if (function_tables == NULL)
        {
            DROP_ERROR_OCCURRED();
            function_tables = PyDict_New();
        }
        PyObject_SetAttrString((PyObject *)builtin_module, "compiled_function_tables", function_tables);
        PyObject *funcs = PyTuple_New(2);
        PyTuple_SetItem(funcs, 0, PyCFunction_New(&_method_def_reduce_compiled_function, NULL));
        PyTuple_SetItem(funcs, 1, PyCFunction_New(&_method_def_create_compiled_function, NULL));
        PyDict_SetItemString(function_tables, module_full_name, funcs);
    }
#endif

    // Set "__compiled__" to what version information we have.
    UPDATE_STRING_DICT0(
        moduledict_cleanop,
        (Nuitka_StringObject *)const_str_plain___compiled__,
        Nuitka_dunder_compiled_value
    );

    // Update "__package__" value to what it ought to be.
    {
#if 0
        UPDATE_STRING_DICT0(
            moduledict_cleanop,
            (Nuitka_StringObject *)const_str_plain___package__,
            const_str_empty
        );
#elif 0
        PyObject *module_name = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain___name__);

        UPDATE_STRING_DICT0(
            moduledict_cleanop,
            (Nuitka_StringObject *)const_str_plain___package__,
            module_name
        );
#else

#if PYTHON_VERSION < 300
        PyObject *module_name = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain___name__);
        char const *module_name_cstr = PyString_AS_STRING(module_name);

        char const *last_dot = strrchr(module_name_cstr, '.');

        if (last_dot != NULL)
        {
            UPDATE_STRING_DICT1(
                moduledict_cleanop,
                (Nuitka_StringObject *)const_str_plain___package__,
                PyString_FromStringAndSize(module_name_cstr, last_dot - module_name_cstr)
            );
        }
#else
        PyObject *module_name = GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain___name__);
        Py_ssize_t dot_index = PyUnicode_Find(module_name, const_str_dot, 0, PyUnicode_GetLength(module_name), -1);

        if (dot_index != -1)
        {
            UPDATE_STRING_DICT1(
                moduledict_cleanop,
                (Nuitka_StringObject *)const_str_plain___package__,
                PyUnicode_Substring(module_name, 0, dot_index)
            );
        }
#endif
#endif
    }

    CHECK_OBJECT(module_cleanop);

// Seems to work for Python2.7 out of the box, but for Python3, the module
// doesn't automatically enter "sys.modules", so do it manually.
#if PYTHON_VERSION >= 300
    {
        int r = PyDict_SetItemString(PyImport_GetModuleDict(), module_full_name, module_cleanop);
        assert(r != -1);
    }
#endif

    // For deep importing of a module we need to have "__builtins__", so we set
    // it ourselves in the same way than CPython does. Note: This must be done
    // before the frame object is allocated, or else it may fail.

    if (GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain___builtins__) == NULL)
    {
        PyObject *value = (PyObject *)builtin_module;

        // Check if main module, not a dict then but the module itself.
#if !defined(_NUITKA_EXE) || !0
        value = PyModule_GetDict(value);
#endif

        UPDATE_STRING_DICT0(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain___builtins__, value);
    }

#if PYTHON_VERSION >= 300
    UPDATE_STRING_DICT0(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain___loader__, (PyObject *)&Nuitka_Loader_Type);
#endif

#if PYTHON_VERSION >= 340
// Set the "__spec__" value

#if 0
    // Main modules just get "None" as spec.
    UPDATE_STRING_DICT0(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain___spec__, Py_None);
#else
    // Other modules get a "ModuleSpec" from the standard mechanism.
    {
        PyObject *bootstrap_module = PyImport_ImportModule("importlib._bootstrap");
        CHECK_OBJECT(bootstrap_module);
        PyObject *module_spec_class = PyObject_GetAttrString(bootstrap_module, "ModuleSpec");
        Py_DECREF(bootstrap_module);

        PyObject *args[] = {
            GET_STRING_DICT_VALUE(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain___name__),
            (PyObject *)&Nuitka_Loader_Type
        };

        PyObject *spec_value = CALL_FUNCTION_WITH_ARGS2(
            module_spec_class,
            args
        );
        Py_DECREF(module_spec_class);

        // We can assume this to never fail, or else we are in trouble anyway.
        CHECK_OBJECT(spec_value);

// For packages set the submodule search locations as well, even if to empty
// list, so investigating code will consider it a package.
#if 0
        SET_ATTRIBUTE(spec_value, const_str_plain_submodule_search_locations, PyList_New(0));
#endif

// Mark the execution in the "__spec__" value.
        SET_ATTRIBUTE(spec_value, const_str_plain__initializing, Py_True);

        UPDATE_STRING_DICT1(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain___spec__, spec_value);
    }
#endif
#endif

    // Temp variables if any
    struct Nuitka_FrameObject *frame_7641ea9ca847963ddcc73f763e1e5ec9;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;

    // Module code.
    {
        PyObject *tmp_assign_source_1;
        tmp_assign_source_1 = Py_None;
        UPDATE_STRING_DICT0(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain___doc__, tmp_assign_source_1);
    }
    {
        PyObject *tmp_assign_source_2;
        tmp_assign_source_2 = module_filename_obj;
        UPDATE_STRING_DICT0(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain___file__, tmp_assign_source_2);
    }
    // Frame without reuse.
    frame_7641ea9ca847963ddcc73f763e1e5ec9 = MAKE_MODULE_FRAME(codeobj_7641ea9ca847963ddcc73f763e1e5ec9, module_cleanop);

    // Push the new frame as the currently active one, and we should be exclusively
    // owning it.
    pushFrameStack(frame_7641ea9ca847963ddcc73f763e1e5ec9);
    assert(Py_REFCNT(frame_7641ea9ca847963ddcc73f763e1e5ec9) == 2);

    // Framed code:
    {
        PyObject *tmp_assign_source_3;
        PyObject *tmp_name_name_1;
        PyObject *tmp_globals_name_1;
        PyObject *tmp_locals_name_1;
        PyObject *tmp_fromlist_name_1;
        tmp_name_name_1 = const_str_plain_background;
        tmp_globals_name_1 = (PyObject *)moduledict_cleanop;
        tmp_locals_name_1 = Py_None;
        tmp_fromlist_name_1 = Py_None;
        frame_7641ea9ca847963ddcc73f763e1e5ec9->m_frame.f_lineno = 1;
        tmp_assign_source_3 = IMPORT_MODULE4(tmp_name_name_1, tmp_globals_name_1, tmp_locals_name_1, tmp_fromlist_name_1);
        if (tmp_assign_source_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_background, tmp_assign_source_3);
    }
    {
        PyObject *tmp_assign_source_4;
        PyObject *tmp_name_name_2;
        PyObject *tmp_globals_name_2;
        PyObject *tmp_locals_name_2;
        PyObject *tmp_fromlist_name_2;
        tmp_name_name_2 = const_str_plain_dialogs;
        tmp_globals_name_2 = (PyObject *)moduledict_cleanop;
        tmp_locals_name_2 = Py_None;
        tmp_fromlist_name_2 = Py_None;
        frame_7641ea9ca847963ddcc73f763e1e5ec9->m_frame.f_lineno = 2;
        tmp_assign_source_4 = IMPORT_MODULE4(tmp_name_name_2, tmp_globals_name_2, tmp_locals_name_2, tmp_fromlist_name_2);
        if (tmp_assign_source_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_dialogs, tmp_assign_source_4);
    }
    {
        PyObject *tmp_assign_source_5;
        PyObject *tmp_name_name_3;
        PyObject *tmp_globals_name_3;
        PyObject *tmp_locals_name_3;
        PyObject *tmp_fromlist_name_3;
        tmp_name_name_3 = const_str_plain_os;
        tmp_globals_name_3 = (PyObject *)moduledict_cleanop;
        tmp_locals_name_3 = Py_None;
        tmp_fromlist_name_3 = Py_None;
        frame_7641ea9ca847963ddcc73f763e1e5ec9->m_frame.f_lineno = 3;
        tmp_assign_source_5 = IMPORT_MODULE4(tmp_name_name_3, tmp_globals_name_3, tmp_locals_name_3, tmp_fromlist_name_3);
        if (tmp_assign_source_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_os, tmp_assign_source_5);
    }
    {
        PyObject *tmp_assign_source_6;
        PyObject *tmp_name_name_4;
        PyObject *tmp_globals_name_4;
        PyObject *tmp_locals_name_4;
        PyObject *tmp_fromlist_name_4;
        tmp_name_name_4 = const_str_plain_platform;
        tmp_globals_name_4 = (PyObject *)moduledict_cleanop;
        tmp_locals_name_4 = Py_None;
        tmp_fromlist_name_4 = Py_None;
        frame_7641ea9ca847963ddcc73f763e1e5ec9->m_frame.f_lineno = 4;
        tmp_assign_source_6 = IMPORT_MODULE4(tmp_name_name_4, tmp_globals_name_4, tmp_locals_name_4, tmp_fromlist_name_4);
        if (tmp_assign_source_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 4;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_platform, tmp_assign_source_6);
    }
    {
        PyObject *tmp_assign_source_7;
        PyObject *tmp_name_name_5;
        PyObject *tmp_globals_name_5;
        PyObject *tmp_locals_name_5;
        PyObject *tmp_fromlist_name_5;
        tmp_name_name_5 = const_str_plain_runop;
        tmp_globals_name_5 = (PyObject *)moduledict_cleanop;
        tmp_locals_name_5 = Py_None;
        tmp_fromlist_name_5 = Py_None;
        frame_7641ea9ca847963ddcc73f763e1e5ec9->m_frame.f_lineno = 5;
        tmp_assign_source_7 = IMPORT_MODULE4(tmp_name_name_5, tmp_globals_name_5, tmp_locals_name_5, tmp_fromlist_name_5);
        if (tmp_assign_source_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 5;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_runop, tmp_assign_source_7);
    }
    {
        PyObject *tmp_assign_source_8;
        PyObject *tmp_name_name_6;
        PyObject *tmp_globals_name_6;
        PyObject *tmp_locals_name_6;
        PyObject *tmp_fromlist_name_6;
        tmp_name_name_6 = const_str_plain_runscan;
        tmp_globals_name_6 = (PyObject *)moduledict_cleanop;
        tmp_locals_name_6 = Py_None;
        tmp_fromlist_name_6 = Py_None;
        frame_7641ea9ca847963ddcc73f763e1e5ec9->m_frame.f_lineno = 6;
        tmp_assign_source_8 = IMPORT_MODULE4(tmp_name_name_6, tmp_globals_name_6, tmp_locals_name_6, tmp_fromlist_name_6);
        if (tmp_assign_source_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 6;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_runscan, tmp_assign_source_8);
    }
    {
        PyObject *tmp_assign_source_9;
        PyObject *tmp_name_name_7;
        PyObject *tmp_globals_name_7;
        PyObject *tmp_locals_name_7;
        PyObject *tmp_fromlist_name_7;
        tmp_name_name_7 = const_str_plain_subprocess;
        tmp_globals_name_7 = (PyObject *)moduledict_cleanop;
        tmp_locals_name_7 = Py_None;
        tmp_fromlist_name_7 = Py_None;
        frame_7641ea9ca847963ddcc73f763e1e5ec9->m_frame.f_lineno = 7;
        tmp_assign_source_9 = IMPORT_MODULE4(tmp_name_name_7, tmp_globals_name_7, tmp_locals_name_7, tmp_fromlist_name_7);
        if (tmp_assign_source_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 7;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_subprocess, tmp_assign_source_9);
    }

    // Restore frame exception if necessary.
#if 0
    RESTORE_FRAME_EXCEPTION(frame_7641ea9ca847963ddcc73f763e1e5ec9);
#endif
    popFrameStack();

    assertFrameObject(frame_7641ea9ca847963ddcc73f763e1e5ec9);

    goto frame_no_exception_1;

    frame_exception_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_7641ea9ca847963ddcc73f763e1e5ec9);
#endif

    if ( exception_tb == NULL )
    {
        exception_tb = MAKE_TRACEBACK(frame_7641ea9ca847963ddcc73f763e1e5ec9, exception_lineno);
    }
    else if (exception_tb->tb_frame != &frame_7641ea9ca847963ddcc73f763e1e5ec9->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_7641ea9ca847963ddcc73f763e1e5ec9, exception_lineno);
    }

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto module_exception_exit;

    frame_no_exception_1:;
    {
        PyObject *tmp_assign_source_10;
        PyObject *tmp_name_name_8;
        PyObject *tmp_globals_name_8;
        PyObject *tmp_locals_name_8;
        PyObject *tmp_fromlist_name_8;
        tmp_name_name_8 = const_str_plain_time;
        tmp_globals_name_8 = (PyObject *)moduledict_cleanop;
        tmp_locals_name_8 = Py_None;
        tmp_fromlist_name_8 = Py_None;
        tmp_assign_source_10 = IMPORT_MODULE4(tmp_name_name_8, tmp_globals_name_8, tmp_locals_name_8, tmp_fromlist_name_8);
        assert(!(tmp_assign_source_10 == NULL));
        UPDATE_STRING_DICT1(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_time, tmp_assign_source_10);
    }
    {
        PyObject *tmp_assign_source_11;
        tmp_assign_source_11 = MAKE_FUNCTION_cleanop$$$function_1_timeout_cleanup();



        UPDATE_STRING_DICT1(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_timeout_cleanup, tmp_assign_source_11);
    }
    {
        PyObject *tmp_assign_source_12;
        tmp_assign_source_12 = MAKE_FUNCTION_cleanop$$$function_2_setupFull_cleanup();



        UPDATE_STRING_DICT1(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_setupFull_cleanup, tmp_assign_source_12);
    }
    {
        PyObject *tmp_assign_source_13;
        tmp_assign_source_13 = MAKE_FUNCTION_cleanop$$$function_3_pbaWrite_cleanup();



        UPDATE_STRING_DICT1(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_pbaWrite_cleanup, tmp_assign_source_13);
    }
    {
        PyObject *tmp_assign_source_14;
        tmp_assign_source_14 = MAKE_FUNCTION_cleanop$$$function_4_changePW_cleanup();



        UPDATE_STRING_DICT1(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_changePW_cleanup, tmp_assign_source_14);
    }
    {
        PyObject *tmp_assign_source_15;
        tmp_assign_source_15 = MAKE_FUNCTION_cleanop$$$function_5_unlockPBA_cleanup();



        UPDATE_STRING_DICT1(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_unlockPBA_cleanup, tmp_assign_source_15);
    }
    {
        PyObject *tmp_assign_source_16;
        tmp_assign_source_16 = MAKE_FUNCTION_cleanop$$$function_6_revertKeep_cleanup();



        UPDATE_STRING_DICT1(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_revertKeep_cleanup, tmp_assign_source_16);
    }
    {
        PyObject *tmp_assign_source_17;
        tmp_assign_source_17 = MAKE_FUNCTION_cleanop$$$function_7_revertErase_cleanup();



        UPDATE_STRING_DICT1(moduledict_cleanop, (Nuitka_StringObject *)const_str_plain_revertErase_cleanup, tmp_assign_source_17);
    }

    return module_cleanop;
    module_exception_exit:
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);
    return NULL;
}
