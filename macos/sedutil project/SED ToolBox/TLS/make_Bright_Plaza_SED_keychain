#!/bin/bash 
# echo $0 $@
# set -xv

# Source from the same directory as this script
cur=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
. "${cur}/Bright_Plaza_customizations.sh"


function save_keychain_password_in_system_keychain_item {
    KEYCHAIN_PASSWORD_ACCOUNT="${KEYCHAIN_NAME}"
    sudo security add-generic-password \
         -l "${KEYCHAIN_PASSWORD_LABEL}" \
         -a "${KEYCHAIN_PASSWORD_ACCOUNT}" \
         -s "${KEYCHAIN_PASSWORD_SERVICE}" \
         -w "${KEYCHAIN_PASSWORD}" \
         -T "${TLSTOOL_PATH}" \
         -T "${SECURITY_PATH}" \
         -T "${DAEMON_PATH}" \
         -T "${SEDDAEMONTEST_PATH}" \
         -T "${SEDPREFERENCESTEST_PATH}" \
         -T "${SEDACCESS_PATH}" \
         -T "${SYSTEM_PREFERENCES_PATH}" \
         -T "${KEYCHAIN_ACCESS_PATH}" \
         "${SYSTEM_KEYCHAIN_PATH}"
}

function generate_keychain_password_if_necessary {
    KEYCHAIN_PASSWORD="$( read_keychain_password_from_system_keychain )"
    if [ -z "${KEYCHAIN_PASSWORD}" ]
    then
        KEYCHAIN_PASSWORD="$( generate_password )"     || fail "generating keychain password"                57
        save_keychain_password_in_system_keychain_item  || fail "saving keychain password in system keychain" 58
    fi
}


function create_keychain {
    sudo security create-keychain -p "${KEYCHAIN_PASSWORD}" "${KEYCHAIN_PATH}"
}

function keychain_exists {
    [ -f "${KEYCHAIN_PATH}" ]
}

function create_keychain_if_necessary {
    if keychain_exists
    then
        unlock_keychain && return
        delete_keychain || fail "deleting old ${KEYCHAIN_NAME} keychain" 59
    fi
    create_keychain || fail "creating ${KEYCHAIN_NAME} keychain"         59
}

function main {
    generate_keychain_password_if_necessary
    create_keychain_if_necessary
}

main
