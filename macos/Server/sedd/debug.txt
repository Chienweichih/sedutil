
2022-12-24 14:29:58.983902-0500 sedd[2173:40947] socketNativeHandle={length = 4, bytes = 0x0f000000}
2022-12-24 14:29:58.983987-0500 sedd[2173:40947] sockfd=15
2022-12-24 14:29:58.984089-0500 sedd[2173:40947] Connection::stream:handleEvent: -- Mac mini x86 inputStream=<__NSCFInputStream: 0x60000300c090> (NSStreamStatusOpen) on socket 15
2022-12-24 14:29:58.984161-0500 sedd[2173:40947] Connection::stream:handleEvent: -- NSStreamEventHasBytesAvailable
2022-12-24 14:29:58.984358-0500 sedd[2173:40947] Connection::stream:handleEvent: -- Read 34 bytes -- self.inputBuffer:
{length = 34, bytes = 0x756e6c6b 20353030 30433530 30394239 ... 776f7264 20300d0a }
2022-12-24 14:29:58.984436-0500 sedd[2173:40947] DaemonClientController beginDevicesChangingWithTag:(null)
2022-12-24 14:29:58.984477-0500 sedd[2173:40947] StorageDeviceManager beginDevicesChangingWithTag:(null)
OpenUserClient: error -- IOServiceOpen returned 0x10000003
2022-12-24 14:29:59.036138-0500 sedd[2173:40947] TPerUserClient::dealloc closing client 0x0000000000000000
2022-12-24 14:29:59.036514-0500 sedd[2173:40947] disk2 has 0 open partitions:
2022-12-24 14:29:59.036587-0500 sedd[2173:40947] unmountAndRemountTPer - before unmountDrive, drive = disk2, continuation = 0x0x7ff7bfef9c20
2022-12-24 14:29:59.036607-0500 sedd[2173:40947] In continuation:
2022-12-24 14:29:59.036655-0500 sedd[2173:40947] bsdName=disk2
2022-12-24 14:29:59.036686-0500 sedd[2173:40947] driver=(null) driver.object=0
2022-12-24 14:29:59.036700-0500 sedd[2173:40947] connection=(null) connection.object=0
2022-12-24 14:29:59.036714-0500 sedd[2173:40947] partitions=(null)
Entering DtaDev::LockingEnabled1
Entering DtaDev::Locked0
Entering DtaDev::MBRENabled1
Entering DtaDev::MBRDone0
Entering DtaDevOpal::setMBRDone disk2
Entering DtaDevOpal::setLockingSPvalue disk2
Creating DtaSsession()
Entering DtaSession::startSession OPl_UID
Entering DtaSession::startSession vector
Creating DtaCommand()
Creating  DtaResponse()
Entering DtaCommand::reset(OPAL_UID, OPAL_METHOD)
Entering DtaCommand::reset()
Entering DtaCommand::addToken(OPAL_UID)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(uint64_t)
Entering DtaCommand::addToken(OPAL_UID)
Entering DtaCommand::addToken(OPAL_TINY_ATOM)
Entering DtaDev::isEprise 0
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(OPAL_TINY_ATOM)
 Entered DtaHashPwd
 Entered DtaHashPassword
 Exited DtaHashPassword
password :
70617373776F7264
202020202020202020202020573350524E4B564E
salt as string =            W3PRNKVN
Hashed password size = 34 ; hashed password =D020DA554DBF3C2B7E12A4BAC21AC585524EC51D04F464555B6D1AEAF1A234A67F49
Entering addToken(vector<uint8_t>)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(OPAL_TINY_ATOM)
Entering addToken(vector<uint8_t>)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaDev::isEprise 0
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::complete(uint8_t EOD)
Entering DtaSession::sendCommand()
Entering DtaCommand::setHSN()
Entering DtaCommand::setTSN()
Entering DtaCommand::setcomID()
Entering DtaDevOpal::exec disk2

Dumping command buffer
Entering DtaDevOpal::exec sendCmd(IF_SEND, IO_BUFFER_LENGTH)
Entering DtaDevMacOSUSB::sendCmd
Security Send Command
Entering DtaDevMacOSUSB::sendCmd
Security Receive Command
Entering DtaDevMacOSUSB::sendCmd
Security Receive Command
Entering DtaDevMacOSUSB::sendCmd
Security Receive Command
Entering DtaDevMacOSUSB::sendCmd
Security Receive Command
Entering DtaDevMacOSUSB::sendCmd
Security Receive Command
Entering DtaDevMacOSUSB::sendCmd
Security Receive Command

Dumping reply buffer
Entering  DtaResponse::init
Entering  DtaResponse::tokenIs
Entering  DtaResponse::tokenIs
Entering  DtaResponse::tokenIs
Entering  DtaResponse::getTokenCount()
Entering  DtaResponse::tokenIs
Entering  DtaResponse::getTokenCount()
Entering  DtaResponse::tokenIs
Entering  DtaResponse::getTokenCount()
Entering  DtaResponse::getUint8
Entering  DtaResponse::getUint64
Entering  DtaResponse::getTokenCount()
Entering  DtaResponse::getUint8
Entering  DtaResponse::getUint64
Entering  DtaResponse::getUint32
Entering  DtaResponse::getUint64
Entering  DtaResponse::getUint32
Entering  DtaResponse::getUint64
Entering  DtaResponse::getUint32
Entering  DtaResponse::getUint64
Entering  DtaResponse::getUint32
Entering  DtaResponse::getUint64
Entering  DtaResponse::getUint32
Entering  DtaResponse::getUint64
Entering  DtaResponse::getUint32
Entering  DtaResponse::getUint64
Entering  DtaResponse::getUint32
Entering  DtaResponse::getUint64
Entering  DtaResponse::getUint32
Entering  DtaResponse::getUint64
Destroying DtaCommand
Entering DtaDev::isEprise 0
Destroying DtaResponse
Entering DtaDevOpal::setTabledisk2
Creating DtaCommand()
Entering DtaCommand::reset(OPAL_UID, OPAL_METHOD)
Entering DtaCommand::reset()
Entering DtaCommand::addToken(OPAL_UID)
Entering DtaCommand::changeInvokingUid()
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering addToken(vector<uint8_t>)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::complete(uint8_t EOD)
Entering DtaSession::sendCommand()
Entering DtaCommand::setHSN()
Entering DtaCommand::setTSN()
Entering DtaCommand::setcomID()
Entering DtaDevOpal::exec disk2

Dumping command buffer
Entering DtaDevOpal::exec sendCmd(IF_SEND, IO_BUFFER_LENGTH)
Entering DtaDevMacOSUSB::sendCmd
Security Send Command
Entering DtaDevMacOSUSB::sendCmd
Security Receive Command

Dumping reply buffer
Entering  DtaResponse::init
Entering  DtaResponse::tokenIs
Entering  DtaResponse::tokenIs
Entering  DtaResponse::tokenIs
Entering  DtaResponse::getTokenCount()
Entering  DtaResponse::tokenIs
Entering  DtaResponse::getTokenCount()
Entering  DtaResponse::tokenIs
Entering  DtaResponse::getTokenCount()
Entering  DtaResponse::getUint8
Entering  DtaResponse::getUint64
Entering  DtaResponse::getTokenCount()
Entering  DtaResponse::getUint8
Entering  DtaResponse::getUint64
Destroying DtaCommand
Leaving DtaDevOpal::setTable disk2
Destroying DtaSession
Creating DtaCommand()
Creating  DtaResponse()
Entering DtaCommand::reset()
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::complete(uint8_t EOD)
Entering DtaSession::sendCommand()
Entering DtaCommand::setHSN()
Entering DtaCommand::setTSN()
Entering DtaCommand::setcomID()
Entering DtaDevOpal::exec disk2

Dumping command buffer
Entering DtaDevOpal::exec sendCmd(IF_SEND, IO_BUFFER_LENGTH)
Entering DtaDevMacOSUSB::sendCmd
Security Send Command
Entering DtaDevMacOSUSB::sendCmd
Security Receive Command

Dumping reply buffer
Entering  DtaResponse::init
Entering  DtaResponse::tokenIs
Destroying DtaCommand
Destroying DtaResponse
Exiting DtaDevOpal::setLockingSPvalue() disk2
MBRDone set on disk2
Exiting DtaDevOpal::setMBRDone disk2
2022-12-24 14:30:00.533777-0500 sedd[2173:40947] in unlockDriveWithPassword after setMBRDone, res = 0
2022-12-24 14:30:00.534370-0500 sedd[2173:40947] Connection::endOutput -- outputBuffer={length = 51, bytes = 0x32303437 39203530 30304335 30303942 ... 30783030 33460d0a }
2022-12-24 14:30:00.534530-0500 sedd[2173:40947] Connection::endOutput -- length=51 bytesActuallyWritten=51 result=true
2022-12-24 14:30:00.534698-0500 sedd[2173:40947] socketNativeHandle={length = 4, bytes = 0x0f000000}
2022-12-24 14:30:00.534768-0500 sedd[2173:40947] sockfd=15
2022-12-24 14:30:00.534824-0500 sedd[2173:40947] Connection::stream:handleEvent: -- Mac mini x86 outputStream=<__NSCFOutputStream: 0x60000300c1b0> (NSStreamStatusOpen) on socket 15
2022-12-24 14:30:00.534865-0500 sedd[2173:40947] Connection::stream:handleEvent: -- NSStreamEventHasSpaceAvailable
2022-12-24 14:30:00.788575-0500 sedd[2173:40947] DaemonClientController endDevicesChangingWithTag:(null)
2022-12-24 14:30:00.788681-0500 sedd[2173:40947] StorageDeviceManager endDevicesChangingWithTag:(null)
2022-12-24 14:30:00.788721-0500 sedd[2173:40947] StorageDeviceManager devicesChangedWithTag:(null)
2022-12-24 14:30:00.788752-0500 sedd[2173:40947] devicesChanging flag false, sending update
2022-12-24 14:30:00.788781-0500 sedd[2173:40947] DaemonClientController devicesChangedWithTag:(null)
2022-12-24 14:30:00.788810-0500 sedd[2173:40947] DaemonClient devicesChangedWithTag:(null)
 Entered DtaHashPassword
 Exited DtaHashPassword
 Entered DtaHashPassword
 Exited DtaHashPassword
Creating  DtaResponse()
Creating  DtaResponse()
 Entered DtaHashPassword
 Exited DtaHashPassword
Creating  DtaResponse()
Creating  DtaResponse()
OpenUserClient error -- IOConnectCallScalarMethod returned 0xe00002c5.
Exclusive access requested but already open.

Failed to open user client -- error =0xE00002C5
Entering DtaDevOpal::properties() disk2
Creating DtaSsession()
Creating DtaCommand(ID, InvokingUid, method)
Entering DtaCommand::reset(OPAL_UID, OPAL_METHOD)
Entering DtaCommand::reset()
Entering DtaCommand::addToken(OPAL_UID)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(const char * )
Entering DtaCommand::addToken(uint64_t)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(const char * )
Entering DtaCommand::addToken(uint64_t)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(const char * )
Entering DtaCommand::addToken(uint64_t)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(const char * )
Entering DtaCommand::addToken(uint64_t)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(const char * )
Entering DtaCommand::addToken(uint64_t)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(const char * )
Entering DtaCommand::addToken(uint64_t)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(const char * )
Entering DtaCommand::addToken(uint64_t)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::addToken(OPAL_TOKEN)
Entering DtaCommand::complete(uint8_t EOD)
Entering DtaSession::sendCommand()
Entering DtaCommand::setHSN()
Entering DtaCommand::setTSN()
Entering DtaCommand::setcomID()
Entering DtaDevOpal::exec disk2

Dumping command buffer
Entering DtaDevOpal::exec sendCmd(IF_SEND, IO_BUFFER_LENGTH)
Command failed on send to disk2 --  result was 0xFE
Command failed on exec 254
Destroying DtaCommand
Properties exchange failed disk2
2022-12-24 14:30:01.809939-0500 sedd[2173:40947] base64DataForTPer: trying to fill base64 data for 5000C5009B93D1E5
2022-12-24 14:30:01.810103-0500 sedd[2173:40947] in fillTPerData for TPer 5000C5009B93D1E5, autoUnlock set to false
2022-12-24 14:30:01.810216-0500 sedd[2173:40947] Connection::endOutput -- outputBuffer={length = 208, bytes = 0x38313932 20202031 20545065 72730d0a ... 31393220 6f6b0d0a }
2022-12-24 14:30:01.810319-0500 sedd[2173:40947] Connection::endOutput -- length=208 bytesActuallyWritten=208 result=true
2022-12-24 14:30:01.810348-0500 sedd[2173:40947] DaemonClient devicesChangedWithTag:(null)
2022-12-24 14:30:01.810388-0500 sedd[2173:40947] base64DataForTPer: trying to fill base64 data for 5000C5009B93D1E5
2022-12-24 14:30:01.810448-0500 sedd[2173:40947] in fillTPerData for TPer 5000C5009B93D1E5, autoUnlock set to false
2022-12-24 14:30:01.810497-0500 sedd[2173:40947] Connection::endOutput -- outputBuffer={length = 208, bytes = 0x38313932 20202031 20545065 72730d0a ... 31393220 6f6b0d0a }
2022-12-24 14:30:01.810558-0500 sedd[2173:40947] Connection::endOutput -- length=208 bytesActuallyWritten=208 result=true
2022-12-24 14:30:01.810629-0500 sedd[2173:40947] socketNativeHandle={length = 4, bytes = 0x0d000000}
2022-12-24 14:30:01.810654-0500 sedd[2173:40947] sockfd=13
2022-12-24 14:30:01.810717-0500 sedd[2173:40947] Connection::stream:handleEvent: -- Mac mini x86 outputStream=<__NSCFOutputStream: 0x600003004510> (NSStreamStatusOpen) on socket 13
2022-12-24 14:30:01.810758-0500 sedd[2173:40947] Connection::stream:handleEvent: -- NSStreamEventHasSpaceAvailable
2022-12-24 14:30:01.810820-0500 sedd[2173:40947] socketNativeHandle={length = 4, bytes = 0x0f000000}
2022-12-24 14:30:01.810875-0500 sedd[2173:40947] sockfd=15
2022-12-24 14:30:01.810905-0500 sedd[2173:40947] Connection::stream:handleEvent: -- Mac mini x86 outputStream=<__NSCFOutputStream: 0x60000300c1b0> (NSStreamStatusOpen) on socket 15
2022-12-24 14:30:01.810957-0500 sedd[2173:40947] Connection::stream:handleEvent: -- NSStreamEventHasSpaceAvailable
